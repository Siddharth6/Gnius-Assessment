{"version":3,"sources":["components/basic/header/logo.png","reducers/opendrawer.js","reducers/admin.js","services/userOption.js","reducers/loggedinuser.js","reducers/trainer.js","reducers/test.js","reducers/conductTest.js","reducers/trainee.js","reducers/coding.js","reducers/index.js","actions/types.js","store.js","components/basic/homepage/Features.js","components/basic/homepage/Home.js","services/Apis.js","services/axiosCall.js","services/AuthServices.js","actions/loginAction.js","components/common/alert.js","components/basic/login/SignInSide.js","components/basic/login/login.js","components/basic/header/header.js","components/basic/homepage/homepage.js","actions/adminAction.js","components/admin/newTrainer/newtrainer.js","components/admin/allTrainer/alltrainer.js","components/admin/newTopics/newtopics.js","components/admin/allTopics/alltopics.js","actions/trainerAction.js","components/trainer/newquestion/newquestion.js","utils/Markdown.js","components/trainer/questionDetails/questiondetails.js","components/trainer/allquestions/allquestion.js","components/trainer/conducttest/questions.js","components/trainer/testdetails/stats.js","components/trainer/testdetails/trainee.js","components/trainer/testdetails/feedbacks.js","components/trainee/examPortal/coding/CodeEditor.js","actions/traineeAction.js","components/trainee/examPortal/coding/index.js","components/trainee/answersheet/feedback.js","components/trainee/answersheet/answer.js","components/trainer/testdetails/Analysis.js","components/trainer/testdetails/CodingResult.js","components/trainer/testdetails/testdetails.js","components/trainer/alltests/alltest.js","actions/conductTest.js","actions/testAction.js","components/trainer/conducttest/details.js","components/trainer/conducttest/candidates.js","components/trainer/conducttest/JobApplications.js","components/trainer/conducttest/conducttest.js","services/steps.js","components/trainer/newtest/basicForm.js","utils/Editor.js","components/trainer/newtest/AddJobPost.js","components/trainer/newtest/generaterandomquestion.js","components/trainer/newtest/selectQuestion.js","actions/codingAction.js","components/trainer/newtest/AddCoding.js","components/trainer/newtest/questionview.js","components/trainer/newtest/newtest.js","components/coding/Question/AddQuestion.js","components/coding/Question/QuestionDetails.js","components/coding/Question/AllQuestions.js","components/dashboard/welcome.js","components/dashboard/errorPage.js","components/dashboard/Profile.js","components/dashboard/ResetPassword.js","components/dashboard/settings.js","components/dashboard/backbone.js","actions/useraction.js","components/trainee/register/traineeregister.js","components/trainee/examPortal/instruction.js","components/trainee/examPortal/user.js","components/trainee/examPortal/operations.js","components/trainee/examPortal/clock.js","components/trainee/examPortal/sidepanel.js","components/trainee/examPortal/singleQuestion.js","components/trainee/examPortal/question.js","components/trainee/examPortal/testBoard.js","components/trainee/examPortal/portal.js","App.js","serviceWorker.js","index.js","services/bgcolor.js","assets/gnius.png","components/dashboard/logo.png"],"names":["module","exports","__webpack_require__","p","initialState","navigationCollapsed","TrainermodalOpened","TrainerconfirmDirty","Trainermode","trainerId","TrainersearchText","trainerTableLoadingStatus","trainerEditFormLoadingStatus","trainerTableData","trainerdetails","subjectTableData","SubjectmodalOpened","SubjectconfirmDirty","Subjectmode","SubjectId","SubjectsearchText","SubjectTableLoading","subjectDetails","ADMIN_PERMISSIONS","display","icon","link","TRAINER_PERMISSIONS","isLoggedIn","userDetails","activeRoute","userOptions","NewQuestionmodalOpened","AllQuestionconfirmDirty","QuestionsearchText","QuestionTableLoading","QuestionTableData","selectedSubjects","QuestionFormData","fifthoptioAddButtonVisible","TestTableLoading","TestTableData","DataActiveTestDetails","testDetailsId","testquestions","greet","currentStep","mode","newtestFormData","testType","testTitle","testDuration","OrganisationName","testSubject","testQuestions","startTime","endTime","addjobpost","jobPostData","title","description","maxApplicants","maxPositions","skillsets","location","type","customdata","questionsAvailablebasedonSubject","addcoding","codingtData","codingquestionsAvailablebasedonSubject","id","testRegisterLink","basictestdetails","isRegistrationavailable","testbegins","testconducted","isResultgenerated","start","end","registeredCandidates","questionsOfTest","proceedingToTest","invalidUrl","testid","traineeid","initialloading1","initialloading2","startedWriting","LocaltestDone","m_left","s_left","traineeDetails","name","emailid","contact","activeQuestionIndex","questions","answers","hasGivenFeedBack","loadcoding","codingData","Iscoding","codingsubmitted","NewQuestionModalState","combineReducers","drawer","state","arguments","length","undefined","Object","objectSpread","admin","action","payload1","payload2","payload3","payload4","payload","user","activeurl","trainer","options","concat","toConsumableArray","image","body","isAnswer","TestDetailsmodalOpened","TestsearchText","test","conduct","trainee","payload5","payload6","payload7","coding","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","apply","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","useStyles","makeStyles","theme","marginRight","spacing","heroContent","backgroundColor","palette","background","paper","padding","heroButtons","marginTop","cardGrid","paddingTop","paddingBottom","card","height","flexDirection","cardMedia","cardContent","flexGrow","footer","cards","Album","classes","react_default","a","createElement","Fragment","CssBaseline","Container","className","maxWidth","Grid","container","map","index","item","key","xs","sm","md","Card","CardContent","Typography","gutterBottom","variant","component","data","Copyright","color","align","Link","href","Date","getFullYear","@global","ul","margin","listStyle","appBar","toolbar","flexWrap","toolbarTitle","cardHeader","cardPricing","justifyContent","alignItems","marginBottom","defineProperty","borderTop","divider","breakpoints","up","tiers","price","buttonText","buttonVariant","subheader","footers","Pricing","AppBar","position","elevation","Toolbar","noWrap","src","logo","alt","Button","tier","CardHeader","titleTypographyProps","subheaderTypographyProps","line","CardActions","fullWidth","row","justify","col","span","style","borderRadius","react","Box","mt","Home_Copyright","apis","BASE_LOCAL_URL","BASE","LOGIN","GETDETAILSUSER","UPDATE_USER","GET_ALL_TRAINER","GET_SINGLE_TRAINER_DETAILS","CREATE_TRAINER","DELETE_TRAINER","GET_ALL_SUBJECTS","GET_SINGLE_SUBJECT_DETAILS","CREATE_SUBJECT","GET_ALL_QUESTIONS","DELETE_QUESTION","FETCH_SINGLE_QUESTION","CREATE_QUESTIONS","FILE_UPLOAD","CREATE_TEST","GET_ALL_TESTS","GET_SINGLE_TEST","REGISTER_TRAINEE_FOR_TEST","RESEND_TRAINER_REGISTRATION_LINK","GET_SINGLE_TEST_DETAILS_BASIC","STOP_REGISTRATION","START_TEST_BY_TRAINER","GET_TEST_CANDIDATES","GET_TEST_QUESTIONS","FETCH_TRAINEE_DETAILS","FETCH_TRAINEE_TEST_DETAILS","PROCEED_TO_TEST","FETCH_TRAINEE_TEST_QUESTION","FETCH_TRAINEE_TEST_ANSWERSHEET","UPDATE_ANSWERS","END_TEST","FETCH_OWN_RESULT","FETCH_SINGLE_QUESTION_BY_TRAINEE","END_TEST_BY_TRAINER","FEEDBACK_STATUS_CHECK","GIVE_FEEDBACK","GET_STATS","GET_EXCEL","MAX_MARKS_FETCH","GET_FEEDBACKS","CHECK_TEST_NAME","IMPORT_CANDIDATES","GET_JOB_DETAILS","CREATE_CODING_QUESTION","LIST_CODING_QUESTION","GET_CODING_QUESTION_DETAILS","CREATE_CODING_TESTCASE","GET_CODING_QUESTION_DATA","POST_SUBMISSION","CODING_SECTION_SUBMIT","CODING_SECTION_GET","CODING_SUBMISSION_GET","UPLOAD_RESUME","axios","require","SecureGet","method","baseURL","params","Token","auth","retriveToken","SecurePost","Post","AuthServices","AuthService","classCallCheck","this","localStorage","getItem","storeToken","t","setItem","deleteToken","removeItem","LoginAuth","u","url","password","FetchAuth","token","login","details","dispatch","logout","Alert","s","h","b","Modal","success","content","error","warning","root","backgroundImage","backgroundRepeat","grey","backgroundSize","backgroundPosition","avatar","secondary","main","form","width","submit","SignInSide","props","Paper","square","Avatar","LockOutlined_default","children","Login","_this","possibleConstructorReturn","getPrototypeOf","call","handleSubmit","e","preventDefault","validateFields","err","values","email","then","response","message","setState","catch","getFieldDecorator","react_router","to","es_form","onSubmit","autoComplete","Item","label","hasFeedback","rules","required","input","prefix","placeholder","Password","es_button","htmlType","block","React","Component","LoginForm","Form","create","connect","HomepageHeader","header_header","basic_login_login","ChangeTrainerModalState","d1","d2","d3","slice","confirmpassword","ChangeTrainerTableData","ChangeSubjectModalState","topic","ChangeSubjectTableData","d","Option","Select","TextArea","Input","NewTrainer","checked","status","submitDisabled","toggle","compareToFirstPassword","rule","value","callback","getFieldValue","validateToNextPassword","force","changeqImage","f","ps","pp","upl","validateFieldsAndScroll","_id","organisation","bio","prefixSelector","initialValue","es_select","newtrainer_Option","QuestionImageprops","listType","whitespace","len","addonBefore","min","max","validator","onBlur","handleConfirmBlur","es_switch","checkedChildren","unCheckedChildren","onChange","newtrainer_TextArea","rows","upload","assign","beforeUpload","onRemove","onSuccess","NewTrainerForm","ChangeTrainerConfirmDirty","AllTrainer","openModal","closeModal","deleteTrainer","getColumnSearchProps","dataIndex","filterDropdown","_ref","setSelectedKeys","selectedKeys","confirm","clearFilters","ref","node","searchInput","target","onPressEnter","handleSearch","onClick","size","handleReset","filterIcon","filtered","onFilter","record","toString","toLowerCase","includes","onFilterDropdownVisibleChange","visible","setTimeout","select","render","text","main_default","highlightStyle","searchWords","autoEscape","textToHighlight","ChangeTrainerSearchText","TrainertableLoading","_this2","Title","columns","shape","popconfirm","cancelText","okText","onConfirm","level","textAlign","table","bordered","dataSource","pagination","pageSize","loading","rowKey","modal","onOk","handleOk","onCancel","top","destroyOnClose","newTrainer_newtrainer","NewTopics","NewSubjectForm","ChangeSubjectConfirmDirty","AllTopics","ChangeSubjectSearchText","newtopics","ChangeQuestionModalState","ChangeQuestionTableData","subject","NewQuestion","addfifthOption","previousState","previousProps","questionDetails","Customalert","OptionTextChange","i","newOptions","AnswerOptionSwitch","OptionImageonChange","ans","opts","forEach","element","push","optbody","optimg","adding","questionbody","quesimg","questionimage","explanation","weightage","waitage","resetFields","showSearch","optionFilterProp","ExplanationChange","offset","input_number","option","es_checkbox","disabled","NewQuestionForm","ChangeQuestionConfirmDirty","renderers","inlineMath","react_katex","math","_ref2","code","_ref3","language","prism","Markdown","react_markdown_default","plugins","gfm","TabPane","Tabs","QuestionDetails","tabChange","ID","_this3","skeleton","active","tabs","defaultActiveKey","tab","Tab1","Tab2","descriptions","border","column","xxl","xl","lg","difficulty","anscount","createdBy","moment","createdAt","format","optn","Optiondata","utils_Markdown","AllQuestions","OpendetailsModal","questiondetailsId","questiondetailsModelVisible","ClosedetailsModal","openNewModal","closeNewModal","handleSubjectChange","ChangeSelectedSubjects","deleteQuestion","ChangeQuestionSearchText","defaultValue","allowClear","newquestion_newquestion","questiondetails_QuestionDetails","Questions","refreshquestionList","updateQuestiosnTest","total","aMap","fontSize","reduce","accumulator","current","dd","ii","Stats","stats","Scorelable","Scoredata","bgColor1","borcolor1","maxmMarks","passData","passLable","stat","statdata","_this$state","maxi","p90_100","p80_90","p70_80","p60_70","p50_60","below50","pc","score","dp","bgcolor","bordercolor","barData","labels","datasets","borderColor","borderWidth","DoughNutData1","DoughNutData2","es_card","file","react_chartjs_2_es","maintainAspectRatio","Trainee","maxMarks","tag","es_tag","trainee_Title","FeedBacks","feedbacks","es_comment","author","userid","rate","rating","feedback","Text","CodeEditor","_useState","useState","evaluating","question","editorMode","testcaseshow","_useState2","slicedToArray","setQuestion","_useState3","_useState4","setscore","placement","notification","info","isEvaluating","CodeEditor_Title","statement","event","lang","req_mode","selected","react_ace_lib_default","editorProps","$blockScrolling","ncode","testId","traineeId","que_id","source_code","language_id","console","log","twoToneColor","showResult","fetchTestdata","completed","pending","Math","floor","Number","String","switchQuestion","FeedbackStatus","time","Index","handleModeChange","testDetails","testTime","LoadCodingQuestion","targetTime","getTime","CountDown_default","onEnd","submitCoding","tabPosition","Array","from","v","coding_TabPane","coding_CodeEditor","load","tid","uid","Feedback","handleStarChange","star","onCommentChange","comment","submitFeedback","desc","feedback_Title","feedback_Text","tooltips","feedback_TextArea","Panel","Collapse","Answer","handleCancel","Mvisible","OpenModel","qid","ActiveQuestionId","TotalScore","getsubmitCoding","p1","p2","p3","Promise","all","r","result","tags","toUpperCase","userData","answer_Title","collapse","header","subTitle","examPortal_coding","answer_SingleQuestionDetails","SingleQuestionDetails","_this4","fetching","qdetails","_this5","answersheet_answer","CodingResult","setstate","setloading","useEffect","dist_default","field","filtering","exportButton","headerStyle","TestDetails","showModal","testdetails","mainlink","split","splice","p4","p5","testdetails_TabPane","addonAfter","lib","onCopy","subjects","questions_Questions","updateQuestiosnActiveTest","stats_Stats","Analysis_Trainee","testdetails_CodingResult","AllTests","ChangeTestDetailsModalState","ChangeTestSearchText","ChangeTestTableData","afterClose","trainer_testdetails_testdetails","changeConducttestId","updateCandidatesTest","changeStep","changeBasicNewTestDetails","changeRegistrationStatus","changeTestRegisterStatus","changeTestStatus","endTestByTrainee","getCandidates","changeTestRegisterLink","updateCurrentTestBasicDetails","layout","papaparseOptions","dynamicTyping","skipEmptyLines","transformHeader","replace","Candidates","searchText","handleForce","fileInfo","progress","refreshUserList","getResume","open","float","candidates_Title","react_csv_reader_default","cssClass","onFileLoaded","parserOptions","percent","JobApplications","ConductTestS","ChangeLocalTestId","localTestId","ChangetestId","needRedirect","CC","conducttest_Title","C","conducttest_TabPane","candidates","conducttest_JobApplications","mapStateToProps","steps","utcOffset","BasicTestFormO","DatePicker","RangePicker","duration","validateTestName","checkingName","testname","can_use","ee","basicForm_Option","validateStatus","date_picker","showTime","onChangeStart","onOkStart","onChangeEnd","onOkEnd","BasicTestForm","QuillModules","font","list","QuillFormats","AddJobPost","onCheck","onChangeEditor","editor","handleFinal","addJobData","jobtitle","joblocation","jobtype","formSchema","AddJobPost_Title","react_quill_lib_default","modules","formats","AddJobPost_Option","AddJobPost_Panel","react_ant_form_builder_dist","formStructure","onSave","schema","onError","allowDraft","changedData","JobForm","check","GeneraterandomQuestionO","no","qus","allquestions","l","random","pushQuestionToQueue","autogenerate","renderItem","handleChange","targetKeys","direction","moveKeys","generating","changeMode","fetchSubjectWiseQuestion","transfer","generaterandomquestion_SingleQuestionDetails","GeneraterandomQuestion","removeQuestionFromMainQueue","questionCount","tabBarExtraContent","selectQuestion_TabPane","generaterandomquestion","ChangeCodingQuestionModalState","ChangeCodingQuestionData","AddCoding","checkcode","pushCodingQuestionToQueue","AddCoding_Title","CodingForm","removeCodingQuestionFromMainQueue","FinalQuestionView","createtest","jobdescription","jobcustom","codingquestions","renderHTML","questionview_Title","Q","obj","filter","hero","oo","Step","Steps","NewTest","torender","newtest_AddJobPost","selectQuestion","newtest_AddCoding","questionview","basicForm","newtest_Title","AddQuestion","category","timelimit","memorylimit","setquestion","questionId","_useState5","testcases","output","_useState6","testcase","setTestCase","handlechangeFile","QuestionDetails_TabPane","QuestionDetails_TextArea","formData","test-input","test-output","marginLeft","QuestionDetails_Title","TestCaseListComp","Question_AddQuestion","Question_QuestionDetails","fill","scales","yAxes","ticks","beginAtZero","welcome_Title","gutter","statistic","precision","valueStyle","suffix","ErrorPage","Profile","about","reload","Profile_Text","NewForm","ResetPassword","confirmDirty","ResetPasswordForm","Settings","dashboard_Profile","dashboard_ResetPassword","Header","Layout","Sider","Content","Footer","Dashboard","collapsed","logOut","LocalIsLoggedIn","subUrl","match","find","o","tt","indexOf","changeActiveRoute","allTrainer_alltrainer","allTopics_alltopics","allquestions_allquestion","alltests_alltest","components_dashboard_welcome","newtest_newtest","Question_AllQuestions","queryString","parse","search","conducttest","settings","trigger","collapsible","menu","defaultSelectedKeys","react_router_dom","paddingLeft","zIndex","NoticeIcon_default","count","tooltip","minHeight","TraineeRegisterForm","getJobDetails","jobstatus","jobData","job","resume","inform","resendMail","renderJob","Helmet","charSet","postedBy","overflow","traineeregister_Header","traineeregister_Title","fontFamily","outline","dateOfPosting","fromNow","changeResume","traineeregister_Option","uploadProps","traineeregister_Footer","TraineeRegister","ProceedtoTest","user_icon","Operations","Mark","questionid","isAnswered","mark","isMarked","badge","Clock","endTest","clockF","c","setInterval","localMinutes","localSeconds","clearInterval","Sidepanel","clock","operations","SingleQuestion","SaveTocloud","newAnswer","chosenOption","updateIsMarked","previous","next","AnswerSelected","aa","onAnswerChange","ansCount","ticked","op1","op2","PState","Pprops","es_radio","Group","triggerSidebar","Question","fetchTraineeTestQuestions","fetchTraineeTestAnswerSheet","singleQuestion","getWindowDimensions","_window","innerWidth","innerHeight","TestBoard","_useWindowDimensions","windowDimensions","setWindowDimensions","handleResize","addEventListener","removeEventListener","useWindowDimensions","setVisible","onOpen","examPortal_question","sidepanel","closable","onClose","MainPortal","setTestDetsils","fetchTraineedata","portal_Title","instruction","App","es","exact","path","Home","Homepage","Boolean","hostname","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.45fc3686.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.cc171c63.png\";","import { TOOGLE_NAVIGATION } from '../actions/types';\r\n\r\n\r\nconst initialState = {\r\n    navigationCollapsed : true\r\n}\r\n\r\nexport default (state = initialState, action )=>{\r\n    switch(action.type){\r\n        case TOOGLE_NAVIGATION:\r\n            return {\r\n                ...state,\r\n                navigationCollapsed : !state.navigationCollapsed\r\n            }  \r\n        default:\r\n            return state;\r\n    }\r\n}","const initialState = {\r\n    TrainermodalOpened : false,\r\n    TrainerconfirmDirty: false,\r\n    Trainermode : 'Register',\r\n    trainerId : null,\r\n    TrainersearchText : '',\r\n    trainerTableLoadingStatus:false,\r\n    trainerEditFormLoadingStatus:false,\r\n    trainerTableData:[],\r\n    trainerdetails:{},\r\n    subjectTableData : [] ,\r\n    SubjectmodalOpened : false,\r\n    SubjectconfirmDirty: false,\r\n    Subjectmode : 'New Topic',\r\n    SubjectId : null,\r\n    SubjectsearchText : '',\r\n    SubjectTableLoading : false, \r\n    subjectDetails :{}    \r\n}\r\n\r\nexport default (state = initialState, action )=>{\r\n    switch(action.type){\r\n        case 'CHANGE_TRAINER_MODAL_STATE':\r\n            return {\r\n                ...state,\r\n                TrainermodalOpened : action.payload1,\r\n                trainerId : action.payload2,\r\n                Trainermode : action.payload3,\r\n                trainerdetails : action.payload4\r\n\r\n            }\r\n        case 'CHANGE_TRAINER_FORM_CONFIRMDIRTY':\r\n            return {\r\n                ...state,\r\n                TrainerconfirmDirty : action.payload\r\n            }\r\n        case 'CHANGE_TRAINER_SEARCH_TEXT':\r\n                return {\r\n                    ...state,\r\n                    TrainersearchText : action.payload\r\n                }\r\n        case 'CHANGE_TRAINER_TABLE_LOADING_STATUS':\r\n                return {\r\n                    ...state,\r\n                    trainerTableLoadingStatus : action.payload1,\r\n                    trainerTableData : action.payload2,\r\n\r\n                }\r\n        case 'CHANGE_SUBJECT_MODAL_STATE':\r\n            return {\r\n                ...state,\r\n                SubjectmodalOpened : action.payload1,\r\n                SubjectId : action.payload2,\r\n                Subjectmode : action.payload3,\r\n                subjectDetails : action.payload4\r\n            }\r\n        case 'CHANGE_SUBJECT_FORM_CONFIRMDIRTY':\r\n            return {\r\n                ...state,\r\n                SubjectconfirmDirty : action.payload\r\n            }\r\n        case 'CHANGE_SUBJECT_SEARCH_TEXT':\r\n                return {\r\n                    ...state,\r\n                    SubjectsearchText : action.payload\r\n                }\r\n        case 'CHANGE_SUBJECT_TABLE_LOADING_STATUS':\r\n                return {\r\n                    ...state,\r\n                    SubjectTableLoading : action.payload1,\r\n                    subjectTableData :action.payload2\r\n                }\r\n        default:\r\n            return state;\r\n    }\r\n}","export const ADMIN_PERMISSIONS = [\r\n    {\r\n        display: 'Welcome',\r\n        icon: 'home',\r\n        link: '/user/home'\r\n    },\r\n    {\r\n        display: 'All Trainers',\r\n        icon: 'user',\r\n        link: '/user/listtrainers'\r\n    },\r\n    {\r\n        display: 'All Categories',\r\n        icon: 'book',\r\n        link: '/user/listsubjects'\r\n    },\r\n    {\r\n        display: 'All Questions',\r\n        icon: 'question',\r\n        link: '/user/listquestions'\r\n    },\r\n    {\r\n        display: 'Settings',\r\n        icon: 'setting',\r\n        link: '/user/settings'\r\n    },\r\n];\r\n\r\nexport const TRAINER_PERMISSIONS = [\r\n    {\r\n        display: 'Welcome',\r\n        icon: 'home',\r\n        link: '/user/home'\r\n    },\r\n    {\r\n        display: 'All MCQ Questions',\r\n        icon: 'question',\r\n        link: '/user/listquestions'\r\n    },\r\n    {\r\n        display: 'All Programming Questions',\r\n        icon: 'code',\r\n        link: '/user/listcode'\r\n    },\r\n    {\r\n        display: 'All Assessments',\r\n        icon: 'bars',\r\n        link: '/user/listtests'\r\n    },\r\n    {\r\n        display: 'New Assessments',\r\n        icon: 'plus-circle',\r\n        link: '/user/newtest'\r\n    },\r\n    {\r\n        display: 'Conduct Assessments',\r\n        icon: 'appstore',\r\n        link: '/user/conducttest'\r\n    },\r\n    {\r\n        display: 'Settings',\r\n        icon: 'setting',\r\n        link: '/user/settings'\r\n    },\r\n];","import { ADMIN_PERMISSIONS, TRAINER_PERMISSIONS} from '../services/userOption';\r\n\r\nconst initialState = {\r\n    isLoggedIn : false,\r\n    userDetails : {},\r\n    activeRoute:'0',\r\n    userOptions:[]\r\n}\r\n\r\nexport default (state = initialState, action )=>{\r\n    switch(action.type){\r\n        case 'CHANGE_ACTIVE_URL':\r\n            return {\r\n                ...state,\r\n                activeurl : action.payload\r\n            }\r\n        case 'CHANGE_ACTIVE_ROUTE':\r\n            return {\r\n                ...state,\r\n                activeRoute : action.payload\r\n            }\r\n        case 'LOGIN':\r\n            if(action.payload.type==='ADMIN'){\r\n                return {\r\n                    ...state,\r\n                    isLoggedIn : true,\r\n                    userDetails:{\r\n                        ...action.payload\r\n                    },\r\n                    userOptions : ADMIN_PERMISSIONS                    \r\n                }\r\n            }\r\n            else{\r\n                return {\r\n                    ...state,\r\n                    isLoggedIn : true,\r\n                    userDetails:{\r\n                        ...action.payload\r\n                    },\r\n                    userOptions : TRAINER_PERMISSIONS\r\n                }\r\n            }\r\n            \r\n        case 'LOGOUT':\r\n            return {\r\n                ...state,\r\n                isLoggedIn : false,\r\n                userDetails :{\r\n\r\n                }\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","const initialState = {\r\n    NewQuestionmodalOpened : false,\r\n    AllQuestionconfirmDirty: false,\r\n    QuestionsearchText : '',\r\n    QuestionTableLoading : false, \r\n    QuestionTableData : [],\r\n    selectedSubjects:[],\r\n    QuestionFormData:{},\r\n    fifthoptioAddButtonVisible:true,\r\n    TestTableLoading:false,\r\n    TestTableData:[],\r\n    DataActiveTestDetails : {\r\n        testDetailsId : null,\r\n        testquestions :[]\r\n    }\r\n}\r\n\r\n\r\nexport default (state = initialState, action )=>{\r\n    switch(action.type){\r\n        case 'CHANGE_QUESTION_MODAL_STATE':\r\n            return {\r\n                ...state,\r\n                NewQuestionmodalOpened : action.payload1,\r\n            }\r\n        case 'CHANGE_QUESTION_FORM_CONFIRMDIRTY':\r\n            return {\r\n                ...state,\r\n                AllQuestionconfirmDirty : action.payload\r\n            }\r\n        case 'CHANGE_QUESTION_SEARCH_TEXT':\r\n            return {\r\n                ...state,\r\n                QuestionsearchText : action.payload\r\n            }\r\n        case 'CHANGE_QUESTION_TABLE_LOADING_STATUS':\r\n            return {\r\n                ...state,\r\n                QuestionTableLoading : action.payload1,\r\n                QuestionTableData : action.payload2\r\n            }\r\n        case 'ADD_FIFTH_OPTION':\r\n            return {\r\n                ...state,\r\n                QuestionFormData:{\r\n                    ...state.QuestionFormData,\r\n                    options:[\r\n                        ...state.QuestionFormData.options,\r\n                        {\r\n                            image :null,\r\n                            body : null,\r\n                            isAnswer :false\r\n                        }\r\n                    ]\r\n                },\r\n                fifthoptioAddButtonVisible:false\r\n            }\r\n        case 'CHANGE_SELECTED_SUBJECT':\r\n            return {\r\n                ...state,\r\n                selectedSubjects : action.payload\r\n            }\r\n        case 'CHANGE_QUESTION_FORM_DATA':\r\n            return{\r\n                ...state,\r\n                QuestionFormData : action.payload\r\n            }\r\n        case 'CHANGE_TEST_DETAILS_MODAL_STATE':\r\n            return {\r\n                ...state,\r\n                TestDetailsmodalOpened : action.payload1,\r\n                DataActiveTestDetails :{\r\n                    ...state.DataActiveTestDetails,\r\n                    testDetailsId : action.payload2\r\n                }\r\n            }\r\n        case 'CHANGE_TEST_SEARCH_TEXT':\r\n            return {\r\n                ...state,\r\n                TestsearchText : action.payload\r\n            }\r\n        case 'CHANGE_TEST_TABLE_LOADING_STATUS':\r\n            return {\r\n                ...state,\r\n                TestTableLoading : action.payload1,\r\n                TestTableData :action.payload2\r\n            }\r\n        case 'CHANGE_CURRENT_ACTIVE_TEST_QUESTION':\r\n            return{\r\n                ...state,\r\n                DataActiveTestDetails:{\r\n                    ...state.DataActiveTestDetails,\r\n                    testquestions:action.payload\r\n                }\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","const initialState = {\r\n    greet: 'Hi',\r\n    currentStep: 0,\r\n    mode: \"random\",\r\n    newtestFormData: {\r\n        testType: null,\r\n        testTitle: '',\r\n        testDuration: 60,\r\n        OrganisationName: null,\r\n        testSubject: [],\r\n        testQuestions: [],\r\n        startTime: null,\r\n        endTime: null\r\n    },\r\n    addjobpost: false,\r\n    jobPostData: {\r\n        title: '',\r\n        description: null,\r\n        maxApplicants: 100,\r\n        maxPositions: 30,\r\n        skillsets: [],\r\n        location: null,\r\n        type: \"Full Time\",\r\n        customdata: {},\r\n    },\r\n    questionsAvailablebasedonSubject: [],\r\n    addcoding: false,\r\n    codingtData: {\r\n        testQuestions: [],\r\n    },\r\n    codingquestionsAvailablebasedonSubject: [],\r\n};\r\n\r\n\r\nexport default (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'CHANGE_ACTIVE_STEP':\r\n            return {\r\n                ...state,\r\n                currentStep: action.payload\r\n            }\r\n        case 'CHANGE_BASIC_NEW_TEST_DETAILS':\r\n            return {\r\n                ...state,\r\n                newtestFormData: {\r\n                    ...state.newtestFormData,\r\n                    ...action.payload\r\n                }\r\n            }\r\n        case 'FETCH_QUESTIONS_BASED_ON_SUBJECT':\r\n            return {\r\n                ...state,\r\n                questionsAvailablebasedonSubject: action.payload\r\n            }\r\n        case 'ADD_QUESTION_TO_QUESTION_QUEUSE':\r\n            return {\r\n                ...state,\r\n                newtestFormData: {\r\n                    ...state.newtestFormData,\r\n                    testQuestions: action.payload\r\n                }\r\n            }\r\n        case 'REMOVE_QUESTION_FROM_MAIN_QUEUE':\r\n            return {\r\n                ...state,\r\n                questionsAvailablebasedonSubject: action.payload\r\n            }\r\n        case 'CHANGE_MODE_QUESTION_SELECT':\r\n            return {\r\n                ...state,\r\n                mode: action.payload\r\n            }\r\n        case 'ADD_JOB_DATA':\r\n            return{\r\n                ...state,\r\n                addjobpost:  action.payload1,\r\n                jobPostData: action.payload2,\r\n            }\r\n        case 'ADD_CODING_QUESTION_CHECKER':\r\n            return{\r\n                ...state,\r\n                addcoding:  action.payload\r\n            }\r\n        case 'ADD_CODING_QUESTION_TO_QUESTION_QUEUE':\r\n            return {\r\n                ...state,\r\n                codingtData: {\r\n                    ...state.codingtData,\r\n                    testQuestions: action.payload\r\n                },\r\n            }\r\n        case 'REMOVE_CODING_QUESTION_FROM_MAIN_QUEUE':\r\n            return {\r\n                ...state,\r\n                codingquestionsAvailablebasedonSubject: action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    };\r\n};","const initialState = { \r\n    id : null,\r\n    testRegisterLink:'',\r\n    basictestdetails:{\r\n        isRegistrationavailable:false,\r\n        testbegins:false,\r\n        testconducted:false,\r\n        isResultgenerated: false,\r\n        start: null,\r\n        end: null,\r\n    },\r\n    registeredCandidates:[],\r\n    questionsOfTest:[]\r\n}\r\n\r\nexport default (state = initialState, action )=>{\r\n    switch(action.type){\r\n        case 'SET_CONDUCT_TEST_ID':\r\n            return {\r\n                ...state ,\r\n                id:action.payload\r\n            }\r\n        case 'SET_TEST_REGISTER_LINK':\r\n            return {\r\n                ...state ,\r\n                testRegisterLink:action.payload\r\n            }\r\n        case 'UPDATE_TEST_BASIC_DETAILS':\r\n            return{\r\n                ...state,\r\n                basictestdetails:action.payload\r\n            }\r\n        case 'CHANGE_TEST_ISREGISTRATION_AVAILABLE':\r\n            return{\r\n                ...state,\r\n                basictestdetails:{\r\n                    ...state.basictestdetails,\r\n                    isRegistrationavailable:action.payload\r\n                }\r\n            }\r\n        case 'CHANGE_BEGIN_TEST_STATUS':\r\n            return{\r\n                ...state,\r\n                basictestdetails:action.payload\r\n            }\r\n        case 'CHANGE_CANDIDATES_OF_TEST':\r\n            return{\r\n                ...state,\r\n                registeredCandidates:action.payload\r\n            }\r\n        case 'CHANGE_QUESTIONS_OF_TEST':\r\n            return{\r\n                ...state,\r\n                questionsOfTest :action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","const initialState = {\r\n    proceedingToTest:false,\r\n    invalidUrl:false,\r\n    testid:null,\r\n    traineeid:null,\r\n    initialloading1:true,\r\n    initialloading2:true,\r\n    testbegins : true,\r\n    startedWriting:true,\r\n    testconducted:false,\r\n    LocaltestDone:true,\r\n    m_left:0,\r\n    s_left:0,\r\n    traineeDetails:{\r\n        name:\"\",\r\n        emailid:\"\",\r\n        contact:\"\"\r\n    },\r\n    activeQuestionIndex:0,\r\n    questions:[],\r\n    answers:[],\r\n    hasGivenFeedBack:false,\r\n    loadcoding: true,\r\n    codingData: [],\r\n    Iscoding: false,\r\n    codingsubmitted: null\r\n}\r\n\r\n\r\nexport default (state = initialState, action )=>{\r\n    switch(action.type){\r\n        case 'SET_HAS_GIVEN_FEEDBACK':\r\n            return{\r\n                ...state,\r\n                hasGivenFeedBack:action.payload\r\n            }\r\n        case 'SET_TRAINEE_TEST_DETAILS':\r\n            return{\r\n                ...state,\r\n                testid:action.payload1,\r\n                traineeid:action.payload2,\r\n            }\r\n        case 'FETCH_TEST_FLAG':\r\n            return{\r\n                ...state,\r\n                testbegins: action.payload1,\r\n                startedWriting: action.payload2,\r\n                testconducted: action.payload3,\r\n                LocaltestDone: action.payload4,\r\n                m_left: action.payload5,\r\n                s_left: action.payload6,\r\n                Iscoding: action.payload7,\r\n                codingsubmitted: false,\r\n                initialloading1:false\r\n            }\r\n        case 'INVALID_TEST_URL':\r\n            return{\r\n                ...state,\r\n                invalidUrl:true\r\n            }\r\n        case 'TEST_DONE_LOCAL':\r\n            return {\r\n                ...state,\r\n                LocaltestDone : true\r\n            }\r\n        case 'PROCEEDING_TO_TEST':\r\n            return{\r\n                ...state,\r\n                proceedingToTest:action.payload\r\n            }\r\n        case 'SWITCH_QUESTION':\r\n            return {\r\n                ...state,\r\n                activeQuestionIndex:action.payload\r\n            }\r\n        case 'FETCH_LOGGED_IN_TRAINEE':\r\n            return{\r\n                ...state,\r\n                initialloading2:false,\r\n                traineeDetails:action.payload\r\n            }\r\n        case 'UPDATE_TRAINEE_TEST_QUESTIONS':\r\n            return{\r\n                ...state,\r\n                questions:action.payload\r\n            }\r\n        case 'UPDATE_TRAINEE_TEST_ANSWERSHEET':\r\n            return{\r\n                ...state,\r\n                answers:action.payload\r\n            }\r\n        case 'CODING_DATA':\r\n            return{\r\n                ...state,\r\n                loadcoding: action.payload1,\r\n                codingData: action.payload2\r\n            }\r\n        case 'SUBMIT_CODING':\r\n            return{\r\n                ...state,\r\n                codingsubmitted: action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};","const initialState = {\n    NewQuestionModalState: false,\n    QuestionTableLoading : false, \n    QuestionTableData : []\n};\n\nexport default (state = initialState, action) => {\n    switch(action.type){\n        case 'CHANGE_CODING_QUESTION_MODAL_STATE':\n            return {\n                ...state,\n                NewQuestionModalState : action.payload,\n            }\n        case 'CHANGE_CODING_QUESTION_TABLE_LOADING_STATUS':\n            return {\n                ...state,\n                QuestionTableLoading : action.payload1,\n                QuestionTableData : action.payload2\n            }\n        default:\n            return state;\n    }\n};","import { combineReducers } from 'redux';\r\n\r\nimport openDrawer from './opendrawer';\r\nimport adminAction from './admin';\r\nimport userAction from './loggedinuser'\r\nimport trainerAction from './trainer';\r\nimport testAction from './test';\r\nimport conductTest from './conductTest';\r\nimport trainee from './trainee';\r\nimport coding from './coding';\r\n\r\nexport default combineReducers({\r\n    drawer: openDrawer,\r\n    admin: adminAction,\r\n    user: userAction,\r\n    trainer: trainerAction,\r\n    test: testAction,\r\n    conduct: conductTest,\r\n    trainee: trainee,\r\n    coding: coding\r\n});","export const TOOGLE_NAVIGATION = 'TOOGLE_NAVIGATION';\r\n\r\n","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport rootReducer from './reducers/index';\r\n\r\nconst initialState = {};\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n    rootReducer, \r\n    initialState,\r\n    compose(\r\n        applyMiddleware(...middleware),\r\n        (window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__()) || compose\r\n    )\r\n);\r\n\r\n// const store = createStore(\r\n//     rootReducer, \r\n//     initialState, \r\n//     applyMiddleware(...middleware)\r\n// );\r\n\r\n\r\nexport default store;","import React from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Button from '@material-ui/core/Button';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport { Icon } from 'antd';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    icon: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    heroContent: {\r\n        backgroundColor: theme.palette.background.paper,\r\n        padding: theme.spacing(8, 0, 6),\r\n    },\r\n    heroButtons: {\r\n        marginTop: theme.spacing(4),\r\n    },\r\n    cardGrid: {\r\n        paddingTop: theme.spacing(8),\r\n        paddingBottom: theme.spacing(8),\r\n    },\r\n    card: {\r\n        height: '100%',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n    },\r\n    cardMedia: {\r\n        paddingTop: '56.25%', // 16:9\r\n    },\r\n    cardContent: {\r\n        flexGrow: 1,\r\n    },\r\n    footer: {\r\n        backgroundColor: theme.palette.background.paper,\r\n        padding: theme.spacing(6),\r\n    },\r\n}));\r\n\r\nconst cards = [\r\n    {\r\n        title: 'MCQ / MSQ',\r\n        icon: 'file-done',\r\n        description: 'Create assessments automatically and manually with our huge question library',\r\n    },\r\n    {\r\n        title: 'Codeplayer',\r\n        icon: 'code',\r\n        description: 'Coding Platform and Online Judge Platform',\r\n    },\r\n    {\r\n        title: 'Auto Proctored',\r\n        icon: 'desktop',\r\n        description: 'Remote based hiring using AI and ML',\r\n    },\r\n    {\r\n        title: 'Invite Candidates',\r\n        icon: 'cloud-download',\r\n        description: 'Import and Export Candidates. Invite candidates',\r\n    },\r\n    {\r\n        title: 'Analysis',\r\n        icon: 'area-chart',\r\n        description: 'View detailed reports and in-depth analysis of each candidates performance',\r\n    },\r\n    {\r\n        title: 'Support',\r\n        icon: 'phone',\r\n        description: 'Support via phone and email and much more.',\r\n    },\r\n];\r\n\r\nexport default function Album() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <CssBaseline />\r\n      \r\n      <main>\r\n        <Container className={classes.cardGrid} maxWidth=\"md\">\r\n          {/* End hero unit */}\r\n          <Grid container spacing={4}>\r\n            {cards.map((card, index) => (\r\n              <Grid item key={index} xs={12} sm={6} md={4}>\r\n                <Card className={classes.card}>\r\n                  <CardContent className={classes.cardContent}>\r\n                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                        <Icon type={card.icon} />{'  '} {card.title}\r\n                    </Typography>\r\n                    <Typography>\r\n                      {card.description}\r\n                    </Typography>\r\n                  </CardContent>\r\n                </Card>\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n        </Container>\r\n      </main>\r\n    </React.Fragment>\r\n  );\r\n};","import React, { Fragment } from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Button from '@material-ui/core/Button';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Grid from '@material-ui/core/Grid';\r\n// import StarIcon from '@material-ui/icons/StarBorder';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Link from '@material-ui/core/Link';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport Box from '@material-ui/core/Box';\r\nimport { Col, Row, Icon } from 'antd';\r\n\r\nimport './home.css';\r\nimport logo from '../../../assets/gnius.png';\r\nimport Features from './Features';\r\n\r\nconst data = [\r\n    {\r\n        title: '100 Users',\r\n        description: 'Maximum 100 Users can take asssessments'\r\n    },\r\n    {\r\n        title: 'MCQ / MSQ and Coding Question Library Available',\r\n        description: 'Assess Candidates through MCQ, MSQ, Programming Questions'\r\n    },\r\n    {\r\n        title: 'Remote based hiring using AI and ML',\r\n        description: 'View detailed reports and in-depth analysis of each candidates performance'\r\n    },\r\n    {\r\n        title: 'Other Features',\r\n        description: 'Import and Export Candidates. Invite candidates, Create tests automatically and manually with our huge question library, Support via phone and email and much more.'\r\n    },\r\n];\r\n  \r\n\r\nfunction Copyright() {\r\n    return (\r\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n            {'Copyright © '}\r\n            <Link color=\"inherit\" href=\"/\">\r\n                <b>gnius Talent Solution</b>\r\n            </Link>{' '}\r\n            {new Date().getFullYear()}\r\n            {'.'}\r\n        </Typography>\r\n    );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    '@global': {\r\n        ul: {\r\n            margin: 0,\r\n            padding: 0,\r\n            listStyle: 'none',\r\n        },\r\n    },\r\n    appBar: {\r\n        backgroundColor: '#ffe3fe',\r\n    },\r\n    toolbar: {\r\n        flexWrap: 'wrap',\r\n    },\r\n    toolbarTitle: {\r\n        flexGrow: 1,\r\n    },\r\n    link: {\r\n        margin: theme.spacing(1, 1.5),\r\n    },\r\n    heroContent: {\r\n        padding: theme.spacing(8, 0, 6),\r\n    },\r\n    cardHeader: {\r\n        backgroundColor: '#fdbaf8'\r\n    },\r\n    cardPricing: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'baseline',\r\n        marginBottom: theme.spacing(2),\r\n    },\r\n    footer: {\r\n        borderTop: `1px solid ${theme.palette.divider}`,\r\n        marginTop: theme.spacing(8),\r\n        paddingTop: theme.spacing(3),\r\n        paddingBottom: theme.spacing(3),\r\n        [theme.breakpoints.up('sm')]: {\r\n            paddingTop: theme.spacing(6),\r\n            paddingBottom: theme.spacing(6),\r\n        },\r\n    },\r\n}));\r\n\r\nconst tiers = [\r\n    {\r\n        title: 'MCQ Assessment',\r\n        price: '200',\r\n        description: [\r\n            'Single User can take assessments',\r\n            'Access MCQ/MSQ Questions only',\r\n            'Remote based hiring using AI and ML',\r\n            'View detailed reports and in-depth analysis of each candidates performance',\r\n            'Email and Phone support'\r\n        ],\r\n        buttonText: 'Contact us',\r\n        buttonVariant: 'outlined',\r\n    },\r\n    {\r\n        title: 'Coding & MCQ Assessment',\r\n        subheader: 'Most popular',\r\n        price: '450',\r\n        description: [\r\n            'Single User can take assessments',\r\n            'Access both MCQ/MSQ and programming(CodePlayer) Questions',\r\n            'Remote based hiring using AI and ML',\r\n            'View detailed reports and in-depth analysis of each candidates performance',\r\n            'Email and Phone support'\r\n        ],\r\n        buttonText: 'Contact us',\r\n        buttonVariant: 'contained',\r\n    },\r\n    {\r\n        title: 'Coding Assessment',\r\n        price: '300',\r\n        description: [\r\n            'Single User can take assessments',\r\n            'Access Programming Questions(Codeplayer) only',\r\n            'Remote based hiring using AI and ML',\r\n            'View detailed reports and in-depth analysis of each candidates performance',\r\n            'Email and Phone support'\r\n        ],\r\n        buttonText: 'Contact us',\r\n        buttonVariant: 'outlined',\r\n    },\r\n];\r\n\r\nconst footers = [\r\n    {\r\n        title: 'Company',\r\n        description: ['Team', 'Contact us', 'Location'],\r\n    },\r\n    {\r\n        title: 'Features',\r\n        description: ['Blog', 'Developer stuff'],\r\n    },\r\n    {\r\n        title: 'Resources',\r\n        description: ['Guide', 'Handbook', 'Knowledge Base'],\r\n    },\r\n    {\r\n        title: 'Legal',\r\n        description: ['Privacy policy', 'Terms of use', 'Refund Policy'],\r\n    },\r\n];\r\n\r\nexport default function Pricing() {\r\n  const classes = useStyles();\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <CssBaseline />\r\n            <AppBar position=\"static\" color=\"default\" elevation={0} className={classes.appBar}>\r\n                <Toolbar className={classes.toolbar}>\r\n                    <Typography variant=\"h6\" color=\"inherit\" noWrap className={classes.toolbarTitle}>\r\n                        <img src={logo} alt=\"company logo\" className=\"logo\" />\r\n                    </Typography>\r\n                    <Button href=\"/auth/login\" color=\"primary\" variant=\"outlined\" className={classes.link}>\r\n                        <Icon type=\"lock\" /> {'   '}Recruiter Login\r\n                    </Button>\r\n                </Toolbar>\r\n            </AppBar>\r\n\r\n            <Container maxWidth=\"sm\" component=\"main\" className={classes.heroContent}>\r\n                <Typography component=\"h1\" variant=\"h2\" align=\"center\" color=\"textPrimary\" gutterBottom>\r\n                    Features\r\n                </Typography>\r\n                \r\n                <Typography variant=\"h5\" align=\"center\" color=\"textSecondary\" component=\"p\">\r\n                    An auto proctored assessment system and can be availed by the companies to help them\r\n                    in their end to end recruitment and to select the right candidate based on their skill.\r\n                </Typography>\r\n            </Container>\r\n\r\n            <Features />\r\n\r\n            {/* Hero unit */}\r\n            <Container maxWidth=\"sm\" component=\"main\" className={classes.heroContent}>\r\n                <Typography component=\"h1\" variant=\"h2\" align=\"center\" color=\"textPrimary\" gutterBottom>\r\n                    Single User Pricing\r\n                </Typography>\r\n                \r\n                <Typography variant=\"h5\" align=\"center\" color=\"textSecondary\" component=\"p\">\r\n                    <b>If you are not constantly hiring, then you should check these plans.</b>\r\n                    We've prepared pricing plans for all budgets so you can get started right away.\r\n                    They're great for startups and large organizations\r\n                </Typography>\r\n            </Container>\r\n\r\n            {/* End hero unit */}\r\n\r\n            <Container maxWidth=\"md\" component=\"main\">\r\n                <Grid container spacing={5} alignItems=\"flex-end\">\r\n                    {tiers.map((tier) => (\r\n                        // Enterprise card is full width at sm breakpoint\r\n                        <Grid item key={tier.title} xs={12} sm={tier.title === 'Enterprise' ? 12 : 6} md={4}>\r\n                            <Card>\r\n                                <CardHeader\r\n                                    title={tier.title}\r\n                                    subheader={tier.subheader}\r\n                                    titleTypographyProps={{ align: 'center' }}\r\n                                    subheaderTypographyProps={{ align: 'center' }}\r\n                                    className={classes.cardHeader}\r\n                                />\r\n                                <CardContent>\r\n                                    <div className={classes.cardPricing}>\r\n                                        <Typography component=\"h2\" variant=\"h3\" color=\"textPrimary\">\r\n                                            &#8377;{tier.price}\r\n                                        </Typography>\r\n                                        <Typography variant=\"h6\" color=\"textSecondary\">\r\n                                            /user\r\n                                        </Typography>\r\n                                    </div>\r\n                                    <div className={classes.cardPricing}>\r\n                                        <Typography component=\"h5\" variant=\"h5\" color=\"textSecondary\">\r\n                                           Plan Includes :\r\n                                        </Typography>\r\n                                    </div>\r\n                                    <ul>\r\n                                        {tier.description.map((line) => (\r\n                                            <Typography component=\"li\" variant=\"subtitle1\" align=\"left\" key={line}>\r\n                                                <Icon type=\"check-circle\" /> {'  '}{line}\r\n                                            </Typography>\r\n                                        ))}\r\n                                    </ul>\r\n                                </CardContent>\r\n                                <CardActions>\r\n                                    <Button fullWidth variant={tier.buttonVariant} color=\"primary\">\r\n                                        {tier.buttonText}\r\n                                    </Button>\r\n                                </CardActions>\r\n                            </Card>\r\n                        </Grid>\r\n                    ))}\r\n                </Grid>\r\n            </Container>\r\n\r\n            <Container maxWidth=\"sm\" component=\"main\" className={classes.heroContent}>\r\n                <Typography component=\"h1\" variant=\"h2\" align=\"center\" color=\"textPrimary\" gutterBottom>\r\n                    Monthly Pricing\r\n                </Typography>\r\n                \r\n                <Typography variant=\"h5\" align=\"center\" color=\"textSecondary\" component=\"p\">\r\n                    <b>If you are constantly hiring, then you should check this plan.</b>\r\n                </Typography>\r\n            </Container>\r\n\r\n            <Row type=\"flex\" justify=\"center\">\r\n                <Col span={24}>\r\n                    <Card style={{padding: '0 20px', borderRadius: '10px'}}>\r\n                        <CardHeader\r\n                            title={<h1>Plans starting @ &#8377; 14,000</h1>}\r\n                            titleTypographyProps={{ align: 'center' }}\r\n                            subheaderTypographyProps={{ align: 'center' }}\r\n                            className={classes.cardHeader}\r\n                        />\r\n                        \r\n                        <CardContent>\r\n                            <ul>\r\n                                {data.map((item) => (\r\n                                    <Fragment>\r\n                                        <Typography component=\"li\" variant=\"subtitle1\" align=\"left\" key={item}>\r\n                                            <Icon type=\"check-circle\" /> {'  '}\r\n                                            <b>{item.title}</b>\r\n                                        </Typography>\r\n                                    \r\n                                        <Typography component=\"li\" variant=\"subtitle1\" align=\"left\" key={item}>\r\n                                            {item.description}\r\n                                        </Typography>\r\n                                    </Fragment>\r\n                                ))}\r\n                            </ul>\r\n                        </CardContent>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n            \r\n            \r\n            {/* Footer */}\r\n            <Container maxWidth=\"md\" component=\"footer\" className={classes.footer}>\r\n                <Grid container spacing={4} justify=\"space-evenly\">\r\n                    {footers.map((footer) => (\r\n                        <Grid item xs={6} sm={3} key={footer.title}>\r\n                            <Typography variant=\"h6\" color=\"textPrimary\" gutterBottom>\r\n                                {footer.title}\r\n                            </Typography>\r\n                            <ul>\r\n                                {footer.description.map((item) => (\r\n                                    <li key={item}>\r\n                                        <Link href=\"#\" variant=\"subtitle1\" color=\"textSecondary\">\r\n                                            {item}\r\n                                        </Link>\r\n                                    </li>\r\n                                ))}\r\n                            </ul>\r\n                        </Grid>\r\n                    ))}\r\n                </Grid>\r\n                <Box mt={5}>\r\n                    <Copyright />\r\n                </Box>\r\n            </Container>\r\n            {/* End footer */}\r\n        </React.Fragment>\r\n    );\r\n};","const envoirnment = process.env.NODE_ENV;\r\n\r\nconst apis = {\r\n    BASE_LOCAL_URL:envoirnment==='development'?'http://localhost:3000':'',\r\n    BASE : envoirnment==='development'?'http://localhost:5000':'',\r\n    LOGIN : \"/api/v1/login/\",\r\n    GETDETAILSUSER : \"/api/v1/user/details\",\r\n    UPDATE_USER: '/api/v1/user/update/details',\r\n    GET_ALL_TRAINER :'/api/v1/admin/trainer/details/all',\r\n    GET_SINGLE_TRAINER_DETAILS : '/api/v1/admin/trainer/details',\r\n    CREATE_TRAINER : '/api/v1/admin/trainer/create',\r\n    DELETE_TRAINER : '/api/v1/admin/trainer/remove',\r\n    \r\n    GET_ALL_SUBJECTS : '/api/v1/subject/details/all',\r\n    GET_SINGLE_SUBJECT_DETAILS : '/api/v1/subject/details',\r\n    CREATE_SUBJECT : '/api/v1/subject/create',\r\n    GET_ALL_QUESTIONS : '/api/v1/questions/details/all',\r\n    DELETE_QUESTION:'/api/v1/questions/delete',\r\n    FETCH_SINGLE_QUESTION:'/api/v1/questions/details',\r\n    CREATE_QUESTIONS :'/api/v1/questions/create',\r\n    FILE_UPLOAD:'/api/v1/upload',\r\n    \r\n    CREATE_TEST : '/api/v1/test/create',\r\n    GET_ALL_TESTS:'/api/v1/test/details/all',\r\n    GET_SINGLE_TEST:'/api/v1/test/trainer/details',\r\n    REGISTER_TRAINEE_FOR_TEST:'/api/v1/trainee/enter',\r\n    RESEND_TRAINER_REGISTRATION_LINK: '/api/v1/trainee/resend/testlink',\r\n    GET_SINGLE_TEST_DETAILS_BASIC:'/api/v1/test/basic/details',\r\n    \r\n    STOP_REGISTRATION :'/api/v1/trainer/registration/stop',\r\n    START_TEST_BY_TRAINER:'/api/v1/test/begin',\r\n    GET_TEST_CANDIDATES :'/api/v1/test/candidates',\r\n    GET_TEST_QUESTIONS :'/api/v1/test/questions',\r\n    FETCH_TRAINEE_DETAILS:'/api/v1/trainee/details',    \r\n    FETCH_TRAINEE_TEST_DETAILS:'/api/v1/trainee/flags',\r\n    \r\n    PROCEED_TO_TEST:'/api/v1/trainee/answersheet',\r\n    FETCH_TRAINEE_TEST_QUESTION:'/api/v1/trainee/paper/questions',\r\n    FETCH_TRAINEE_TEST_ANSWERSHEET:'/api/v1/trainee/chosen/options',\r\n    UPDATE_ANSWERS:'/api/v1/trainee/update/answer',\r\n    END_TEST : '/api/v1/trainee/end/test',\r\n    FETCH_OWN_RESULT:'/api/v1/final/results',\r\n    FETCH_SINGLE_QUESTION_BY_TRAINEE:'/api/v1/trainee/get/question',\r\n    END_TEST_BY_TRAINER:'/api/v1/test/end',\r\n    FEEDBACK_STATUS_CHECK:'/api/v1/trainee/feedback/status',\r\n    GIVE_FEEDBACK:'/api/v1/trainee/feedback',\r\n    \r\n    GET_STATS:'/api/v1/test/candidates/details',\r\n    GET_EXCEL:'/api/v1/trainer/result/download',\r\n    MAX_MARKS_FETCH:'/api/v1/test/max/marks',\r\n    GET_FEEDBACKS:'/api/v1/trainer/get/feedbacks',\r\n    CHECK_TEST_NAME: '/api/v1/test/new/name/check',\r\n\r\n    IMPORT_CANDIDATES: '/api/v1/test/candidates/import',\r\n    GET_JOB_DETAILS:'/api/v1/trainee/jobpost/details',\r\n    \r\n    CREATE_CODING_QUESTION: '/api/v1/coding/create/question',\r\n    LIST_CODING_QUESTION: '/api/v1/coding/list/question',\r\n    GET_CODING_QUESTION_DETAILS: '/api/v1/coding/list/testcase',\r\n    CREATE_CODING_TESTCASE: '/api/v1/coding/create/testcase',\r\n    GET_CODING_QUESTION_DATA: '/api/v1/trainee/coding/contest/question',\r\n    POST_SUBMISSION: '/api/v1/trainee/coding/contest/submission',\r\n    CODING_SECTION_SUBMIT: '/api/v1/trainee/coding/submit/section',\r\n    CODING_SECTION_GET: '/api/v1/trainee/coding/section/details',\r\n    CODING_SUBMISSION_GET: '/api/v1/test/leaderboard',\r\n    UPLOAD_RESUME: '/api/v1/upload/resume'\r\n};\r\n\r\nexport default apis;\r\n\r\n\r\n\r\n/*\r\nconst apis={\r\n    BASE_LOCAL_URL:'http://localhost:3000',\r\n    BASE : \"http://localhost:5000\",\r\n    LOGIN : \"/api/v1/login/\",\r\n    GETDETAILSUSER : \"/api/v1/user/details\",\r\n    GET_ALL_TRAINER :'/api/v1/admin/trainer/details/all',\r\n    GET_SINGLE_TRAINER_DETAILS : '/api/v1/admin/trainer/details',\r\n    CREATE_TRAINER : '/api/v1/admin/trainer/create',\r\n    DELETE_TRAINER : '/api/v1/admin/trainer/remove',\r\n    GET_ALL_SUBJECTS : '/api/v1/subject/details/all',\r\n    GET_SINGLE_SUBJECT_DETAILS : '/api/v1/subject/details',\r\n    CREATE_SUBJECT : '/api/v1/subject/create',\r\n    GET_ALL_QUESTIONS : '/api/v1/questions/details/all',\r\n    DELETE_QUESTION:'/api/v1/questions/delete',\r\n    FETCH_SINGLE_QUESTION:'/api/v1/questions/details',\r\n    CREATE_QUESTIONS :'/api/v1/questions/create',\r\n    FILE_UPLOAD:'/api/v1/upload',\r\n    CREATE_TEST : '/api/v1/test/create',\r\n    GET_ALL_TESTS:'/api/v1/test/details/all',\r\n    GET_SINGLE_TEST:'/api/v1/test/trainer/details',\r\n    REGISTER_TRAINEE_FOR_TEST:'/api/v1/trainee/enter',\r\n    RESEND_TRAINER_REGISTRATION_LINK: '/api/v1/trainee/resend/testlink',\r\n    GET_SINGLE_TEST_DETAILS_BASIC:'/api/v1/test/basic/details',\r\n    STOP_REGISTRATION :'/api/v1/trainer/registration/stop',\r\n    START_TEST_BY_TRAINER:'/api/v1/test/begin',\r\n    GET_TEST_CANDIDATES :'/api/v1/test/candidates',\r\n    GET_TEST_QUESTIONS :'/api/v1/test/questions',\r\n    FETCH_TRAINEE_DETAILS:'/api/v1/trainee/details',\r\n    FETCH_TRAINEE_TEST_DETAILS:'/api/v1/trainee/flags',\r\n    PROCEED_TO_TEST:'/api/v1/trainee/answersheet',\r\n    FETCH_TRAINEE_TEST_QUESTION:'/api/v1/trainee/paper/questions',\r\n    FETCH_TRAINEE_TEST_ANSWERSHEET:'/api/v1/trainee/chosen/options',\r\n    UPDATE_ANSWERS:'/api/v1/trainee/update/answer',\r\n    END_TEST : '/api/v1/trainee/end/test',\r\n    FETCH_OWN_RESULT:'/api/v1/final/results',\r\n    FETCH_SINGLE_QUESTION_BY_TRAINEE:'/api/v1/trainee/get/question',\r\n    END_TEST_BY_TRAINER:'/api/v1/test/end',\r\n    FEEDBACK_STATUS_CHECK:'/api/v1/trainee/feedback/status',\r\n    GIVE_FEEDBACK:'/api/v1/trainee/feedback',\r\n    GET_STATS:'/api/v1/test/candidates/details',\r\n    GET_EXCEL:'/api/v1/trainer/result/download',\r\n    MAX_MARKS_FETCH:'/api/v1/test/max/marks'\r\n}*/","import auth from './AuthServices';\r\nimport apis from './Apis';\r\nconst axios = require('axios');\r\n\r\nexport const SecureGet = (p)=>{\r\n    return axios({\r\n        method:'get',\r\n        baseURL : apis.BASE,\r\n        ...p,\r\n        params: {\r\n            ...p.params,\r\n            Token : auth.retriveToken()\r\n        }\r\n    })\r\n}\r\n\r\nexport const Get =(p)=>{\r\n    return axios({\r\n        method:'get',\r\n        baseURL : apis.BASE,\r\n        ...p,\r\n    })\r\n}\r\n\r\n\r\nexport const SecurePost =(p)=>{\r\n    return axios({\r\n        method:'post',\r\n        baseURL : apis.BASE,\r\n        ...p,\r\n        params: {\r\n            ...p.params,\r\n            Token : auth.retriveToken()\r\n        }\r\n    })\r\n}\r\n\r\nexport const Post =(p)=>{\r\n    return axios({\r\n        baseURL : apis.BASE,\r\n        method:'post',\r\n        ...p,\r\n    })\r\n}\r\n\r\n\r\n\r\n","import apis from \"./Apis\";\r\nimport { Get, Post} from './axiosCall';\r\n\r\n\r\nclass AuthService{\r\n    constructor(){\r\n        this.token=null;\r\n        // console.log(apis.BASE);\r\n        // console.log(apis.BASE_LOCAL_URL);\r\n    }\r\n    \r\n    retriveToken = ()=>{\r\n        return localStorage.getItem('Token')\r\n    }\r\n\r\n    storeToken = (t)=>{\r\n        localStorage.setItem('Token', t);\r\n    }\r\n\r\n    deleteToken = ()=>{\r\n        localStorage.removeItem('Token');\r\n    }\r\n\r\n    LoginAuth = (u,p)=>{\r\n        return Post({\r\n            url:apis.LOGIN,\r\n            data:{\r\n                emailid : u,\r\n                password : p\r\n            }\r\n        })    \r\n    }\r\n\r\n    FetchAuth = (t)=>{\r\n        return Get({\r\n            url : apis.GETDETAILSUSER,\r\n            params : {\r\n                Token : t\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default new AuthService();\r\n","import auth from '../services/AuthServices';\r\n\r\nexport const login = (details)=> dispatch =>{\r\n    dispatch({\r\n       type : 'LOGIN',\r\n       payload : details\r\n    });\r\n};\r\n\r\n\r\nexport const logout = () => dispatch => {\r\n    dispatch({\r\n        type: 'LOGOUT',\r\n        payload1: 'Manual Logout'\r\n    });\r\n};\r\n\r\n\r\nexport const wakeUp = ()=> dispatch =>{\r\n    var t = auth.retriveToken() || null;\r\n    if(t && t!=='undefined'){\r\n        auth.wakeUp(t).then((res) => {\r\n            // console.log(`Wakeup success ${res}`)\r\n            dispatch({\r\n                type: 'LOGIN',\r\n                payload1: t,\r\n                payload2: res.data.user\r\n            });\r\n        })\r\n        .catch((err) => {\r\n            // console.log(`Wakeup error ${err}`)\r\n            if (err) {\r\n                dispatch({\r\n                    type: 'LOGOUT',\r\n                    payload1: 'Token Expired'\r\n                });\r\n            }\r\n        });\r\n    }\r\n    else{\r\n        dispatch({\r\n            type: 'LOGOUT',\r\n            payload1: 'No Token'\r\n        });\r\n    }\r\n}","import { Modal } from 'antd';\r\n\r\nexport default function Alert(s='warning',h,b) {\r\n    if(s==='success'){\r\n        return (\r\n            Modal.success({\r\n                title: h,\r\n                content:b,\r\n            })\r\n        )\r\n    }\r\n    else if(s==='error'){\r\n        return (\r\n            Modal.error({\r\n                title: h,\r\n                content:b,\r\n            })\r\n        )\r\n    }\r\n    else{\r\n        return (\r\n            Modal.warning({\r\n                title: h,\r\n                content:b,\r\n            })\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Paper from '@material-ui/core/Paper';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst Copyright = () => {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        Your Website\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: '100vh',\n  },\n  image: {\n    backgroundImage: 'url(https://res.cloudinary.com/gniusedu/image/upload/v1624111142/Untitled_design_lkndto.gif)',\n    backgroundRepeat: 'no-repeat',\n    backgroundColor:\n      theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\n    backgroundSize: 'cover',\n    backgroundPosition: 'center',\n  },\n  paper: {\n    margin: theme.spacing(8, 4),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center'\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nexport default function SignInSide(props) {\n  const classes = useStyles();\n\n  return (\n    <Grid container component=\"main\" className={classes.root}>\n      <CssBaseline />\n      <Grid item xs={false} sm={4} md={7} className={classes.image} />\n      <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\n        <div className={classes.paper}>\n          \n          <Avatar className={classes.avatar}>\n            <LockOutlinedIcon />\n          </Avatar>\n\n          <Typography component=\"h1\" variant=\"h5\">\n            Recruiter Login\n          </Typography>\n          \n          {props.children}\n          \n        </div>\n      </Grid>\n    </Grid>\n  );\n};\n","import React from \"react\";\r\nimport { Form, Input, Icon, Button } from 'antd';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { login, logout } from '../../../actions/loginAction';\r\nimport auth from '../../../services/AuthServices';\r\nimport Alert from '../../common/alert';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nimport SignIn from './SignInSide';\r\n\r\nimport './login.css';\r\n\r\nclass Login extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            isLoggedIn :false\r\n        }\r\n    }\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        this.props.form.validateFields((err, values) => {\r\n            if (!err) {\r\n                // console.log('Received values of form: ', values);\r\n                auth\r\n                .LoginAuth(values.email,values.password)\r\n                .then((response)=>{\r\n                    // console.log(response);\r\n                    if(response.data.success){\r\n                        this.props.login(response.data.user)\r\n                        auth.storeToken(response.data.token);\r\n                        this.setState({\r\n                            isLoggedIn : true\r\n                        })\r\n                    }\r\n                    else{\r\n                        return Alert('error','Error!', response.data.message);\r\n                    }\r\n                })\r\n                .catch((error)=>{\r\n                    // console.log(error);\r\n                    return Alert('error','Error!','Server Error');\r\n                })              \r\n            }\r\n        });\r\n    };\r\n\r\n    render(){\r\n        const { getFieldDecorator } = this.props.form;\r\n        if(this.state.isLoggedIn){\r\n            return <Redirect to={this.props.user.userOptions[0].link} />\r\n        }\r\n        else{\r\n            return(\r\n                <SignIn>\r\n                        <Form\r\n                            onSubmit={this.handleSubmit}\r\n                            autoComplete=\"off\"\r\n                        >\r\n                            <Form.Item label=\"Email\" hasFeedback>\r\n                                {getFieldDecorator('email', {\r\n                                    rules: [\r\n                                        {\r\n                                            type: 'email',\r\n                                            message: 'The input is not valid E-mail!',\r\n                                        },\r\n                                        {\r\n                                            required: true,\r\n                                            message: 'Please input your E-mail!',\r\n                                        },\r\n                                    ],\r\n                                })(<Input \r\n                                    prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                                    placeholder=\"Email\"/>)}\r\n                            </Form.Item>\r\n                            \r\n                            <Form.Item label=\"Password\" hasFeedback>\r\n                                {getFieldDecorator('password', {\r\n                                    rules: [\r\n                                        { \r\n                                            required: true, message: 'Please input your Password!' \r\n                                        }\r\n                                    ],\r\n                                })(\r\n                                    <Input.Password\r\n                                    prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                                    placeholder=\"Password\"\r\n                                    />,\r\n                                )}\r\n                            </Form.Item>\r\n\r\n                            <Form.Item>\r\n                                <Button type=\"primary\" htmlType=\"submit\" block>\r\n                                    Login\r\n                                </Button>\r\n                            </Form.Item>\r\n                        </Form>\r\n                </SignIn>\r\n            );\r\n        };\r\n    };\r\n};\r\n\r\nconst LoginForm = Form.create({ name: 'login' })(Login);\r\n\r\nconst mapStateToProps = state => ({\r\n    user : state.user\r\n});\r\n\r\nexport default connect(mapStateToProps,{\r\n    login, \r\n    logout\r\n})(LoginForm);","import React from 'react';\r\nimport './header.css'; \r\nimport main from './logo.png';\r\n\r\nfunction HomepageHeader(props) {\r\n    return (\r\n        <div>\r\n            <div className=\"header-container-2\">\r\n                <img src={main} alt=\"company logo\" className=\"logo\" />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HomepageHeader;","import React from 'react';\r\nimport './homepage.css';\r\nimport { connect } from 'react-redux';\r\nimport Login from '../login/login';\r\nimport HomepageHeader from '../header/header'; \r\nimport auth from '../../../services/AuthServices';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\n\r\nfunction Homepage(props) {\r\n  if(auth.retriveToken() && auth.retriveToken()!=='undefined'){\r\n    // console.log('Logged In');\r\n    return <Redirect to='/user/home' />\r\n  }\r\n  else{\r\n    // console.log('Not Logged In');\r\n    return (\r\n      <div>\r\n          <div className=\"parallax\">\r\n            <HomepageHeader/>\r\n            <Login />\r\n          </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  user : state.user\r\n});\r\n\r\nexport default connect(mapStateToProps,{\r\n  \r\n})(Homepage);\r\n","import apis from '../services/Apis';\r\nimport Alert from '../components/common/alert';\r\nimport { SecureGet } from '../services/axiosCall';\r\n\r\nexport const ChangeTrainerModalState = (d1,d2,d3)=> dispatch =>{\r\n    if(d3==='Save Changes'){\r\n        SecureGet({\r\n            url : `${apis.GET_SINGLE_TRAINER_DETAILS}/${d2}`\r\n        }).then((response)=>{\r\n            // console.log(response);\r\n            if(response.data.success){\r\n                dispatch({\r\n                    type : 'CHANGE_TRAINER_MODAL_STATE',\r\n                    payload1 : true,\r\n                    payload2 : d2,\r\n                    payload3 : 'Save Changes',\r\n                    payload4: {\r\n                        ...response.data.data[0],\r\n                        contact :response.data.data[0].contact.slice(3),\r\n                        prefix:response.data.data[0].contact.slice(0,3),\r\n                    }\r\n                })\r\n            }\r\n            else{\r\n                return Alert('warning','Warning!',response.data.message);\r\n            }\r\n        }).catch((error)=>{\r\n            return Alert('error','Error!','Server Error');\r\n        })\r\n    }\r\n    else{\r\n        dispatch({\r\n            type : 'CHANGE_TRAINER_MODAL_STATE',\r\n            payload1 : d1,\r\n            payload2 : d2,\r\n            payload3 : d3,\r\n            payload4: {\r\n                name : null,\r\n                emailid:null,\r\n                contact :null,\r\n                prefix:null,\r\n                password:null,\r\n                confirmpassword : null\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const ChangeTrainerConfirmDirty = (d)=> dispatch =>{\r\n    dispatch({\r\n       type : 'CHANGE_TRAINER_FORM_CONFIRMDIRTY',\r\n       payload : d\r\n    })\r\n}\r\n\r\n\r\nexport const ChangeTrainerSearchText = (d)=> dispatch =>{\r\n    dispatch({\r\n       type : 'CHANGE_TRAINER_SEARCH_TEXT',\r\n       payload : d\r\n    })\r\n}\r\n\r\nexport const ChangeTrainerTableData = ()=> dispatch =>{\r\n    dispatch({\r\n        type : 'CHANGE_TRAINER_TABLE_LOADING_STATUS',\r\n        payload1 : true,\r\n        payload2 : []\r\n    })\r\n    SecureGet({\r\n        url:  `${apis.GET_ALL_TRAINER}`\r\n    }).then((response)=>{\r\n        // console.log(response);\r\n        if(response.data.success){\r\n            dispatch({\r\n                type : 'CHANGE_TRAINER_TABLE_LOADING_STATUS',\r\n                payload1 : false,\r\n                payload2 : response.data.data\r\n            })\r\n        }\r\n        else{\r\n            Alert('error','Error!',response.data.message);\r\n            dispatch({\r\n                type : 'CHANGE_TRAINER_TABLE_LOADING_STATUS',\r\n                payload1 : false,\r\n                payload2 : []\r\n            })\r\n        }\r\n      }).catch((error)=>{\r\n        Alert('error','Error!','Server Error');\r\n        dispatch({\r\n            type : 'CHANGE_TRAINER_TABLE_LOADING_STATUS',\r\n            payload1 : false,\r\n            payload2 : []\r\n        })\r\n    })\r\n}\r\n\r\nexport const ChangeSubjectModalState = (d1,d2,d3)=> dispatch =>{\r\n    if(d3==='Save Changes'){\r\n        SecureGet({\r\n            url : `${apis.GET_SINGLE_SUBJECT_DETAILS}/${d2}`\r\n        }).then((response)=>{\r\n            if(response.data.success){\r\n                dispatch({\r\n                    type : 'CHANGE_SUBJECT_MODAL_STATE',\r\n                    payload1 : true,\r\n                    payload2 : d2,\r\n                    payload3 : 'Save Changes',\r\n                    payload4: response.data.data[0]\r\n                })\r\n            }\r\n            else{\r\n                return Alert('warning','Warning!',response.data.message);\r\n            }\r\n        }).catch((error)=>{\r\n            return Alert('error','Error!','Server Error');\r\n        })\r\n    }\r\n    else{\r\n        dispatch({\r\n            type : 'CHANGE_SUBJECT_MODAL_STATE',\r\n            payload1 : d1,\r\n            payload2 : d2,\r\n            payload3 : d3,\r\n            payload4: {\r\n                topic : null\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const ChangeSubjectConfirmDirty = (d)=> dispatch =>{\r\n    dispatch({\r\n       type : 'CHANGE_SUBJECT_FORM_CONFIRMDIRTY',\r\n       payload : d\r\n    })\r\n}\r\n\r\n\r\nexport const ChangeSubjectSearchText = (d)=> dispatch =>{\r\n    dispatch({\r\n       type : 'CHANGE_SUBJECT_SEARCH_TEXT',\r\n       payload : d\r\n    })\r\n}\r\n\r\nexport const ChangeSubjectTableData = (d)=> dispatch =>{\r\n    // console.log('fetchng subjects');\r\n    dispatch({\r\n       type : 'CHANGE_SUBJECT_TABLE_LOADING_STATUS',\r\n       payload1 : true,\r\n       payload2 :[]\r\n    })\r\n    SecureGet({\r\n        url:  `${apis.GET_ALL_SUBJECTS}`\r\n    }).then((response)=>{\r\n        // console.log(response);\r\n        if(response.data.success){\r\n            dispatch({\r\n                type : 'CHANGE_SUBJECT_TABLE_LOADING_STATUS',\r\n                payload1 : false,\r\n                payload2 : response.data.data\r\n            })\r\n        }\r\n        else{\r\n            Alert('error','Error!',response.data.message);\r\n            dispatch({\r\n                type : 'CHANGE_SUBJECT_TABLE_LOADING_STATUS',\r\n                payload1 : false,\r\n                payload2 : []\r\n            })\r\n        }\r\n      }).catch((error)=>{\r\n        Alert('error','Error!','Server Error');\r\n        dispatch({\r\n            type : 'CHANGE_SUBJECT_TABLE_LOADING_STATUS',\r\n            payload1 : false,\r\n            payload2 : []\r\n        })\r\n    })\r\n\r\n}\r\n","import React, { Component } from 'react'\r\nimport './newtrainer.css';\r\nimport {\r\n    Form,\r\n    Input,\r\n    Button,\r\n    Select,\r\n    Switch,\r\n    Icon,\r\n    Upload\r\n} from 'antd';\r\n\r\nimport { SecurePost } from '../../../services/axiosCall';\r\nimport apis from '../../../services/Apis';\r\nimport auth from '../../../services/AuthServices';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n    ChangeTrainerConfirmDirty,\r\n    ChangeTrainerModalState,\r\n    ChangeTrainerTableData\r\n} from '../../../actions/adminAction';\r\nimport Alert from '../../../components/common/alert';\r\n\r\nconst { Option } = Select;\r\nconst { TextArea } = Input;\r\n\r\nclass NewTrainer extends Component {\r\n    state = {\r\n        checked: this.props.admin.trainerdetails.status,\r\n        logo: null,\r\n        submitDisabled:false\r\n    };\r\n\r\n    toggle = () => {\r\n        this.setState({\r\n            checked: !this.state.checked,\r\n        });\r\n    };\r\n    \r\n    compareToFirstPassword = (rule, value, callback) => {\r\n        const form = this.props.form;\r\n        if (value && value !== form.getFieldValue('password')) {\r\n            callback('passwords are not same !');\r\n        } else {\r\n            callback();\r\n        }\r\n    };\r\n\r\n    validateToNextPassword = (rule, value, callback) => {\r\n        const form = this.props.form;\r\n        if (value && this.props.admin.TrainerconfirmDirty) {\r\n            form.validateFields(['confirm'], { force: true });\r\n        }\r\n        callback();\r\n    };\r\n\r\n    changeqImage = (f)=>{\r\n        this.setState((ps,pp)=>{\r\n            return({\r\n                logo:(f.link ?`${apis.BASE}/${f.link}`:null),\r\n                submitDisabled:false\r\n            });\r\n        });\r\n    };\r\n\r\n    upl=()=>{\r\n        this.setState({\r\n            submitDisabled:true\r\n        });\r\n    };\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        this.props.form.validateFieldsAndScroll((err, values) => {\r\n            if (!err) {\r\n                // console.log('Received values of form: ', values);\r\n                SecurePost({\r\n                    url: `${apis.CREATE_TRAINER}`,\r\n                    data: {\r\n                        _id: this.props.admin.trainerId,\r\n                        name: values.name,\r\n                        password: values.password,\r\n                        emailid: values.emailid,\r\n                        contact: values.prefix + values.contact,\r\n                        status: this.state.checked,\r\n                        organisation: values.organisation,\r\n                        avatar: this.state.logo,\r\n                        bio: values.bio\r\n                    }\r\n                })\r\n                .then((response) => {\r\n                    if (response.data.success) {\r\n                        this.props.ChangeTrainerModalState(false, null, 'Register');\r\n                        Alert('success', 'Success', response.data.message);\r\n                        this.props.ChangeTrainerTableData();\r\n                    }\r\n                    else {\r\n                        // console.log(response.data);\r\n                        this.props.ChangeTrainerModalState(false, null, 'Register');\r\n                        return Alert('warning', 'Warning!', response.data.message);\r\n                    }\r\n                }).catch((error) => {\r\n                    this.props.ChangeTrainerModalState(false, null, 'Register');\r\n                    return Alert('error', 'Error!', 'Server Error');\r\n                });\r\n            }\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { getFieldDecorator } = this.props.form;\r\n\r\n        const prefixSelector = getFieldDecorator('prefix', {\r\n            initialValue: this.props.admin.trainerdetails.prefix || '+91',\r\n            rules: [{ required: true, message: 'Please enter contact no prefix' }],\r\n          })(\r\n            <Select style={{ width: 70 }}>\r\n              <Option value=\"+91\">+91</Option>\r\n            </Select>,\r\n        );\r\n\r\n        var QuestionImageprops = {\r\n            name: 'file',\r\n            action: `${apis.BASE}${apis.FILE_UPLOAD}?Token=${auth.retriveToken()}`,\r\n            listType: 'picture',\r\n        };\r\n\r\n        return (\r\n            <div className=\"register-trainer-form\">\r\n                <div className=\"register-trainer-form-body\">\r\n                    <Form  onSubmit={this.handleSubmit} autoComplete=\"off\">\r\n                        <Form.Item label=\"Name\" hasFeedback className=\"input-admin-trainer\">\r\n                            {getFieldDecorator('name', {\r\n                                initialValue : this.props.admin.trainerdetails.name,\r\n                                rules: [{ required: true, message: 'Please input your name!', whitespace: true }],\r\n                            })(<Input />)}\r\n                        </Form.Item>\r\n                    \r\n                        { !this.props.admin.trainerId ? <Form.Item label=\"E-mail\" hasFeedback className=\"input-admin-trainer\">\r\n                            {getFieldDecorator('emailid', {\r\n                                initialValue : this.props.admin.trainerdetails.emailid,\r\n                                rules: [\r\n                                    {\r\n                                        type: 'email',\r\n                                        message: 'The input is not valid E-mail!',\r\n                                    },\r\n                                    {\r\n                                        required: true,\r\n                                        message: 'Please input your E-mail!',\r\n                                    },\r\n                                ],\r\n                            })(<Input />)}\r\n                        </Form.Item> : null }\r\n\r\n                        <Form.Item label=\"Phone Number\" className=\"input-admin-trainer\">\r\n                            {getFieldDecorator('contact', {\r\n                                initialValue : this.props.admin.trainerdetails.contact,\r\n                                rules: [\r\n                                    { \r\n                                        required: true, \r\n                                        message: 'Please input your phone number!' \r\n                                    },\r\n                                    {\r\n                                        len:10,\r\n                                        message:'Contact number must be 10 digit long'\r\n                                    }],\r\n                            })(<Input addonBefore={prefixSelector} min={10} max={10} />)}\r\n                        </Form.Item>\r\n\r\n                        { !this.props.admin.trainerId ? <div><Form.Item label=\"Password\" hasFeedback className=\"input-admin-trainer\">\r\n                                {getFieldDecorator('password', {\r\n                                    initialValue : this.props.admin.trainerdetails.password,\r\n                                    rules: [\r\n                                        {\r\n                                            required: true,\r\n                                            message: 'Please input your password!',\r\n                                        },\r\n                                        {\r\n                                            validator: this.validateToNextPassword,\r\n                                        },\r\n                                    ],\r\n                                })(<Input.Password />)}\r\n                            </Form.Item>\r\n                        \r\n                            <Form.Item label=\"Confirm Password\" hasFeedback className=\"input-admin-trainer\">\r\n                                {getFieldDecorator('confirm', {\r\n                                    initialValue : this.props.admin.trainerdetails.confirmpassword,\r\n                                    rules: [\r\n                                    {\r\n                                        required: true,\r\n                                        message: 'Please confirm your password!',\r\n                                    },\r\n                                    {\r\n                                        validator: this.compareToFirstPassword,\r\n                                    },\r\n                                    ],\r\n                                })(<Input.Password onBlur={this.handleConfirmBlur} />)}\r\n                            </Form.Item>\r\n                        </div> : null}\r\n                        \r\n                        <Form.Item label=\"status\" className=\"input-admin-trainer\">\r\n                            {getFieldDecorator('status')(\r\n                                <Switch\r\n                                    checkedChildren={<Icon type=\"check\" />}\r\n                                    unCheckedChildren={<Icon type=\"close\" />}\r\n                                    checked={this.state.checked}\r\n                                    onChange={this.toggle}\r\n                                />\r\n                            )}\r\n                        </Form.Item>\r\n                        \r\n                        {/* Organisation Details */}\r\n                        <Form.Item label=\"Organisation Name\" hasFeedback className=\"input-admin-trainer\">\r\n                            {getFieldDecorator('organisation', {\r\n                                initialValue : this.props.admin.trainerdetails.organisation,\r\n                                rules: [{ required: true, message: 'Please input organisation name!', whitespace: true }],\r\n                            })(<Input />)}\r\n                        </Form.Item>\r\n\r\n                        <Form.Item label=\"Write About Your Organisation\" className=\"input-admin-trainer\" hasFeedback>\r\n                            {getFieldDecorator('bio', {\r\n                                initialValue : this.props.admin.trainerdetails.bio,\r\n                                rules: [{ required: true, message: 'Please Enter Company Details or About!' }],\r\n                            })(\r\n                                <TextArea rows={5} />\r\n                            )}\r\n                        </Form.Item>\r\n\r\n                        <Form.Item label=\"Organisation Logo\" className=\"input-admin-trainer\">\r\n                            <Upload \r\n                                {...QuestionImageprops}\r\n                                beforeUpload={this.upl}\r\n                                onRemove={this.changeqImage}\r\n                                onSuccess={this.changeqImage}\r\n                            >\r\n                                <Button>\r\n                                    <Icon type=\"upload\" /> Upload\r\n                                </Button>\r\n                            </Upload>\r\n                        </Form.Item>\r\n\r\n                        <Form.Item>\r\n                            <Button type=\"primary\" htmlType=\"submit\" block>\r\n                                {this.props.admin.Trainermode}\r\n                            </Button>\r\n                        </Form.Item>\r\n                    </Form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    admin : state.admin\r\n});\r\n\r\nconst NewTrainerForm = Form.create({ name: 'register' })(NewTrainer);\r\n\r\nexport default connect(mapStateToProps,{\r\n    ChangeTrainerConfirmDirty,\r\n    ChangeTrainerModalState,\r\n    ChangeTrainerTableData\r\n})(NewTrainerForm);\r\n\r\n","import React, { Component } from 'react';\r\nimport { Table, Input, Button, Icon, Typography, Divider, Modal, Popconfirm } from 'antd';\r\nimport Highlighter from 'react-highlight-words';\r\nimport { connect } from 'react-redux';\r\nimport { \r\n    ChangeTrainerSearchText,\r\n    ChangeTrainerTableData,\r\n    ChangeTrainerModalState\r\n} from '../../../actions/adminAction';\r\nimport './alltrainer.css'\r\nimport Alert from '../../../components/common/alert';\r\nimport {SecurePost} from '../../../services/axiosCall';\r\nimport apis from '../../../services/Apis';\r\nimport NewTrainerForm from '../newTrainer/newtrainer';\r\n\r\n\r\nclass AllTrainer extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state={\r\n      TrainertableLoading : false\r\n    }\r\n  }\r\n\r\n  openModal = (id,mode)=>{\r\n    this.props.ChangeTrainerModalState(true,id,mode);\r\n  }\r\n\r\n  closeModal = ()=>{\r\n    this.props.ChangeTrainerModalState(false,null,'Register');\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.props.ChangeTrainerTableData();\r\n  }\r\n\r\n  deleteTrainer = (id)=>{\r\n    SecurePost({\r\n      url : `${apis.DELETE_TRAINER}`,\r\n      data : {\r\n          _id : id\r\n      }\r\n    }).then((response)=>{\r\n      if(response.data.success){\r\n        Alert('success','Success',response.data.message);\r\n        this.props.ChangeTrainerTableData();\r\n      }\r\n      else{\r\n        return Alert('warning','Warning!',response.data.message);\r\n      }\r\n    }).catch((error)=>{\r\n      return Alert('error','Error!','Server Error');\r\n    })\r\n  }\r\n\r\n    getColumnSearchProps = dataIndex => ({\r\n        filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => (\r\n          <div style={{ padding: 8 }}>\r\n            <Input\r\n              ref={node => {\r\n                this.searchInput = node;\r\n              }}\r\n              placeholder={`Search ${dataIndex}`}\r\n              value={selectedKeys[0]}\r\n              onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\r\n              onPressEnter={() => this.handleSearch(selectedKeys, confirm)}\r\n              style={{ width: 188, marginBottom: 8, display: 'block' }}\r\n            />\r\n            <Button\r\n              type=\"primary\"\r\n              onClick={() => this.handleSearch(selectedKeys, confirm)}\r\n              icon=\"search\"\r\n              size=\"small\"\r\n              style={{ width: 90, marginRight: 8 }}\r\n            >\r\n              Search\r\n            </Button>\r\n            <Button onClick={() => this.handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>\r\n              Reset\r\n            </Button>\r\n          </div>\r\n        ),\r\n        filterIcon: filtered => (\r\n          <Icon type=\"search\" style={{ color: filtered ? '#1890ff' : undefined }} />\r\n        ),\r\n        onFilter: (value, record) =>\r\n          record[dataIndex]\r\n            .toString()\r\n            .toLowerCase()\r\n            .includes(value.toLowerCase()),\r\n        onFilterDropdownVisibleChange: visible => {\r\n          if (visible) {\r\n            setTimeout(() => this.searchInput.select());\r\n          }\r\n        },\r\n        render: text => (\r\n          <Highlighter\r\n            highlightStyle={{ backgroundColor: '#ffc069', padding: 0 }}\r\n            searchWords={[this.props.admin.TrainersearchText]}\r\n            autoEscape\r\n            textToHighlight={text.toString()}\r\n          />\r\n        ),\r\n      });\r\n    \r\n      handleSearch = (selectedKeys, confirm) => {\r\n        confirm();\r\n        this.props.ChangeTrainerSearchText(selectedKeys[0])\r\n      };\r\n    \r\n      handleReset = clearFilters => {\r\n        clearFilters();\r\n        this.props.ChangeTrainerSearchText('')\r\n      };\r\n\r\n    render() {\r\n      const { Title } = Typography;\r\n      const columns = [\r\n        {\r\n          title: 'Name',\r\n          dataIndex: 'name',\r\n          key: 'name',\r\n          width: '25%',\r\n          ...this.getColumnSearchProps('name'),\r\n        },\r\n        {\r\n          title: 'Email Id',\r\n          dataIndex: 'emailid',\r\n          key: 'emailid',\r\n          width: '25%',\r\n          ...this.getColumnSearchProps('emailid'),\r\n        },\r\n        {\r\n          title: 'Contact Number',\r\n          dataIndex: 'contact',\r\n          key: 'contact',\r\n          ...this.getColumnSearchProps('contact'),\r\n        },\r\n        {\r\n          title: 'Action',\r\n          key: '_id',\r\n          dataIndex: '_id',\r\n          render: (key) => (\r\n            <span>\r\n              <Button type=\"primary\" shape=\"circle\" icon=\"edit\" onClick={()=>this.openModal(key,'Save Changes')}/>\r\n                <Divider type=\"vertical\" />\r\n                <Popconfirm\r\n                  title=\"Are you sure？\"\r\n                  cancelText=\"No\"\r\n                  okText=\"Yes\"\r\n                  onConfirm={()=>{this.deleteTrainer(key)}}\r\n                  icon={<Icon type=\"delete\" style={{ color: 'red' }} />}\r\n                >\r\n                  <Button type=\"danger\" shape=\"circle\" icon=\"delete\" />\r\n                </Popconfirm>\r\n              \r\n            </span>\r\n          ),\r\n        },\r\n      ];\r\n        return (\r\n            <div className=\"admin-table-container\">\r\n              <Button type=\"primary\" icon=\"user-add\" style={{marginBottom:'10px'}} onClick={()=>this.openModal(null,'Register')}>\r\n                Add New\r\n              </Button> \r\n              <div className=\"register-trainer-form-header\">\r\n                <Title level={4} style={{color:'#fff',textAlign:'center'}}>List of Trainer</Title>\r\n              </div>\r\n              <Table \r\n                bordered={true} \r\n                columns={columns} \r\n                dataSource={this.props.admin.trainerTableData} \r\n                size=\"medium\" \r\n                pagination={{ pageSize: 5 }}\r\n                loading={this.props.admin.trainerTableLoadingStatus}\r\n                rowKey=\"_id\" \r\n              />;\r\n              <Modal\r\n                visible={this.props.admin.TrainermodalOpened}\r\n                title={false}\r\n                onOk={this.handleOk}\r\n                onCancel={this.closeModal}\r\n                style={{top :'20px',padding:'0px',backgroundColor:'rgb(155,175,190)'}}\r\n                width=\"40%\"\r\n                destroyOnClose={true}\r\n                footer={[\r\n                  \r\n                ]}\r\n              >\r\n                <NewTrainerForm />\r\n              </Modal>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    admin : state.admin\r\n});\r\n\r\nexport default connect(mapStateToProps,{\r\n    ChangeTrainerSearchText,\r\n    ChangeTrainerTableData,\r\n    ChangeTrainerModalState\r\n})(AllTrainer);","import React, { Component } from 'react'\r\nimport './newtopic.css';\r\nimport {\r\n    Form,\r\n    Input,\r\n    Button\r\n} from 'antd';\r\nimport { connect } from 'react-redux';\r\nimport {SecurePost} from '../../../services/axiosCall';\r\nimport apis from '../../../services/Apis';\r\nimport Alert from '../../../components/common/alert';\r\nimport { \r\n    ChangeSubjectConfirmDirty,\r\n    ChangeSubjectTableData,\r\n    ChangeSubjectModalState\r\n} from '../../../actions/adminAction';\r\n\r\nclass NewTopics extends Component {\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        this.props.form.validateFieldsAndScroll((err, values) => {\r\n            if (!err) {\r\n                // console.log('Received values of form: ', values);\r\n                SecurePost({\r\n                    url: `${apis.CREATE_SUBJECT}`,\r\n                    data: {\r\n                        _id: this.props.admin.SubjectId,\r\n                        topic: values.topic\r\n                    }\r\n                }).then((response) => {\r\n                    if (response.data.success) {\r\n                        this.props.ChangeSubjectModalState(false, null, 'New Topic');\r\n                        Alert('success', 'Success', response.data.message);\r\n                        this.props.ChangeSubjectTableData();\r\n                    }\r\n                    else {\r\n                        this.props.ChangeSubjectModalState(false, null, 'New Topic');\r\n                        return Alert('warning', 'Warning!', response.data.message);\r\n                    }\r\n                }).catch((error) => {\r\n                    this.props.ChangeSubjectModalState(false, null, 'New Topic');\r\n                    return Alert('error', 'Error!', 'Server Error');\r\n                });\r\n            }\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { getFieldDecorator } = this.props.form;\r\n        return (\r\n            <div className=\"register-subject-form\" >\r\n                <div className=\"register-trainer-form-body\">\r\n                    <Form  onSubmit={this.handleSubmit}>\r\n                        <Form.Item label=\"Topic Name\" hasFeedback className=\"input-admin-trainer\">\r\n                            {getFieldDecorator('topic', {\r\n                                initialValue : this.props.admin.subjectDetails.topic,\r\n                                rules: [{ required: true, message: 'Please input topic name!', whitespace: true }],\r\n                            })(<Input />)}\r\n                        </Form.Item>\r\n                        <Form.Item>\r\n                            <Button type=\"primary\" htmlType=\"submit\" block>\r\n                                {this.props.admin.Subjectmode}\r\n                            </Button>\r\n                        </Form.Item>\r\n                    </Form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    admin : state.admin\r\n});\r\n\r\nconst NewSubjectForm = Form.create({ name: 'register' })(NewTopics);\r\n\r\nexport default connect(mapStateToProps,{\r\n    ChangeSubjectConfirmDirty,\r\n    ChangeSubjectTableData,\r\n    ChangeSubjectModalState\r\n})(NewSubjectForm);\r\n\r\n","import React, { Component } from 'react';\r\nimport { Table, Input, Button, Icon, Typography,  Modal } from 'antd';\r\nimport Highlighter from 'react-highlight-words';\r\nimport { connect } from 'react-redux';\r\nimport { \r\n    ChangeSubjectSearchText,\r\n    ChangeSubjectTableData,\r\n    ChangeSubjectModalState\r\n} from '../../../actions/adminAction';\r\nimport './alltopics.css'\r\nimport NewSubjectForm from '../newTopics/newtopics';\r\n\r\n\r\n\r\nclass AllTopics extends Component {\r\n\r\n  openModal = (id,mode)=>{\r\n    this.props.ChangeSubjectModalState(true,id,mode);\r\n  }\r\n  \r\n  closeModal = ()=>{\r\n    this.props.ChangeSubjectModalState(false,null,'New Topic');\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.props.ChangeSubjectTableData();\r\n  }\r\n\r\n    getColumnSearchProps = dataIndex => ({\r\n        filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => (\r\n          <div style={{ padding: 8 }}>\r\n            <Input\r\n              ref={node => {\r\n                this.searchInput = node;\r\n              }}\r\n              placeholder={`Search ${dataIndex}`}\r\n              value={selectedKeys[0]}\r\n              onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\r\n              onPressEnter={() => this.handleSearch(selectedKeys, confirm)}\r\n              style={{ width: 188, marginBottom: 8, display: 'block' }}\r\n            />\r\n            <Button\r\n              type=\"primary\"\r\n              onClick={() => this.handleSearch(selectedKeys, confirm)}\r\n              icon=\"search\"\r\n              size=\"small\"\r\n              style={{ width: 90, marginRight: 8 }}\r\n            >\r\n              Search\r\n            </Button>\r\n            <Button onClick={() => this.handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>\r\n              Reset\r\n            </Button>\r\n          </div>\r\n        ),\r\n        filterIcon: filtered => (\r\n          <Icon type=\"search\" style={{ color: filtered ? '#1890ff' : undefined }} />\r\n        ),\r\n        onFilter: (value, record) =>\r\n          record[dataIndex]\r\n            .toString()\r\n            .toLowerCase()\r\n            .includes(value.toLowerCase()),\r\n        onFilterDropdownVisibleChange: visible => {\r\n          if (visible) {\r\n            setTimeout(() => this.searchInput.select());\r\n          }\r\n        },\r\n        render: text => (\r\n          <Highlighter\r\n            highlightStyle={{ backgroundColor: '#ffc069', padding: 0 }}\r\n            searchWords={[this.props.admin.SubjectsearchText]}\r\n            autoEscape\r\n            textToHighlight={text.toString()}\r\n          />\r\n        ),\r\n      });\r\n    \r\n      handleSearch = (selectedKeys, confirm) => {\r\n        confirm();\r\n        this.props.ChangeSubjectSearchText(selectedKeys[0])\r\n      };\r\n    \r\n      handleReset = clearFilters => {\r\n        clearFilters();\r\n        this.props.ChangeSubjectSearchText('')\r\n      };\r\n\r\n    render() {\r\n      const { Title } = Typography;\r\n      const columns = [\r\n        {\r\n          title: 'Name',\r\n          dataIndex: 'topic',\r\n          key: 'topic',\r\n          width: '70%',\r\n          ...this.getColumnSearchProps('topic'),\r\n        },\r\n        {\r\n          title: 'Action',\r\n          key: '_id',\r\n          dataIndex: '_id',\r\n          render: (key) => (\r\n            <span>\r\n              <Button type=\"primary\" shape=\"circle\" icon=\"edit\" onClick={()=>this.openModal(key,'Save Changes')}/>\r\n            </span>\r\n          ),\r\n        },\r\n      ];\r\n        return (\r\n            <div className=\"admin-table-container\">\r\n              <Button type=\"primary\" icon=\"file-text\" style={{marginBottom:'10px'}} onClick={()=>this.openModal(null,'New Topic')}>\r\n                Add New\r\n              </Button> \r\n              <div className=\"register-trainer-form-header\">\r\n                <Title level={4} style={{color:'#fff',textAlign:'center'}}>List of Topics</Title>\r\n              </div>\r\n              <Table \r\n                bordered={true} \r\n                columns={columns} \r\n                dataSource={this.props.admin.subjectTableData} \r\n                size=\"medium\" \r\n                pagination={{ pageSize: 5 }}\r\n                loading={this.props.admin.SubjectTableLoading}\r\n                rowKey=\"_id\"\r\n              />;\r\n              <Modal\r\n                visible={this.props.admin.SubjectmodalOpened}\r\n                title={false}\r\n                onOk={this.handleOk}\r\n                onCancel={this.closeModal}\r\n                style={{top :'20px',padding:'0px',backgroundColor:'rgb(155,175,190)'}}\r\n                destroyOnClose={true}\r\n                footer={[\r\n                  \r\n                ]}\r\n              >\r\n                <NewSubjectForm />\r\n              </Modal>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    admin : state.admin\r\n});\r\n\r\nexport default connect(mapStateToProps,{\r\n    ChangeSubjectSearchText,\r\n    ChangeSubjectTableData,\r\n    ChangeSubjectModalState\r\n})(AllTopics);","import apis from '../services/Apis';\r\nimport Alert from '../components/common/alert';\r\nimport { SecurePost } from '../services/axiosCall';\r\n\r\nexport const ChangeQuestionModalState = (d1)=> dispatch =>{\r\n        dispatch({\r\n            type : 'CHANGE_QUESTION_MODAL_STATE',\r\n            payload1 : d1,\r\n        })\r\n    }\r\n    \r\n\r\nexport const ChangeQuestionConfirmDirty = (d)=> dispatch =>{\r\n    dispatch({\r\n       type : 'CHANGE_QUESTION_FORM_CONFIRMDIRTY',\r\n       payload : d\r\n    })\r\n}\r\n\r\n\r\nexport const ChangeQuestionSearchText = (d)=> dispatch =>{\r\n    dispatch({\r\n       type : 'CHANGE_QUESTION_SEARCH_TEXT',\r\n       payload : d\r\n    })\r\n}\r\n\r\nexport const ChangeQuestionTableData = (d) => dispatch => {\r\n    dispatch({\r\n        type: 'CHANGE_QUESTION_TABLE_LOADING_STATUS',\r\n        payload1: true,\r\n        payload2: []\r\n    });\r\n    SecurePost({\r\n        url: `${apis.GET_ALL_QUESTIONS}`,\r\n        data: {\r\n            subject: d\r\n        }\r\n    }).then((response) => {\r\n        // console.log(response);\r\n        if (response.data.success) {\r\n            dispatch({\r\n                type: 'CHANGE_QUESTION_TABLE_LOADING_STATUS',\r\n                payload1: false,\r\n                payload2: response.data.data\r\n            });\r\n        }\r\n        else {\r\n            Alert('error', 'Error!', response.data.message);\r\n            dispatch({\r\n                type: 'CHANGE_QUESTION_TABLE_LOADING_STATUS',\r\n                payload1: false,\r\n                payload2: []\r\n            });\r\n        }\r\n    }).catch((error) => {\r\n        Alert('error', 'Error!', 'Server Error');\r\n        dispatch({\r\n            type: 'CHANGE_QUESTION_TABLE_LOADING_STATUS',\r\n            payload1: false,\r\n            payload2: []\r\n        });\r\n    });\r\n};\r\n\r\nexport const ChangeSelectedSubjects = (d) => dispatch => {\r\n    dispatch({\r\n        type: 'CHANGE_SELECTED_SUBJECT',\r\n        payload: d\r\n    });\r\n};\r\n\r\nexport const ChangeQuestionFormData = (d) => dispatch => {\r\n    dispatch({\r\n        type: 'CHANGE_QUESTION_FORM_DATA',\r\n        payload: d\r\n    });\r\n};\r\n\r\nexport const AddFifthOptionInQuestion = () => dispatch => {\r\n    dispatch({\r\n        type: 'ADD_FIFTH_OPTION'\r\n    });\r\n};\r\n\r\nexport const ChangeTestDetailsModalState = (d1, d2) => dispatch => {\r\n    dispatch({\r\n        type: 'CHANGE_TEST_DETAILS_MODAL_STATE',\r\n        payload1: d1,\r\n        payload2: d2\r\n    });\r\n};\r\n\r\nexport const ChangeTestSearchText = (d) => dispatch => {\r\n    dispatch({\r\n        type: 'CHANGE_TEST_SEARCH_TEXT',\r\n        payload: d\r\n    });\r\n};\r\n\r\nexport const ChangeTestTableData = () => dispatch => {\r\n    dispatch({\r\n        type: 'CHANGE_TEST_TABLE_LOADING_STATUS',\r\n        payload1: true,\r\n        payload2: []\r\n    });\r\n\r\n    SecurePost({\r\n        url: `${apis.GET_ALL_TESTS}`,\r\n    }).then((response) => {\r\n        // console.log(response.data);\r\n        if (response.data.success) {\r\n            dispatch({\r\n                type: 'CHANGE_TEST_TABLE_LOADING_STATUS',\r\n                payload1: false,\r\n                payload2: response.data.data\r\n            });\r\n        }\r\n        else {\r\n            Alert('error', 'Error!', response.data.message);\r\n            dispatch({\r\n                type: 'CHANGE_TEST_TABLE_LOADING_STATUS',\r\n                payload1: false,\r\n                payload2: []\r\n            });\r\n        }\r\n    }).catch((error) => {\r\n        // console.log(error);\r\n        Alert('error', 'Error!', 'Server Error');\r\n        dispatch({\r\n            type: 'CHANGE_TEST_TABLE_LOADING_STATUS',\r\n            payload1: false,\r\n            payload2: []\r\n        });\r\n    });\r\n};\r\n\r\nexport const updateQuestiosnActiveTest = (d) => {\r\n    return {\r\n        type: 'CHANGE_CURRENT_ACTIVE_TEST_QUESTION',\r\n        payload: d\r\n    };\r\n};","import React, { Component } from 'react'\r\nimport './newquestion.css';\r\nimport {\r\n    Form,\r\n    Input,\r\n    Button,\r\n    Select,\r\n    Row,\r\n    Col,\r\n    Checkbox,\r\n    Modal,\r\n    Upload,\r\n    Icon,\r\n    InputNumber \r\n} from 'antd';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { \r\n    ChangeQuestionConfirmDirty,\r\n    ChangeQuestionTableData,\r\n    ChangeQuestionModalState\r\n} from '../../../actions/trainerAction';\r\n\r\nimport { SecurePost } from '../../../services/axiosCall';\r\nimport apis from '../../../services/Apis';\r\nimport Alert from '../../../components/common/alert';\r\nimport auth from '../../../services/AuthServices';\r\n\r\nclass NewQuestion extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            questionDetails:{\r\n                questionimage:null,\r\n                options :[\r\n                    {\r\n                        image :null,\r\n                        body : null,\r\n                        isAnswer :false\r\n                    },\r\n                    {\r\n                        image :null,\r\n                        body : null,\r\n                        isAnswer :false\r\n                    },\r\n                    {\r\n                        image :null,\r\n                        body : null,\r\n                        isAnswer :false\r\n                    },\r\n                    {\r\n                        image :null,\r\n                        body : null,\r\n                        isAnswer :false\r\n                    }\r\n                ] ,  \r\n            },\r\n            adding:false,\r\n            submitDisabled:false,\r\n            fifthoptioAddButtonVisible:true\r\n        }\r\n        \r\n    }\r\n\r\n    addfifthOption = (e)=>{\r\n        this.setState((previousState,previousProps)=>{\r\n            return({\r\n                fifthoptioAddButtonVisible:false,\r\n                questionDetails:{\r\n                    ...previousState.questionDetails,\r\n                    options:[\r\n                        ...previousState.questionDetails.options,\r\n                        {\r\n                            image :null,\r\n                            body : null,\r\n                            isAnswer :false\r\n                        }\r\n                    ]\r\n                }\r\n            })\r\n        })\r\n    }\r\n\r\n    Customalert = ()=>{\r\n        Modal.confirm({\r\n            title: 'Confirm',\r\n            content: 'empty option can not be set as answer',\r\n            okText: 'I understand',\r\n            cancelText: null,\r\n        });\r\n    }\r\n    \r\n\r\n\r\n\r\n    OptionTextChange =(e,i)=>{\r\n        var newOptions = [...this.state.questionDetails.options]\r\n        newOptions[i]={\r\n            ...this.state.questionDetails.options[i],\r\n            body : e.target.value\r\n        }\r\n        if((newOptions[i].image==='undefined' || newOptions[i].image===undefined || newOptions[i].image===null || newOptions[i].image==='null') && \r\n            (newOptions[i].body==='undefined' || newOptions[i].body===undefined || newOptions[i].body==='null' || newOptions[i].body==='' || newOptions[i].body===null)){\r\n                newOptions[i]={\r\n                    ...this.state.questionDetails.options[i],\r\n                    isAnswer : false\r\n                }\r\n                this.setState((ps,pp)=>{\r\n                    return({\r\n                        questionDetails:{\r\n                            ...ps.questionDetails,\r\n                            options:newOptions\r\n                        }\r\n                    })\r\n                })\r\n        }\r\n        this.setState((ps,pp)=>{\r\n            return({\r\n                questionDetails:{\r\n                    ...ps.questionDetails,\r\n                    options:newOptions\r\n                }\r\n            })\r\n        })     \r\n    }\r\n\r\n    AnswerOptionSwitch = (e,i)=>{\r\n        if((this.state.questionDetails.options[i].body!=='' && this.state.questionDetails.options[i].body!==null)\r\n            || (this.state.questionDetails.options[i].image!==null && this.state.questionDetails.options[i].image!=='undefined' && this.state.questionDetails.options[i].image!==undefined)\r\n        ){\r\n            var newOptions = [...this.state.questionDetails.options]\r\n            newOptions[i]={\r\n                ...this.state.questionDetails.options[i],\r\n                isAnswer : e.target.checked\r\n            }\r\n            this.setState((ps,pp)=>{\r\n                return({\r\n                    questionDetails:{\r\n                        ...ps.questionDetails,\r\n                        options:newOptions\r\n                    }\r\n                })\r\n            })\r\n            \r\n        }\r\n        else{   \r\n            this.Customalert()\r\n            return;\r\n        }\r\n        \r\n    }\r\n\r\n    OptionImageonChange = (f,i)=>{\r\n        var newOptions = [...this.state.questionDetails.options]\r\n        if(!f){\r\n            delete newOptions[i].image\r\n            newOptions[i].image=null\r\n        }\r\n        else{\r\n            newOptions[i]={\r\n                ...this.state.questionDetails.options[i],\r\n                image :`${apis.BASE}/${f.link}`\r\n            }\r\n        }\r\n        this.setState({\r\n            submitDisabled:false\r\n        })\r\n        if((newOptions[i].image==='undefined' || newOptions[i].image===undefined || newOptions[i].image===null || newOptions[i].image==='null') && \r\n            (newOptions[i].body==='undefined' || newOptions[i].body===undefined || newOptions[i].body==='null' || newOptions[i].body==='' || newOptions[i].body===null)){\r\n                newOptions[i]={\r\n                    ...this.state.questionDetails.options[i],\r\n                    isAnswer : false\r\n                }\r\n        }\r\n        this.setState((ps,pp)=>{\r\n            return({\r\n                questionDetails:{\r\n                    ...ps.questionDetails,\r\n                    options:newOptions\r\n                }\r\n            })\r\n        })\r\n    }\r\n\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        this.props.form.validateFieldsAndScroll((err, values) => {\r\n            // console.log(values);\r\n            if (!err) {\r\n                var f=1;\r\n                var ans=0;\r\n                var opts=[]\r\n                // console.log('Received values of form: ', values);\r\n                this.state.questionDetails.options.forEach((element,i) => {\r\n                    opts.push({\r\n                        optbody:element.body,\r\n                        optimg:element.image,\r\n                        isAnswer:element.isAnswer\r\n                    });\r\n                    if((element.image==='undefined' || element.image===undefined || element.image===null || element.image==='null')&&(element.body==='' ||element.body===null || element.body==='null' || element.body==='undefined' || element.body===undefined )){\r\n                        f=0;\r\n                    }\r\n                    if(element.isAnswer){\r\n                        ans=ans+1\r\n                    }\r\n                })\r\n                if(f){\r\n                    if(!ans){\r\n                        Alert('warning','Warning!','There must be atleast one right answer');\r\n                    }\r\n                    else{\r\n                        this.setState({\r\n                            adding:true\r\n                        });\r\n                        SecurePost({\r\n                            url:apis.CREATE_QUESTIONS,\r\n                            data:{\r\n                                body:values.questionbody,\r\n                                options:opts,\r\n                                quesimg:this.state.questionDetails.questionimage,\r\n                                subject:values.subject,\r\n                                explanation:values.explanation,\r\n                                weightage:values.waitage,\r\n                            }\r\n                        }).then((response)=>{\r\n                            // console.log(response);\r\n                            this.setState({\r\n                                adding:false\r\n                            });\r\n                            if(response.data.success){\r\n                                this.props.ChangeQuestionModalState(false);\r\n                                Alert('success','Success',response.data.message);\r\n                                this.props.ChangeQuestionTableData(this.props.trainer.selectedSubjects);\r\n                            }\r\n                            else{\r\n                                this.props.ChangeQuestionModalState(false);\r\n                                this.props.form.resetFields();\r\n                                return Alert('warning','Warning!',response.data.message);\r\n                            }\r\n\r\n                        }).catch((error)=>{\r\n                            // console.log(error);\r\n                            this.props.form.resetFields();\r\n                            this.setState({\r\n                                adding:false,\r\n                                questionDetails:{\r\n                                    questionimage:null,\r\n                                    options :[\r\n                                        {\r\n                                            image :null,\r\n                                            body : null,\r\n                                            isAnswer :false\r\n                                        },\r\n                                        {\r\n                                            image :null,\r\n                                            body : null,\r\n                                            isAnswer :false\r\n                                        },\r\n                                        {\r\n                                            image :null,\r\n                                            body : null,\r\n                                            isAnswer :false\r\n                                        },\r\n                                        {\r\n                                            image :null,\r\n                                            body : null,\r\n                                            isAnswer :false\r\n                                        }\r\n                                    ] ,  \r\n                                }\r\n                            });\r\n                            this.props.ChangeQuestionModalState(false);\r\n                            return Alert('error','Error!','Server Error');\r\n                        })\r\n                        \r\n                    }\r\n                }\r\n                else{\r\n                    Alert('warning','Warning!','Please fill all the options');\r\n                }\r\n            }\r\n        });\r\n    };\r\n\r\n    changeqImage = (f)=>{\r\n        this.setState((ps,pp)=>{\r\n            return({\r\n                questionDetails:{\r\n                    ...ps.questionDetails,\r\n                    questionimage:(f.link ?`${apis.BASE}/${f.link}`:null)\r\n                },\r\n                submitDisabled:false\r\n            })\r\n        })\r\n    }\r\n\r\n    upl=()=>{\r\n        this.setState({\r\n            submitDisabled:true\r\n        })\r\n    }\r\n\r\n    render() {\r\n        // console.log(this.state)\r\n        const { getFieldDecorator } = this.props.form;\r\n        const { Option } = Select;\r\n        const { TextArea } = Input;\r\n        var QuestionImageprops = {\r\n            name: 'file',\r\n            action: `${apis.BASE}${apis.FILE_UPLOAD}?Token=${auth.retriveToken()}`,\r\n            listType: 'picture',\r\n        };\r\n        \r\n        return (\r\n            <div className=\"register-subject-form\" >\r\n                <div className=\"register-trainer-form-body\">\r\n                    <Form  onSubmit={this.handleSubmit}>\r\n                        <div>\r\n                            <Row>\r\n                                <Col span={8}>\r\n                                    <Form.Item label=\"Subject\" hasFeedback>\r\n                                        {getFieldDecorator('subject', {\r\n                                            rules: [{ required: true, message: 'Please select any subject!' }],\r\n                                        })(\r\n                                            <Select\r\n                                                showSearch\r\n                                                style={{ width:'100%'}}\r\n                                                placeholder=\"Select a subject\"\r\n                                                optionFilterProp=\"s\"\r\n                                            >\r\n                                                {\r\n                                                    this.props.admin.subjectTableData.map((d,i)=><Option key={d._id} s={d.topic} value={d._id}>{d.topic}</Option>)\r\n                                                }\r\n                                            </Select>\r\n                                        )}\r\n                                    </Form.Item>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row>\r\n                                <Col span={18}>\r\n                                    <Form.Item label=\"Question\" hasFeedback>\r\n                                        {getFieldDecorator('questionbody', {\r\n                                            rules: [{ required: true, message: 'Please type question!' }],\r\n                                        })(\r\n                                            <TextArea rows={5} />\r\n                                        )}\r\n                                    </Form.Item>\r\n                                </Col>\r\n                                <Col span={6} style={{padding : '0px 20px'}}>\r\n                                    <Form.Item label=\"Question Image\">\r\n                                        <Upload {...QuestionImageprops} beforeUpload={this.upl} onRemove={this.changeqImage} onSuccess={this.changeqImage}>\r\n                                            <Button>\r\n                                                <Icon type=\"upload\" /> Upload\r\n                                            </Button>\r\n                                        </Upload>\r\n                                    </Form.Item>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row>\r\n                                <Col span={18}>\r\n                                    <Form.Item label=\"Explanation\" hasFeedback>\r\n                                        {getFieldDecorator('explanation', {\r\n                                            rules: [{ required: true, message: 'Please type Explanation for the answers!' }],\r\n                                        })(\r\n                                            <TextArea onChange={this.ExplanationChange} rows={3} />\r\n                                        )}\r\n                                    </Form.Item>\r\n                                </Col>\r\n                                <Col offset={2} span={4}>\r\n                                    <Form.Item label=\"Weightage\" hasFeedback>\r\n                                        {getFieldDecorator('waitage', {\r\n                                            rules: [{ required: true, message: 'Please enter the marks' }],\r\n                                        })(\r\n                                            <InputNumber min={1} max={2}  />\r\n                                        )}\r\n                                    </Form.Item>\r\n                                </Col>\r\n                            </Row>\r\n                            <div style={{paddingTop:'20px'}}>\r\n                                {\r\n                                    this.state.questionDetails.options.map((option,i)=>{\r\n                                        return(\r\n                                            <Row key={i} className=\"\">\r\n                                                <Col offset={1} span={13}>\r\n                                                    <Form.Item label={`option${i+1}`}>\r\n                                                        <TextArea value={this.state.questionDetails.options[i].body} onChange={ (e)=>this.OptionTextChange(e,i)} rows={3} />\r\n                                                    </Form.Item>\r\n                                                </Col>\r\n                                                <Col offset={2} span={6} style={{textAlign:'center'}}>\r\n                                                    <Form.Item label={`Option${i+1} Image`}>\r\n                                                        <Upload {...QuestionImageprops} beforeUpload={this.upl} onRemove={(f)=>this.OptionImageonChange(null,i)} onSuccess={(f)=>this.OptionImageonChange(f,i)}>\r\n                                                            <Button>\r\n                                                                <Icon type=\"upload\" /> Upload\r\n                                                            </Button>\r\n                                                        </Upload>\r\n                                                    </Form.Item>\r\n                                                </Col>\r\n                                                <Col span={2} style={{padding : '55px 10px'}}>\r\n                                                    <Form.Item>\r\n                                                        <Checkbox checked={this.state.questionDetails.options[i].isAnswer} onChange={(e)=>this.AnswerOptionSwitch(e,i)} ></Checkbox>\r\n                                                    </Form.Item>\r\n                                                </Col>\r\n                                            </Row>                                                \r\n                                        )\r\n                                    })\r\n                                }\r\n                            </div>\r\n                            <Row>\r\n                                <Col span={12}>\r\n                                    { this.state.fifthoptioAddButtonVisible ? <Button type=\"primary\" onClick={(e)=>this.addfifthOption(e)}>Add 5th option</Button> : null}\r\n                                </Col>\r\n                            </Row>\r\n                            <Row>\r\n                                <Col offset={20}  span={4}>\r\n                                    <Form.Item>\r\n                                        <Button type=\"primary\" htmlType=\"submit\" disabled={this.state.submitDisabled} loading={this.state.adding} block>\r\n                                            Create Question\r\n                                        </Button>\r\n                                    </Form.Item>\r\n                                </Col>\r\n                            </Row>\r\n                            \r\n                        </div>\r\n                    </Form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    trainer : state.trainer,\r\n    admin : state.admin\r\n});\r\n\r\n\r\n\r\nconst NewQuestionForm = Form.create({ name: 'newQuestion' })(NewQuestion);\r\n\r\nexport default connect(mapStateToProps,{\r\n    ChangeQuestionConfirmDirty,\r\n    ChangeQuestionModalState,\r\n    ChangeQuestionTableData\r\n})(NewQuestionForm);\r\n\r\n","import React from 'react';\r\nimport ReactMarkdown from 'react-markdown';\r\nimport gfm from 'remark-gfm';\r\nimport {Prism as SyntaxHighlighter} from 'react-syntax-highlighter';\r\nimport {InlineMath, BlockMath} from 'react-katex';\r\nimport math from 'remark-math';\r\nimport 'katex/dist/katex.min.css';\r\n\r\nconst renderers = {\r\n  inlineMath: ({value}) => <InlineMath math={value} />,\r\n  math: ({value}) => <BlockMath math={value} />,\r\n  code: ({language, value}) => {\r\n    return <SyntaxHighlighter language={language} children={value} />\r\n  }\r\n};\r\n\r\nconst Markdown = (props) => {\r\n  return (\r\n    <ReactMarkdown renderers={renderers} plugins={[gfm,math]} {...props} />\r\n  )\r\n};\r\n\r\nexport default Markdown;","import React, { Component } from 'react';\r\nimport { Skeleton,Row, Col, Icon, Tabs,Descriptions,Button    } from 'antd';\r\nimport './questiondetails.css';\r\nimport apis from '../../../services/Apis';\r\nimport { SecureGet } from '../../../services/axiosCall';\r\nimport moment from 'moment';\r\nimport Markdown from '../../../utils/Markdown';\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nexport default class QuestionDetails extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            loading : true,\r\n            details:null\r\n        }\r\n    }\r\n\r\n    tabChange = (key)=>{\r\n        // console.log(key)\r\n    }\r\n\r\n    componentDidMount(){\r\n        var ID = this.props.id;\r\n\r\n        SecureGet({\r\n            url: `${apis.FETCH_SINGLE_QUESTION}/${ID}`,\r\n        }).then((response) => {\r\n            // console.log(response.data.data[0]);\r\n            this.setState({\r\n                details: response.data.data[0],\r\n                loading: false\r\n            })\r\n        }).catch((error) => {\r\n            // console.log(error);\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Skeleton loading={this.state.loading} active avatar>\r\n                    <Tabs defaultActiveKey=\"1\" onChange={(e) => this.tabChange(e)}>\r\n                        <TabPane tab={<span><Icon type=\"home\" />Basic Info</span>} key=\"1\">\r\n                            <Tab1 id={this.props.id} details={this.state.details} />\r\n                        </TabPane>\r\n                        <TabPane tab={<span><Icon type=\"question-circle\" />Question</span>} key=\"2\">\r\n                            <Tab2 details={this.state.details} />\r\n                        </TabPane>\r\n                    </Tabs>\r\n                </Skeleton>\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\n\r\nfunction Tab1(props) {\r\n    return (\r\n        <div>\r\n            <Descriptions bordered title=\"\" border size=\"small\" column={{ xxl: 1, xl: 1, lg: 1, md: 1, sm: 1, xs: 1 }}>\r\n                <Descriptions.Item label=\"Question Id\">{props.id}</Descriptions.Item>\r\n                <Descriptions.Item label=\"Subject\">{props.details.subject.topic}</Descriptions.Item>\r\n                <Descriptions.Item label=\"Difficulty\">{props.details.difficulty}</Descriptions.Item>\r\n                <Descriptions.Item label=\"No of Right Answers\">{props.details.anscount}</Descriptions.Item>\r\n                <Descriptions.Item label=\"Weightage\">{props.details.weightage}</Descriptions.Item>\r\n                <Descriptions.Item label=\"Created By\">{props.details.createdBy.name}</Descriptions.Item>\r\n                <Descriptions.Item label=\"Created on\">{moment(props.details.createdAt).format(\"DD/ MM/YYYY , hh:mm:ss\")}</Descriptions.Item>\r\n            </Descriptions>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nfunction Tab2(props){\r\n    const optn = ['A', 'B', 'C', 'D', 'E'];\r\n    const Optiondata = props.details;\r\n    // console.log(`details : ${Optiondata}`);\r\n\r\n    return (\r\n        <div className=\"mainQuestionDetailsContaine\">\r\n            <div className=\"questionDetailsBody\">\r\n                <Markdown>\r\n                    {Optiondata.body}\r\n                </Markdown>\r\n            </div>\r\n            \r\n            {Optiondata.quesimg ?\r\n                <div className=\"questionDetailsImageContainer\">\r\n                    <img alt=\"unable to load\" className=\"questionDetailsImage\" src={Optiondata.quesimg} />\r\n                </div>\r\n                : null\r\n            }\r\n            <div>\r\n                {Optiondata.options.map((d, i) => {\r\n                    return (\r\n                        <div key={i}>\r\n                            <Row type=\"flex\" justify=\"center\" className=\"QuestionDetailsOptions\">\r\n                                <Col span={2}>\r\n                                    {\r\n                                        d.isAnswer ? <Button className=\"green\" shape=\"circle\">{optn[i]}</Button> : <Button type=\"primary\" shape=\"circle\">{optn[i]}</Button>\r\n                                    }\r\n                                    \r\n                                </Col>\r\n                                {d.optimg ?\r\n                                    <Col span={6} style={{ padding: '5px' }}>\r\n                                        <img alt=\"unable to load\" className=\"questionDetailsImage\" src={d.optimg} />\r\n                                    </Col>\r\n                                    :\r\n                                    null\r\n                                }\r\n                                {d.optimg ?\r\n                                    <Col span={14}>{d.optbody}</Col>\r\n                                    :\r\n                                    <Col span={20}>{d.optbody}</Col>\r\n                                }\r\n                            </Row>\r\n                           \r\n                        </div>\r\n                    )\r\n                })}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n","import React, { Component } from 'react';\r\nimport { Table, Input, Button, Icon, Typography,Popconfirm,Divider, Modal, Select, Row, Col  } from 'antd';\r\nimport Highlighter from 'react-highlight-words';\r\nimport { connect } from 'react-redux';\r\nimport { \r\n  ChangeQuestionModalState,\r\n  ChangeQuestionTableData,\r\n  ChangeQuestionSearchText,\r\n  ChangeSelectedSubjects\r\n} from '../../../actions/trainerAction';\r\nimport { \r\n  ChangeSubjectTableData\r\n} from '../../../actions/adminAction';\r\nimport './allquestion.css'\r\nimport Alert from '../../../components/common/alert';\r\nimport {SecurePost} from '../../../services/axiosCall';\r\nimport apis from '../../../services/Apis';\r\nimport NewQuestionForm from '../newquestion/newquestion';\r\nimport QuestionDetails from '../questionDetails/questiondetails';\r\n\r\nclass AllQuestions extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state={\r\n      questiondetailsId : null,\r\n      questiondetailsModelVisible:false\r\n    }\r\n  }\r\n  \r\n  OpendetailsModal = (id)=>{\r\n    this.setState((previousState,previousProps)=>{\r\n      return{\r\n        questiondetailsId:id,\r\n        questiondetailsModelVisible:true\r\n      }\r\n    })\r\n  }\r\n  ClosedetailsModal = ()=>{\r\n    this.setState((previousState,previousProps)=>{\r\n      return{\r\n        questiondetailsId:null,\r\n        questiondetailsModelVisible:false\r\n      }\r\n    })\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.props.ChangeSubjectTableData();\r\n    this.props.ChangeQuestionTableData(this.props.trainer.selectedSubjects);\r\n  }\r\n\r\n  openNewModal = (mode)=>{\r\n    this.props.ChangeQuestionModalState(true);\r\n  }\r\n\r\n  closeNewModal = ()=>{\r\n    this.props.ChangeQuestionModalState(false);\r\n  }\r\n\r\n  handleSubjectChange =(s)=>{\r\n    this.props.ChangeSelectedSubjects(s);\r\n    this.props.ChangeQuestionTableData(s);\r\n  }\r\n\r\n  deleteQuestion = (id)=>{\r\n    SecurePost({\r\n      url : `${apis.DELETE_QUESTION}`,\r\n      data : {\r\n          _id : id\r\n      }\r\n    }).then((response)=>{\r\n      if(response.data.success){\r\n        Alert('success','Success',response.data.message);\r\n        this.props.ChangeQuestionTableData(this.props.trainer.selectedSubjects);\r\n      }\r\n      else{\r\n        return Alert('warning','Warning!',response.data.message);\r\n      }\r\n    }).catch((error)=>{\r\n      return Alert('error','Error!','Server Error');\r\n    })\r\n  }\r\n\r\n    getColumnSearchProps = dataIndex => ({\r\n        filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => (\r\n          <div style={{ padding: 8 }}>\r\n            <Input\r\n              ref={node => {\r\n                this.searchInput = node;\r\n              }}\r\n              placeholder={`Search ${dataIndex}`}\r\n              value={selectedKeys[0]}\r\n              onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\r\n              onPressEnter={() => this.handleSearch(selectedKeys, confirm)}\r\n              style={{ width: 188, marginBottom: 8, display: 'block' }}\r\n            />\r\n            <Button\r\n              type=\"primary\"\r\n              onClick={() => this.handleSearch(selectedKeys, confirm)}\r\n              icon=\"search\"\r\n              size=\"small\"\r\n              style={{ width: 90, marginRight: 8 }}\r\n            >\r\n              Search\r\n            </Button>\r\n            <Button onClick={() => this.handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>\r\n              Reset\r\n            </Button>\r\n          </div>\r\n        ),\r\n        filterIcon: filtered => (\r\n          <Icon type=\"search\" style={{ color: filtered ? '#1890ff' : undefined }} />\r\n        ),\r\n        onFilter: (value, record) =>\r\n          record[dataIndex]\r\n            .toString()\r\n            .toLowerCase()\r\n            .includes(value.toLowerCase()),\r\n        onFilterDropdownVisibleChange: visible => {\r\n          if (visible) {\r\n            setTimeout(() => this.searchInput.select());\r\n          }\r\n        },\r\n        render: text => (\r\n          <Highlighter\r\n            highlightStyle={{ backgroundColor: '#ffc069', padding: 0 }}\r\n            searchWords={[this.props.trainer.QuestionsearchText]}\r\n            autoEscape\r\n            textToHighlight={text.toString()}\r\n          />\r\n        ),\r\n      });\r\n    \r\n      handleSearch = (selectedKeys, confirm) => {\r\n        confirm();\r\n        this.props.ChangeQuestionSearchText(selectedKeys[0])\r\n      };\r\n    \r\n      handleReset = clearFilters => {\r\n        clearFilters();\r\n        this.props.ChangeQuestionSearchText('')\r\n      };\r\n\r\n    render() {\r\n      const { Title } = Typography;\r\n      const columns = [\r\n        {\r\n          title: 'Subject',\r\n          dataIndex: 'subject.topic',\r\n          key: 'subject.topic',\r\n          width: '15%',\r\n        },\r\n        {\r\n          title: 'Question',\r\n          dataIndex: 'body',\r\n          key: 'body',\r\n          width: '50%',\r\n          ...this.getColumnSearchProps('body'),\r\n        },\r\n        {\r\n          title: 'Created By',\r\n          dataIndex: 'createdBy.name',\r\n          key: 'createdBy.name',\r\n          width: '15%'\r\n        },\r\n        {\r\n          title: 'Action',\r\n          key: '_id',\r\n          dataIndex: '_id',\r\n          width: '15%',\r\n          render: (key) => (\r\n            <span>\r\n              <Button type=\"primary\" shape=\"circle\" onClick={()=>this.OpendetailsModal(key)} icon=\"info-circle\" />\r\n\r\n              <Divider type=\"vertical\" />\r\n\r\n              <Popconfirm\r\n                  title=\"Are you sure？\"\r\n                  cancelText=\"No\"\r\n                  okText=\"Yes\"\r\n                  onConfirm={()=>{this.deleteQuestion(key)}}\r\n                  icon={<Icon type=\"delete\" style={{ color: 'red' }} />}\r\n                >\r\n                  <Button type=\"danger\" shape=\"circle\" icon=\"delete\" />\r\n                </Popconfirm>\r\n            </span>\r\n          ),\r\n        },\r\n      ];\r\n        return (\r\n            <div className=\"admin-table-container\">\r\n              <div>\r\n                <Row>\r\n\r\n                  <Col span={12}>\r\n                    <Button \r\n                      type=\"primary\" \r\n                      icon=\"question-circle\" \r\n                      style={{marginBottom:'10px'}} \r\n                      onClick={()=>this.openNewModal('Add New Question')}\r\n                    >\r\n                      Add New MCQ/MSQ Question\r\n                    </Button>\r\n                  </Col>\r\n\r\n                  <Col span={12}>\r\n                    <Select\r\n                      mode=\"multiple\"\r\n                      placeholder=\"Select one or more subjects\"\r\n                      defaultValue={this.props.trainer.selectedSubjects}\r\n                      onChange={this.handleSubjectChange}\r\n                      style={{ width: '100%' }}\r\n                      allowClear={true}\r\n                      optionFilterProp=\"s\"\r\n                    >\r\n                      {this.props.admin.subjectTableData.map(item => (\r\n                        <Select.Option key={item._id} value={item._id} s={item.topic}>\r\n                          {item.topic}\r\n                        </Select.Option>\r\n                      ))}\r\n                    </Select>\r\n                  </Col>\r\n                </Row>\r\n              </div>\r\n              \r\n              <div className=\"register-trainer-form-header\">\r\n                <Title level={4} style={{color:'#fff',textAlign:'center'}}>\r\n                  List of MCQ/MSQ Questions\r\n                </Title>\r\n              </div>\r\n              \r\n              <Table \r\n                bordered={true} \r\n                columns={columns} \r\n                dataSource={this.props.trainer.QuestionTableData} \r\n                size=\"medium\" \r\n                pagination={{ pageSize: 5 }}\r\n                loading={this.props.trainer.QuestionTableLoading}\r\n                rowKey=\"_id\" \r\n              />\r\n\r\n              <Modal\r\n                visible={this.props.trainer.NewQuestionmodalOpened}\r\n                title=\"New Question\"\r\n                onCancel={this.closeNewModal}\r\n                style={{top :'20px',padding:'0px',backgroundColor:'rgb(155,175,190)'}}\r\n                width=\"90%\"\r\n                destroyOnClose={true}\r\n                footer={[]}\r\n              >\r\n                <NewQuestionForm />\r\n              </Modal>\r\n\r\n              <Modal\r\n                visible={this.state.questiondetailsModelVisible}\r\n                title=\"Question Details\"\r\n                onCancel={this.ClosedetailsModal}\r\n                style={{top :'20px',padding:'0px',backgroundColor:'rgb(155,175,190)'}}\r\n                width=\"70%\"\r\n                destroyOnClose={true}\r\n                footer={[]}\r\n              >\r\n                <QuestionDetails id={this.state.questiondetailsId} / >\r\n              </Modal>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    trainer : state.trainer,\r\n    admin : state.admin\r\n});\r\n\r\nexport default connect(mapStateToProps,{\r\n  ChangeQuestionModalState,\r\n  ChangeQuestionTableData,\r\n  ChangeQuestionSearchText,\r\n  ChangeSelectedSubjects,\r\n  ChangeSubjectTableData\r\n})(AllQuestions);","import React, { Component } from 'react'\r\nimport apis from '../../../services/Apis';\r\nimport { SecurePost } from '../../../services/axiosCall';\r\nimport Alert from '../../common/alert';\r\nimport { Button, Row, Col, Typography } from 'antd';\r\nimport Markdown from '../../../utils/Markdown';\r\nimport './conducttes.css';\r\n\r\nconst { Title } = Typography;\r\n\r\nexport default class Questions extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            loading: false,\r\n            total: 0\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.refreshquestionList();\r\n    }   \r\n\r\n    refreshquestionList = ()=>{\r\n        this.setState({\r\n            loading: true\r\n        });\r\n        \r\n        SecurePost({\r\n            url: `${apis.GET_TEST_QUESTIONS}`,\r\n            data: {\r\n                id: this.props.id\r\n            }\r\n        }).then((response) => {\r\n            // console.log(response);\r\n            if (response.data.success) {\r\n                this.props.updateQuestiosnTest(response.data.data);\r\n            }\r\n            else {\r\n                Alert('error', 'Error!', response.data.message)\r\n            }\r\n            this.setState({\r\n                loading: false\r\n            })\r\n        }).catch((error) => {\r\n            // console.log(error);\r\n            Alert('error', 'Error!', 'Server Error')\r\n            this.setState({\r\n                loading: false\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const aMap = ['A', 'B', 'C', 'D', 'E'];\r\n        var sum = 0;\r\n\r\n        return (\r\n            <div>\r\n                <Row>\r\n                    <Col span={24}>\r\n                        <h6 style={{fontSize: '14px'}}>\r\n                            Total Marks: {'  '}\r\n                            {\r\n                                this.props.questionsOfTest.reduce((accumulator, current) => accumulator + current.weightage, 0)\r\n                            }\r\n                        </h6>\r\n                    </Col>\r\n                </Row>\r\n                \r\n                {\r\n                    this.props.questionsOfTest.map((d, i) => {\r\n                        \r\n                        return(\r\n                            <div key={i} style={{ paddingBottom: '50px' }}>\r\n                                \r\n                                <Row>\r\n                                    <Col span={1}>\r\n                                        <Button type=\"primary\" shape=\"circle\" >{i+1}</Button>\r\n                                    </Col>\r\n                                    <Col span={d.quesimg?6:0}>\r\n                                        <img alt=\"unable to load\" src={d.quesimg} style={{width:'100%'}}/>\r\n                                    </Col>\r\n                                    <Col span={d.quesimg?16:22} style={{padding:'10px'}}>\r\n                                        <Markdown>{d.body}</Markdown>\r\n                                    </Col>\r\n                                    <Col span={1}>\r\n                                        Marks:{d.weightage}\r\n                                    </Col>\r\n                                    <Col offset={1} span={23}>\r\n                                        <Row>\r\n                                            {d.options.map((dd,ii)=>{\r\n                                                return(\r\n                                                    <Col key={ii} span={12} style={{paddingBottom:'30px'}}>\r\n                                                        <Row>\r\n                                                            <Col span={1}>\r\n                                                            {\r\n                                                                dd.isAnswer?<Button className=\"green\" shape=\"circle\">{aMap[ii]}</Button>:<Button type=\"primary\" shape=\"circle\">{aMap[ii]}</Button>\r\n                                                            }\r\n                                                            </Col>\r\n                                                            <Col offset={1} span={dd.optimg?8:0}>\r\n                                                                <img alt=\"unable to load\" src={dd.optimg} style={{width:'100%'}} />\r\n                                                            </Col>\r\n                                                            <Col offset={1} span={dd.optimg?12:21}>\r\n                                                                <p>{dd.optbody}</p>\r\n                                                            </Col>\r\n                                                        </Row>\r\n                                                    </Col>\r\n                                                )\r\n                                            })}\r\n                                        </Row>\r\n                                    </Col>\r\n                                </Row>\r\n\r\n                            </div> \r\n                        )\r\n                    })\r\n                }\r\n                \r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport './testdetails.css';\r\nimport { Card,Row,Col  } from 'antd';\r\nimport { Bar, Doughnut } from 'react-chartjs-2';\r\nimport {bgcolor,bordercolor} from '../../../services/bgcolor';\r\n\r\nexport default class Stats extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            id:this.props.id,\r\n            stats:this.props.stats,\r\n            Scorelable:[],\r\n            Scoredata:[],\r\n            bgColor1:[],\r\n            borcolor1:[],\r\n            maxmMarks:this.props.maxmMarks,\r\n            passData:[0,0],\r\n            passLable:['Fail','Pass'],\r\n            stat:['91% to 100%','81% to 90%','71% to 80%','61% to 70%','50% to 60%','Below 50%'],\r\n            statdata:[0,0,0,0,0,0]\r\n        } \r\n    }\r\n    \r\n    componentWillMount(){\r\n        let {bgColor1,borcolor1}=this.state;\r\n        var maxi=-1;\r\n        let p=0;\r\n        let f=0;\r\n        let p90_100=0;\r\n        let p80_90=0;\r\n        let p70_80=0;\r\n        let p60_70=0;\r\n        let p50_60=0;\r\n        let below50=0;\r\n        var pc=0;\r\n        this.state.stats.map((d, i) => {\r\n            pc = (d.score / this.state.maxmMarks) * 100;\r\n            if (pc >= 91) {\r\n                p90_100++;\r\n            }\r\n            else if (pc >= 81) {\r\n                p80_90++;\r\n            }\r\n            else if (pc >= 71) {\r\n                p70_80++;\r\n            }\r\n            else if (pc >= 61) {\r\n                p60_70++;\r\n            }\r\n            else if (pc >= 50) {\r\n                p50_60++;\r\n            }\r\n            else {\r\n                below50++;\r\n            }\r\n\r\n            if (d.score >= this.state.maxmMarks / 2) {\r\n                p++;\r\n            }\r\n            else {\r\n                f++;\r\n            }\r\n            if (d.score > maxi) {\r\n                maxi = d.score\r\n            }\r\n        });\r\n        var dp =[];\r\n        var label = [];\r\n        \r\n        for(let i=0;i<=maxi;i++){\r\n            dp.push(0);\r\n            label.push(i);\r\n            bgColor1.push(bgcolor[i]);\r\n            borcolor1.push(bordercolor[i]);\r\n\r\n        };\r\n        \r\n        this.state.stats.map((d, i) => {\r\n            dp[d.score]++;\r\n        });\r\n\r\n        this.setState({\r\n            Scorelable: label,\r\n            Scoredata: dp,\r\n            bgColor1: bgColor1,\r\n            borcolor1: borcolor1,\r\n            passData: [f, p],\r\n            statdata: [p90_100, p80_90, p70_80, p60_70, p50_60, below50]\r\n        });\r\n    }\r\n\r\n    render() {\r\n        let barData={\r\n            labels:this.state.Scorelable,\r\n            datasets:[{\r\n                label: 'Scores',\r\n                data: this.state.Scoredata,\r\n                backgroundColor:this.state.bgColor1,\r\n                borderColor:this.state.borcolor1,\r\n                borderWidth: 1\r\n            }]\r\n        }\r\n        let DoughNutData1={\r\n            labels:this.state.passLable,\r\n            datasets:[{\r\n                label: 'Pass/Fail',\r\n                data: this.state.passData,\r\n                backgroundColor:[bgcolor[0],bgcolor[1]],\r\n                borderColor:[bordercolor[0],bordercolor[1]],\r\n                borderWidth: 1\r\n            }]\r\n        }\r\n        let DoughNutData2={\r\n            labels:this.state.stat,\r\n            datasets:[{\r\n                label: 'Percentage wise category',\r\n                data: this.state.statdata,\r\n                backgroundColor:[bgcolor[0],bgcolor[1],bgcolor[2],bgcolor[3],bgcolor[4],bgcolor[5]],\r\n                borderColor:[bordercolor[0],bordercolor[1],bordercolor[2],bordercolor[3],bordercolor[4],bordercolor[5]],\r\n                borderWidth: 1\r\n            }]\r\n        }\r\n        return (\r\n            <div>\r\n                <div>\r\n                    <Card >\r\n                        <div className=\"download-section\">\r\n                            <b>Download the test result excel sheet.</b>\r\n                            <a href={this.props.file} target=\"_blank\" className=\"download-xlsx\">Download</a>\r\n                        </div>\r\n                    </Card>\r\n                </div> \r\n                <div style={{marginTop:'10px'}}>\r\n                    <Card >\r\n                        <div style={{padding:'10px 10px 0px 10px'}}>\r\n                            <b>Score vs No of students.</b>\r\n                        </div>\r\n                        <div style={{padding:'0px 10px 10px 10px'}}>\r\n                            <Bar\r\n                                data={barData}\r\n                                options={{ maintainAspectRatio: false }}\r\n                            />\r\n                        </div>\r\n                    </Card>\r\n                </div>\r\n                <div style={{marginTop:'10px'}}>\r\n                    <Card >\r\n                        <Row>\r\n                            <Col span={12}>\r\n                                <div style={{padding:'10px 10px 0px 10px'}}>\r\n                                    <b>Pass/Fail.</b>\r\n                                </div>\r\n                                <div style={{padding:'0px 10px 10px 10px'}}>\r\n                                    <Doughnut data={DoughNutData1} />\r\n                                </div>\r\n                            </Col>\r\n                            <Col span={12}>\r\n                                <div style={{padding:'10px 10px 0px 10px'}}>\r\n                                    <b>Percentage wise category.</b>\r\n                                </div>\r\n                                <div style={{padding:'0px 10px 10px 10px'}}>\r\n                                    <Doughnut data={DoughNutData2} />\r\n                                </div>\r\n                            </Col>\r\n                        </Row>\r\n                        \r\n                    </Card>\r\n                </div>                \r\n            </div>\r\n        )\r\n    };\r\n};\r\n","import React from 'react';\r\nimport { Table, Tag, Card, Typography } from 'antd';\r\n\r\nconst { Title } = Typography;\r\n\r\nexport default function Trainee(props) {\r\n    let maxMarks = props.maxmMarks || 2;\r\n\r\n    const columns = [\r\n        {\r\n            title: 'Name',\r\n            dataIndex: 'userid.name',\r\n            key: 'userid.name'\r\n        },\r\n        {\r\n            title: 'Email Id',\r\n            dataIndex: 'userid.emailid',\r\n            key: 'userid.emailid',\r\n        },\r\n        {\r\n            title: 'Contact No',\r\n            dataIndex: 'userid.contact',\r\n            key: 'userid.contact',\r\n        },\r\n        {\r\n            title: 'Organisation',\r\n            dataIndex: 'userid.organisation',\r\n            key: 'userid.organisation',\r\n        },\r\n        {\r\n            title:'Score',\r\n            dataIndex: 'score',\r\n            key: 'score',\r\n        },\r\n        {\r\n            title:'Status',\r\n            dataIndex:'score',\r\n            key: '_id',\r\n            render: tag => (\r\n                <span>\r\n                    <Tag color={tag >= maxMarks/2 ? 'green' : 'red'} key={tag}>\r\n                        {tag >= maxMarks/2 ? 'Pass' : 'Fail'}\r\n                    </Tag>\r\n                </span>\r\n            )\r\n        }\r\n    ];\r\n    return (\r\n        <div>\r\n            <Card>\r\n                <div className=\"download-section\">\r\n                    <Title level={4}>\r\n                        MCQ Assessment Result\r\n                    </Title>\r\n\r\n                    <Table \r\n                        pagination={false} \r\n                        rowKey=\"_id\" \r\n                        columns={columns} \r\n                        dataSource={props.stats}\r\n                    />\r\n                </div>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Card, Rate, Comment, Avatar } from 'antd';\r\n\r\nexport default function FeedBacks(props) {\r\n    // console.log(props.feedbacks);\r\n    return (\r\n        <div>\r\n            <Card>\r\n                <div className=\"download-section\">\r\n                    <h3>\r\n                        <b>Feedbacks</b>\r\n                    </h3>\r\n\r\n                    <div>\r\n                        {props.feedbacks.map((d,i)=>{\r\n                            return(\r\n                                <Card key={i} style={{marginBottom:'10px'}}>\r\n                                    <Comment\r\n                                        author={`${d.userid.name} - ${d.userid.organisation} `}\r\n                                        avatar={\r\n                                            <Avatar\r\n                                                src=\"https://res.cloudinary.com/gniusedu/image/upload/v1616994666/gnius-jpg_aspibu.jpg\"\r\n                                                alt={d.userid.name}\r\n                                            />\r\n                                        }\r\n                                        content={\r\n                                            <span>\r\n                                                <Rate size=\"small\" disabled defaultValue={d.rating} />\r\n                                                <p>\r\n                                                    {d.feedback}\r\n                                                </p>\r\n                                            </span>\r\n                                        }\r\n                                    />\r\n                                </Card>\r\n                            ) \r\n                        })}\r\n                    </div>\r\n                </div>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, Fragment, useEffect } from \"react\";\nimport AceEditor from \"react-ace\";\nimport { Typography, Button, notification, Icon } from 'antd';\nimport axios from 'axios';\n\nimport \"ace-builds/src-noconflict/mode-java\";\nimport \"ace-builds/src-noconflict/mode-c_cpp\";\nimport \"ace-builds/src-noconflict/mode-python\";\nimport \"ace-builds/src-noconflict/mode-javascript\";\n\nimport \"ace-builds/src-noconflict/theme-github\";\nimport \"ace-builds/src-noconflict/theme-monokai\";\n\nimport { SecurePost } from '../../../../services/axiosCall';\nimport apis from '../../../../services/Apis';\nimport Markdown from '../../../../utils/Markdown';\n\nconst { Title, Text } = Typography;\nconst key = 'updatable';\n\nconst CodeEditor = (props) => {\n  const [question, setQuestion] = useState({\n    loading: false,\n    error: \"\",\n    evaluating: false,\n    question: \"\",\n    name: \"\",\n    language: \"\",\n    code: \"\",\n    editorMode: \"c_cpp\",\n    fontSize: 16,\n    testcaseshow: false \n  });\n\n  const [score, setscore] = useState([]);\n\n  // useEffect(() => {}, []);\n\n  const handleCodeChange = (ncode) => {\n    setQuestion({ ...question, code: ncode });\n    // console.log(ncode);\n  };\n  \n  const handleMode = (event) => {\n    let lang = event.target.value;\n  \n    let req_mode = \"c_cpp\";\n    \n    if (lang === '48') {\n      req_mode = \"c_cpp\"\n    }\n\n    if (lang === '52') {\n        req_mode = \"c_cpp\"\n    }\n\n    else if (lang ==='62') {\n      req_mode = \"java\"\n    }\n\n    else if (lang === '70') {\n      req_mode = \"python\"\n    }\n\n    else if (lang ==='71') {\n      req_mode = \"python\"\n    }\n\n    setQuestion({ ...question, editorMode: req_mode, language: lang })\n  };\n\n    // Submit Code For Evaluation\n    const submitCode = (event) => {\n        event.preventDefault();\n        setQuestion({ ...question, \n            error: \"\", \n            evaluating: true, \n            testcaseshow: false \n        });\n\n        // Submit\n        SecurePost({\n            url:apis.POST_SUBMISSION,\n            data:{\n                testId: props.test.testid,\n                traineeId: props.test.traineeid,\n                que_id: props.data._id,\n                source_code: question.code, \n                language_id: question.language,\n            }\n        })\n        .then((response) => {\n            setQuestion({ \n                ...question, \n                error: \"\", \n                evaluating: false, \n                testcaseshow: true \n            });\n\n            setscore(response.data.score);\n\n            console.log(response.data.score);\n        })\n        .catch((error) => {\n            setQuestion({ \n                ...question, \n                error: \"\", \n                evaluating: false, \n                testcaseshow: true \n            });\n        });\n    };\n\n    const isEvaluating = (placement) => {\n        if(question.evaluating) {\n            return notification.info({\n                message: `Evaluating`,\n                description: 'We are evaluating your solution. Please Wait',\n                placement\n            });\n        }\n    };\n\n    const showResult = () => {\n        let i = 1;\n        return score.map((data) => {\n            return <div className=\"container\">\n            <div className=\"row\">\n                <div className=\"col-lg-6\">\n                    <b>Test Case - #</b>{i++}\n                </div>\n                \n                <div className=\"col-lg-6\">\n                    <b>Status - </b>{data} {'   '}\n                    {data === 'Passed' ? \n                        <Icon type=\"check-circle\" theme=\"twoTone\" twoToneColor=\"#52c41a\" />\n                        : <Icon type=\"close-circle\" theme=\"twoTone\" twoToneColor=\"#ff0000\" />\n                    }\n                </div>\n            </div>\n        </div>    \n        });\n    };\n\n  return (\n    <Fragment>\n\n        <div className=\"container\">\n            <div className=\"row\">\n                <div className=\"col-lg-12\">\n                    <div style={{marginTop: '10px'}} ></div>\n                </div>\n            </div>\n        </div>\n\n        {isEvaluating('bottomRight')}\n\n        <div className=\"container\">\n            <div className=\"row\">\n                {/* Left */}\n                <div className=\"col-lg-6\">\n                    \n                    <Text>\n                        Problem Id - {props.data._id}\n                    </Text>\n\n                    <Title level={4}>Problem Statement</Title>\n\n                    <div style={{height: '600px'}} >\n                        <Markdown>\n                            {props.data.statement}\n                        </Markdown>\n                    </div>\n\n                </div>\n                \n                {/* Right */}\n                <div className=\"col-lg-6\">\n\n                <select \n                    className=\"custom-select\" \n                    style={{marginTop: '10px', marginBottom: '10px', width: '50%'}}  \n                    onChange={handleMode}\n                >\n                    <option value=\"\" selected>Select Language</option>\n\n                    <option value=\"48\">C (GCC 7.4.0)</option>\n                    <option value=\"52\">C++ (GCC 7.4.0)</option>\n                    <option value=\"62\">Java (OpenJDK 13.0.1)</option>\n                    <option value=\"70\">Python (2.7.17)</option>\n                    <option value=\"71\">Python (3.8.1)</option>\n                </select>\n\n                <AceEditor\n                    mode={question.editorMode}\n                    theme=\"monokai\"\n                    name=\"editor\"\n                    fontSize={question.fontSize}\n                    editorProps={{ $blockScrolling: true }}\n                    onChange={handleCodeChange}\n                    value={question.code}\n                />\n\n                <div style={{marginTop: '10px', marginBottom: '10px'}}></div>\n\n                <Button \n                    type=\"primary\"\n                    onClick={submitCode}\n                    disabled={question.evaluating}\n                >\n                    Submit\n                </Button>\n\n                </div>\n            </div>\n        </div>\n\n        {question.testcaseshow ? \n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-lg-12\">\n                        <div style={{marginTop: '20px', textAlign: 'center'}}>\n                            <Title level={4}>Results</Title>\n\n                            <div style={{height: '100px', marginBottom:'30px', border: '2px solid #77acf1', width: '100%'}} >\n                                {score.length > 0 ? showResult() : null}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div> \n            :\n            null\n        }\n    </Fragment>\n  );\n};\n\n\nexport default CodeEditor;","import apis from '../services/Apis';\r\nimport Alert from '../components/common/alert';\r\nimport { Post } from '../services/axiosCall';\r\n\r\nlet parse_time = (d) => {\r\n    // console.log(`${d}I am called`)\r\n    var m_left = Math.floor(d / 60);\r\n    var s_left = Number(String(d % 60).slice(0, 2));\r\n    return {\r\n        m_left: m_left,\r\n        s_left: s_left\r\n    }\r\n};\r\n\r\n\r\nexport const setTestDetsils = (d1, d2) => {\r\n    return ({\r\n        type: 'SET_TRAINEE_TEST_DETAILS',\r\n        payload1: d1,\r\n        payload2: d2\r\n    })\r\n};\r\n\r\nexport const LocaltestDone = (d) => dispatch => {\r\n    dispatch({\r\n        type: 'TEST_DONE_LOCAL'\r\n    });\r\n};\r\n\r\nexport const fetchTraineedata = (d) => dispatch => {\r\n    Post({\r\n        url: apis.FETCH_TRAINEE_DETAILS,\r\n        data: {\r\n            _id: d\r\n        }\r\n    }).then((response) => {\r\n        // console.log(response);\r\n        if (response.data.success) {\r\n            dispatch({\r\n                type: 'FETCH_LOGGED_IN_TRAINEE',\r\n                payload: response.data.data\r\n            });\r\n        }\r\n        else {\r\n            Alert('error', 'Error!', response.data.message);\r\n        }\r\n    });\r\n};\r\n\r\n\r\nexport const fetchTestdata =(d1,d2)=>dispatch=>{\r\n    Post({\r\n        url:apis.FETCH_TRAINEE_TEST_DETAILS,\r\n        data:{\r\n            testid:d1,\r\n            traineeid:d2\r\n        }\r\n    }).then((response)=>{\r\n        // console.log(response.data);\r\n        if(response.data.success){\r\n            if(response.data.data.completed || !response.data.data.startedWriting){\r\n                dispatch({\r\n                    type:'FETCH_TEST_FLAG',\r\n                    payload1: response.data.data.testbegins,\r\n                    payload2: response.data.data.startedWriting,\r\n                    payload3: response.data.data.testconducted,\r\n                    payload4: response.data.data.completed,\r\n                    payload5: 0,\r\n                    payload6: 0,\r\n                    payload7: response.data.data.addcoding\r\n                })\r\n            }\r\n            else{\r\n                let t = parse_time(response.data.data.pending);\r\n                dispatch({\r\n                    type: 'FETCH_TEST_FLAG',\r\n                    payload1: response.data.data.testbegins,\r\n                    payload2: response.data.data.startedWriting,\r\n                    payload3: response.data.data.testconducted,\r\n                    payload4: response.data.data.completed,\r\n                    payload5: t.m_left,\r\n                    payload6: t.s_left,\r\n                    payload7: response.data.data.addcoding\r\n                });\r\n            }\r\n            \r\n        }\r\n        else{\r\n            dispatch({\r\n                type: 'invalidUrl',\r\n            });\r\n        }\r\n    })\r\n    .catch((err) => {\r\n        dispatch({\r\n            type: 'invalidUrl',\r\n        });\r\n    });\r\n}\r\n\r\n\r\nexport const ProceedtoTest = (d1, d2, d3) => dispatch => {\r\n    // console.log(`Hello from ins${d1},${d2}`)\r\n    dispatch({\r\n        type: 'PROCEEDING_TO_TEST',\r\n        payload: true\r\n    });\r\n\r\n    Post({\r\n        url: `${apis.PROCEED_TO_TEST}`,\r\n        data: {\r\n            testid: d1,\r\n            userid: d2\r\n        }\r\n    }).then((response) => {\r\n        // console.log(response);\r\n        if (!response.data.success) {\r\n            Alert('error', 'Error!', response.data.message);\r\n        }\r\n\r\n        d3();\r\n\r\n        dispatch({\r\n            type: 'PROCEEDING_TO_TEST',\r\n            payload: false\r\n        });\r\n    }).catch((error) => {\r\n        // console.log(error)\r\n        dispatch({\r\n            type: 'PROCEEDING_TO_TEST',\r\n            payload: false\r\n        })\r\n        Alert('error', 'Error!', \"Server error\");\r\n    });\r\n};\r\n\r\n\r\nexport const fetchTraineeTestQuestions = (tid) => dispatch => {\r\n    Post({\r\n        url: `${apis.FETCH_TRAINEE_TEST_QUESTION}`,\r\n        data: {\r\n            id: tid\r\n        }\r\n    }).then((response) => {\r\n        // console.log(response.data);\r\n        if (response.data.success) {\r\n            dispatch({\r\n                type: 'UPDATE_TRAINEE_TEST_QUESTIONS',\r\n                payload: response.data.data\r\n            })\r\n        }\r\n        else {\r\n            Alert('error', 'Error!', response.data.message);\r\n        }\r\n    }).catch((error) => {\r\n        // console.log(error);\r\n        Alert('error', 'Error!', \"Server error\");\r\n    });\r\n};\r\n\r\n\r\nexport const fetchTraineeTestAnswerSheet = (tid, uid) => dispatch => {\r\n    Post({\r\n        url: `${apis.FETCH_TRAINEE_TEST_ANSWERSHEET}`,\r\n        data: {\r\n            testid: tid,\r\n            userid: uid\r\n        }\r\n    }).then((response) => {\r\n        if (response.data.success) {\r\n            // console.log(response.data.data);\r\n            var d = response.data.data.answers.map((d, i) => {\r\n                if (d.chosenOption.length === 0) {\r\n                    return ({\r\n                        ...d,\r\n                        isMarked: false,\r\n                        isAnswered: false\r\n                    })\r\n                }\r\n                else {\r\n                    return ({\r\n                        ...d,\r\n                        isMarked: false,\r\n                        isAnswered: true\r\n                    });\r\n                }\r\n            });\r\n\r\n            dispatch({\r\n                type: 'UPDATE_TRAINEE_TEST_ANSWERSHEET',\r\n                payload: d\r\n            });\r\n        }\r\n        else {\r\n            Alert('error', 'Error!', response.data.message);\r\n        }\r\n    }).catch((error) => {\r\n        // console.log(error);\r\n        Alert('error', 'Error!', \"Server error\");\r\n    });\r\n};\r\n\r\nexport const switchQuestion = (d1) => {\r\n    return {\r\n        type: 'SWITCH_QUESTION',\r\n        payload: d1\r\n    };\r\n};\r\n\r\nexport const updateIsMarked = (d1) => {\r\n    return {\r\n        type: 'UPDATE_TRAINEE_TEST_ANSWERSHEET',\r\n        payload: d1\r\n    };\r\n};\r\n\r\nexport const FeedbackStatus = (s) => {\r\n    return {\r\n        type: 'SET_HAS_GIVEN_FEEDBACK',\r\n        payload: s\r\n    };\r\n};\r\n\r\nexport const LoadCodingQuestion = (load, data) => {\r\n    return {\r\n        type: 'CODING_DATA',\r\n        payload1: load,\r\n        payload2: data\r\n    };\r\n};\r\n\r\n// Post Coding Section Submit Data\r\nexport const submitCoding = (tid, uid) => dispatch => {\r\n    Post({\r\n        url: `${apis.CODING_SECTION_SUBMIT}`,\r\n        data: {\r\n            testId: tid,\r\n            traineeId: uid\r\n        }\r\n    })\r\n    .then((response) => {\r\n        if (response.data.success) {\r\n            dispatch({\r\n                type: 'SUBMIT_CODING',\r\n                payload: true\r\n            });\r\n        }\r\n        else {\r\n            Alert('error', 'Error!', response.data.message);\r\n        }\r\n    })\r\n    .catch((error) => {\r\n        Alert('error', 'Error!', \"Server error\");\r\n    });\r\n};\r\n\r\n// Get Coding Section Submit Data\r\nexport const getsubmitCoding = (tid, uid) => dispatch => {\r\n    Post({\r\n        url: `${apis.CODING_SECTION_GET}`,\r\n        data: {\r\n            testId: tid,\r\n            traineeId: uid\r\n        }\r\n    })\r\n    .then((response) => {\r\n        if (response.data.success) {\r\n            dispatch({\r\n                type: 'SUBMIT_CODING',\r\n                payload: response.data.message\r\n            });\r\n        }\r\n        else {\r\n            dispatch({\r\n                type: 'SUBMIT_CODING',\r\n                payload: response.data.message\r\n            });\r\n        }\r\n    })\r\n    .catch((error) => {\r\n        console.log(error);\r\n    });\r\n};\r\n","import React, { Fragment } from 'react';\nimport { Tabs, Skeleton, Button, Popconfirm, Icon } from 'antd';\nimport CountDown from 'ant-design-pro/lib/CountDown';\nimport queryString from 'query-string';\nimport { connect } from 'react-redux';\n\nimport CodeEditor from './CodeEditor';\nimport { SecurePost } from '../../../../services/axiosCall';\nimport apis from '../../../../services/Apis';\nimport Alert from '../../../../components/common/alert';\nimport {\n    LoadCodingQuestion,\n    submitCoding\n} from '../../../../actions/traineeAction';\nimport './code.css';\n\nconst { TabPane } = Tabs;\nvar time = 0;\n\nclass Index extends React.Component {\n    constructor(props) {\n      super(props);\n\n      let params = {\n        testid: this.props.trainee.testid,\n        traineeid: this.props.trainee.traineeid\n      }\n      \n      this.state = {\n        mode: 'left',\n        testDetails: params,\n        testTime: 0,\n      };\n    }\n\n    // On Page Load\n    componentDidMount(){\n        const testId = this.props.trainee.testid;\n        const traineeId = this.props.trainee.traineeid;\n\n        this.setState({loading: true});\n\n        if(localStorage.getItem('time') === null){\n            localStorage.setItem('time', new Date());\n        }\n        else {\n            time = localStorage.getItem('time');\n            \n        }\n\n        SecurePost({\n            url:apis.GET_CODING_QUESTION_DATA,\n            data:{\n                testId: testId,\n            }\n        })\n        .then((response) => {\n            if(response.data.success){\n                this.props.LoadCodingQuestion(false,response.data.questions);\n                this.setState({testTime: response.data.time});\n            }\n            else{\n                return Alert('warning','Warning!',response.data.message);\n            }\n        })\n        .catch((error) => {\n            return Alert('error','Error!','Server Error');\n        });\n    };\n\n    handleModeChange = e => {\n        const mode = e.target.value;\n        this.setState({ mode });\n    };\n  \n    render() {\n      const { mode, testTime } = this.state;\n\n      let targetTime = 0;\n\n      time = localStorage.getItem('time');\n      \n      if (time === 0) targetTime = new Date().getTime() + testTime*60000;\n      else targetTime = new Date(time).getTime()+ testTime*60000;\n\n      return (\n        <Fragment>\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-lg-12\">\n                        <div style={{marginTop: '20px'}}></div>\n                    </div>\n                </div>\n            </div>\n\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-lg-12\">\n                        <Skeleton loading={this.props.trainee.loadcoding} active avatar>\n                            \n                        <div style={{height: '80px'}} >\n                            <div className=\"container\">\n                                <div className=\"row\">\n                                    <div className=\"col-lg-6\">\n                                        <ul id=\"menu\">\n                                            <li>\n                                                <Icon style={{fontSize: '40px'}} type=\"code\" />\n                                            </li>\n\n                                            <li>\n                                                \n                                            </li>\n                                                \n                                            <li>\n                                                Timer :\n                                            </li>\n\n                                            <li>\n                                                <CountDown \n                                                    style={{ fontSize: 30 }} \n                                                    target={targetTime}\n                                                    onEnd={() => this.props.submitCoding(this.props.trainee.testid,this.props.trainee.traineeid)}\n                                                />\n                                            </li>\n                                        </ul>\n                                    </div>\n\n                                    <div className=\"col-lg-6\">\n                                        <Popconfirm\n                                            title=\"Are you sure to end the test\"\n                                            onConfirm={() => {\n                                                this.props.submitCoding(this.props.trainee.testid,this.props.trainee.traineeid);\n                                                localStorage.removeItem('time');\n                                            }}\n                                            okText=\"Yes\"\n                                            cancelText=\"No\"\n                                        >\n                                            <Button type=\"primary\">\n                                                Submit Section\n                                            </Button>\n                                        </Popconfirm>\n                                    </div>\n\n                                </div>\n                            </div>\n                        </div>\n\n                            <div style={{marginBottom: '50px'}} ></div>\n                            \n                            <Tabs defaultActiveKey=\"0\" tabPosition={mode} style={{ height: '100%' }}>\n                                {[...Array.from({ length: this.props.trainee.codingData.length }, (v, i) => i)].map(i => (\n                                    <TabPane tab={`Problem-${i+1}`} key={i}>\n\n                                        Problem {i+1}\n                                        \n                                        <br />\n\n                                        <CodeEditor \n                                            key={i} \n                                            data={this.props.trainee.codingData[i]} \n                                            test={this.state.testDetails} \n                                        />\n                                    </TabPane>\n                                ))}\n                            </Tabs>\n                        </Skeleton>\n                    </div>\n                </div>\n            </div>\n\n        </Fragment>\n      );\n    }\n};\n\nconst mapStateToProps = state => ({\n    trainee: state.trainee\n});\n\nexport default connect(mapStateToProps, {\n    LoadCodingQuestion,\n    submitCoding\n})(Index);\n\n\n\n","import React, { Component } from 'react';\r\nimport { Rate, Input, Button, Col, Row, Typography, Divider } from 'antd';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { Post } from '../../../services/axiosCall';\r\nimport apis from '../../../services/Apis';\r\nimport Alert from '../../common/alert';\r\nimport { FeedbackStatus } from '../../../actions/traineeAction';\r\nimport './answer.css';\r\n\r\nconst { TextArea } = Input;\r\nconst { Title, Text } = Typography;\r\n\r\nclass Feedback extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            star: 0,\r\n            comment: \"excellent\",\r\n            loading: false\r\n        }\r\n    }\r\n\r\n    handleStarChange=(star)=>{\r\n        // console.log(star);\r\n        this.setState({ star:star });\r\n    } \r\n    onCommentChange=(comment)=>{\r\n        this.setState({ comment:comment.target.value });\r\n    }\r\n\r\n    submitFeedback=()=>{\r\n        this.setState({ loading: true });\r\n        let { star, comment } = this.state;\r\n        \r\n        if(star!==0 && comment.length>0){\r\n            Post({\r\n                url: apis.GIVE_FEEDBACK,\r\n                data: {\r\n                    testid: this.props.trainee.testid,\r\n                    userid: this.props.trainee.traineeid,\r\n                    rating: star,\r\n                    feedback: comment\r\n                }\r\n            })\r\n            .then((response) => {\r\n                if (response.data.success) {\r\n                    this.setState({ loading: false })\r\n                    Alert('success', 'Success', 'Thanks for your feedback');\r\n                    this.props.FeedbackStatus(true)\r\n                }\r\n                else {\r\n                    this.setState({ loading: false })\r\n                    Alert('error', 'Failed', response.data.message);\r\n                }\r\n            }).catch((error) => {\r\n                // console.log(error);\r\n                Alert('error', 'Failed', 'Server Error');\r\n                this.setState({ loading: false })\r\n            });\r\n        }\r\n        else {\r\n            // ...\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const desc = ['terrible', 'bad', 'normal', 'good', 'wonderful'];\r\n        return (\r\n            <Row>\r\n                <Col span={24}>\r\n                    <div\r\n                        style={{ width: '40%', margin: '25px', textAlign: 'left', padding: '10px' }}\r\n                    >\r\n                        <Title level={3}>Feedback Form</Title>\r\n                        <div className=\"pp\">\r\n                            <span>\r\n                                <Text>Please rate your experience</Text> <br />\r\n                                <Rate tooltips={desc} onChange={this.handleStarChange} value={this.state.star} />\r\n                                {this.state.star ? <span className=\"ant-rate-text\">{desc[this.state.star - 1]}</span> : ''}\r\n                            </span>\r\n                        </div>\r\n                        \r\n                        <Divider />\r\n\r\n                        <div className=\"pp\">\r\n                            <TextArea rows={2} onChange={this.onCommentChange} value={this.state.comment} />\r\n                        </div>\r\n                        \r\n                        <Divider />\r\n\r\n                        <div className=\"pp\">\r\n                            <Button type=\"primary\" onClick={this.submitFeedback} loading={this.state.loading}>Submit</Button>\r\n                        </div>\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n    trainee : state.trainee\r\n});\r\n\r\nexport default connect(mapStateToProps,{\r\n    FeedbackStatus\r\n})(Feedback);","import React from 'react';\r\nimport { Table, Icon, Tag, Skeleton, Descriptions, Modal, Button, Row, Col, Collapse } from 'antd';\r\nimport { Typography } from 'antd';\r\nimport { Result } from 'antd';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Coding from '../examPortal/coding/index';\r\n\r\nimport { Post, SecurePost } from '../../../services/axiosCall';\r\nimport apis from '../../../services/Apis';\r\nimport Alert from '../../common/alert';\r\nimport Feedback from '../answersheet/feedback';\r\n\r\nimport { \r\n    FeedbackStatus,\r\n    getsubmitCoding\r\n} from '../../../actions/traineeAction';\r\nimport Markdown from '../../../utils/Markdown';\r\n\r\nimport './answer.css';\r\nimport './answermobileview.css';\r\nimport './individualquestion_mobileview.css';\r\n\r\nconst { Title } = Typography;\r\nconst { Panel } = Collapse;\r\n\r\nclass Answer extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            loading:false,\r\n            data:[],\r\n            TotalScore:null,\r\n            Mvisible:false,\r\n            ActiveQuestionId:null\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        let traineeid = this.props.trainee.traineeid || this.props.user.userid._id;\r\n        let testid = this.props.trainee.testid || this.props.user.userid.testid;\r\n\r\n        // Get Submitted Coding Section Data\r\n        this.props.getsubmitCoding(this.props.trainee.testid, this.props.trainee.testid);\r\n\r\n        this.setState({\r\n            loading:true\r\n        });\r\n        \r\n        let p1 = Post({\r\n            url: apis.FETCH_OWN_RESULT,\r\n            data: {\r\n                userid: traineeid,\r\n                testid: testid\r\n            }\r\n        });\r\n        \r\n        let p2 = Post({\r\n            url:`${apis.FETCH_TRAINEE_TEST_QUESTION}`,\r\n            data:{\r\n                id:testid\r\n            }\r\n        });\r\n\r\n        let p3 = Post({\r\n            url: `${apis.FEEDBACK_STATUS_CHECK}`,\r\n            data: {\r\n                userid: traineeid,\r\n                testid: testid\r\n            }\r\n        });\r\n        \r\n        Promise.all([p1, p2, p3])\r\n            .then(d => {\r\n            \r\n            //console.log(d);\r\n            \r\n            this.setState({\r\n                loading:false\r\n            });\r\n\r\n            if(d[0].data.success && d[1].data.success){\r\n                let v = d[1].data.data;\r\n                let r = d[0].data.result.result.map((dd, i) => {\r\n                    return ({\r\n                        ...dd,\r\n                        ...v[i]\r\n                    });\r\n                });\r\n\r\n                // console.log(r);\r\n                \r\n                this.setState({\r\n                    data: r,\r\n                    TotalScore: d[0].data.result.score\r\n                });\r\n\r\n                if(d[2].data.success){\r\n                    this.props.FeedbackStatus(d[2].data.status);\r\n                }\r\n            }\r\n            else{\r\n                Alert('error','Error!',`${d[0].data.success ? \"\":d[0].data.message} and ${d[1].data.success ? \"\":d[1].data.message}`)\r\n            }\r\n        })\r\n        .catch((err) => {\r\n            // console.log(err)\r\n            this.setState({\r\n                loading:false\r\n            });\r\n            Alert('error','Error!',\"Server Error\")\r\n        })\r\n    }\r\n\r\n    handleCancel=()=>{\r\n        this.setState({\r\n            Mvisible: false\r\n        });\r\n    }\r\n\r\n    OpenModel = (qid) => {\r\n        this.setState({\r\n            ActiveQuestionId: qid,\r\n            Mvisible: true\r\n        })\r\n    };\r\n\r\n    callback = (key) => {\r\n        // console.log(key);\r\n    }\r\n\r\n    render(){\r\n        const columns = [\r\n            {\r\n                title: 'View Question',\r\n                key: 'action',\r\n                render: (text, record) => (\r\n                    <Button \r\n                        shape=\"circle\" \r\n                        icon=\"info\" \r\n                        type=\"primary\" \r\n                        size=\"small\" \r\n                        onClick={() => { this.OpenModel(text.qid) }}\r\n                    ></Button>\r\n                )\r\n            },\r\n            {\r\n                title: \"Question\",\r\n                dataIndex: 'body',\r\n                key: 'body'\r\n            },\r\n            {\r\n                title: 'Correct Answers',\r\n                key: 'correctAnswer',\r\n                dataIndex: 'correctAnswer',\r\n                render: tags => (\r\n                    <span>\r\n                        {tags.map(tag => {\r\n                            return (\r\n                                <Tag color=\"green\" key={tag}>\r\n                                    {tag.toUpperCase()}\r\n                                </Tag>\r\n                            );\r\n                        })}\r\n                    </span>\r\n                ),\r\n            },\r\n            {\r\n                title: 'Given Answers',\r\n                key: 'givenAnswer',\r\n                dataIndex: 'givenAnswer',\r\n                render: tags => (\r\n                    <span>\r\n                        {tags.map(tag => {\r\n                            return (\r\n                                <Tag color=\"blue\" key={tag}>\r\n                                    {tag.toUpperCase()}\r\n                                </Tag>\r\n                            );\r\n                        })}\r\n                    </span>\r\n                ),\r\n            },\r\n            {\r\n                title: 'Weightage',\r\n                dataIndex: 'weightage',\r\n                key: 'weightage',\r\n            },\r\n            {\r\n                title: \"Explanation\",\r\n                dataIndex: 'explanation',\r\n                key: 'explanation',\r\n            },\r\n            {\r\n                title: \"Status\",\r\n                dataIndex: 'iscorrect',\r\n                key: 'iscorrect',\r\n                render: tags => (\r\n                    <span>\r\n                        {\r\n                            tags ?\r\n                            \r\n                                <Icon type=\"check-circle\" theme=\"twoTone\" twoToneColor=\"#52c41a\" />\r\n                                :\r\n                                <Icon type=\"close-circle\" theme=\"twoTone\" twoToneColor=\"red\" />\r\n                        }\r\n                    </span>\r\n                    \r\n                )\r\n            }\r\n        ];\r\n\r\n        // let td = this.props.user.userid;\r\n        \r\n        return (\r\n            <div className=\"answer-table-outer\">\r\n                <div className=\"answer-table-wrapper\">\r\n                    {this.props.userData.isLoggedIn ?\r\n                        <div>\r\n                            <Title className=\"answer-table-heading\" level={4}>Result</Title>\r\n                            <Descriptions bordered title={null} border size=\"small\">\r\n                                <Descriptions.Item label=\"Name\">\r\n                                    {this.props.user.userid.name}\r\n                                </Descriptions.Item>\r\n                                \r\n                                <Descriptions.Item label=\"Email Id\">\r\n                                    {this.props.user.userid.emailid}\r\n                                </Descriptions.Item>\r\n\r\n                                <Descriptions.Item label=\"Contact\">\r\n                                    {this.props.user.userid.contact}\r\n                                </Descriptions.Item>\r\n                                \r\n                                <Descriptions.Item label=\"Score\">\r\n                                    {this.state.TotalScore}\r\n                                </Descriptions.Item>\r\n                            </Descriptions>\r\n                                        \r\n                            <br />\r\n\r\n                            <Collapse onChange={this.callback}>\r\n                                <Panel header=\"Candidate Response\" key=\"1\">\r\n                                    <Table\r\n                                        size=\"small\"\r\n                                        rowKey=\"qid\"\r\n                                        loading={this.state.loading}\r\n                                        columns={columns}\r\n                                        dataSource={this.state.data}\r\n                                        pagination={false}\r\n                                    />\r\n                                </Panel>\r\n                            </Collapse>\r\n                        </div> : null\r\n                    }\r\n                \r\n                    {\r\n                        this.props.userData.isLoggedIn ? null\r\n                            : this.props.trainee.hasGivenFeedBack ?\r\n                            <Row justify=\"space-around\" align=\"middle\">\r\n                                <Col xs={12} sm={12} md={12} lg={24} xl={24}>\r\n                                    <Result\r\n                                        status=\"success\"\r\n                                        title=\"Successfully You Have completed the assessment!\"\r\n                                        subTitle=\"Please Close the Window Now\"\r\n                                    />\r\n                                </Col>\r\n                            </Row> : \r\n                            <div>\r\n                                {/* Coding Section */}\r\n                                {\r\n                                    this.props.trainee.Iscoding ? \r\n                                    <div>\r\n                                        {\r\n                                            this.props.trainee.codingsubmitted ? <Feedback /> : <Coding /> \r\n                                        }\r\n                                    </div>\r\n                                    : <Feedback />\r\n                                }\r\n                            </div>\r\n                    }\r\n\r\n                    <Modal\r\n                        destroyOnClose={true}\r\n                        width=\"70%\"\r\n                        style={{top:'30px'}}\r\n                        title=\"Question details\"\r\n                        visible={this.state.Mvisible}\r\n                        onOk={this.handleCancel}\r\n                        onCancel={this.handleCancel}\r\n                        footer={null}\r\n                    >\r\n                        <SingleQuestionDetails qid={this.state.ActiveQuestionId} />\r\n                    </Modal>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n};\r\n\r\n// Single Question Details \r\nclass SingleQuestionDetails extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            fetching:false,\r\n            qdetails:null\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.setState({\r\n            fetching:true\r\n        })\r\n        Post({\r\n            url:apis.FETCH_SINGLE_QUESTION_BY_TRAINEE,\r\n            data:{\r\n                qid:this.props.qid\r\n            }\r\n        })\r\n        .then((response) => {\r\n            // console.log(response)\r\n            if(response.data.success){\r\n                this.setState({\r\n                    qdetails:response.data.data[0]\r\n                })\r\n            }\r\n            else{\r\n                Alert('error','Error !',response.data.message);\r\n            }\r\n            this.setState({\r\n                fetching:false\r\n            })\r\n        })\r\n        .catch((error) => {\r\n            this.setState({\r\n                fetching: false\r\n            });\r\n            // console.log(error)\r\n            Alert('error','Error !',\"Server Error\");\r\n        });\r\n    }\r\n    \r\n    render(){\r\n        const optn = ['A', 'B', 'C', 'D', 'E'];\r\n        let Optiondata = this.state.qdetails;\r\n        \r\n        if(Optiondata!==null){\r\n            return (\r\n                <div>\r\n                    <div className=\"mainQuestionDetailsContaine\">\r\n                        <div className=\"questionDetailsBody\">\r\n                            {Optiondata.body}\r\n                        </div>\r\n                        {Optiondata.quesimg?\r\n                            <div className=\"questionDetailsImageContainer\">\r\n                                <img alt=\"Unable to load\" className=\"questionDetailsImage\" src={Optiondata.quesimg} />  \r\n                            </div>\r\n                            : null\r\n                        }\r\n                        <div>\r\n                            {Optiondata.options.map((d,i)=>{\r\n                                return(\r\n                                    <div key={i}>\r\n                                        <Row type=\"flex\" justify=\"center\" className=\"QuestionDetailsOptions\">\r\n                                            <Col span={2}>\r\n                                                {\r\n                                                    d.isAnswer?<Button className=\"green\" shape=\"circle\">{optn[i]}</Button>:<Button type=\"primary\" shape=\"circle\">{optn[i]}</Button>\r\n                                                }\r\n                                                \r\n                                            </Col>\r\n                                            {d.optimg?\r\n                                                <Col span={6} style={{padding:'5px'}}>\r\n                                                    <img alt=\"Unable to load\" className=\"questionDetailsImage\" src={d.optimg} />\r\n                                                </Col>\r\n                                            :\r\n                                                null\r\n                                            }\r\n                                            {d.optimg?\r\n                                                <Col span={14}>\r\n                                                    <Markdown>{d.optbody}</Markdown>\r\n                                                </Col>\r\n                                            :\r\n                                                <Col span={20}>\r\n                                                    <Markdown>{d.optbody}</Markdown>\r\n                                                </Col>\r\n                                            }\r\n                                        </Row>\r\n                                    \r\n                                    </div>\r\n                                )\r\n                            })}\r\n                        </div>\r\n                    </div>\r\n    \r\n                </div>\r\n            )\r\n        }\r\n        else{\r\n            return(\r\n                <div className=\"skeletor-wrapper\">\r\n                    <Skeleton active />\r\n                    <Skeleton active />\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    userData: state.user,\r\n    trainee : state.trainee\r\n});\r\n\r\nexport default connect(mapStateToProps,{\r\n    FeedbackStatus,\r\n    getsubmitCoding\r\n})(Answer);","import React, { useState} from 'react';\r\nimport { Table, Tag, Card, Modal, Button } from 'antd';\r\nimport AnswerSheet from '../../trainee/answersheet/answer';\r\n\r\nexport default function Trainee (props){\r\n    return (\r\n        <div>\r\n            <Card>\r\n                <div className=\"download-section\">\r\n                    {props.stats.map(data => (\r\n                        <AnswerSheet user={data} key={data} />\r\n                    ))}\r\n                </div>\r\n            </Card>\r\n        </div>\r\n    )\r\n};\r\n","import React, { Fragment, useState, useEffect } from 'react';\nimport MaterialTable from 'material-table';\nimport { connect } from 'react-redux';\nimport { Input, Button, Typography, Tabs, Icon } from 'antd';\n\nimport { SecurePost } from '../../../services/axiosCall';\nimport apis from '../../../services/Apis';\nimport  Alert  from '../../common/alert';\n\nconst CodingResult = (props) => {\n  const [state, setstate] = useState([]);\n  const [loading, setloading] = useState(false);\n\n  useEffect(() => {\n    setloading(true);\n\n    SecurePost({\n      url: apis.CODING_SUBMISSION_GET,\n      data: {\n        testId: props.id\n      }\n    })\n    .then((response) => {\n      if(response.data.success){\n        setstate(response.data.result);\n        setloading(false);\n      }\n    })\n    .catch((error)=>{\n      console.log(error);\n      return Alert('error','Error!','Server Error');\n    });\n  }, []);\n\n\n  return (\n    <Fragment>\n      <MaterialTable\n        title=\"Coding Assessment Result\"\n        columns={[\n          { title: 'Id', field: 'user._id' },\n          { title: 'Name', field: 'user.name' },\n          { title: 'Email', field: 'user.emailid' },\n          { title: 'Question Id', field: 'question' },\n          { title: 'Score', field: 'score' },\n          { \n            title: 'Result', \n            field: 'result.str'\n          },\n          { title: 'Time', field: 'result.time' },\n          { title: 'Memory', field: 'result.memory' },\n        ]}\n\n        data={state}\n\n        options={{\n          filtering: true,\n          exportButton: true,\n          headerStyle: {\n            backgroundColor: '#01579b',\n            color: '#FFF'\n          }\n        }}\n      />\n    </Fragment>\n  );\n};\n\nexport default CodingResult;\n","import React, { Component } from 'react'\r\nimport { Tabs, Icon, Descriptions,Skeleton, Tag, Input ,message, Modal, Button} from 'antd';\r\nimport { connect } from 'react-redux';\r\nimport moment from 'moment';\r\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\r\n\r\n\r\nimport Questions from '../conducttest/questions'\r\nimport {updateQuestiosnActiveTest } from '../../../actions/trainerAction';\r\nimport { SecurePost } from '../../../services/axiosCall';\r\nimport apis from '../../../services/Apis';\r\nimport  Alert  from '../../common/alert';\r\n\r\nimport './testdetails.css';\r\nimport Stats from './stats';\r\nimport Trainee from './trainee';\r\nimport FeedBacks from './feedbacks';\r\nimport Analysis from './Analysis';\r\nimport Coding from './CodingResult';\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nclass TestDetails extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            id:this.props.trainer.DataActiveTestDetails.testDetailsId,\r\n            testdetails:null,\r\n            stats:null,\r\n            file:null,\r\n            loading:true,\r\n            maxMarks:0,\r\n            mainlink:'',\r\n            feedbacks: [],\r\n            visible: false\r\n        }\r\n        \r\n    }\r\n\r\n    showModal = () => {\r\n      this.setState({\r\n        visible: true,\r\n      });\r\n    };\r\n  \r\n    handleOk = e => {\r\n      // console.log(e);\r\n      this.setState({\r\n        visible: false,\r\n      });\r\n    };\r\n  \r\n    handleCancel = e => {\r\n      // console.log(e);\r\n      this.setState({\r\n        visible: false,\r\n      });\r\n    };\r\n\r\n    tabChange = (key) => {\r\n        // console.log(key)\r\n    };\r\n\r\n    componentDidMount(){\r\n        var link = window.location.href.split('/').splice(0,3);\r\n        var mainlink=\"\";\r\n        link.forEach((d,i)=>{\r\n            mainlink=mainlink+d+\"/\"\r\n        });\r\n        this.setState({mainlink});\r\n        var p1 = SecurePost({\r\n            url: `${apis.GET_SINGLE_TEST}`,\r\n            data: {\r\n                id: this.state.id\r\n            }\r\n        });\r\n\r\n        var p2 = SecurePost({\r\n            url: apis.GET_STATS,\r\n            data: {\r\n                testid: this.state.id\r\n            }\r\n        });\r\n\r\n        var p3 = SecurePost({\r\n            url: apis.GET_EXCEL,\r\n            data: {\r\n                id: this.state.id\r\n            }\r\n        });\r\n\r\n        var p4 = SecurePost({\r\n            url: apis.MAX_MARKS_FETCH,\r\n            data: {\r\n                testid: this.state.id\r\n            }\r\n        });\r\n\r\n        var p5 = SecurePost({\r\n            url: apis.GET_FEEDBACKS,\r\n            data: {\r\n                testid: this.state.id\r\n            }\r\n        });\r\n        \r\n        Promise.all([p1, p2, p3, p4, p5]).then((response) => {\r\n            // console.log(response);\r\n\r\n            if (response[0].data.success && response[1].data.success && response[2].data.success && response[3].data.success && response[4].data.success) {\r\n                this.setState({\r\n                    testdetails: response[0].data.data,\r\n                    stats: response[1].data.data,\r\n                    file: response[2].data.file,\r\n                    maxMarks: response[3].data.data,\r\n                    loading: false,\r\n                    feedbacks: response[4].data.data\r\n                });\r\n            }\r\n            else {\r\n                Alert('error', 'Error !', response[0].data.message + response[1].data.message + response[2].data.message)\r\n            }\r\n        }).catch((error) => {\r\n            // console.log(error);\r\n            Alert('error', 'Error !', 'Server Error.')\r\n        });\r\n    }\r\n    \r\n\r\n    render() {\r\n        if(this.state.loading){\r\n            return(\r\n                <div className=\"skeletor-wrapper\">\r\n                    <Skeleton active />\r\n                    <Skeleton active />\r\n                </div>\r\n            )\r\n        }\r\n        else{\r\n            let { testdetails, id } = this.state;\r\n\r\n            return (\r\n                <div>\r\n                    <Tabs defaultActiveKey=\"1\" onChange={ (e)=>this.tabChange(e)}>\r\n                        <TabPane tab={ <span><Icon type=\"home\" />Details</span> } key=\"1\">\r\n                            <Descriptions bordered title=\"\" border size=\"small\" column={{ xxl: 1, xl: 1, lg: 1, md: 1, sm: 1, xs: 1 }}>\r\n                                <Descriptions.Item label=\"Test Id\">{this.props.trainer.DataActiveTestDetails.testDetailsId}</Descriptions.Item>\r\n                                <Descriptions.Item label=\"Test Link\"><Input disabled={true} value={`${this.state.mainlink}user/conducttest?testid=${id}`} addonAfter={<CopyToClipboard text={`${this.state.mainlink}user/conducttest?testid=${id}`} onCopy={()=>message.success('Link Copied to clipboard')}><Icon type=\"copy\"/></CopyToClipboard>}/></Descriptions.Item>\r\n                                <Descriptions.Item label=\"Test Name\">{testdetails.title}</Descriptions.Item>\r\n                                <Descriptions.Item label=\"Test Type\">{testdetails.type}</Descriptions.Item>\r\n                                <Descriptions.Item label=\"Subject\">\r\n                                    <span>\r\n                                    {testdetails.subjects.map((tag,i) => {\r\n                                        let color ='geekblue';\r\n                                        return (\r\n                                        <Tag color={color} key={tag._id}>\r\n                                            {tag.topic.toUpperCase()}\r\n                                        </Tag>\r\n                                        );\r\n                                    })}\r\n                                    </span></Descriptions.Item>\r\n                                <Descriptions.Item label=\"Created on\">{moment(testdetails.createdAt).format(\"DD/ MM/YYYY\")}</Descriptions.Item>\r\n                            </Descriptions>\r\n                        </TabPane>\r\n\r\n                        {testdetails.testconducted?\r\n                            <TabPane tab={ <span><Icon type=\"question-circle\" />Questions</span> } key=\"2\">\r\n                                <Questions id={this.props.trainer.DataActiveTestDetails.testDetailsId} questionsOfTest={this.props.trainer.DataActiveTestDetails.testquestions} updateQuestiosnTest={this.props.updateQuestiosnActiveTest}/>\r\n                            </TabPane>\r\n                        : null}\r\n                        \r\n                        {testdetails.testconducted?\r\n                            <TabPane tab={ <span><Icon type=\"user\" />Candidates</span> } key=\"3\">\r\n                                <Trainee maxmMarks={this.state.maxMarks} id={this.state.id} stats={this.state.stats}/>\r\n                            </TabPane>\r\n                        : null}\r\n                        \r\n                        \r\n                        {testdetails.testconducted?\r\n                            <TabPane tab={ <span><Icon type=\"pie-chart\" />Statistics</span> } key=\"4\">\r\n                                <Stats id={this.state.id} stats={this.state.stats} file={this.state.file} maxmMarks={this.state.maxMarks}/>\r\n                            </TabPane>\r\n                        : null}\r\n                        \r\n                        {testdetails.testconducted?\r\n                            <TabPane tab={ <span><Icon type=\"message\" />Feedbacks</span> } key=\"5\">\r\n                               <FeedBacks feedbacks={this.state.feedbacks}/>\r\n                            </TabPane>\r\n                        : null}\r\n                        \r\n                        {testdetails.testconducted?\r\n                            <TabPane tab={ <span><Icon type=\"bar-chart\" />Analysis</span> } key=\"6\">\r\n                               <Analysis maxmMarks={this.state.maxMarks} id={this.state.id} stats={this.state.stats} />\r\n                            </TabPane>\r\n                        :null}\r\n\r\n\r\n                        {testdetails.addcoding?\r\n                            <TabPane tab={ <span><Icon type=\"code\" />Coding</span> } key=\"7\">\r\n                               <Coding id={this.state.id} />\r\n                            </TabPane>\r\n                        : null}\r\n                    </Tabs>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    trainer : state.trainer\r\n});\r\n\r\nexport default connect(mapStateToProps,{\r\n    updateQuestiosnActiveTest\r\n})(TestDetails);\r\n","import React, { Component } from 'react';\r\nimport { Table, Input, Button, Icon, Typography, Modal,Tag   } from 'antd';\r\nimport Highlighter from 'react-highlight-words';\r\nimport { connect } from 'react-redux';\r\nimport { \r\n    ChangeTestSearchText,\r\n    ChangeTestTableData,\r\n    ChangeTestDetailsModalState\r\n} from '../../../actions/trainerAction';\r\nimport './alltest.css';\r\nimport moment from 'moment';\r\n\r\nimport TestDetails from '../testdetails/testdetails';\r\n\r\nclass AllTests extends Component {\r\n\r\n    openModal = (id)=>{\r\n        this.props.ChangeTestDetailsModalState(true,id);\r\n    }\r\n    \r\n    closeModal = ()=>{\r\n        this.props.ChangeTestDetailsModalState(false,null);\r\n    }\r\n    componentDidMount(){\r\n      this.props.ChangeTestTableData();\r\n    }\r\n\r\n    getColumnSearchProps = dataIndex => ({\r\n        filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => (\r\n          <div style={{ padding: 8 }}>\r\n            <Input\r\n              ref={node => {\r\n                this.searchInput = node;\r\n              }}\r\n              placeholder={`Search ${dataIndex}`}\r\n              value={selectedKeys[0]}\r\n              onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\r\n              onPressEnter={() => this.handleSearch(selectedKeys, confirm)}\r\n              style={{ width: 188, marginBottom: 8, display: 'block' }}\r\n            />\r\n            <Button\r\n              type=\"primary\"\r\n              onClick={() => this.handleSearch(selectedKeys, confirm)}\r\n              icon=\"search\"\r\n              size=\"small\"\r\n              style={{ width: 90, marginRight: 8 }}\r\n            >\r\n              Search\r\n            </Button>\r\n            <Button onClick={() => this.handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>\r\n              Reset\r\n            </Button>\r\n          </div>\r\n        ),\r\n        filterIcon: filtered => (\r\n          <Icon type=\"search\" style={{ color: filtered ? '#1890ff' : undefined }} />\r\n        ),\r\n        onFilter: (value, record) =>\r\n          record[dataIndex]\r\n            .toString()\r\n            .toLowerCase()\r\n            .includes(value.toLowerCase()),\r\n        onFilterDropdownVisibleChange: visible => {\r\n          if (visible) {\r\n            setTimeout(() => this.searchInput.select());\r\n          }\r\n        },\r\n        render: text => (\r\n          <Highlighter\r\n            highlightStyle={{ backgroundColor: '#ffc069', padding: 0 }}\r\n            searchWords={[this.props.trainer.TestsearchText]}\r\n            autoEscape\r\n            textToHighlight={text.toString()}\r\n          />\r\n        ),\r\n      });\r\n    \r\n      handleSearch = (selectedKeys, confirm) => {\r\n        confirm();\r\n        this.props.ChangeTestSearchText(selectedKeys[0])\r\n      };\r\n    \r\n      handleReset = clearFilters => {\r\n        clearFilters();\r\n        this.props.ChangeTestSearchText('')\r\n      };\r\n\r\n    render() {\r\n      const { Title } = Typography;\r\n      const columns = [\r\n        {\r\n          title: 'Name',\r\n          dataIndex: 'title',\r\n          key: 'title',\r\n          ...this.getColumnSearchProps('title'),\r\n        },\r\n        {\r\n          title: 'Type',\r\n          dataIndex: 'type',\r\n          key: 'type',\r\n          ...this.getColumnSearchProps('type'),\r\n        },\r\n        {\r\n          title: 'Subjects',\r\n          dataIndex: 'subjects',\r\n          key: 'subjects._id',\r\n          render: tags => (\r\n            <span>\r\n              {tags.map((tag,i) => {\r\n                let color ='geekblue';\r\n                return (\r\n                  <Tag color={color} key={tag._id}>\r\n                    {tag.topic.toUpperCase()}\r\n                  </Tag>\r\n                );\r\n              })}\r\n            </span>\r\n          )\r\n        },\r\n        {\r\n          title: 'Created on',\r\n          dataIndex: 'createdAt',\r\n          key: 'createdAt',\r\n          ...this.getColumnSearchProps('createdAt'),\r\n          render: tags => (\r\n            <span>\r\n              {moment(tags).format(\"DD/ MM/YYYY\")}\r\n            </span>\r\n          )\r\n        },\r\n        {\r\n          title: 'Action',\r\n          key: '_id',\r\n          dataIndex: '_id',\r\n          render: (key) => (\r\n            <span>\r\n              <Button type=\"primary\" shape=\"circle\" icon=\"info-circle\" onClick={()=>this.openModal(key)}/>\r\n            </span>\r\n          ),\r\n        },\r\n      ];\r\n        return (\r\n            <div className=\"admin-table-container\">\r\n\r\n              <div className=\"register-trainer-form-header\">\r\n                <Title level={4} style={{color:'#fff',textAlign:'center'}}>List of Assessments</Title>\r\n              </div>\r\n\r\n              <Table \r\n                bordered={true} \r\n                columns={columns} \r\n                dataSource={this.props.trainer.TestTableData} \r\n                size=\"medium\" \r\n                pagination={{ pageSize: 5 }}\r\n                loading={this.props.trainer.TestTableLoading}\r\n                rowKey=\"_id\" \r\n              />\r\n\r\n              <Modal\r\n                visible={this.props.trainer.TestDetailsmodalOpened}\r\n                title=\"Test details\"\r\n                onOk={this.handleOk}\r\n                onCancel={this.closeModal}\r\n                afterClose={this.closeModal}\r\n                style={{top :'20px',padding:'0px',backgroundColor:'rgb(155,175,190)'}}\r\n                width=\"90%\"\r\n                destroyOnClose={true}\r\n                footer={[\r\n                  \r\n                ]}\r\n              >\r\n                <TestDetails />\r\n              </Modal>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    trainer : state.trainer\r\n});\r\n\r\nexport default connect(mapStateToProps,{\r\n    ChangeTestSearchText,\r\n    ChangeTestTableData,\r\n    ChangeTestDetailsModalState\r\n})(AllTests);","import { SecurePost } from '../services/axiosCall';\r\nimport apis from '../services/Apis';\r\nimport Alert from '../components/common/alert';\r\nexport const changeConducttestId = (d)=> dispatch =>{\r\n    dispatch({\r\n       type : 'SET_CONDUCT_TEST_ID',\r\n       payload : d\r\n    })\r\n}\r\n\r\nexport const changeTestRegisterLink = (d)=> dispatch =>{\r\n    dispatch({\r\n       type : 'SET_TEST_REGISTER_LINK',\r\n       payload : d\r\n    })\r\n}\r\n\r\nexport const changeTestRegisterStatus = (d)=> dispatch =>{\r\n    dispatch({\r\n       type : 'CHANGE_TEST_ISREGISTRATION_AVAILABLE',\r\n       payload : d\r\n    })\r\n}\r\n\r\nexport const changeTestStatus = (d) => dispatch => {\r\n    dispatch({\r\n        type: 'CHANGE_BEGIN_TEST_STATUS',\r\n        payload: d\r\n    });\r\n};\r\n\r\n\r\nexport const updateCurrentTestBasicDetails = (d) => dispatch => {\r\n    SecurePost({\r\n        url: `${apis.GET_SINGLE_TEST_DETAILS_BASIC}`,\r\n        data: {\r\n            id: d\r\n        }\r\n    }).then((response) => {\r\n        if (response.data.success) {\r\n            // console.log(response.data.data);\r\n            dispatch({\r\n                type: 'UPDATE_TEST_BASIC_DETAILS',\r\n                payload: response.data.data\r\n            });\r\n        }\r\n        else {\r\n            return Alert('error', 'Error!', response.data.message);\r\n        }\r\n    })\r\n    .catch((error) => {\r\n        // console.log(error);\r\n        return Alert('error', 'Error!', 'Unable to refresh test status');\r\n    });\r\n};\r\n\r\n\r\n\r\nexport const updateCandidatesTest = (d) => dispatch => {\r\n    dispatch({\r\n        type: 'CHANGE_CANDIDATES_OF_TEST',\r\n        payload: d\r\n    });\r\n};\r\n\r\n\r\nexport const updateQuestiosnTest = (d) => {\r\n    return {\r\n        type: 'CHANGE_QUESTIONS_OF_TEST',\r\n        payload: d\r\n    };\r\n};","import apis from '../services/Apis';\r\nimport Alert from '../components/common/alert';\r\nimport { SecurePost } from '../services/axiosCall';\r\nexport const changeStep = (d)=> dispatch =>{\r\n    dispatch({\r\n       type : 'CHANGE_ACTIVE_STEP',\r\n       payload : d\r\n    })\r\n}\r\n\r\nexport const changeBasicNewTestDetails = (d) => dispatch => {\r\n    dispatch({\r\n        type: 'CHANGE_BASIC_NEW_TEST_DETAILS',\r\n        payload: d\r\n    });\r\n};\r\n\r\nexport const pushQuestionToQueue = (d) => dispatch => {\r\n    dispatch({\r\n        type: 'ADD_QUESTION_TO_QUESTION_QUEUSE',\r\n        payload: d\r\n    });\r\n};\r\n\r\nexport const removeQuestionFromMainQueue = (d)=> dispatch =>{\r\n    dispatch({\r\n        type: 'REMOVE_QUESTION_FROM_MAIN_QUEUE',\r\n        payload:d\r\n    })\r\n}\r\n\r\nexport const changeMode = (d)=> dispatch =>{\r\n    dispatch({\r\n        type : 'CHANGE_MODE_QUESTION_SELECT',\r\n        payload:d\r\n    })\r\n}\r\n\r\n\r\n\r\nexport const fetchSubjectWiseQuestion = (d) => dispatch =>{\r\n    SecurePost({\r\n        url : `${apis.GET_ALL_QUESTIONS}`,\r\n        data:{\r\n            subject : d\r\n        }\r\n    })\r\n    .then((response) => {\r\n        // console.log(response);\r\n        if(response.data.success){\r\n            dispatch({\r\n                type: 'FETCH_QUESTIONS_BASED_ON_SUBJECT',\r\n                payload: response.data.data\r\n            });\r\n        }\r\n        else{\r\n            Alert('error','Error!',response.data.message);\r\n            dispatch({\r\n                type: 'FETCH_QUESTIONS_BASED_ON_SUBJECT',\r\n                payload: []\r\n            });\r\n        }\r\n    })\r\n    .catch((error) => {\r\n        Alert('error','Error!','Server Error');\r\n        dispatch({\r\n            type: 'FETCH_QUESTIONS_BASED_ON_SUBJECT',\r\n            payload: []\r\n        });\r\n    });\r\n}\r\n\r\n// Add Job Data\r\nexport const addJobData = (check, data)=> dispatch =>{\r\n    dispatch({\r\n        type : 'ADD_JOB_DATA',\r\n        payload1: check,\r\n        payload2: data\r\n    });\r\n};\r\n\r\n// Add Coding Question Validator\r\nexport const checkcode = (data)=> dispatch =>{\r\n    dispatch({\r\n        type : 'ADD_CODING_QUESTION_CHECKER',\r\n        payload: data\r\n    });\r\n};\r\n\r\n// Add Coding Question From Queue\r\nexport const pushCodingQuestionToQueue = (data) => dispatch => {\r\n    dispatch({\r\n        type: 'ADD_CODING_QUESTION_TO_QUESTION_QUEUE',\r\n        payload: data\r\n    });\r\n};\r\n\r\n// Remove Coding Question From Queue\r\nexport const removeCodingQuestionFromMainQueue = (data)=> dispatch =>{\r\n    dispatch({\r\n        type: 'REMOVE_CODING_QUESTION_FROM_MAIN_QUEUE',\r\n        payload:data\r\n    });\r\n};","import React from 'react';\r\nimport {CopyToClipboard} from 'react-copy-to-clipboard';\r\nimport { Input,Button,Descriptions, Icon,message   } from 'antd';\r\nimport { connect } from 'react-redux';\r\nimport moment from 'moment';\r\n\r\nimport {\r\n    changeTestRegisterLink,\r\n    updateCurrentTestBasicDetails,\r\n    changeTestRegisterStatus,\r\n    changeTestStatus,\r\n    updateCandidatesTest\r\n} from '../../../actions/conductTest';\r\nimport { SecurePost } from '../../../services/axiosCall';\r\nimport apis from '../../../services/Apis';\r\nimport Alert from '../../common/alert';\r\n\r\nclass TestDetails extends React.Component {\r\n\r\n    componentDidMount(){\r\n        var link = window.location.href.split('/').splice(0,3);\r\n        var mainlink=\"\";\r\n        link.forEach((d, i) => {\r\n            mainlink = mainlink + d + \"/\"\r\n        });\r\n        \r\n        mainlink=mainlink+`candidate/register?testid=${this.props.conduct.id}`\r\n        this.props.changeTestRegisterLink(mainlink);\r\n        this.props.updateCurrentTestBasicDetails(this.props.conduct.id);\r\n        this.props.updateCandidatesTest();\r\n    };\r\n\r\n    changeRegistrationStatus = (d) => {\r\n        SecurePost({\r\n            url: `${apis.STOP_REGISTRATION}`,\r\n            data: {\r\n                id: this.props.conduct.id,\r\n                status: d\r\n            }\r\n        }).then((response) => {\r\n            if (response.data.success) {\r\n                this.props.changeTestRegisterStatus(d)\r\n                Alert('success', 'Success!', 'Registration status changed');\r\n            }\r\n            else {\r\n                Alert('error', 'Error!', response.data.message)\r\n            }\r\n        }).catch((error) => {\r\n            // console.log(error);\r\n            Alert('error', 'Error!', 'Server Error')\r\n        });\r\n    };\r\n\r\n    changeTestStatus = () => {\r\n        SecurePost({\r\n            url: `${apis.START_TEST_BY_TRAINER}`,\r\n            data: {\r\n                id: this.props.conduct.id\r\n            }\r\n        }).then((response) => {\r\n            // console.log(response);\r\n            if (response.data.success) {\r\n                this.props.changeTestStatus(response.data.data);\r\n                Alert('success', 'Success!', 'Test has begin');\r\n            }\r\n            else {\r\n                Alert('error', 'Error!', response.data.message)\r\n            }\r\n        }).catch((error) => {\r\n            // console.log(error);\r\n            Alert('error', 'Error!', 'Server Error')\r\n        });\r\n    };\r\n\r\n    endTestByTrainee = () => {\r\n        SecurePost({\r\n            url: `${apis.END_TEST_BY_TRAINER}`,\r\n            data: {\r\n                id: this.props.conduct.id\r\n            }\r\n        })\r\n        .then((response) => {\r\n            // console.log(response);\r\n            if (response.data.success) {\r\n                this.props.changeTestStatus(response.data.data);\r\n                Alert('success', 'Success!', 'Test has ended');\r\n            }\r\n            else {\r\n                Alert('error', 'Error!', response.data.message)\r\n            }\r\n        })\r\n        .catch((error) => {\r\n            // console.log(error);\r\n            Alert('error', 'Error!', 'Server Error')\r\n        });\r\n    };\r\n\r\n    getCandidates = () => {\r\n        SecurePost({\r\n            url: `${apis.GET_TEST_CANDIDATES}`,\r\n            data: {\r\n                id: this.props.conduct.id\r\n            }\r\n        }).then((response) => {\r\n            // console.log(response);\r\n        }).catch((error) => {\r\n            console.log(error)\r\n        });\r\n    };\r\n    \r\n    render(){\r\n        // console.log(this.props.conduct.basictestdetails.testbegins);\r\n        return (\r\n            <div>\r\n                <Descriptions \r\n                    size=\"small\" \r\n                    column={4} \r\n                    title=\"Basic Test Info\" \r\n                    layout=\"vertical\" \r\n                    bordered={true}\r\n                >\r\n                    <Descriptions.Item span={1} label=\"Assessment Id\">\r\n                        {this.props.conduct.id}\r\n                    </Descriptions.Item>\r\n\r\n                    <Descriptions.Item span={3} label=\"Registration Link\"><Input disabled={true} value={this.props.conduct.testRegisterLink} addonAfter={<CopyToClipboard text={this.props.conduct.testRegisterLink} onCopy={() => message.success('Link Copied to clipboard')}><Icon type=\"copy\" /></CopyToClipboard>} /></Descriptions.Item>\r\n\r\n                    <Descriptions.Item span={1} label={this.props.conduct.basictestdetails.isRegistrationavailable ? \"Registration Open\" : \"Registration Closed\"}>\r\n                        <Button disabled={this.props.conduct.basictestdetails.testbegins} onClick={() => { this.changeRegistrationStatus(!this.props.conduct.basictestdetails.isRegistrationavailable) }} type={this.props.conduct.basictestdetails.isRegistrationavailable ? \"danger\" : \"primary\"}>{this.props.conduct.basictestdetails.isRegistrationavailable ? \"Stop Registration\" : \"Open Registration\"}</Button>\r\n                    </Descriptions.Item>\r\n                    \r\n                    <Descriptions.Item span={3} label={this.props.conduct.basictestdetails.testbegins ? \"Test on Progress\" : \"Test has not started yet\"}><Button disabled={this.props.conduct.basictestdetails.testbegins} onClick={() => { this.changeTestStatus() }} type={\"primary\"}>Start Test</Button><Button disabled={!this.props.conduct.basictestdetails.testbegins} onClick={() => { this.endTestByTrainee() }} type={\"danger\"}>End Test</Button></Descriptions.Item>\r\n                    <Descriptions.Item span={1} label=\"Assessment Start Time\">{moment(this.props.conduct.basictestdetails.start).format('MMMM Do YYYY, h:mm:ss a')}</Descriptions.Item>\r\n                    <Descriptions.Item span={1} label=\"Assessment End Time\">{moment(this.props.conduct.basictestdetails.end).format('MMMM Do YYYY, h:mm:ss a')}</Descriptions.Item>\r\n                </Descriptions>\r\n            </div>\r\n        );\r\n    };\r\n};\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n    trainer: state.trainer,\r\n    conduct: state.conduct\r\n});\r\n\r\nexport default connect(mapStateToProps,{\r\n    changeTestRegisterLink,\r\n    updateCurrentTestBasicDetails,\r\n    changeTestRegisterStatus,\r\n    changeTestStatus,\r\n    updateCandidatesTest\r\n})(TestDetails);","import React, { Component } from 'react'\r\nimport { changeConducttestId, updateCandidatesTest } from '../../../actions/conductTest';\r\nimport { connect } from 'react-redux';\r\nimport apis from '../../../services/Apis';\r\nimport { SecurePost } from '../../../services/axiosCall';\r\nimport Alert from '../../common/alert';\r\nimport { Table, Input, Button, Icon, message, Typography, Modal, Progress } from 'antd';\r\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\r\nimport Highlighter from 'react-highlight-words';\r\nimport CSVReader from \"react-csv-reader\";\r\nimport './conducttes.css';\r\n\r\nconst { Title } = Typography;\r\n\r\n// csv papaparse\r\nconst papaparseOptions = {\r\n  header: true,\r\n  dynamicTyping: true,\r\n  skipEmptyLines: true,\r\n  transformHeader: header => header.toLowerCase().replace(/\\W/g, \"_\")\r\n};\r\n\r\nclass Candidates extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            loading:false,\r\n            searchText: '',\r\n            mainlink: '',\r\n            visible: false,\r\n            progress: 0,\r\n        }\r\n    }\r\n\r\n    getColumnSearchProps = dataIndex => ({\r\n        filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => (\r\n          <div style={{ padding: 8 }}>\r\n            <Input\r\n              ref={node => {\r\n                this.searchInput = node;\r\n              }}\r\n              placeholder={`Search ${dataIndex}`}\r\n              value={selectedKeys[0]}\r\n              onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\r\n              onPressEnter={() => this.handleSearch(selectedKeys, confirm)}\r\n              style={{ width: 188, marginBottom: 8, display: 'block' }}\r\n            />\r\n            <Button\r\n              type=\"primary\"\r\n              onClick={() => this.handleSearch(selectedKeys, confirm)}\r\n              icon=\"search\"\r\n              size=\"small\"\r\n              style={{ width: 90, marginRight: 8 }}\r\n            >\r\n              Search\r\n            </Button>\r\n            <Button onClick={() => this.handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>\r\n              Reset\r\n            </Button>\r\n          </div>\r\n        ),\r\n        filterIcon: filtered => (\r\n          <Icon type=\"search\" style={{ color: filtered ? '#1890ff' : undefined }} />\r\n        ),\r\n        onFilter: (value, record) =>\r\n          record[dataIndex]\r\n            .toString()\r\n            .toLowerCase()\r\n            .includes(value.toLowerCase()),\r\n        onFilterDropdownVisibleChange: visible => {\r\n          if (visible) {\r\n            setTimeout(() => this.searchInput.select());\r\n          }\r\n        },\r\n        render: text => (\r\n          <Highlighter\r\n            highlightStyle={{ backgroundColor: '#ffc069', padding: 0 }}\r\n            searchWords={[this.state.searchText]}\r\n            autoEscape\r\n            textToHighlight={text.toString()}\r\n          />\r\n        ),\r\n    });\r\n\r\n\r\n    handleSearch = (selectedKeys, confirm) => {\r\n        confirm();\r\n        this.setState({ searchText: selectedKeys[0] });\r\n    };\r\n    \r\n    handleReset = clearFilters => {\r\n        clearFilters();\r\n        this.setState({ searchText: '' });\r\n    };\r\n\r\n    componentDidMount(){\r\n      var link = window.location.href.split('/').splice(0,3);\r\n      var mainlink=\"\";\r\n      link.forEach((d,i)=>{\r\n          mainlink=mainlink+d+\"/\"\r\n      });\r\n      this.setState({mainlink});\r\n      this.refreshUserList(); \r\n  }\r\n  \r\n  // Modal\r\n  showModal = () => {\r\n      this.setState({\r\n        visible: true,\r\n      });\r\n  };\r\n\r\n  handleOk = e => {\r\n      // console.log(e);\r\n      this.setState({\r\n        visible: false,\r\n      });\r\n  };\r\n\r\n  handleCancel = e => {\r\n      // console.log(e);\r\n      this.setState({\r\n        visible: false,\r\n      });\r\n  };\r\n\r\n  // csv parser\r\n  handleForce = (data, fileInfo) => {\r\n\r\n    // console.log(data);\r\n    \r\n  SecurePost({\r\n      url: `${apis.IMPORT_CANDIDATES}`,\r\n      data: {\r\n        testid: this.props.conduct.id,\r\n        data: data,\r\n      }\r\n    })\r\n    .then((response) => {\r\n      if (response.data.success) {\r\n          this.setState({progress: 100});\r\n          this.props.updateCandidatesTest(response.data.data);\r\n      }\r\n      else {\r\n          Alert('error', 'Error!', response.data.message)\r\n      }\r\n        this.setState({\r\n          loading: false\r\n        });\r\n    })\r\n    .catch((error) => {\r\n      Alert('error', 'Error!', 'Server Error')\r\n        this.setState({loading: false});\r\n  });\r\n};\r\n\r\n\r\n  refreshUserList = () => {\r\n    this.setState({\r\n      loading: true\r\n    });\r\n        \r\n    SecurePost({\r\n      url: `${apis.GET_TEST_CANDIDATES}`,\r\n      data: {\r\n        id: this.props.conduct.id\r\n      }\r\n    })\r\n      .then((response) => {\r\n        //console.log(response);\r\n        if (response.data.success) {\r\n          this.props.updateCandidatesTest(response.data.data);\r\n        }\r\n        else {\r\n          Alert('error', 'Error!', response.data.message)\r\n        }\r\n        this.setState({\r\n          loading: false\r\n        });\r\n      }).catch((error) => {\r\n        //console.log(error);\r\n        Alert('error', 'Error!', 'Server Error')\r\n        this.setState({\r\n          loading: false\r\n        });\r\n      });\r\n  };\r\n\r\n  getResume = (file) => {\r\n    window.open(file);\r\n  };\r\n\r\n    render() {\r\n        const columns = [\r\n            {\r\n              title: 'Name',\r\n              dataIndex: 'name',\r\n              key: 'name',\r\n              ...this.getColumnSearchProps('name'),\r\n            },\r\n            {\r\n              title: 'Email Id',\r\n              dataIndex: 'emailid',\r\n              key: 'emailid',\r\n              ...this.getColumnSearchProps('emailid'),\r\n            },\r\n            {\r\n                title: 'Contact No',\r\n                dataIndex: 'contact',\r\n                key: 'contact',\r\n                ...this.getColumnSearchProps('contact'),\r\n            },\r\n            {\r\n              title: 'Resume',\r\n              dataIndex: 'resume',\r\n              key: 'resume',\r\n              render: id => (\r\n                <Button\r\n                  color=\"primary\"\r\n                  onClick={() => this.getResume(id)}\r\n                >\r\n                  Download Resume\r\n                </Button>\r\n              ),\r\n            },\r\n            {\r\n                title: 'Links',\r\n                key: '_id',\r\n                dataIndex: '_id',\r\n                render: id => (\r\n                  <Input disabled={true} value={`${this.state.mainlink}candidate/taketest?testid=${this.props.conduct.id}&traineeid=${id}`} addonAfter={<CopyToClipboard text={`${this.state.mainlink}candidate/taketest?testid=${this.props.conduct.id}&traineeid=${id}`} onCopy={()=>message.success('Link Copied to clipboard')}><Icon type=\"copy\"/></CopyToClipboard>}/>\r\n                ),\r\n            }\r\n        ];\r\n\r\n      return (\r\n        <div className=\"candidate-list-header-container\">\r\n          <ul style={{listStyle: 'none'}}>\r\n            <li style={{ float: 'left', marginRight: '5px'}}>\r\n            <Button\r\n              className=\"reload-button\"\r\n              type=\"primary\"\r\n              icon=\"reload\"\r\n              loading={this.state.loading}\r\n              onClick={this.refreshUserList}\r\n            >\r\n              Reload!\r\n            </Button>\r\n            </li>\r\n\r\n            <li>\r\n              <Button\r\n                className=\"reload-button\"\r\n                type=\"primary\"\r\n                icon=\"cloud-download\"\r\n                onClick={this.showModal}\r\n              >\r\n                Import Candidates\r\n              </Button>\r\n            </li>\r\n          </ul>\r\n\r\n          <div className=\"register-trainer-form-header\">\r\n            <Title level={4} style={{ color: '#fff', textAlign: 'center' }}>List of Registered Candidates</Title>\r\n          </div>\r\n          <Table\r\n            columns={columns}\r\n            bordered={true}\r\n            dataSource={this.props.conduct.registeredCandidates}\r\n            rowKey=\"_id\"\r\n            loading={this.state.loading}\r\n          />\r\n\r\n        <Modal\r\n          title=\"Import Candidates\"\r\n          visible={this.state.visible}\r\n          onOk={this.handleOk}\r\n          onCancel={this.handleCancel}\r\n          footer={[ ]}\r\n        >\r\n          <p><b>Note :</b> Upload csv file to import candidates data-</p>\r\n          <p>CSV file header should contain - name, emailid, contact</p>\r\n          <CSVReader\r\n            cssClass=\"react-csv-input\"\r\n            label=\"\"\r\n            onFileLoaded={this.handleForce}\r\n            parserOptions={papaparseOptions}\r\n          />\r\n          <Progress percent={this.state.progress} />\r\n        </Modal>\r\n        </div>\r\n      );\r\n  };\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    conduct : state.conduct\r\n});\r\n\r\nexport default connect(mapStateToProps,{\r\n    changeConducttestId,\r\n    updateCandidatesTest\r\n})(Candidates);","import React, { Fragment } from 'react';\nimport MaterialTable from 'material-table';\nimport { connect } from 'react-redux';\nimport { Input, Button, Typography, Tabs, Icon } from 'antd';\n\nconst JobApplications = () => {\n    return (\n        <Fragment>\n            <MaterialTable\n              title=\"Job Applications\"\n              columns={[]}\n              options={{\n                exportButton: true,\n                headerStyle: {\n                  backgroundColor: '#3f51b5',\n                  color: '#FFFF'\n                },\n              }}\n            />\n        </Fragment>\n    );\n};\n\nexport default JobApplications;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Input,Button, Typography,Tabs, Icon } from 'antd';\r\nimport './conducttes.css';\r\n\r\nimport { \r\n    changeConducttestId, \r\n    updateCandidatesTest, \r\n    updateQuestiosnTest \r\n} from '../../../actions/conductTest';\r\nimport { changeStep } from '../../../actions/testAction';\r\n\r\nimport TestDetails from './details';\r\nimport Candidates from './candidates';\r\nimport Questions from './questions';\r\nimport JobApplications from './JobApplications';\r\n\r\nconst { Title } = Typography;\r\nconst { TabPane } = Tabs;\r\n\r\nclass ConductTestS extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.props.changeConducttestId(this.props.testid);\r\n        this.state={\r\n            localTestId:null,\r\n            needRedirect:false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.changeStep(0);\r\n    };\r\n\r\n    ChangeLocalTestId = (d) => {\r\n        this.setState({\r\n            localTestId: d.target.value\r\n        })\r\n    };\r\n\r\n    ChangetestId = (d) => {\r\n        this.setState({\r\n            needRedirect: true\r\n        })\r\n    };\r\n\r\n    render() {\r\n        if(this.state.needRedirect){\r\n            return window.location.href=`/user/conducttest?testid=${this.state.localTestId}`\r\n        }\r\n        else{\r\n            return (\r\n                <div className=\"conduct-test-main-wrapper\">\r\n                    {!this.props.conduct.id ? \r\n                    <div>\r\n                        <Title style={{width:'100%',textAlign:'center'}} level={4}>Enter Test Id</Title>\r\n                        <div className=\"test-conduct-testid-form\">\r\n                            <Input placeholder=\"Enter test id\" onChange={this.ChangeLocalTestId} value={this.state.localTestId}/>\r\n                            <Button onClick={this.ChangetestId}  type=\"primary\" style={{marginTop:'30px'}}>Proceed</Button>\r\n                        </div>\r\n                    </div>:\r\n                    <div>\r\n                        <CC key={this.props.conduct.basictestdetails.testconducted} />\r\n                    </div>}\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n};\r\n\r\n// ...\r\nclass C extends Component {\r\n    render() {\r\n        // console.log(this.props.conduct.basictestdetails.testconducted);\r\n        if(this.props.conduct.basictestdetails.testconducted){\r\n            return(\r\n                <div className=\"reasendmail-container-register\">\r\n                    <Title style={{color:'#fff'}} level={4}>The Test has ended! Go to all tests to check the results</Title>    \r\n                </div>\r\n            )\r\n        }\r\n        else{\r\n            return (\r\n                <div>\r\n                    <TestDetails/>\r\n                    <Tabs defaultActiveKey=\"1\" style={{marginTop:'20px'}}>\r\n                        \r\n                        <TabPane tab={<span><Icon type=\"user\" />Registered Trainee</span>} key=\"1\">\r\n                            <Candidates />\r\n                        </TabPane>\r\n\r\n                        <TabPane tab={<span><Icon type=\"question-circle\" />Questions</span>} key=\"2\">\r\n                            <Questions id={this.props.conduct.id} questionsOfTest={this.props.conduct.questionsOfTest} updateQuestiosnTest={this.props.updateQuestiosnTest}  />\r\n                        </TabPane>\r\n\r\n                        <TabPane tab={<span><Icon type=\"solution\" />Job Applications</span>} key=\"3\">\r\n                            <JobApplications />\r\n                        </TabPane>\r\n\r\n                    </Tabs>\r\n                </div>\r\n            )\r\n        }\r\n        \r\n    }\r\n};\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n    trainer : state.trainer,\r\n    conduct : state.conduct\r\n});\r\n\r\n\r\nlet CC=connect(mapStateToProps,{\r\n    changeConducttestId,\r\n    updateCandidatesTest,\r\n    updateQuestiosnTest\r\n})(C);\r\n\r\n\r\nexport default connect(mapStateToProps, {\r\n    changeStep,\r\n    changeConducttestId,\r\n    updateCandidatesTest,\r\n    updateQuestiosnTest\r\n})(ConductTestS);","export const steps = [\r\n    {\r\n      title: 'Basic details'\r\n    },\r\n    {\r\n      title: 'Add Job Post'\r\n    },\r\n    {\r\n      title: 'Select Questions'\r\n    },\r\n    {\r\n      title: 'Add Programming'\r\n    },\r\n    {\r\n      title: 'Finalize'\r\n    }\r\n];","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { Form, InputNumber, Input, Button, Select, DatePicker } from 'antd';\r\nimport moment from 'moment';\r\n\r\nimport { changeStep,changeBasicNewTestDetails } from '../../../actions/testAction';\r\nimport { SecurePost } from '../../../services/axiosCall';\r\nimport './newtest.css';\r\nimport apis from '../../../services/Apis';\r\n\r\nmoment().utcOffset(\"+05:30\");\r\n\r\nconst { Option } = Select;\r\nconst { RangePicker } = DatePicker;\r\n\r\nclass BasicTestFormO extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            checkingName: \"\"\r\n        };\r\n    };\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        this.props.form.validateFields((err, values) => {\r\n            if (!err) {\r\n                // console.log(values)\r\n                this.props.changeBasicNewTestDetails({\r\n                    testType: values.type,\r\n                    testTitle: values.title,\r\n                    testDuration: values.duration,\r\n                    OrganisationName: values.organisation,\r\n                    testSubject: values.subjects,\r\n                    startTime: values.start,\r\n                    endTime: values.end\r\n                });\r\n                this.props.changeStep(1);\r\n            }\r\n        });\r\n    };\r\n\r\n    validateTestName = (rule, value, callback) => {\r\n        if(value.length>=5){\r\n            this.setState({\r\n                checkingName:\"validating\"\r\n            })\r\n            SecurePost({\r\n                url: apis.CHECK_TEST_NAME,\r\n                data: {\r\n                    testname: value\r\n                }\r\n            }).then((data) => {\r\n                //console.log(data);\r\n                if (data.data.success) {\r\n                    if (data.data.can_use) {\r\n                        this.setState({\r\n                            checkingName: \"success\"\r\n                        });\r\n                        callback();\r\n                    }\r\n                    else {\r\n                        this.setState({\r\n                            checkingName: \"error\"\r\n                        });\r\n                        callback('Another test exist with same name.');\r\n                    }\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        checkingName: \"success\"\r\n                    })\r\n                    callback()\r\n                }\r\n            }).catch((ee) => {\r\n                //console.log(ee);\r\n                this.setState({\r\n                    checkingName: \"success\"\r\n                });\r\n                callback();\r\n            });\r\n        }\r\n        else{\r\n            callback();\r\n        }        \r\n    };\r\n\r\n    render() {\r\n        const { getFieldDecorator } = this.props.form;\r\n        return (\r\n            <div className=\"basic-test-form-outer\">\r\n                <div className=\"basic-test-form-inner\">\r\n                    <Form\r\n                        onSubmit={this.handleSubmit}\r\n                        autoComplete=\"off\"\r\n                    >\r\n                        <Form.Item label=\"Test Type\"  hasFeedback>\r\n                            {getFieldDecorator('type', {\r\n                                initialValue : this.props.test.newtestFormData.testType,\r\n                                rules: [{ required: true, message: 'Please select a test type' }],\r\n                            })(\r\n                                <Select placeholder=\"Test Type\">\r\n                                    <Option value=\"skill-test\">Skill Test</Option>\r\n                                    <Option value=\"university-hiring\">University Hiring</Option>\r\n                                    <Option value=\"organisation-hiring\">Organisation hiring</Option>\r\n                                </Select>\r\n                            )}\r\n                        </Form.Item>\r\n\r\n                        <Form.Item label=\"Test Title\"  hasFeedback validateStatus={this.state.checkingName}>\r\n                            {getFieldDecorator('title', {\r\n                                initialValue : this.props.test.newtestFormData.testTitle,\r\n                                rules: [\r\n                                    { required: true, message: 'Please give the test title' },\r\n                                    { min:5, message: 'Title should be atleast 5 character long' },\r\n                                    { validator: this.validateTestName }\r\n                                ],\r\n                                \r\n                            })(\r\n                                <Input placeholder=\"Test Title\" />\r\n                            )}\r\n                        </Form.Item>\r\n\r\n                        <Form.Item label=\"Subjects\"  hasFeedback>\r\n                            {getFieldDecorator('subjects', {\r\n                                initialValue : this.props.test.newtestFormData.testSubject,\r\n                                rules: [{ required: true, message: 'Please select a test type' }],\r\n                            })(\r\n                                <Select\r\n                                mode=\"multiple\"\r\n                                placeholder=\"Select one or more subjects\"\r\n                                style={{ width: '100%' }}\r\n                                allowClear={true}\r\n                                optionFilterProp=\"s\"\r\n                                >\r\n                                    {this.props.admin.subjectTableData.map(item => (\r\n                                        <Select.Option key={item._id} value={item._id} s={item.topic}>\r\n                                        {item.topic}\r\n                                        </Select.Option>\r\n                                    ))}\r\n                                </Select>\r\n                            )}\r\n                        </Form.Item>\r\n\r\n                        <Form.Item label=\"Test Duration ( Min. test duration-10m )\" hasFeedback>\r\n                            {getFieldDecorator('duration', {\r\n                                initialValue : this.props.test.newtestFormData.testDuration,\r\n                                rules: [{ required: true, message: 'Please give test duration' }],\r\n                            })(\r\n                                <InputNumber style={{width:'100%'}}  placeholder=\"Test Duration\" min={10} max={180}/>\r\n                            )}\r\n                        </Form.Item>\r\n\r\n                        <Form.Item label=\"Organisation Name\"  hasFeedback>\r\n                            {getFieldDecorator('organisation', {\r\n                                initialValue : this.props.test.newtestFormData.OrganisationName\r\n                            })(\r\n                                <Input placeholder=\"Organisation Name\" />\r\n                            )}\r\n                        </Form.Item>\r\n\r\n                        <Form.Item label=\"Test Start Time\"  hasFeedback>\r\n                            {\r\n                                getFieldDecorator('start', {\r\n                                    rules: [{ required: true, message: 'Please give test start time' }],\r\n                                })(\r\n                                    <DatePicker\r\n                                        showTime\r\n                                        placeholder=\"Select Start Time\"\r\n                                        onChange={this.onChangeStart}\r\n                                        onOk={this.onOkStart}\r\n                                    />\r\n                                )\r\n                            }\r\n                        </Form.Item>\r\n\r\n                        <Form.Item label=\"Test End Time\"  hasFeedback>\r\n                            {\r\n                                getFieldDecorator('end', {\r\n                                    rules: [{ required: true, message: 'Please give test end time' }],\r\n                                })(\r\n                                    <DatePicker\r\n                                        showTime\r\n                                        placeholder=\"Select End Time\"\r\n                                        onChange={this.onChangeEnd}\r\n                                        onOk={this.onOkEnd}\r\n                                    />\r\n                                )\r\n                            }\r\n                        </Form.Item>\r\n\r\n                        <Form.Item>\r\n                            <Button type=\"primary\" htmlType=\"submit\" block>\r\n                                Next\r\n                            </Button>\r\n                        </Form.Item>\r\n                    </Form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst BasicTestForm = Form.create({ name: 'Basic Form' })(BasicTestFormO);\r\n\r\nconst mapStateToProps = state => ({\r\n    test : state.test,\r\n    admin:state.admin\r\n});\r\n\r\nexport default connect(mapStateToProps,{\r\n    changeStep,\r\n    changeBasicNewTestDetails\r\n})(BasicTestForm);","export const QuillModules = {\n    toolbar: [\n        [{ header: '1' }, { header: '2' }, { header: [3, 4, 5, 6] }, { font: [] }],\n        [{ size: [] }],\n        ['bold', 'italic', 'underline', 'strike', 'blockquote'],\n        [{ list: 'ordered' }, { list: 'bullet' }],\n        ['link', 'image', 'video'],\n        ['clean'],\n        ['code-block']\n    ]\n};\n\nexport const QuillFormats = [\n    'header',\n    'font',\n    'size',\n    'bold',\n    'italic',\n    'underline',\n    'strike',\n    'blockquote',\n    'list',\n    'bullet',\n    'link',\n    'image',\n    'video',\n    'code-block'\n];","import React, { Fragment, Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { \r\n    Form, \r\n    InputNumber, \r\n    Input, \r\n    Button, \r\n    Select, \r\n    DatePicker, \r\n    Row, Col, \r\n    Typography, \r\n    Checkbox, \r\n    Modal,\r\n    Collapse,\r\n    Divider\r\n} from 'antd';\r\nimport moment from 'moment';\r\nimport ReactQuill from 'react-quill';\r\nimport { FormBuilder, FormRenderer } from 'react-ant-form-builder';\r\nimport { \r\n    changeStep,\r\n    addJobData \r\n} from '../../../actions/testAction';\r\n\r\nimport './newtest.css';\r\nimport 'react-quill/dist/quill.snow.css';\r\nimport { QuillModules, QuillFormats } from '../../../utils/Editor';\r\n\r\n\r\nconst { Title } = Typography;\r\nconst { Option } = Select;\r\nconst { RangePicker } = DatePicker;\r\nconst { Panel } = Collapse;\r\n\r\nclass AddJobPost extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            checked: false,\r\n            editor: null,\r\n            formSchema: {},\r\n            data: {},\r\n            visible: false\r\n        }\r\n    };\r\n\r\n    onCheck = (e) => {\r\n        this.setState({ checked: e.target.checked });\r\n    };\r\n\r\n    onChangeEditor = (value) => {\r\n        console.log(value);\r\n        this.setState({ editor: value });\r\n    };\r\n\r\n    // Handle Submit\r\n    handleFinal = e => {\r\n        e.preventDefault();\r\n        this.props.form.validateFields((err, values) => {\r\n            if (!err) {\r\n                console.log(values)\r\n                this.props.addJobData(this.state.checked,{\r\n                    title: values.jobtitle,\r\n                    description: this.state.editor,\r\n                    skillsets: [],\r\n                    location: values.joblocation,\r\n                    type: values.jobtype,\r\n                    customdata: this.state.formSchema\r\n                });\r\n                \r\n                this.props.changeStep(2);\r\n            }\r\n        });\r\n    };\r\n\r\n    // Modal\r\n    showModal = () => {\r\n        this.setState({ visible: true });\r\n    };\r\n    \r\n    handleOk = e => {\r\n        this.setState({ visible: false });\r\n    };\r\n\r\n    handleCancel = e => {\r\n        this.setState({ visible: false });\r\n    };\r\n\r\n    render() {\r\n        const { getFieldDecorator } = this.props.form;\r\n\r\n        return (\r\n            <Fragment>\r\n                <div style={{ padding: '0px auto 5px auto', width: '100%', textAlign: 'center' }}>\r\n                    <Title level={3}>Add Job Post</Title>\r\n                </div>\r\n\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-lg-12\">\r\n                            <Checkbox onChange={this.onCheck}>\r\n                                Do you want to add a job post with this assessment ?\r\n                            </Checkbox>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-lg-12\">\r\n                        {this.state.checked ?  \r\n                            <div>\r\n                                <Title style={{textAlign: 'center'}} level={3}>Add Job Post Details</Title>\r\n                                <Form\r\n                                    onSubmit={this.handleFinal}\r\n                                    autoComplete=\"off\"\r\n                                >\r\n                                    <Form.Item label=\"Job Title\"  hasFeedback>\r\n                                        {getFieldDecorator('jobtitle', {\r\n                                            initialValue : this.props.test.jobPostData.title,\r\n                                            rules: [{ required: true, message: 'Please select a Job title' }],\r\n                                        })(\r\n                                            <Input placeholder=\"Job Title\" />\r\n                                        )}\r\n                                    </Form.Item>\r\n                                    \r\n                                    {/* Description Form Editor */}\r\n                                    <Form.Item label=\"Job Description\"  hasFeedback>\r\n                                        <ReactQuill\r\n                                            modules={QuillModules}\r\n                                            formats={QuillFormats}\r\n                                            value={this.state.editor}\r\n                                            placeholder=\"Write job description ...\"\r\n                                            onChange={this.onChangeEditor}\r\n                                        />\r\n                                    </Form.Item>\r\n\r\n                                    <Form.Item label=\"Job Type\"  hasFeedback>\r\n                                        {getFieldDecorator('jobtype', {\r\n                                            initialValue : this.props.test.jobPostData.jobtype,\r\n                                            rules: [{ required: true, message: 'Please select a Job type' }],\r\n                                        })(\r\n                                            <Select placeholder=\"Job Type\">\r\n                                                <Option value=\"Full Time\">Full Time</Option>\r\n                                                <Option value=\"Part Time\">Part Time</Option>\r\n                                                <Option value=\"Internship\">Internship</Option>\r\n                                                <Option value=\"Work From Home\">Work From Home</Option>\r\n                                            </Select>\r\n                                        )}\r\n                                    </Form.Item>\r\n\r\n                                    <Form.Item label=\"Job Location\"  hasFeedback>\r\n                                        {getFieldDecorator('joblocation', {\r\n                                            initialValue : this.props.test.jobPostData.location,\r\n                                            rules: [{ required: true, message: 'Please select a Job Location' }],\r\n                                        })(\r\n                                            <Input placeholder=\"Job Location\" />\r\n                                        )}\r\n                                    </Form.Item>\r\n\r\n                                    <Form.Item>\r\n                                        <Button type=\"primary\" htmlType=\"submit\" block>\r\n                                            Next\r\n                                        </Button>\r\n                                    </Form.Item>\r\n                                </Form>\r\n\r\n                                <Collapse defaultActiveKey={['1']}>\r\n                                    <Panel header=\"Add Custom Questions\" key=\"1\">\r\n                                        <FormBuilder\r\n                                            formStructure={this.state.formSchema}\r\n                                            onSave={schema => {\r\n                                                this.setState({ formSchema: schema });\r\n                                                // props.setCustomJobDetails(schema);\r\n                                                console.log(schema);\r\n                                            }}\r\n                                            onError={error => console.log(error)}    \r\n                                        />\r\n                                        \r\n                                        <Divider />\r\n                                        \r\n                                        {'      '}\r\n                                        <p>* Save the form to see the changes everytime</p>\r\n                                        \r\n                                        <Button type=\"primary\" onClick={this.showModal}>\r\n                                            Preview\r\n                                        </Button>\r\n                                    </Panel>\r\n                                </Collapse>\r\n\r\n                                {/* Custom Form Modal */}\r\n                                <Modal\r\n                                    title=\"Preview\"\r\n                                    visible={this.state.visible}\r\n                                    onOk={this.handleOk}\r\n                                    onCancel={this.handleCancel}\r\n                                >\r\n                                    <h1>Preview</h1>\r\n                                    <FormRenderer\r\n                                        allowDraft={false}\r\n                                        formStructure={this.state.formSchema}\r\n                                        data={this.state.data}\r\n                                        onSave={changedData => {\r\n                                            // onSave for data received here.\r\n                                            this.setState({ data: changedData });\r\n                                        }}\r\n                                        onError={error => console.log(error)}\r\n                                    />\r\n                                </Modal>\r\n\r\n                            </div> : \r\n                            <div>\r\n                                <br />\r\n                                <br />\r\n                                <div className=\"container\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-lg-12\">\r\n                                            <Button \r\n                                                onClick={()=>this.props.changeStep(2)} \r\n                                                type=\"primary\" \r\n                                                htmlType=\"submit\" block\r\n                                            >\r\n                                                Next\r\n                                            </Button>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Fragment>\r\n        );\r\n    }\r\n};\r\n\r\nconst JobForm = Form.create({ name: 'Basic Form' })(AddJobPost);\r\n\r\nconst mapStateToProps = state => ({\r\n    test : state.test\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n    changeStep,\r\n    addJobData\r\n})(JobForm);\r\n","import React, { Component } from 'react';\r\nimport { Button, Skeleton,Modal,Form,InputNumber,Transfer,Row,Col } from 'antd';\r\nimport { connect } from 'react-redux';\r\nimport { \r\n    changeStep,\r\n    changeMode,\r\n    removeQuestionFromMainQueue,\r\n    changeBasicNewTestDetails,\r\n    fetchSubjectWiseQuestion,\r\n    pushQuestionToQueue \r\n} from '../../../actions/testAction';\r\nimport './newtest.css';\r\nimport Alert from '../../common/alert';\r\nimport apis from '../../../services/Apis';\r\nimport { Post } from '../../../services/axiosCall';\r\n\r\nclass GeneraterandomQuestionO extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            generating:false,\r\n            autogenerate:true,\r\n            ActiveQuestionId:null,\r\n            Mvisible:false\r\n        }\r\n        this.props.changeMode(this.props.mode);\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.props.fetchSubjectWiseQuestion(this.props.test.newtestFormData.testSubject);\r\n    }\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        this.props.form.validateFields((err, values) => {\r\n            if (!err) {\r\n                // console.log(values);\r\n                if(values.no<=this.props.test.questionsAvailablebasedonSubject.length){\r\n                    var qus=[];\r\n                    var allquestions=[...this.props.test.questionsAvailablebasedonSubject];\r\n                    var l=allquestions.length-1;\r\n                    for(var i=values.no;i>0;i--){\r\n                        l=l-1;\r\n                        var r = Math.floor(Math.random() * l);\r\n                        qus.push(allquestions[r]._id);\r\n                        allquestions.splice(r,1);\r\n                    }\r\n                    this.props.pushQuestionToQueue(qus);\r\n                    this.setState({\r\n                        autogenerate : false\r\n                    })\r\n                }\r\n                else{\r\n                    Alert('error','Error!',\"You don't have enough questions to select.\" );\r\n                } \r\n            }\r\n        });\r\n    };\r\n\r\n    renderItem = item => {\r\n        const customLabel = (\r\n          <span className=\"custom-item\">\r\n                <Button shape=\"circle\" onClick={()=>{this.OpenModel(item._id)}} icon=\"info\" style={{background:'linear-gradient(to right,rgb(80,190,189),rgb(0,153,153),rgb(0,153,203))',color:'greenblue'}} size=\"small\" ></Button>\r\n                {item.body}\r\n          </span>\r\n        )\r\n        return {\r\n            label: customLabel, \r\n            value: item._id, \r\n        }\r\n    }\r\n\r\n    OpenModel=(qid)=>{\r\n        this.setState({\r\n            ActiveQuestionId:qid,\r\n            Mvisible:true\r\n        })\r\n    }\r\n    handleCancel=()=>{\r\n        this.setState({\r\n            Mvisible:false\r\n        })\r\n    }\r\n\r\n    handleChange = (targetKeys, direction, moveKeys) => {\r\n        this.props.pushQuestionToQueue(targetKeys);\r\n    };\r\n\r\n\r\n    render() {\r\n        const { getFieldDecorator } = this.props.form;\r\n        return (\r\n            <div>\r\n                <Row>\r\n                    <Col span={5} style={{padding:'20px 0px'}}>\r\n                        <div className={`random-question-generation ${this.props.mode ===\"random\"? \"notblind\" : \"blind\"}`}>\r\n                            <Form onSubmit={this.handleSubmit} >\r\n                                <Form.Item label=\"Enter No. of questions\" hasFeedback>\r\n                                    {getFieldDecorator('no', {\r\n                                        rules: [{ required: true, message: 'Please enter no. of question' }],\r\n                                    })(\r\n                                        <InputNumber style={{width:'100%'}}  placeholder=\"No of question\" min={10} max={50}/>\r\n                                    )}\r\n                                </Form.Item> \r\n                                <Form.Item>\r\n                                    <Button type=\"default\" htmlType=\"submit\" block disabled={!this.state.autogenerate}>\r\n                                        Generate Test Paper\r\n                                    </Button>\r\n                                </Form.Item>\r\n                            </Form>\r\n                        </div>\r\n                    </Col>\r\n\r\n                    <Col span={19} style={{padding:'20px'}}>\r\n                        <Transfer\r\n                            disabled={this.props.mode ===\"random\"? true : false}\r\n                            rowKey={record => record._id}\r\n                            dataSource={this.props.test.questionsAvailablebasedonSubject}\r\n                            listStyle={{\r\n                                width: '45%',\r\n                                height: 500,\r\n                            }}\r\n                            targetKeys={this.props.test.newtestFormData.testQuestions}\r\n                            render={this.renderItem}\r\n                            onChange={this.handleChange}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n                \r\n                <Modal\r\n                    destroyOnClose={true}\r\n                    width=\"70%\"\r\n                    style={{top:'30px'}}\r\n                    title=\"Question details\"\r\n                    visible={this.state.Mvisible}\r\n                    onOk={this.handleCancel}\r\n                    onCancel={this.handleCancel}\r\n                    footer={null}\r\n                    >\r\n                    <SingleQuestionDetails qid={this.state.ActiveQuestionId}/>\r\n                </Modal>  \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst GeneraterandomQuestion = Form.create({ name: 'Basic Form' })(GeneraterandomQuestionO);\r\n\r\nconst mapStateToProps = state => ({\r\n    test : state.test\r\n});\r\n\r\nexport default connect(mapStateToProps,{\r\n    changeStep,\r\n    changeBasicNewTestDetails,\r\n    fetchSubjectWiseQuestion,\r\n    pushQuestionToQueue,\r\n    removeQuestionFromMainQueue,\r\n    changeMode\r\n})(GeneraterandomQuestion);\r\n\r\n\r\n\r\nclass SingleQuestionDetails extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            fetching:false,\r\n            qdetails:null\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.setState({\r\n            fetching:true\r\n        })\r\n        Post({\r\n            url: apis.FETCH_SINGLE_QUESTION_BY_TRAINEE,\r\n            data: {\r\n                qid: this.props.qid\r\n            }\r\n        }).then((response) => {\r\n\r\n            // console.log(response);\r\n\r\n            if (response.data.success) {\r\n                this.setState({\r\n                    qdetails: response.data.data[0]\r\n                })\r\n            }\r\n            else {\r\n                Alert('error', 'Error !', response.data.message);\r\n            }\r\n            this.setState({\r\n                fetching: false\r\n            })\r\n        }).catch((error) => {\r\n            this.setState({\r\n                fetching: false\r\n            });\r\n\r\n            // console.log(error);\r\n\r\n            Alert('error', 'Error !', \"Server Error\");\r\n        });\r\n    }\r\n    \r\n    render(){\r\n        const optn =['A','B','C','D','E'];\r\n        let Optiondata=this.state.qdetails;\r\n        if(Optiondata!==null){\r\n            return (\r\n                <div>\r\n                    <div className=\"mainQuestionDetailsContaine\">\r\n                        <div className=\"questionDetailsBody\">\r\n                            {Optiondata.body}\r\n                        </div>\r\n                        {Optiondata.quesimg?\r\n                            <div className=\"questionDetailsImageContainer\">\r\n                                <img alt=\"Question\" className=\"questionDetailsImage\" src={Optiondata.quesimg} />  \r\n                            </div>\r\n                            : null\r\n                        }\r\n                        <div>\r\n                            {Optiondata.options.map((d,i)=>{\r\n                                return(\r\n                                    <div key={i}>\r\n                                        <Row type=\"flex\" justify=\"center\" className=\"QuestionDetailsOptions\">\r\n                                            <Col span={2}>\r\n                                                {\r\n                                                    d.isAnswer?<Button className=\"green\" shape=\"circle\">{optn[i]}</Button>:<Button type=\"primary\" shape=\"circle\">{optn[i]}</Button>\r\n                                                }\r\n                                                \r\n                                            </Col>\r\n                                            {d.optimg?\r\n                                                <Col span={6} style={{padding:'5px'}}>\r\n                                                    <img alt=\"options\" className=\"questionDetailsImage\" src={d.optimg} />\r\n                                                </Col>\r\n                                            :\r\n                                                null\r\n                                            }\r\n                                            {d.optimg?\r\n                                                <Col span={14}>{d.optbody}</Col>\r\n                                            :\r\n                                                <Col span={20}>{d.optbody}</Col>\r\n                                            }\r\n                                        </Row>\r\n                                    \r\n                                    </div>\r\n                                )\r\n                            })}\r\n                        </div>\r\n                    </div>\r\n    \r\n                </div>\r\n            )\r\n        }\r\n        else{\r\n            return(\r\n                <div className=\"skeletor-wrapper\">\r\n                    <Skeleton active />\r\n                    <Skeleton active />\r\n                </div>\r\n            )\r\n        }\r\n        \r\n    }\r\n}","import React from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { Tabs,Button } from 'antd';\r\nimport { changeStep,changeBasicNewTestDetails } from '../../../actions/testAction';\r\nimport GeneraterandomQuestion from'./generaterandomquestion';\r\nimport './newtest.css';\r\nconst { TabPane } = Tabs;\r\n\r\nfunction SelectQuestion(props){\r\n    const questionCount = <Button>Question Selected : {props.test.newtestFormData.testQuestions.length}</Button>;\r\n    \r\n    return (\r\n        <div>\r\n            <Tabs defaultActiveKey=\"1\" tabBarExtraContent={questionCount}>\r\n                <TabPane tab=\"Questions-Random\" key=\"1\">\r\n                    <GeneraterandomQuestion mode=\"random\" />\r\n                </TabPane>\r\n                <TabPane tab=\"Questions-Manually\" key=\"2\">\r\n                    <GeneraterandomQuestion mode=\"manual\" />\r\n                </TabPane>\r\n            </Tabs>\r\n\r\n            <div style={{ width: '100%', padding: '10px' }}>\r\n                <Button style={{ float: 'right' }} type=\"primary\" onClick={() => props.changeStep(3)}>\r\n                    Next\r\n                </Button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n    test : state.test\r\n});\r\n\r\nexport default connect(mapStateToProps,{\r\n    changeStep,\r\n    changeBasicNewTestDetails\r\n})(SelectQuestion);","// Coding Redux Action\nimport apis from '../services/Apis';\nimport Alert from '../components/common/alert';\nimport { SecurePost } from '../services/axiosCall';\n\n// 1 - \nexport const ChangeCodingQuestionModalState = (data) => dispatch => {\n    dispatch({\n        type: 'CHANGE_CODING_QUESTION_MODAL_STATE',\n        payload: data\n    });\n};\n\n// 2 - \nexport const ChangeCodingQuestionData = () => dispatch => {\n    dispatch({\n        type: 'CHANGE_CODING_QUESTION_TABLE_LOADING_STATUS',\n        payload1: true,\n        payload2: []\n    });\n\n    SecurePost({\n        url: `${apis.LIST_CODING_QUESTION}`\n    })\n    .then((response) => {\n        if (response.data.success) {\n            dispatch({\n                type: 'CHANGE_CODING_QUESTION_TABLE_LOADING_STATUS',\n                payload1: false,\n                payload2: response.data.questions\n            });\n        }\n        else {\n            Alert('error', 'Error!', response.data.message);\n            dispatch({\n                type: 'CHANGE_CODING_QUESTION_TABLE_LOADING_STATUS',\n                payload1: false,\n                payload2: []\n            });\n        }\n    })\n    .catch((error) => {\n        Alert('error', 'Error!', 'Server Error');\n        dispatch({\n            type: 'CHANGE_CODING_QUESTION_TABLE_LOADING_STATUS',\n            payload1: false,\n            payload2: []\n        });\n    });\n};","import React, { Component, Fragment } from 'react';\nimport { \n    Button, \n    Skeleton, \n    Modal, \n    Form, \n    InputNumber, \n    Transfer, \n    Row, \n    Col,\n    Checkbox,\n    Typography, \n} from 'antd';\nimport { connect } from 'react-redux';\n\nimport { \n    changeStep,\n    pushCodingQuestionToQueue,\n    removeCodingQuestionFromMainQueue,\n    checkcode\n} from '../../../actions/testAction';\n\nimport {\n    ChangeCodingQuestionData\n} from '../../../actions/codingAction';\n\nimport Markdown from '../../../utils/Markdown';\n\nconst { Title } = Typography;\n\nclass AddCoding extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            checked: false,\n            generating:false,\n            autogenerate:true,\n            ActiveQuestionId:null,\n            Mvisible:false\n        }\n    };\n\n    componentDidMount(){\n        this.props.ChangeCodingQuestionData();\n    };\n\n    handleSubmit = e => {\n        e.preventDefault();\n    };\n\n    // Checked Handler\n    onCheck = (e) => {\n        this.props.checkcode(e.target.checked);\n        this.setState({ checked: e.target.checked });\n    };\n\n    // Push Questions\n    handleChange = (targetKeys, direction, moveKeys) => {\n        this.props.pushCodingQuestionToQueue(targetKeys);\n    };\n\n    // ...\n    renderItem = item => {\n        const customLabel = (\n          <span className=\"custom-item\">\n                <Button \n                    shape=\"circle\" \n                    onClick={()=>{this.OpenModel(item._id)}}\n                    style={{background:'linear-gradient(to right,rgb(80,190,189),rgb(0,153,153),rgb(0,153,203))',color:'greenblue'}}\n                    icon=\"info\"\n                    size=\"small\" \n                ></Button>\n                {item.title}\n          </span>\n        )\n\n        return {\n            label: customLabel, \n            value: item._id, \n        }\n    };\n\n    OpenModel = (qid) => {\n        this.setState({\n            ActiveQuestionId:qid,\n            Mvisible:true\n        });\n    };\n\n    handleCancel=()=>{\n        this.setState({\n            Mvisible:false\n        })\n    };\n\n    render() {\n        return (\n            <Fragment>\n                <div style={{ padding: '0px auto 5px auto', width: '100%', textAlign: 'center' }}>\n                    <Title level={3}>Add Programming Questions</Title>\n                </div>\n\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-lg-12\">\n                            <Checkbox onChange={this.onCheck}>\n                                Do you want to add Programming Questions with this assessment ?\n                            </Checkbox>\n                        </div>\n                    </div>\n                </div>\n\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-lg-12\">\n                        {this.state.checked ?  \n                            <div>\n                                <Transfer\n                                    rowKey={record => record._id}\n                                    dataSource={this.props.coding.QuestionTableData}\n                                    listStyle={{\n                                        width: '45%',\n                                        height: 500,\n                                    }}\n                                    targetKeys={this.props.test.codingtData.testQuestions}\n                                    render={this.renderItem}\n                                    onChange={this.handleChange}  \n                                />\n\n                                <div style={{ width: '100%', padding: '10px' }}>\n                                    <Button \n                                        style={{ float: 'right' }} \n                                        type=\"primary\"\n                                        block\n                                        onClick={() => this.props.changeStep(4)}\n                                    >\n                                        Next\n                                    </Button>      \n                                </div>\n                            </div> :\n\n                            <div>\n                            {'      '}\n                            <br />\n\n                            <div className=\"container\">\n                                <div className=\"row\">\n                                    <div className=\"col-lg-12\">\n                                        <Button \n                                            onClick={() => this.props.changeStep(4)} \n                                            type=\"primary\" \n                                            htmlType=\"submit\" block\n                                        >\n                                            Next\n                                        </Button>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        }\n                        </div>\n                    </div>\n                </div>\n\n                <Modal\n                    destroyOnClose={true}\n                    width=\"70%\"\n                    style={{top:'30px'}}\n                    title=\"Question details\"\n                    visible={this.state.Mvisible}\n                    onOk={this.handleCancel}\n                    onCancel={this.handleCancel}\n                    footer={null}\n                >\n                    \n                </Modal>\n\n            </Fragment>\n        );\n    }\n};\n\nconst CodingForm = Form.create({ name: 'Basic Form' })(AddCoding);\n\nconst mapStateToProps = state => ({\n    test: state.test,\n    coding: state.coding\n});\n\nexport default connect(mapStateToProps, {\n    changeStep,\n    checkcode,\n    ChangeCodingQuestionData,\n    pushCodingQuestionToQueue,\n    removeCodingQuestionFromMainQueue\n})(CodingForm);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Row, Col, Button, Descriptions, Typography } from 'antd';\r\n\r\nimport {SecurePost} from '../../../services/axiosCall';\r\nimport apis from '../../../services/Apis';\r\nimport Alert from '../../common/alert';\r\n\r\nimport { Redirect } from 'react-router-dom';\r\nimport Markdown from '../../../utils/Markdown';\r\nimport renderHTML from 'react-render-html';\r\nimport { FormBuilder, FormRenderer } from 'react-ant-form-builder';\r\n\r\nconst { Title } = Typography;\r\n\r\nclass FinalQuestionView extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            testid: null\r\n        };\r\n    };\r\n\r\n    createtest = () => {\r\n        SecurePost({\r\n            url: apis.CREATE_TEST,\r\n            data: {\r\n                type: this.props.test.newtestFormData.testType,\r\n                title: this.props.test.newtestFormData.testTitle,\r\n                questions: this.props.test.newtestFormData.testQuestions,\r\n                duration: this.props.test.newtestFormData.testDuration,\r\n                subjects: this.props.test.newtestFormData.testSubject,\r\n                organisation: this.props.test.newtestFormData.OrganisationName,\r\n                startTime: this.props.test.newtestFormData.startTime,\r\n                endTime: this.props.test.newtestFormData.endTime,\r\n                \r\n                addjobpost: this.props.test.addjobpost,\r\n                jobtitle:this.props.test.jobPostData.title,\r\n                jobdescription: this.props.test.jobPostData.description,\r\n                joblocation: this.props.test.jobPostData.location,\r\n                jobtype: this.props.test.jobPostData.type,\r\n                jobcustom: this.props.test.jobPostData.customdata,\r\n\r\n                addcoding: this.props.test.addcoding,\r\n                codingquestions: this.props.test.codingtData.testQuestions,\r\n            }\r\n        })\r\n        .then((response) => {\r\n            // console.log(response.data);\r\n            if (response.data.success) {\r\n                Alert('success', 'Test paper Created Successfully!', 'Redirecting to Test Deatils Page.');\r\n                setTimeout(() => {\r\n                    this.setState({\r\n                        testid: response.data.testid\r\n                    })\r\n                }, 3000);\r\n            }\r\n            else {\r\n                Alert('error', 'Error!', response.data.message);\r\n            }\r\n        }).catch((err) => {\r\n            // console.log(err);\r\n            Alert('error', 'Error!', 'Server Error');\r\n        });\r\n    }\r\n\r\n    render(){\r\n        if(this.state.testid){\r\n            return <Redirect to={`/user/conducttest?testid=${this.state.testid}`} />\r\n        }\r\n        else{\r\n            return (\r\n                <div>\r\n                    {this.props.test.addjobpost ? \r\n                        <div style={{justifyContent: 'left'}} >\r\n                            <Descriptions \r\n                                size=\"small\" \r\n                                title=\"Job Post Info\"\r\n                                column={4} \r\n                                layout=\"vertical\" \r\n                                bordered={true}\r\n                            >\r\n                                <Descriptions.Item span={1} label=\"Job Title\">\r\n                                    {this.props.test.jobPostData.title}\r\n                                </Descriptions.Item>\r\n\r\n                                <Descriptions.Item \r\n                                    span={1} \r\n                                    label=\"Job Description\" \r\n                                    style={{justifyContent: 'left'}}\r\n                                >\r\n                                    {renderHTML(this.props.test.jobPostData.description)}\r\n                                </Descriptions.Item>\r\n\r\n                                <Descriptions.Item span={1} label=\"Job Location\" style={{justifyContent: 'left'}} >\r\n                                    {this.props.test.jobPostData.location}\r\n                                </Descriptions.Item>\r\n\r\n                                <Descriptions.Item span={1} label=\"Job Type\" style={{justifyContent: 'left'}} >\r\n                                    {this.props.test.jobPostData.type}\r\n                                </Descriptions.Item>\r\n\r\n                                <Descriptions.Item span={1} label=\"Custom Form\" style={{justifyContent: 'left'}} >\r\n                                    <FormRenderer\r\n                                        allowDraft={false}\r\n                                        formStructure={this.props.test.jobPostData.customdata}\r\n                                        onError={error => console.log(error)}\r\n                                    />\r\n                                </Descriptions.Item>\r\n\r\n                                <br />\r\n                            </Descriptions>\r\n                        </div> : <div></div>\r\n                    }\r\n\r\n                    <Title level={3} style={{textAlign: 'center'}} >Assessment Question</Title>\r\n\r\n                    {this.props.test.newtestFormData.testQuestions.map((d,i)=>{\r\n                        return <Q key={i+1} _id={d} no={i+1}/>\r\n                    })}\r\n                    <div style={{width:'100%',padding:'10px'}}>\r\n                        <Button style={{float:'right'}} type=\"primary\" onClick={this.createtest}>\r\n                            Create Test\r\n                        </Button>\r\n                    </div>\r\n                    \r\n                </div>\r\n            )\r\n        }\r\n    };\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    test : state.test\r\n});\r\n\r\nexport default connect(mapStateToProps,null)(FinalQuestionView);\r\n\r\nfunction QuestionView(props) {\r\n    var _id = props._id;\r\n    var no = props.no;\r\n    var obj = props.test.questionsAvailablebasedonSubject.filter((hero) => {\r\n        return hero._id == _id;\r\n    });\r\n    \r\n    // console.log(obj[0].weightage);\r\n\r\n    var oo = ['A', 'B', 'C', 'D', 'E'];\r\n\r\n    return (\r\n        <div style={{ marginBottom: '20px' }}>\r\n            <div>\r\n                <div style={{ width: '100%' }}>\r\n                    <b style={{ float: 'left' }}>Question No. {no})</b>\r\n                    <b style={{ float: 'right' }}>Marks. {obj[0].weightage}</b>\r\n                </div>\r\n                <div style={{ padding: '5px 20px' }}>\r\n                    <br />\r\n                    <Markdown>\r\n                        {obj[0].body}\r\n                    </Markdown>\r\n                    {obj[0].quesimg ? <img alt=\"Question\" src={obj[0].quesimg} /> : null}\r\n                </div>\r\n            </div>\r\n            <Row>\r\n                {obj[0].options.map((d, i) => {\r\n                    return (\r\n                        <Col key={i} span={12} style={{ padding: '5px 20px' }}>\r\n                            <b>{oo[i]} ) </b> <Markdown>{d.optbody}</Markdown>\r\n                            {d.optimg ? <img alt=\"Option\" src={d.optimg} /> : null}\r\n                        </Col>\r\n                    )\r\n                })}\r\n            </Row>\r\n        </div>\r\n    );\r\n};\r\n\r\nvar Q = connect(mapStateToProps,null)(QuestionView);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Steps, Typography } from 'antd';\r\nimport { steps } from '../../../services/steps';\r\nimport { changeStep } from '../../../actions/testAction';\r\n\r\nimport { \r\n    ChangeSubjectTableData\r\n} from '../../../actions/adminAction';\r\n\r\nimport BasicTestForm from './basicForm';\r\nimport AddJobPost from './AddJobPost';\r\nimport SelectQuestion from './selectQuestion';\r\nimport AddCodingQuestion from './AddCoding';\r\nimport FinalQuestionView from './questionview';\r\n\r\nimport './newtest.css';\r\n\r\nconst { Step } = Steps;\r\nconst { Title } = Typography;\r\n\r\nclass  NewTest extends Component {\r\n    componentDidMount(){\r\n        this.props.ChangeSubjectTableData();\r\n    }\r\n    render(){\r\n        var torender = \"\";\r\n\r\n        if (this.props.test.currentStep === 1) {\r\n            torender=<AddJobPost />;\r\n        }\r\n        else if (this.props.test.currentStep === 2) {\r\n            torender=<SelectQuestion />;\r\n        }\r\n        else if (this.props.test.currentStep === 3) {\r\n            torender = <AddCodingQuestion />;\r\n        }\r\n        else if (this.props.test.currentStep === 4) {\r\n            torender=<FinalQuestionView />;\r\n        }\r\n        else{\r\n            torender=<BasicTestForm />;\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <div style={{padding:'0px auto 5px auto',width:'100%',textAlign:'center'}}>\r\n                    <Title level={3}>Create New Assessment</Title>\r\n                </div>\r\n                <Steps className=\"newtest-steps-holder\" current={this.props.test.currentStep}>\r\n                    {steps.map(item => (\r\n                        <Step key={item.title} title={item.title} />\r\n                    ))}\r\n                </Steps>\r\n                <div className=\"new-test-form-holder\">\r\n                    {torender}\r\n                </div>\r\n            </div>\r\n        )\r\n    }  \r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    test : state.test\r\n});\r\n\r\nexport default connect(mapStateToProps,{\r\n    changeStep,\r\n    ChangeSubjectTableData\r\n})(NewTest);","import React, { Fragment, Component } from \"react\";\r\nimport {\r\n    Form,\r\n    Input,\r\n    Button,\r\n    Select,\r\n    Row,\r\n    Col,\r\n    Checkbox,\r\n    Modal,\r\n    Upload,\r\n    Icon,\r\n    InputNumber \r\n} from 'antd';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { SecurePost } from '../../../services/axiosCall';\r\nimport apis from '../../../services/Apis';\r\nimport Alert from '../../../components/common/alert';\r\nimport auth from '../../../services/AuthServices';\r\n\r\nimport { \r\n    ChangeCodingQuestionModalState,\r\n} from \"../../../actions/codingAction\";\r\n\r\nclass AddQuestion extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            submitDisabled: false,\r\n            adding: false\r\n        };\r\n    }\r\n\r\n    // Submit Form\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        this.props.form.validateFieldsAndScroll((err, values) => {\r\n            // console.log(values);\r\n            if (!err) {\r\n                SecurePost({\r\n                    url:apis.CREATE_CODING_QUESTION,\r\n                    data:{\r\n                        title:values.title,\r\n                        statement: values.statement,\r\n                        category:values.category,\r\n                        difficulty:values.difficulty,\r\n                        timelimit:values.timelimit,\r\n                        memorylimit: values.memorylimit\r\n                    }\r\n                })\r\n                .then((response) => {\r\n                    this.setState({\r\n                        adding:false\r\n                    });\r\n\r\n                    if(response.data.success){\r\n                        this.props.ChangeCodingQuestionModalState(false);\r\n                        Alert('success','Success', response.data.message);\r\n                        // this.props.ChangeQuestionTableData(this.props.trainer.selectedSubjects);\r\n                    }\r\n                    else{\r\n                        this.props.ChangeCodingQuestionModalState(false);\r\n                        this.props.form.resetFields();\r\n                        return Alert('warning','Warning!',response.data.message);\r\n                    }\r\n                })\r\n                .catch((error)=>{\r\n                    // console.log(error);\r\n                    this.props.form.resetFields();\r\n                    \r\n                    return Alert('error','Error!','Server Error');\r\n                });\r\n            }\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { getFieldDecorator } = this.props.form;\r\n        const { Option } = Select;\r\n        const { TextArea } = Input;\r\n        \r\n        return (\r\n            <Fragment>\r\n                <div>\r\n                    <Form onSubmit={this.handleSubmit}>\r\n                        <Row>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Problem Title\" hasFeedback>\r\n                                    {getFieldDecorator('title', {\r\n                                            rules: [{ required: true, message: 'Please type problem title!' }],\r\n                                    })(\r\n                                        <Input />\r\n                                    )}\r\n                                </Form.Item> \r\n                            </Col>  \r\n                        </Row>\r\n\r\n                        <Row>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Problem Statement\" hasFeedback>\r\n                                    {getFieldDecorator('statement', {\r\n                                            rules: [{ required: true, message: 'Please type question!' }],\r\n                                    })(\r\n                                        <TextArea rows={5} />\r\n                                    )}\r\n                                </Form.Item> \r\n                            </Col>  \r\n                        </Row>\r\n\r\n                        <Row>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Memory Limit\" hasFeedback>\r\n                                    {getFieldDecorator('memorylimit', {\r\n                                        rules: [{ required: true, message: 'Please input memory limit!'}],\r\n                                    })(\r\n                                        <InputNumber min={1} style={{ width: '100%' }} />\r\n                                    )}\r\n                                </Form.Item>\r\n                            </Col>\r\n                        </Row>\r\n\r\n                        <Row>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Time Limit\" hasFeedback>\r\n                                    {getFieldDecorator('timelimit', {\r\n                                        rules: [{ required: true, message: 'Please input time limit!'}],\r\n                                    })(\r\n                                        <InputNumber min={1} style={{ width: '100%' }} />\r\n                                    )}\r\n                                </Form.Item>\r\n                            </Col>\r\n                        </Row>\r\n\r\n                        <Row>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Difficulty\" hasFeedback>\r\n                                    {getFieldDecorator('difficulty', {\r\n                                        rules: [{ required: true, message: 'Please select difficulty' }],\r\n                                    })(\r\n                                        <Select\r\n                                            style={{ width:'100%'}}\r\n                                            placeholder=\"Select Difficulty\"\r\n                                        >\r\n                                            <Option value='easy'>Easy</Option>\r\n                                            <Option value='medium'>Medium</Option>\r\n                                            <Option value='hard'>Hard</Option>\r\n                                        </Select>\r\n                                    )}\r\n                                </Form.Item>\r\n                            </Col>\r\n                        </Row>\r\n\r\n                        <Row>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Category\" hasFeedback>\r\n                                    {getFieldDecorator('category', {\r\n                                            rules: [{ required: true, message: 'Enter category' }],\r\n                                    })(\r\n                                        <Input />\r\n                                    )}\r\n                                </Form.Item> \r\n                            </Col>  \r\n                        </Row>\r\n\r\n                        <Row>\r\n                            <Col span={24}>\r\n                                <Form.Item>\r\n                                    <Button \r\n                                        type=\"primary\" \r\n                                        htmlType=\"submit\" \r\n                                        disabled={this.state.submitDisabled} \r\n                                        loading={this.state.adding} \r\n                                        block\r\n                                    >\r\n                                        Create Question\r\n                                    </Button>\r\n                                </Form.Item>\r\n                            </Col>\r\n                        </Row>\r\n\r\n                    </Form>\r\n                </div>\r\n            </Fragment>\r\n        );\r\n    }\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    trainer: state.trainer,\r\n    admin: state.admin,\r\n    coding: state.coding \r\n});\r\n\r\nconst NewQuestionForm = Form.create({ name: 'newQuestion' })(AddQuestion);\r\n\r\nexport default connect(mapStateToProps, {\r\n    ChangeCodingQuestionModalState\r\n})(NewQuestionForm);\r\n","import React, { Fragment, useState, useEffect } from 'react';\nimport { Skeleton, \n    Row, Col, \n    Icon, Tabs, \n    Descriptions, \n    Button, \n    Typography, \n    Divider,\n    Input\n} from 'antd';\nimport Markdown from '../../../utils/Markdown';\n\nimport { SecurePost } from '../../../services/axiosCall';\nimport apis from '../../../services/Apis';\nimport Alert from '../../../components/common/alert';\n\nconst { TabPane } = Tabs;\nconst { Title, Text } = Typography;\nconst { TextArea } = Input;\n\nconst QuestionDetails = (props) => {\n    const [state, setstate] = useState({\n        id: props.id,\n        loading: true,\n        details: []\n    });\n\n    const [question, setquestion] = useState([]);\n\n    // Test Cases\n    const questionId = props.id;\n\n    const [testcase, setTestCase] = useState({\n        loading: true,\n        error: \"\",\n        question: {},\n        testcases: [],\n        input: \"\",\n        output: \"\"\n    });\n\n    const getData = () => {\n        SecurePost({\n            url:apis.GET_CODING_QUESTION_DETAILS,\n            data:{\n                questionId: state.id\n            }\n        })\n        .then((response) => {\n            if(response.data.success){\n                setquestion(response.data.question);\n                setTestCase({\n                    ...state,\n                    testcases: response.data.testcases\n                })\n\n                setTimeout(() => {\n                    setstate({\n                        ...state,\n                        loading: false\n                    });\n                }, 3000);\n                \n            }\n            else{\n                return Alert('warning','Warning!',response.data.message);\n            }\n        })\n        .catch((error) => {\n            return Alert('error','Error!','Server Error');\n        });\n    };\n\n    useEffect(() => {\n        getData();\n    }, []);\n\n    const tabChange = (key) => {\n        // console.log(key)\n    }\n\n    // Tab 2\n\n    const TestCaseListComp = () => {\n        if (testcase.testcases.length) {\n            let i = 1;\n            return testcase.testcases.map((testcase) => {\n\n                return <li \n                        className=\"container\" \n                        style={{marginLeft: '25px', float: 'right', listStyle: 'none'}} \n                        key={testcase.id}\n                    >\n                    <div className=\"row\">\n\n                        <div className=\"col-md-3\">\n                            <span className=\"input-label\">Testcase #{i++}</span>\n                        </div>\n\n                        <div className=\"col-md-3\">\n                            <p>Input</p> <br />\n                            <TextArea \n                                value={testcase.input}\n                                disabled=\"true\"\n                            />\n                        </div>\n\n                        <div className=\"col-md-3\">\n                            <p>Output</p> <br />\n                            <TextArea \n                                value={testcase.output}\n                                disabled=\"true\"\n                            />\n                        </div>\n\n                        <div className=\"col-md-3\">\n                            <p>Action</p> <br />\n                            <Button \n                                type=\"primary\" \n                                shape=\"circle\" \n                                icon=\"delete\" \n                            />\n                        </div>\n\n                    </div>\n                </li>\n            })\n        } else {\n            return <div>\n                <Title level={4} style={{ marginLeft: '15px'}}> No TestCases found !!!</Title>\n            </div>\n        }\n    };\n\n    const onSubmit = (event) => {\n        event.preventDefault();\n\n        let formData = {};\n\n        formData = {\n            \"test-input\": testcase.input,\n            \"test-output\": testcase.output\n        };\n\n        SecurePost({\n            url:`${apis.CREATE_CODING_TESTCASE}/${questionId}`,\n            data: formData\n        })\n        .then((response) => {\n            if(response.data.success){\n                Alert('success','Success', response.data.message);\n            }\n            else{\n                return Alert('warning','Warning!',response.data.message);\n            }\n        })\n        .catch((error)=>{            \n            return Alert('error','Error!','Error Adding Test Case');\n        });\n    };\n\n    const handlechangeFile = name => event => {\n        setTestCase({ ...testcase, [name]: event.target.value });\n    }\n\n    return (\n        <Fragment>\n            <Skeleton loading={state.loading} active avatar>\n                <Tabs defaultActiveKey=\"1\" onChange={(e) => tabChange(e)}>\n\n                    {/* Tab 1 */}\n\n                    <TabPane tab={<span><Icon type=\"home\" />Basic Info</span>} key=\"1\">\n                        <Descriptions \n                            bordered \n                            title=\"\" \n                            border \n                            size=\"small\" \n                            column={{ xxl: 1, xl: 1, lg: 1, md: 1, sm: 1, xs: 1 }}\n                        >\n                            <Descriptions.Item label=\"Question Id\">{state.id}</Descriptions.Item>\n\n                            <Descriptions.Item label=\"Problem Statement\">\n                                <Markdown>\n                                    {question.statement}\n                                </Markdown>\n                            </Descriptions.Item>\n\n                        </Descriptions>\n                    </TabPane>\n\n                    {/* Tab 2 */}\n\n                    <TabPane tab={<span><Icon type=\"plus\" />Test Case</span>} key=\"2\">\n                    <div className=\"row mx-0 my-4 pb-md-0 pb-sm-4 shadow-sm align-items-center\">\n                        <div className=\"col-md-4\">\n                            <div className=\"form-group\">\n                                <span className=\"input-label\">Input</span>\n                                <div className=\"input-group\">\n                                    <TextArea \n                                        rows={4}\n                                        onChange={handlechangeFile(\"input\")}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n\n                        <div className=\"col-md-4\">\n                            <div className=\"form-group\">\n                                <span className=\"input-label\">Output</span>\n                                <div className=\"input-group\">\n                                    <TextArea \n                                        rows={4}\n                                        onChange={handlechangeFile(\"output\")}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n\n                        <div className=\"col-md-4\">\n                            <Button \n                                type=\"primary\" \n                                onClick={onSubmit}\n                            >\n                                Add\n                            </Button>\n                        </div>\n                    </div>\n\n                    <Divider />\n                    <br />\n\n                    <div className=\"card mb-5\">\n                        <div className=\"card-body\">\n                            <ul className=\"list-group list-group-flush row\">\n                                {TestCaseListComp()}\n                            </ul>\n                        </div>\n                    </div>\n\n                    </TabPane>\n                </Tabs>\n            </Skeleton>\n        </Fragment>\n    );\n};\n\nexport default QuestionDetails;\n","import React, { Fragment, useState, useEffect } from 'react';\nimport { Table, Input, Button, Icon, Typography, Popconfirm, Divider, Modal, Select, Row, Col } from 'antd';\nimport Highlighter from 'react-highlight-words';\nimport { connect } from 'react-redux';\n\nimport NewQuestion from './AddQuestion';\nimport QuestionDetails from './QuestionDetails';\n\nimport { \n    ChangeCodingQuestionModalState,\n    ChangeCodingQuestionData,\n} from \"../../../actions/codingAction\";\n\nconst AllQuestions = (props) => {\n\n    const [state, setstate] = useState({\n        questiondetailsId : null,\n        questiondetailsModelVisible:false\n    });\n\n    // Action Modal\n    const OpendetailsModal = (id) => {\n        setstate((previousState,previousProps)=>{\n          return{\n            questiondetailsId:id,\n            questiondetailsModelVisible:true\n          }\n        });\n    };\n\n    const ClosedetailsModal = () => {\n        setstate((previousState,previousProps)=>{\n          return{\n            questiondetailsId:null,\n            questiondetailsModelVisible:false\n          }\n        });\n    };\n\n    useEffect(() => {\n        props.ChangeCodingQuestionData();\n    }, []);\n\n    const showModal = (mode) => {\n        props.ChangeCodingQuestionModalState(true);\n    };\n\n    const handleOk = e => {\n        props.ChangeCodingQuestionModalState(false);\n    };\n\n    const handleCancel = e => {\n        props.ChangeCodingQuestionModalState(false);\n    };\n\n\n    const columns = [\n        {\n            title: 'Problem Title',\n            dataIndex: 'title',\n            key: 'title',\n            width: '15%',\n        },\n        {\n            title: 'Category',\n            dataIndex: 'category',\n            key: 'category',\n            width: '15%',\n        },\n        {\n            title: 'Difficulty',\n            dataIndex: 'difficulty',\n            key: 'difficulty',\n            width: '15%',\n        },\n        {\n            title: 'Action',\n            key: '_id',\n            dataIndex: '_id',\n            width: '15%',\n            render: (key) => (\n                <Button \n                    type=\"primary\" \n                    shape=\"circle\" \n                    onClick={()=>OpendetailsModal(key)} \n                    icon=\"info-circle\" \n                />\n            ),\n        },\n    ];\n\n    return (\n        <Fragment>\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-lg-6\">\n                        <Button \n                            type=\"primary\" \n                            icon=\"code\" \n                            style={{marginBottom:'10px'}} \n                            onClick={showModal}\n                        >\n                            Add New Coding Question\n                        </Button>\n                    </div>\n\n                    <div className=\"col-lg-6\">\n\n                    </div>\n                </div>\n            </div>\n\n            \n\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-lg-12\">\n                        <Table \n                            bordered={true} \n                            columns={columns} \n                            dataSource={props.coding.QuestionTableData} \n                            size=\"medium\" \n                            pagination={{ pageSize: 5 }}\n                            loading={props.coding.QuestionTableLoading}\n                            rowKey=\"_id\" \n                        />\n                    </div>\n                </div>\n            </div>\n\n            {/* New Question Form */}\n            <Modal\n                title=\"New Coding Question\"\n                style={{top :'20px',padding:'0px',backgroundColor:'rgb(155,175,190)'}}\n                width=\"70%\"\n                visible={props.coding.NewQuestionModalState}\n                onOk={() => handleOk}\n                onCancel={handleCancel}\n                footer={[]}\n                destroyOnClose={true}\n            >\n                <NewQuestion />\n            </Modal>\n\n            {/* Question Details */}\n            <Modal\n                visible={state.questiondetailsModelVisible}\n                title=\"Question Details\"\n                onCancel={ClosedetailsModal}\n                style={{top :'20px',padding:'0px',backgroundColor:'rgb(155,175,190)'}}\n                width=\"70%\"\n                destroyOnClose={true}\n                footer={[]}\n            >\n                <QuestionDetails id={state.questiondetailsId} / >\n            </Modal>\n\n        </Fragment>\n    );\n};\n\nconst mapStateToProps = state => ({\n    trainer: state.trainer,\n    admin: state.admin,\n    coding: state.coding \n});\n\nexport default connect(mapStateToProps,{\n    ChangeCodingQuestionModalState,\n    ChangeCodingQuestionData\n})(AllQuestions);","import React, { Fragment } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Statistic, Row, Col, Button, Typography, Divider, Card, Icon } from 'antd';\r\nimport { Line } from 'react-chartjs-2';\r\n\r\nimport './welcome.css';\r\n\r\nconst { Title, Text } = Typography;\r\n\r\nconst data = {\r\n  labels: ['1', '2', '3', '4', '5', '6'],\r\n  datasets: [\r\n    {\r\n      label: '# of Votes',\r\n      data: [12, 19, 3, 5, 2, 3],\r\n      fill: false,\r\n      backgroundColor: 'rgb(255, 99, 132)',\r\n      borderColor: 'rgba(255, 99, 132, 0.2)',\r\n    },\r\n  ],\r\n};\r\n\r\nconst options = {\r\n  scales: {\r\n    yAxes: [\r\n      {\r\n        ticks: {\r\n          beginAtZero: true,\r\n        },\r\n      },\r\n    ],\r\n  },\r\n};\r\n\r\nconst welcome = (props) => {  \r\n  return (\r\n    <Fragment>\r\n      \r\n      <Title level={4}>\r\n        Welcome {props.user.userDetails.name}\r\n      </Title>\r\n\r\n      <Divider />\r\n\r\n      <Row gutter={16}>\r\n\r\n        <Col className=\"gutter-row\" span={6}>\r\n          <Card>\r\n            <Statistic\r\n              title=\"Total Assessments Taken\"\r\n              value={112893}\r\n            />\r\n          </Card>\r\n        </Col>\r\n\r\n        <Col className=\"gutter-row\" span={6}>\r\n          <Card>\r\n              <Statistic\r\n                title=\"Account Balance (CNY)\"\r\n                value={112893}\r\n                precision={2}\r\n                valueStyle={{ color: '#3f8600' }}\r\n              />\r\n            </Card>\r\n        </Col>\r\n\r\n        <Col className=\"gutter-row\" span={6}>\r\n            <Card>\r\n              <Statistic\r\n                title=\"No. of assessments left\"\r\n                value={9.3}\r\n                precision={2}\r\n                valueStyle={{ color: '#cf1322' }}\r\n                prefix={<Icon type=\"arrow-down\" />}\r\n                suffix=\"%\"\r\n              />\r\n            </Card>\r\n        </Col>\r\n\r\n        <Col className=\"gutter-row\" span={6}>\r\n            <Card>\r\n              <Statistic\r\n                title=\"Active\"\r\n                value={11.28}\r\n                precision={2}\r\n                valueStyle={{ color: '#3f8600' }}\r\n                prefix={<Icon type=\"arrow-up\" />}\r\n                suffix=\"%\"\r\n              />\r\n            </Card>\r\n        </Col>\r\n      </Row>\r\n\r\n      <Divider />\r\n\r\n      <Line data={data} options={options} />\r\n\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  user : state.user\r\n});\r\n\r\nexport default connect(mapStateToProps, null)(welcome);","import React, { Fragment } from 'react';\r\nimport { Result } from 'antd';\r\n\r\nexport default function ErrorPage() {\r\n    return (\r\n        <Fragment>\r\n            <Result\r\n                status=\"404\"\r\n                title=\"404\"\r\n                subTitle=\"Sorry, the page you visited does not exist.\"\r\n            />\r\n        </Fragment>\r\n    )\r\n};","import React, { Component, Fragment } from 'react'\nimport {\n    Form,\n    Input,\n    Button,\n    Select,\n    Row,\n    Col,\n    Checkbox,\n    Typography,\n    Modal,\n    Upload,\n    Icon,\n    InputNumber,\n    Divider\n} from 'antd';\nimport { connect } from 'react-redux';\n\nimport { SecurePost } from '../../services/axiosCall';\nimport apis from '../../services/Apis';\nimport Alert from '../common/alert';\nimport auth from '../../services/AuthServices';\n\nconst { Title, Text } = Typography;\n\nclass Profile extends Component {\n    constructor(props){\n        super(props);\n        this.state={\n            logo: this.props.user.userDetails.avatar,\n            adding:false,\n            submitDisabled:false,\n        }        \n    }\n\n    handleSubmit = e => {\n        e.preventDefault();\n\n        this.props.form.validateFieldsAndScroll((err, values) => {\n            if (!err) {\n                SecurePost({\n                    url: `${apis.UPDATE_USER}`,\n                    data: {\n                        _id: this.props.user.userDetails._id,\n                        organisation: values.organisation,\n                        avatar: this.state.logo,\n                        bio: values.about\n                    }\n                })\n                .then((response) => {\n                    if (response.data.success) {\n                        Alert('success', 'Success', response.data.message);\n                        window.location.reload();\n                    }\n                    else {\n                        return Alert('warning', 'Warning!', response.data.message);\n                    }\n                }).catch((error) => {\n                    return Alert('error', 'Error!', 'Server Error');\n                });\n            }\n        });\n    };\n\n    // Upload Image Prop\n    changeqImage = (f)=>{\n        this.setState((ps,pp)=>{\n            return({\n                logo: (f.link ?`${apis.BASE}/${f.link}`:null),\n                submitDisabled:false\n            });\n        });\n    };\n\n    upl=()=>{\n        this.setState({\n            submitDisabled:true\n        })\n    }\n\n    render() {\n        const { getFieldDecorator } = this.props.form;\n\n        const { Option } = Select;\n        const { TextArea } = Input;\n\n        var QuestionImageprops = {\n            name: 'file',\n            action: `${apis.BASE}${apis.FILE_UPLOAD}?Token=${auth.retriveToken()}`,\n            listType: 'picture',\n        };\n        \n        return (\n            <Fragment>\n                <Text>Profile Settings</Text>\n                <Divider />\n\n                <img src={this.props.user.userDetails.avatar} alt=\"logo\" />\n\n                <Divider />\n                    <Form  onSubmit={this.handleSubmit}>\n                        <div>\n                            <Row>\n                                <Col span={24}>\n                                    <Form.Item label=\"Organisation Name\"  hasFeedback>\n                                        {getFieldDecorator('organisation', {\n                                            initialValue : this.props.user.userDetails.organisation,\n                                            rules: [{ required: true, message: 'Please input organisation name!', whitespace: true }],\n                                        })(<Input />)}\n                                    </Form.Item>\n                                </Col>\n                            </Row>\n\n                            <Row>\n                                <Col span={24}>\n                                    <Form.Item label=\"Write About Your Organisation\" hasFeedback>\n                                        {getFieldDecorator('about', {\n                                            initialValue : this.props.user.userDetails.bio,\n                                            rules: [{ required: true, message: 'Please Enter Company Details or About!' }],\n                                        })(\n                                            <TextArea rows={5} />\n                                        )}\n                                    </Form.Item>\n                                </Col>\n                            </Row>\n\n                            <Row>\n                                <Col span={24} style={{padding : '0px 20px'}}>\n                                    <Form.Item label=\"Organisation Logo\">\n                                    {getFieldDecorator('resume', {\n                                        rules: [{ required: true, message: 'Please upload your resume' }],\n                                    })(\n                                        <Upload \n                                            {...QuestionImageprops} \n                                            beforeUpload={this.upl} \n                                            onRemove={this.changeqImage} \n                                            onSuccess={this.changeqImage}\n                                        >\n                                            <Button>\n                                                <Icon type=\"upload\" /> Upload\n                                            </Button>\n                                        </Upload>,\n                                    )}\n                                    </Form.Item>\n                                </Col>\n                            </Row>\n                            \n                            <Row>\n                                <Col span={24}>\n                                    <Form.Item>\n                                        <Button \n                                            type=\"primary\" \n                                            htmlType=\"submit\" \n                                            disabled={this.state.submitDisabled} \n                                            loading={this.state.adding} \n                                            block\n                                        >\n                                            Update\n                                        </Button>\n                                    </Form.Item>\n                                </Col>\n                            </Row>\n                        </div>\n                    </Form>\n\n                    <Divider />\n\n            </Fragment>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    admin : state.admin,\n    user: state.user\n});\n\nconst NewForm = Form.create({ name: 'newQuestion' })(Profile);\n\nexport default connect(mapStateToProps, null)(NewForm);","import React, { Fragment } from 'react';\nimport {\n    Form,\n    Input,\n    Divider,\n    Button,\n    Typography,\n    Row,\n    Col\n} from 'antd';\n  \n  \nclass ResetPassword extends React.Component {\n    state = {\n      confirmDirty: false\n    };\n  \n    handleSubmit = e => {\n      e.preventDefault();\n      this.props.form.validateFieldsAndScroll((err, values) => {\n        if (!err) {\n          console.log('Received values of form: ', values);\n        }\n      });\n    };\n  \n    handleConfirmBlur = e => {\n      const { value } = e.target;\n      this.setState({ confirmDirty: this.state.confirmDirty || !!value });\n    };\n  \n    compareToFirstPassword = (rule, value, callback) => {\n      const { form } = this.props;\n      if (value && value !== form.getFieldValue('password')) {\n        callback('Two passwords that you enter is inconsistent!');\n      } else {\n        callback();\n      }\n    };\n  \n    validateToNextPassword = (rule, value, callback) => {\n      const { form } = this.props;\n      if (value && this.state.confirmDirty) {\n        form.validateFields(['confirm'], { force: true });\n      }\n      callback();\n    };\n  \n    render() {\n      const { getFieldDecorator } = this.props.form;\n      const { Title } = Typography;\n\n      return (\n        <Fragment>\n            <Title level={4}> Reset Password </Title>\n            <Form onSubmit={this.handleSubmit}>\n                <Row>\n                    <Col span={24}>\n                        <Form.Item label=\"Enter Current Password\" hasFeedback>\n                            {getFieldDecorator('current', {\n                            rules: [\n                                {\n                                required: true,\n                                message: 'Please input your current password!',\n                                },\n                                {\n                                validator: this.validateToNextPassword,\n                                },\n                            ],\n                            })(<Input.Password />)}\n                        </Form.Item>\n                    </Col>\n                </Row>\n\n                <Row>\n                    <Col span={24}>\n                        <Form.Item label=\"Enter New Password\" hasFeedback>\n                            {getFieldDecorator('password', {\n                            rules: [\n                                {\n                                required: true,\n                                message: 'Please input your password!',\n                                },\n                                {\n                                validator: this.validateToNextPassword,\n                                },\n                            ],\n                            })(<Input.Password />)}\n                        </Form.Item>\n                    </Col>\n                </Row>\n\n                <Row>\n                    <Col span={24}>\n                        <Form.Item label=\"Confirm Password\" hasFeedback>\n                            {getFieldDecorator('confirm', {\n                            rules: [\n                                {\n                                required: true,\n                                message: 'Please confirm your password!',\n                                },\n                                {\n                                validator: this.compareToFirstPassword,\n                                },\n                            ],\n                            })(<Input.Password onBlur={this.handleConfirmBlur} />)}\n                        </Form.Item>\n                    </Col>\n                </Row>\n\n                <Row>\n                    <Col span={24}>\n                        <Form.Item>\n                            <Button type=\"primary\" htmlType=\"submit\" block>\n                                Update Password\n                            </Button>\n                        </Form.Item>\n                    </Col>\n                </Row> \n                \n            </Form>\n\n            <Divider />\n        </Fragment>\n      );\n    }\n  }\n  \n  const ResetPasswordForm = Form.create({ name: 'register' })(ResetPassword);\n  \n  export default ResetPasswordForm;","import React, { Fragment } from 'react';\n\nimport Profile from './Profile';\nimport ResetPassword from './ResetPassword';\n\nconst Settings = () => {\n    return (\n        <Fragment>\n            <Profile />\n            <ResetPassword />\n        </Fragment>\n    );\n};\n\nexport default Settings;\n","import React from 'react';\r\nimport './backbone.css';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport queryString from 'query-string';\r\n\r\nimport AllTrainer from '../admin/allTrainer/alltrainer';\r\nimport AllTopics from '../admin/allTopics/alltopics.js';\r\nimport AllQuestions from '../trainer/allquestions/allquestion';\r\nimport AllTests from '../trainer/alltests/alltest';\r\nimport ConductTest from '../trainer/conducttest/conducttest';\r\nimport NewTest from '../trainer/newtest/newtest';\r\nimport AllCoding from '../coding/Question/AllQuestions';\r\n\r\nimport auth from '../../services/AuthServices';\r\nimport Welcome from './welcome';\r\nimport ErrorPage from './errorPage';\r\nimport Settings from './settings';\r\n\r\nimport { login, logout } from '../../actions/loginAction';\r\nimport { changeActiveRoute } from '../../actions/useraction';\r\nimport Alert from '../common/alert';\r\n\r\nimport { Layout, Menu,Button, Avatar, Icon, Tooltip } from 'antd';\r\nimport NoticeIcon from 'ant-design-pro/lib/NoticeIcon';\r\nimport main from './logo.png';\r\n\r\nconst { Header, Sider, Content, Footer } = Layout;\r\n\r\nclass Dashboard extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            LocalIsLoggedIn: this.props.user.isLoggedIn,\r\n            collapsed: true\r\n        }\r\n    }\r\n\r\n    toggle = () => {\r\n        this.setState({\r\n          collapsed: !this.state.collapsed,\r\n        });\r\n    };\r\n\r\n    logOut = () => {\r\n        auth.deleteToken();\r\n        window.location.href = '/';\r\n    };\r\n\r\n    componentWillMount(){\r\n        // console.log(this.state.LocalIsLoggedIn);\r\n        var t = auth.retriveToken();\r\n        if(this.state.LocalIsLoggedIn){\r\n            \r\n        }\r\n        else if(t && t!=='undefined'){\r\n            auth.FetchAuth(t).then((response) => {\r\n                //console.log(response.data);\r\n                this.props.login(response.data.user);\r\n                this.setState({\r\n                    LocalIsLoggedIn: true\r\n                });\r\n\r\n                var subUrl = this.props.match.params.options;\r\n                // console.log(subUrl);\r\n                var obj = this.props.user.userOptions.find((o, i) => {\r\n                    if (o.link === `/user/${subUrl}`) {\r\n                        return o\r\n                    }\r\n                });\r\n\r\n                var tt = this.props.user.userOptions.indexOf(obj);\r\n                \r\n                if (tt === -1) {\r\n                    window.location.href = `${this.props.user.userOptions[0].link}`;\r\n                }\r\n                else {\r\n                    this.props.changeActiveRoute(String(tt));\r\n                }\r\n            }).catch((error) => {\r\n                Alert('warning', 'Warning!', 'Server Error.');\r\n                auth.deleteToken();\r\n                window.location.href = '/';\r\n            });\r\n        }\r\n        else{\r\n            window.location='/';\r\n        }   \r\n    };\r\n\r\n\r\n    render(){\r\n        let torender = null;\r\n        if(this.props.match.params.options==='listtrainers'){\r\n            torender = <AllTrainer/>;\r\n        }\r\n        else if(this.props.match.params.options==='listsubjects'){\r\n            torender = <AllTopics/>\r\n        }\r\n        else if(this.props.match.params.options==='listquestions'){\r\n            torender = <AllQuestions/>\r\n        }\r\n        else if(this.props.match.params.options==='listtests'){\r\n            torender = <AllTests/>\r\n        }\r\n        else if(this.props.match.params.options==='home'){\r\n            torender=<Welcome />\r\n        }\r\n        else if(this.props.match.params.options==='newtest'){\r\n            torender=<NewTest />\r\n        }\r\n        else if(this.props.match.params.options==='listcode'){\r\n            torender=<AllCoding />\r\n        }\r\n        else if(this.props.match.params.options==='conducttest'){\r\n            let params = queryString.parse(this.props.location.search)\r\n            // console.log(params)\r\n            torender=<ConductTest {...params}/>\r\n        }\r\n        else if(this.props.match.params.options==='settings'){\r\n            torender=<Settings />\r\n        }\r\n        else{\r\n            torender=<ErrorPage />\r\n        }\r\n\r\n        return (\r\n            <Layout>\r\n                <Sider\r\n                    trigger={null}\r\n                    collapsible\r\n                    collapsed={this.state.collapsed}\r\n                >\r\n                    \r\n                    <div className=\"logo11\">\r\n                        <img src={main} alt=\"company logo\" className=\"d-logo\" />\r\n                    </div>\r\n\r\n                    <Menu \r\n                        defaultSelectedKeys={[this.props.user.activeRoute]}\r\n                        mode=\"inline\"\r\n                        theme=\"dark\"\r\n                        >\r\n                        {\r\n                            this.props.user.userOptions.map((d,i)=>{\r\n                                return(\r\n                                    <Menu.Item key={i}>\r\n                                        <Icon type={d.icon} />\r\n                                        <span>{d.display}</span>\r\n                                        <Link to={d.link}></Link>\r\n                                    </Menu.Item>\r\n                                )\r\n                            })\r\n                        }\r\n                    </Menu>\r\n                </Sider>\r\n                <Layout>\r\n                    <Header\r\n                        style={{ position: 'fixed', width: '100vw', paddingLeft: '10px', zIndex: '1000', background: '#fff' }}\r\n                    >\r\n                        <Icon\r\n                            className=\"trigger\"\r\n                            type={this.state.collapsed ? 'double-right' : 'double-left'}\r\n                            onClick={this.toggle}\r\n                            style={{color:'#000',fontSize:'20px'}}\r\n                            />\r\n                        <ul className=\"user-options-list\">\r\n                            <li>\r\n                                <NoticeIcon count={5} />\r\n                            </li>\r\n                            \r\n                            <li>\r\n                                <Avatar style={{ backgroundColor: '#00ffcc' }} icon=\"user\" />\r\n                            </li>\r\n\r\n                            <li>\r\n                                <Tooltip placement=\"bottom\" title=\"Log Out\">\r\n                                    <Button \r\n                                        type=\"primary\" \r\n                                        shape=\"circle\" \r\n                                        onClick={this.logOut} \r\n                                        className=\"logout-button\"\r\n                                    >\r\n                                        <Icon type=\"logout\" />\r\n                                    </Button>\r\n                                </Tooltip>\r\n                            </li>\r\n                        </ul>\r\n                            \r\n                    </Header>\r\n                    <Content\r\n                        style={{\r\n                        margin: '24px 16px',\r\n                        padding: 24,\r\n                        marginTop:'80px',\r\n                        background: '#fff',\r\n                        minHeight: '100vh'\r\n                        }}\r\n                    >\r\n                        <div style={{ width:'100%', }}>\r\n                            {torender}\r\n                        </div>\r\n                    </Content>\r\n                    <Footer style={{ textAlign: 'center', background: '#fff' }}>\r\n                        gnius Talent Solution ©{new Date().getFullYear()}\r\n                    </Footer>\r\n                </Layout>\r\n            </Layout>\r\n        );\r\n    };\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    user : state.user\r\n});\r\n\r\nexport default connect(mapStateToProps,{\r\n    changeActiveRoute,\r\n    login, \r\n    logout\r\n})(Dashboard);\r\n","export const changeActiveRoute = (d)=> dispatch =>{\r\n    dispatch({\r\n       type : 'CHANGE_ACTIVE_ROUTE',\r\n       payload : d\r\n    })\r\n}\r\n\r\nexport const changeActiveUrl = (d)=> dispatch =>{\r\n    dispatch({\r\n       type : 'CHANGE_ACTIVE_URL',\r\n       payload : d\r\n    })\r\n}","import React, { Component, Fragment } from 'react';\r\nimport {\r\n    Row, \r\n    Col, \r\n    Form, \r\n    Icon, \r\n    Input, \r\n    Button, \r\n    Select,\r\n    Typography, Layout, Upload, message \r\n} from 'antd';\r\nimport queryString from 'query-string';\r\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\r\nimport moment from 'moment';\r\nimport { Helmet } from \"react-helmet\";\r\nimport {\r\n    Chip,\r\n    Paper\r\n} from \"@material-ui/core\";\r\nimport DescriptionIcon from \"@material-ui/icons/Description\";\r\n\r\nimport {\r\n    FacebookShareButton,\r\n    TelegramShareButton,\r\n    TwitterShareButton,\r\n    FacebookIcon,\r\n    TwitterIcon,\r\n    LinkedinIcon,\r\n    TelegramIcon,\r\n    WhatsappIcon,\r\n    FacebookShareCount,\r\n    WhatsappShareButton,\r\n    LinkedinShareButton\r\n} from \"react-share\";\r\n\r\nimport renderHTML from 'react-render-html';\r\nimport { FormBuilder, FormRenderer } from 'react-ant-form-builder';\r\n\r\nimport apis from '../../../services/Apis';\r\nimport { Post } from '../../../services/axiosCall';\r\nimport Alert from '../../common/alert';\r\n\r\nimport '../../../Layout.css';\r\nimport './trainerRegister.css';\r\nimport logo from '../../basic/header/logo.png';\r\nimport FileUploadInput from '../../../utils/FileUpload';\r\n\r\nconst { Option } = Select;\r\nconst { Title } = Typography;\r\nconst { Header, Footer, Sider, Content } = Layout;\r\n\r\nclass TraineeRegisterForm extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            inform:true,\r\n            testid:null,\r\n            user:null,\r\n            jobstatus: false,\r\n            jobData: {},\r\n            resume: null,\r\n            customdata: {},\r\n        };\r\n    };\r\n    \r\n    getJobDetails = () => {\r\n        let params = queryString.parse(this.props.location.search);\r\n\r\n        Post({\r\n            url : apis.GET_JOB_DETAILS,\r\n            data: {\r\n                testid: params.testid\r\n            }\r\n        })\r\n        .then((data) => {\r\n            if (data.data.success) {\r\n                this.setState({\r\n                    jobstatus: true,\r\n                    jobData: data.data.job\r\n                });\r\n            }\r\n            else{\r\n                this.setState({\r\n                    jobstatus: false\r\n                });\r\n            }\r\n        })\r\n        .catch((error) => {\r\n            console.log(error);\r\n        });\r\n    };\r\n\r\n    componentDidMount(){\r\n        let params = queryString.parse(this.props.location.search)\r\n        // console.log(params);\r\n        this.setState({\r\n            testid:params.testid\r\n        });\r\n\r\n        this.getJobDetails();\r\n\r\n        console.log(this.state.jobData);\r\n    };\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        this.props.form.validateFields((err, values) => {\r\n            if (!err) {\r\n                // console.log('Received values of form: ', values);\r\n                // console.log(this.state.testid);\r\n\r\n                Post({\r\n                    url: apis.REGISTER_TRAINEE_FOR_TEST,\r\n                    data: {\r\n                        name: values.name,\r\n                        emailid: values.email,\r\n                        contact: `${values.prefix}${values.contact}`,\r\n                        organisation: values.organisation,\r\n                        testid: this.state.testid,\r\n                        location: values.location,\r\n                        resume: this.state.resume\r\n                    }\r\n                }).then((data) => {\r\n                    // console.log(data.data);\r\n\r\n                    if (data.data.success) {\r\n                        this.setState({\r\n                            inform: false,\r\n                            user: data.data.user\r\n                        });\r\n                    }\r\n                    else {\r\n                        this.props.form.resetFields();\r\n                        Alert('error', 'Error!', data.data.message);\r\n                    }\r\n                }).catch((error) => {\r\n                    // console.log(error);\r\n                    this.props.form.resetFields();\r\n                    Alert('error', 'Error!', \"Server Error\");\r\n                });\r\n            }\r\n        });\r\n    };\r\n\r\n    resendMail = () => {\r\n        Post({\r\n            url: apis.RESEND_TRAINER_REGISTRATION_LINK,\r\n            data: {\r\n                id: this.state.user._id\r\n            }\r\n        })\r\n        .then((response) => {\r\n            if (response.data.success) {\r\n                Alert('success', 'Success!', \"Email has been sent to your email\");\r\n            }\r\n            else {\r\n                Alert('error', 'Error!', response.data.message);\r\n            }\r\n        })\r\n        .catch((error) => {\r\n            // console.log(error);\r\n            Alert('error', 'Error!', \"Server Error\");\r\n        });\r\n    };\r\n\r\n\r\n    renderJob = () => (\r\n        <Fragment>\r\n            <Helmet>\r\n                <meta charSet=\"utf-8\" />\r\n                <title>{this.state.jobData.postedBy.organisation} - {this.state.jobData.jobtitle} - gnius Assessment - where talent meets opportunities</title>\r\n            </Helmet>\r\n\r\n            <div className=\"container-fluid\" style={{padding: '0', overflow: 'hidden'}}>\r\n                <div className=\"row\">\r\n                    <div className=\"col-lg-12\">\r\n                        <Layout>\r\n                            <Header style={{ height: '100px' }}>\r\n                                <Title style={{ \r\n                                    color: '#fff', \r\n                                    marginTop: '20px',\r\n                                    }} \r\n                                    level={4}\r\n                                >\r\n                                    {this.state.jobData.postedBy.organisation} - {this.state.jobData.jobtitle}\r\n                                </Title>\r\n                            </Header>\r\n                        </Layout>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"container-fluid\" style={{padding: '0', overflow: 'hidden'}}>\r\n                <div className=\"row\">\r\n                    <div className=\"col-lg-12\">\r\n                        <div style={{ marginTop: '10px'}}></div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            \r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              {/* Left */}\r\n              <div className=\"col-lg-6\">\r\n                <div\r\n                    style={{\r\n                      margin: '5px',\r\n                      textAlign: 'justify',\r\n                      padding: '5px',\r\n                      justifyContent: 'center',\r\n                      alignItems: 'start',\r\n                      fontFamily: 'Raleway, Ubuntu, sans-serif'\r\n                    }}\r\n                >\r\n                    {renderHTML(this.state.jobData.jobdescription)}\r\n                </div>\r\n                  \r\n              </div>\r\n\r\n\r\n              {/* Right */}\r\n              <div className=\"col-lg-6\">\r\n                  <div\r\n                    style={{\r\n                      margin: '5px',\r\n                      justifyContent: 'center',\r\n                      alignItems: 'start',\r\n                      outline: 'none',\r\n                      fontFamily: 'Raleway, Ubuntu, sans-serif'\r\n                    }}\r\n                  >\r\n                    <ul style={{ listStyle: 'none' }}>\r\n                        <li style={{ padding: '5px' }}>\r\n                            <strong>About Company</strong>\r\n                            <br /> {this.state.jobData.postedBy.bio}\r\n                        </li>\r\n\r\n                        <li style={{ padding: '5px' }}>\r\n                            <img\r\n                                width={200}\r\n                                src={this.state.jobData.postedBy.avatar}\r\n                            />\r\n                        </li>\r\n\r\n                        <li style={{ padding: '5px' }}>\r\n                            <b>Posted on:</b> {moment(this.state.jobData.dateOfPosting).format('MMMM Do YYYY')} - {moment(this.state.jobData.dateOfPosting).fromNow()} \r\n                        </li>\r\n\r\n                        <li style={{ padding: '5px' }}>\r\n                            <Icon type=\"environment\" /> {this.state.jobData.joblocation}\r\n                        </li>\r\n\r\n                        <li style={{ padding: '5px' }}>\r\n                            <Button href=\"#apply\" type=\"primary\" shape=\"round\" size='large'>\r\n                                Apply\r\n                            </Button>\r\n                        </li>\r\n\r\n\r\n                    </ul>\r\n\r\n                  </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n        </Fragment>\r\n    );\r\n\r\n    // Resume Upload                \r\n    changeResume = (f) => {\r\n        if (f.success === true) {\r\n            message.success(`Resume file uploaded successfully`);\r\n        }\r\n\r\n        this.setState((ps, pp)=>{\r\n            return({\r\n                resume:(f.link ?`${apis.BASE}/${f.link}`:null)\r\n            });\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { getFieldDecorator } = this.props.form;\r\n\r\n        const prefixSelector = getFieldDecorator('prefix', {\r\n            initialValue :'+91',\r\n            rules: [{ required: true, message: 'Please enter contact no prefix' }],\r\n        })(\r\n            <Select style={{ width: 70 }}>\r\n              <Option value=\"+91\">+91</Option>\r\n            </Select>,\r\n        );\r\n\r\n        const uploadProps = {\r\n            name: 'file',\r\n            action: `${apis.BASE}${apis.UPLOAD_RESUME}`,\r\n            listType: 'picture'\r\n        };\r\n\r\n        return (\r\n            <Fragment>\r\n                <div className=\"header-container\">\r\n                    <img src={logo} alt=\"company logo\" className=\"logo\" />\r\n                </div>\r\n\r\n                {\r\n                    this.state.jobstatus ? this.renderJob() : null\r\n                }\r\n\r\n                <div id=\"apply\"></div>\r\n\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12\">\r\n                            <Title level={2} style={{ textAlign: 'center'}}>Application</Title>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                {/* <Spin indicator={antIcon} /> */}\r\n\r\n                <div className=\"registration-form-container\">    \r\n                {this.state.inform ?\r\n                    <div className=\"registration-form-inner\">\r\n                        <div className=\"container\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-12\">\r\n                                    <Form \r\n                                        onSubmit={this.handleSubmit}\r\n                                        autoComplete=\"off\"\r\n                                        className=\"login-form\"\r\n                                    >\r\n                                        <Row>\r\n                                            <Col span={12} style={{ padding: '5px' }}>\r\n                                                <Form.Item label=\"Name\" hasFeedback>\r\n                                                    {getFieldDecorator('name', {\r\n                                                        rules: [{ required: true, message: 'Please input your name' }],\r\n                                                    })(\r\n                                                        <Input\r\n                                                            prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                                                            placeholder=\"Name\"\r\n                                                        />,\r\n                                                    )}\r\n                                                </Form.Item>\r\n                                            </Col>\r\n\r\n                                            <Col span={12} style={{ padding: '5px' }}>\r\n                                                <Form.Item label=\"Email\" hasFeedback>\r\n                                                    {getFieldDecorator('email', {\r\n                                                        rules: [{\r\n                                                            type: 'email',\r\n                                                            message: 'The input is not valid E-mail!',\r\n                                                        },\r\n                                                        {\r\n                                                            required: true,\r\n                                                            message: 'Please input your E-mail!',\r\n                                                        }],\r\n                                                    })(\r\n                                                        <Input\r\n                                                            prefix={<Icon type=\"mail\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                                                            placeholder=\"Email Id\"\r\n                                                        />,\r\n                                                    )}\r\n                                                </Form.Item>\r\n                                            </Col>\r\n                                \r\n                                            <Col span={24} style={{ padding: '5px' }}>\r\n                                                <Form.Item label=\"Phone Number\" hasFeedback>\r\n                                                    {getFieldDecorator('contact', {\r\n                                                        rules: [{\r\n                                                            required: true,\r\n                                                            message: 'Please input your phone number!'\r\n                                                        },\r\n                                                        {\r\n                                                            len: 10,\r\n                                                            message: 'Contact number must be 10 digit long'\r\n                                                        }],\r\n                                                    })(<Input addonBefore={prefixSelector} min={10} max={10} />)}\r\n                                                </Form.Item>\r\n                                                \r\n                                                <Form.Item label=\"Organisation (University/Company Name)\" hasFeedback>\r\n                                                    {getFieldDecorator('organisation', {\r\n                                                        rules: [{\r\n                                                            required: true,\r\n                                                            message: 'Please input your organisation name',\r\n                                                        }],\r\n                                                    })(\r\n                                                        <Input\r\n                                                            prefix={<Icon type=\"idcard\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                                                            placeholder=\"Organisation\"\r\n                                                        />,\r\n                                                    )}\r\n                                                </Form.Item>\r\n                                            </Col>\r\n\r\n                                            <Col span={24} style={{ padding: '5px' }}>\r\n                                                <Form.Item label=\"Address\" hasFeedback>\r\n                                                    {getFieldDecorator('location', {\r\n                                                        rules: [{ required: true, message: 'Please input your location' }],\r\n                                                    })(\r\n                                                        <Input\r\n                                                            prefix={<Icon type=\"home\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                                                            placeholder=\"Address\"\r\n                                                        />,\r\n                                                    )}\r\n                                                </Form.Item>\r\n                                            </Col>\r\n\r\n                                            {/* Resume */}\r\n                                            <Col span={24}>\r\n                                                <Form.Item label=\"Upload Resume\">\r\n                                                    {getFieldDecorator('resume', {\r\n                                                        rules: [{ required: true, message: 'Please upload your resume' }],\r\n                                                    })(\r\n                                                        <Upload \r\n                                                            {...uploadProps}\r\n                                                            onRemove={this.changeResume} \r\n                                                            onSuccess={this.changeResume}\r\n                                                        >\r\n                                                            <Button>\r\n                                                                <Icon type=\"upload\" /> Upload\r\n                                                            </Button>\r\n                                                        </Upload>,\r\n                                                    )}\r\n                                                </Form.Item>\r\n                                            </Col>\r\n\r\n                                            {\r\n                                                this.state.jobData.jobcustom ? <div>\r\n                                                    <FormRenderer\r\n                                                        allowDraft={false}\r\n                                                        formStructure={this.state.jobData.jobcustom}\r\n                                                        data={this.state.customdata}\r\n                                                        onSave={changedData => {\r\n                                                            // onSave for data received here.\r\n                                                            this.setState({ customdata: changedData });\r\n                                                        }}\r\n                                                        onError={error => console.log(error)}\r\n                                                    />\r\n                                                </div> : \r\n                                                <Col span={24} style={{ paddingTop: '33px' }}>\r\n                                                    <Form.Item>\r\n                                                        <Button \r\n                                                            style={{ width: '100%' }} \r\n                                                            type=\"primary\" \r\n                                                            htmlType=\"submit\" \r\n                                                            className=\"btn\"\r\n                                                        >\r\n                                                            Register\r\n                                                        </Button>\r\n                                                    </Form.Item>\r\n                                                </Col>\r\n                                            }\r\n                                        </Row>\r\n                                    </Form>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        \r\n                    </div> :\r\n                    <div className=\"reasendmail-container-register\">\r\n                        <Title style={{ color: '#fff' }} level={4}>\r\n                            Thank You, You have successfully registered !!!\r\n                            An email containing your assessment link will be sent to {this.state.user.emailid}, one day before the assessment date.\r\n\r\n                            All the Best !!!\r\n                        </Title>\r\n                    </div>\r\n                }\r\n            </div>\r\n\r\n            <div \r\n                className=\"container-fluid\" \r\n                style={{padding: '0', overflow: 'hidden', marginTop: '50px',}}\r\n            >\r\n                <div className=\"row\">\r\n                    <div className=\"col-lg-12\">\r\n                        <Layout>\r\n                            <Footer style={{ textAlign: 'center'}}>\r\n                                gnius Talent Solution ©{new Date().getFullYear()}\r\n                            </Footer>\r\n                        </Layout>     \r\n                    </div>\r\n                </div>\r\n            </div>\r\n            </Fragment>\r\n        );\r\n    };\r\n};\r\n\r\nconst TraineeRegister = Form.create({ name: 'Trainee Registration' })(TraineeRegisterForm);\r\nexport default TraineeRegister;","import React, { Fragment, useState } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { Button, Checkbox } from 'antd';\r\nimport { ProceedtoTest, fetchTestdata } from '../../../actions/traineeAction';\r\nimport './portal.css';\r\nimport logo from '../../basic/header/logo.png';\r\n\r\nfunction Instruction(props) {\r\n    const [state, setstate] = useState(false);\r\n\r\n    function onChange(e) {\r\n        // console.log(e.target.checked);\r\n        setstate(e.target.checked);\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className=\"header-container\">\r\n                <img src={logo} alt=\"company logo\" className=\"logo\" />\r\n            </div>\r\n\r\n            <div className=\"instaruction-page-wrapper\">\r\n                <div className=\"instruction-page-inner\">\r\n                    <h1>Instructions:</h1>\r\n                    <p>Please read the instructions carefully</p>\r\n                    <h4>1. All questions are compulsory.</h4>\r\n                    <h4>\r\n                        2. Please save the question before you proceed to the next question.\r\n                        <b>NOTE :</b>To save answers, click on the 'Save & Next' button.\r\n                    </h4>\r\n                    <h4>3. Please don't leave the window before you submit.</h4>\r\n                    <h4>4. Click on 'Submit' button to submit the assessment. </h4>\r\n                    <h4>5. The test will be automatically submitted when the time ends.</h4>\r\n                    <h4>\r\n                        <Checkbox onChange={onChange}>I have read and understood all the instructions</Checkbox>\r\n                    </h4>\r\n                    <div className=\"proceed-to-test-button\">\r\n                        {state ? \r\n                            <Button\r\n                            style={{ float: 'right' }}\r\n                            type=\"primary\" icon=\"caret-right\"\r\n                            onClick={() => { props.ProceedtoTest(props.trainee.testid, props.trainee.traineeid, () => { props.fetchTestdata(props.trainee.testid, props.trainee.traineeid) }) }} loading={props.trainee.proceedingToTest}\r\n                        >\r\n                            Proceed\r\n                        </Button> : null\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    trainee : state.trainee\r\n});\r\n\r\nexport default connect(mapStateToProps,{\r\n    ProceedtoTest,\r\n    fetchTestdata\r\n})(Instruction);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport './portal.css';\r\n\r\nconst user_icon = 'https://res.cloudinary.com/gniusedu/image/upload/v1616994666/gnius-jpg_aspibu.jpg';\r\n\r\nfunction Trainee(props) {\r\n    return (\r\n        <div className=\"loggedin-trainee-container\">\r\n            <div className=\"loggedin-trainee-inner\">\r\n                <img alt=\"User Icon\" src={user_icon} className=\"loggedin-trainee-logo\"/>\r\n                <div className=\"loggedin-trainee-details-container\">\r\n                    <p>{props.trainee.traineeDetails.name}</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    trainee : state.trainee\r\n});\r\n\r\n\r\n\r\n\r\nexport default connect(mapStateToProps,null)(Trainee);","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { Badge, Icon,Button,Row,Col  } from 'antd';\r\nimport './portal.css';\r\nimport {switchQuestion} from '../../../actions/traineeAction';\r\n\r\nclass Operations extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"question-list-wrapper\">\r\n                <div className=\"question-list-inner\">\r\n                    <Row style={{ padding: '5px' }}>\r\n                        {this.props.trainee.answers.map((d, i) => {\r\n                            return (\r\n                                <Col key={i} span={6} style={{ padding: '10px' }}>\r\n                                    <Mark qid={d.questionid} ans={d.isAnswered} mark={d.isMarked} no={i} />\r\n                                </Col>\r\n                            )\r\n                        })}\r\n                    </Row>\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n};\r\n\r\n\r\nfunction mark(props){\r\n    if(props.mark){\r\n        if(props.ans){\r\n            return(\r\n                <Badge className=\"qb\" count={<Icon type=\"flag\"  theme=\"filled\" style={{ color: '#f5222d' }} />}>\r\n                    <Button\r\n                        onClick={() => props.switchQuestion(props.no)}\r\n                        style={{ background: '#0B6623', color: '#fff' }}\r\n                    >\r\n                        {props.no + 1}\r\n                    </Button>\r\n                </Badge>  \r\n            )\r\n        }\r\n        else{\r\n            return (\r\n                <Badge className=\"qb\" count={<Icon type=\"flag\" theme=\"filled\" style={{ color: '#f5222d' }} />}>\r\n                    <Button\r\n                        onClick={() => props.switchQuestion(props.no)}\r\n                        style={{ background: '#999999', color: '#fff' }}\r\n                    >\r\n                        {props.no + 1}\r\n                    </Button>\r\n                </Badge>\r\n            );\r\n        };\r\n    }\r\n    else{\r\n        if(props.ans){\r\n            return(\r\n                <Button\r\n                    onClick={() => props.switchQuestion(props.no)}\r\n                    className=\"qb\"\r\n                    style={{ background: '#0EFF00', color: '#000' }}\r\n                >\r\n                    {props.no + 1}\r\n                </Button>\r\n            )\r\n        }\r\n        else{\r\n            return (\r\n                <Button\r\n                    onClick={() => props.switchQuestion(props.no)}\r\n                    className=\"qb\"\r\n                    style={{ background: '#CC0000', color: '#fff' }}\r\n                >\r\n                    {props.no + 1}\r\n                </Button>\r\n            );\r\n        };\r\n    };\r\n};\r\n\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n    trainee : state.trainee\r\n});\r\n\r\nlet Mark = connect(mapStateToProps, {\r\n    switchQuestion\r\n})(mark);\r\n\r\nexport default connect(mapStateToProps,null)(Operations);","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport {LocaltestDone,fetchTestdata} from '../../../actions/traineeAction';\r\nimport './portal.css';\r\nimport apis from '../../../services/Apis';\r\nimport { Post } from '../../../services/axiosCall';\r\nimport Alert from '../../common/alert';\r\n\r\nclass Clock extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            localMinutes:this.props.trainee.m_left,\r\n            localSeconds:this.props.trainee.s_left\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        this.clockF(); \r\n    }\r\n\r\n    endTest =()=>{\r\n        Post({\r\n            url:`${apis.END_TEST}`,\r\n            data:{\r\n                testid: this.props.trainee.testid,\r\n                userid:this.props.trainee.traineeid\r\n            }\r\n        })\r\n        .then((response)=>{\r\n            if(response.data.success){\r\n                this.props.fetchTestdata(this.props.trainee.testid,this.props.trainee.traineeid)\r\n            }\r\n            else{\r\n                return Alert('error','Error!',response.data.message);\r\n            }\r\n        }).catch((error)=>{\r\n            return Alert('error','Error!','Error');\r\n        })\r\n    }\r\n\r\n\r\n    clockF = () => {\r\n        let c = setInterval(() => {\r\n            // console.log('i am done')\r\n            let l = this.state.localMinutes;\r\n            let s = this.state.localSeconds;\r\n\r\n            if (l == 0 && s == 1) {\r\n                clearInterval(c);\r\n                this.endTest();\r\n            }\r\n            else {\r\n                if (s == 0) {\r\n                    s = 59;\r\n                    l = l - 1;\r\n                }\r\n                else {\r\n                    s = s - 1;\r\n                }\r\n                this.setState({\r\n                    localMinutes: l,\r\n                    localSeconds: s\r\n                })\r\n            }\r\n        }, 1000)\r\n    };\r\n\r\n    componentWillUnmount(){}\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"clock-wrapper\">\r\n                <div className=\"clock-container\">\r\n                    {this.state.localMinutes} : {this.state.localSeconds}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    trainee : state.trainee\r\n});\r\n\r\nexport default connect(mapStateToProps,{\r\n    LocaltestDone,fetchTestdata\r\n})(Clock);","import React from 'react'\r\nimport { connect } from 'react-redux';\r\nimport './portal.css';\r\nimport Trainee from './user';\r\nimport {Button,Popconfirm} from 'antd';\r\nimport Operations from './operations';\r\nimport Clock from './clock';\r\nimport Alert from '../../common/alert';\r\nimport apis from '../../../services/Apis';\r\nimport { Post } from '../../../services/axiosCall';\r\nimport { fetchTestdata } from '../../../actions/traineeAction'\r\n\r\nclass Sidepanel extends React.Component {\r\n\r\n    endTest =()=>{\r\n        Post({\r\n            url:`${apis.END_TEST}`,\r\n            data:{\r\n                testid: this.props.trainee.testid,\r\n                userid:this.props.trainee.traineeid\r\n            }\r\n        }).then((response)=>{\r\n            if(response.data.success){\r\n                \r\n                this.props.fetchTestdata(this.props.trainee.testid,this.props.trainee.traineeid)\r\n            }\r\n            else{\r\n                return Alert('error','Error!',response.data.message);\r\n            }\r\n        }).catch((error)=>{\r\n            return Alert('error','Error!','Error');\r\n        })\r\n    }\r\n    \r\n    render(){\r\n        return (\r\n            <div className={\"side-panel-in-exam-dashboard \"+(this.props.mode==='desktop'?'w-20':'w-100')}>\r\n                <Trainee />\r\n                <Clock/>\r\n                <Operations />\r\n                <div className=\"End-test-container\">\r\n                    <Popconfirm\r\n                        title=\"Are you sure to end the test\"\r\n                        onConfirm={this.endTest}\r\n                        okText=\"Yes\"\r\n                        cancelText=\"No\"\r\n                    >\r\n                        <Button type=\"default\">Submit</Button>\r\n                    </Popconfirm>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n    trainee : state.trainee\r\n});\r\n\r\nexport default connect(mapStateToProps,{\r\n    fetchTestdata\r\n})(Sidepanel);\r\n\r\n","import React from 'react'\r\nimport { connect } from 'react-redux';\r\n\r\nimport Alert from '../../common/alert';\r\nimport apis from '../../../services/Apis';\r\nimport { Post } from '../../../services/axiosCall';\r\n\r\nimport { Icon,Button,Row,Col,Radio,Checkbox  } from 'antd';\r\nimport { switchQuestion, updateIsMarked, fetchTestdata } from '../../../actions/traineeAction';\r\nimport Markdown from '../../../utils/Markdown';\r\n\r\nimport './portal.css';\r\n\r\nclass SingleQuestion extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        if(this.props.trainee.answers[this.props.trainee.activeQuestionIndex].chosenOption.length===this.props.trainee.questions[this.props.trainee.activeQuestionIndex].anscount){\r\n            this.state={\r\n                AnswerSelected:true,\r\n                options:this.props.trainee.questions[this.props.trainee.activeQuestionIndex].options,\r\n                answers:this.props.trainee.answers[this.props.trainee.activeQuestionIndex].chosenOption,\r\n                ticked:0\r\n            }\r\n        }\r\n        else{\r\n            this.state={\r\n                AnswerSelected:false,\r\n                options:this.props.trainee.questions[this.props.trainee.activeQuestionIndex].options,\r\n                answers:this.props.trainee.answers[this.props.trainee.activeQuestionIndex].chosenOption,\r\n                ticked:0\r\n            }\r\n        }\r\n        \r\n    }\r\n    componentWillMount(){\r\n        this.setState((PState,Pprops)=>{\r\n            let t=0;\r\n\r\n            var s = PState.options.map((d,i) => {\r\n                for(var ii=0;ii<PState.answers.length;ii++){\r\n                    if(PState.answers[ii]===d._id){\r\n\r\n                        t+=1;\r\n                        return({\r\n                            ...d,\r\n                            checked:true\r\n                        })\r\n                    }\r\n                }\r\n                return({\r\n                    ...d,\r\n                    checked:false\r\n                })\r\n            })\r\n            return({\r\n                ticked:t,\r\n                options :s\r\n            })\r\n        })\r\n    }\r\n\r\n    SaveTocloud = () => {\r\n        Post({\r\n            url: `${apis.UPDATE_ANSWERS}`,\r\n            data: {\r\n                testid: this.props.trainee.testid,\r\n                userid: this.props.trainee.traineeid,\r\n                qid: this.props.trainee.questions[this.props.trainee.activeQuestionIndex]._id,\r\n                newAnswer: this.state.answers\r\n            }\r\n        }).then((response) => {\r\n            if (response.data.success) {\r\n                // console.log(response.data);\r\n                var t = [...this.props.trainee.answers];\r\n                t[this.props.trainee.activeQuestionIndex] = {\r\n                    ...t[this.props.trainee.activeQuestionIndex],\r\n                    chosenOption: this.state.answers,\r\n                    isAnswered: true\r\n                }\r\n                this.props.updateIsMarked(t);\r\n            }\r\n            else {\r\n                this.props.fetchTestdata(this.props.trainee.testid, this.props.trainee.traineeid);\r\n                return Alert('error', 'Error!', response.data.message);\r\n                \r\n            }\r\n        }).catch((err) => {\r\n            return Alert('error', 'Error!', 'Server Error');\r\n        });\r\n\r\n        //save to cloud then\r\n    };\r\n\r\n    previous = () => {\r\n        if (this.props.trainee.activeQuestionIndex > 0) {\r\n            this.props.switchQuestion(this.props.trainee.activeQuestionIndex - 1)\r\n        }\r\n    };\r\n\r\n    next = () => {\r\n        if (this.state.AnswerSelected) {\r\n            this.SaveTocloud();\r\n            if (this.props.trainee.activeQuestionIndex < this.props.trainee.questions.length - 1) {\r\n                this.props.switchQuestion(this.props.trainee.activeQuestionIndex + 1)\r\n            }\r\n        }\r\n        else {\r\n            if (this.props.trainee.activeQuestionIndex < this.props.trainee.questions.length - 1) {\r\n                this.props.switchQuestion(this.props.trainee.activeQuestionIndex + 1)\r\n            }\r\n        }\r\n    };\r\n\r\n    mark = () => {\r\n        let aa = [...this.props.trainee.answers];\r\n        let c = aa[this.props.trainee.activeQuestionIndex];\r\n        c.isMarked = !this.props.trainee.answers[this.props.trainee.activeQuestionIndex].isMarked;\r\n        aa[this.props.trainee.activeQuestionIndex] = c\r\n        this.props.updateIsMarked(aa);\r\n    };\r\n\r\n    onAnswerChange=(d1,d2,d3)=>{\r\n        var ansCount=this.props.trainee.questions[this.props.trainee.activeQuestionIndex].anscount;\r\n        if(d2){\r\n            if(this.state.ticked===ansCount){\r\n                return Alert('error','Error!','Clear selected options to select other option')\r\n            }\r\n            else{\r\n                var op1 = [...this.state.options];\r\n                op1[d1]={\r\n                    ...op1[d1],\r\n                    checked:true\r\n                }\r\n                var op2 = [...this.state.answers]\r\n                op2.push(d3);\r\n                \r\n                if(this.state.ticked===ansCount-1){\r\n                    this.setState((PState, Pprops) => {\r\n                        return ({\r\n                            AnswerSelected: true,\r\n                            ticked: PState.ticked + 1,\r\n                            options: op1,\r\n                            answers: op2\r\n                        });\r\n                    });\r\n                }\r\n                else{\r\n                    this.setState((PState, Pprops) => {\r\n                        return ({\r\n                            ticked: PState.ticked + 1,\r\n                            options: op1,\r\n                            answers: op2\r\n                        });\r\n                    });\r\n                }\r\n                \r\n            }\r\n        }\r\n        else{\r\n            op1 = [...this.state.options];\r\n\r\n            op1[d1]={\r\n                ...op1[d1],\r\n                checked:false\r\n            }\r\n\r\n            op2 = [...this.state.answers]\r\n            var index=op2.indexOf(d3);\r\n            op2.splice(index, 1)\r\n            this.setState((PState, Pprops) => {\r\n                return ({\r\n                    AnswerSelected: false,\r\n                    ticked: PState.ticked - 1,\r\n                    options: op1,\r\n                    answers: op2\r\n                });\r\n            });\r\n        }\r\n    }\r\n\r\n    render(){\r\n        // console.log(this.state)\r\n        let opts = ['A', 'B', 'C', 'D', 'E'];\r\n        return (\r\n            <div>\r\n                <div className=\"Question-single-container\">\r\n                    <Row>\r\n                        <Col span={2}>\r\n                            <Button style={{ background: '#93329e', color: '#fff' }} shape=\"circle\">\r\n                                {this.props.trainee.activeQuestionIndex + 1}\r\n                            </Button>\r\n                        </Col>\r\n\r\n                        <Col span={22}>\r\n                            <Radio.Group style={{float:'right'}}>\r\n                                <Radio.Button\r\n                                    style={{ background: '#93329e', color: '#fff' }}\r\n                                >\r\n                                    {this.props.trainee.questions[this.props.trainee.activeQuestionIndex].anscount === 1 ? \"Single answer type\" : \"Multiple answer type\"}\r\n                                </Radio.Button>\r\n\r\n                                <Radio.Button\r\n                                    style={{ background: '#93329e', color: '#fff' }}\r\n                                >\r\n                                    Marks : {this.props.trainee.questions[this.props.trainee.activeQuestionIndex].weightage}\r\n                                </Radio.Button>\r\n                            </Radio.Group>\r\n                        </Col>\r\n\r\n                    </Row>\r\n                    {\r\n                        this.props.mode==='mobile'?\r\n                            <Button onClick={this.props.triggerSidebar} style={{ background: '#93329e', color: '#fff', float: 'right' }}>\r\n                                Menu\r\n                            </Button>\r\n                        :null\r\n                    }\r\n                    <div className=\"Question-single-body-holder\">\r\n                        <div>\r\n                            <h3 style={{ fontFamily: \"'Montserrat', sans-serif\" }}>\r\n                                <Markdown>\r\n                                    {this.props.trainee.questions[this.props.trainee.activeQuestionIndex].body}\r\n                                </Markdown>\r\n                            </h3>\r\n                        </div>\r\n                        \r\n                        {this.props.trainee.questions[this.props.trainee.activeQuestionIndex].quesimg?\r\n                            <div className=\"Single-question-body-image-container\">\r\n                                <img alt=\"Unable to load\" src={this.props.trainee.questions[this.props.trainee.activeQuestionIndex].quesimg} className=\"Single-question-body-image\"/>\r\n                            </div>:null\r\n                        }\r\n                    </div>\r\n\r\n                    <div className=\"Question-single-option-panel\">\r\n                        <Row>\r\n                            {this.state.options.map((d,i)=>{\r\n                                return (\r\n                                    <Col span={24} key={i} className=\"Single-option\">\r\n                                        <Col span={24} style={{ textAlign: 'left' }}>\r\n                                            <ul\r\n                                                style={{\r\n                                                    listStyle: 'none',\r\n                                                    padding: 0,\r\n                                                }}\r\n                                            >\r\n                                                <li>\r\n                                                    <Col span={1}>\r\n                                                        {opts[i]}{'  '}\r\n                                                    </Col>\r\n                                                    <Col span={19} style={{ background: '#eee', color: '#000' }}>\r\n                                                        <Checkbox\r\n                                                            checked={d.checked}\r\n                                                            onChange={(e) => { this.onAnswerChange(i, e.target.checked, d._id) }}\r\n                                                        >\r\n                                                            <h3 style={{ fontFamily: \"'Montserrat', sans-serif\" }}>\r\n                                                                {d.optbody}\r\n                                                            </h3>\r\n                                                        </Checkbox>\r\n                                                    </Col>\r\n\r\n                                                    <Col span={4}>\r\n                                                        <div className=\"option-image-in-exam-panel-holder\">\r\n                                                            {d.optimg ? <img alt=\"Unable to load\" className=\"option-image-in-exam-panel\" src={d.optimg} /> : null}\r\n                                                        </div>\r\n                                                    </Col>\r\n                                                </li>\r\n                                            </ul>\r\n                                        </Col>\r\n                                    </Col>\r\n                                );\r\n                            })}\r\n                        </Row>\r\n                    </div>\r\n                </div>\r\n                \r\n                <div className=\"control-button-in-exam-portal\">\r\n                    <Button.Group>\r\n                        {this.props.trainee.activeQuestionIndex===0?\r\n                            null\r\n                            :\r\n                            <Button style={{background:'#93329e',color:'#fff'}} onClick={this.previous}>\r\n                                <Icon type=\"left\" />\r\n                                Previous\r\n                            </Button>\r\n                        }\r\n                        <Button type=\"default\" onClick={this.mark}>\r\n                                <Icon type=\"flag\" />\r\n                                {!this.props.trainee.answers[this.props.trainee.activeQuestionIndex].isMarked?\"Mark Question\":\"Unmark Question\"}\r\n                        </Button>\r\n                        {this.props.trainee.activeQuestionIndex===this.props.trainee.questions.length-1?\r\n                            null\r\n                            :\r\n                            <Button style={{background:'#93329e',color:'#fff'}} onClick={this.next}>\r\n                                {this.state.AnswerSelected?\"Save & Next\": \"Next\"}\r\n                                <Icon type=\"right\" />\r\n                            </Button>\r\n                        }\r\n                        {this.props.trainee.activeQuestionIndex===this.props.trainee.questions.length-1 && this.state.AnswerSelected?\r\n                            <Button style={{background:'#93329e',color:'#fff'}} onClick={()=>{this.SaveTocloud()}}>\r\n                                Save\r\n                                <Icon type=\"right\" />\r\n                            </Button>:null\r\n                        }\r\n                    </Button.Group>\r\n                </div>\r\n            </div>\r\n        )\r\n    }   \r\n}\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n    trainee : state.trainee\r\n});\r\n\r\nexport default connect(mapStateToProps,{\r\n    switchQuestion,\r\n    updateIsMarked,\r\n    fetchTestdata\r\n})(SingleQuestion);","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport './portal.css';\r\nimport SingleQuestion from './singleQuestion';\r\nimport { fetchTraineeTestQuestions,fetchTraineeTestAnswerSheet } from '../../../actions/traineeAction'\r\n\r\nclass Question extends Component {\r\n\r\n    componentWillMount(){\r\n        this.props.fetchTraineeTestQuestions(this.props.trainee.testid);\r\n        this.props.fetchTraineeTestAnswerSheet(this.props.trainee.testid,this.props.trainee.traineeid);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"question-holder\">\r\n                <div className=\"single-question-container\">\r\n                    {this.props.trainee.answers.length>0 && this.props.trainee.questions.length>0 ?\r\n                        <SingleQuestion \r\n                            mode={this.props.mode} \r\n                            triggerSidebar={this.props.triggerSidebar}  \r\n                            key={this.props.trainee.activeQuestionIndex} \r\n                        /> : null\r\n                    }\r\n                </div>\r\n            </div>\r\n        )\r\n    };\r\n};\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n    trainee : state.trainee\r\n});\r\n\r\nexport default connect(mapStateToProps,{\r\n    fetchTraineeTestQuestions,\r\n    fetchTraineeTestAnswerSheet\r\n})(Question);","import React,{ useState, useEffect } from 'react'\r\nimport './portal.css';\r\nimport Sidepanel from './sidepanel'\r\nimport Question from './question';\r\nimport { Drawer } from \"antd\";\r\n\r\n\r\nfunction getWindowDimensions() {\r\n    const { innerWidth: width, innerHeight: height } = window;\r\n    return {\r\n        width,\r\n        height\r\n    };\r\n}\r\n\r\nfunction useWindowDimensions() {\r\n    const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\r\n  \r\n    useEffect(() => {\r\n        function handleResize() {\r\n            setWindowDimensions(getWindowDimensions());\r\n        }\r\n        window.addEventListener('resize', handleResize);\r\n        return () => window.removeEventListener('resize', handleResize);\r\n    }, []);\r\n  \r\n    return windowDimensions;\r\n};\r\n\r\nexport default function TestBoard(props) {\r\n    const { height, width } = useWindowDimensions();\r\n    const [visible,setVisible]=useState(false);\r\n\r\n    let onClose=()=>setVisible(false);\r\n    let onOpen=()=>setVisible(true);\r\n\r\n    if(width>768){\r\n        return (\r\n            <div className=\"exam-dashboard-wrapper\">\r\n                <Question mode={width>768?\"desktop\":\"mobile\"} triggerSidebar={onOpen}/>\r\n                <Sidepanel mode={width>768?\"desktop\":\"mobile\"} />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    else{\r\n        return (\r\n            <div className=\"exam-dashboard-wrapper\">\r\n                <Question mode={width>768?\"desktop\":\"mobile\"} triggerSidebar={onOpen} />\r\n                \r\n                <Drawer\r\n                    title=\"Menu\"\r\n                    placement=\"right\"\r\n                    closable={true}\r\n                    onClose={onClose}\r\n                    visible={visible}\r\n                    width=\"100%\"\r\n                >\r\n                    <Sidepanel mode={width>768?\"desktop\":\"mobile\"}/>    \r\n                </Drawer>\r\n            </div>\r\n        )\r\n    }  \r\n};","import React, { Component, Fragment } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Typography,Skeleton  } from 'antd'\r\nimport './portal.css';\r\n\r\nimport Instruction from './instruction';\r\nimport TestBoard from './testBoard';\r\nimport Answer from '../answersheet/answer';\r\n\r\nimport { \r\n    fetchTraineedata, \r\n    setTestDetsils, \r\n    fetchTestdata, \r\n    FeedbackStatus \r\n} from '../../../actions/traineeAction';\r\nimport queryString from 'query-string';\r\nimport logo from '../../basic/header/logo.png';\r\n\r\n\r\nconst { Title } = Typography;\r\n\r\nclass MainPortal extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        let params = queryString.parse(this.props.location.search);\r\n\r\n        this.state = {\r\n            testDetails:params\r\n        };\r\n        this.props.setTestDetsils(params.testid,params.traineeid);\r\n    }\r\n\r\n    componentDidMount(){\r\n        // console.log(this.props.trainee.traineeid)\r\n        this.props.fetchTraineedata(this.state.testDetails.traineeid)\r\n        this.props.fetchTestdata(this.state.testDetails.testid,this.state.testDetails.traineeid)\r\n    }\r\n\r\n\r\n    render() {\r\n        if(this.props.trainee.initialloading2 || this.props.trainee.initialloading1){\r\n            return(\r\n                <div className=\"skeletor-wrapper\">\r\n                    <Skeleton active />\r\n                    <Skeleton active />\r\n                </div>  \r\n            )\r\n        }\r\n        else{\r\n\r\n            if(this.props.trainee.invalidUrl){\r\n                return window.location.href=``;\r\n            }\r\n\r\n            else{\r\n                \r\n                if(this.props.trainee.LocaltestDone){\r\n                    return(\r\n                        <div>\r\n                            <Answer/>\r\n                        </div>\r\n                    )\r\n                }\r\n\r\n                else{\r\n                    if(this.props.trainee.testconducted){\r\n                        return (\r\n                            <Fragment>\r\n                                <div className=\"header-container\">\r\n                                    <img src={logo} alt=\"company logo\" className=\"logo\" />\r\n                                </div>\r\n\r\n                                <div className=\"Test-portal-not-started-yet-wrapper\">\r\n                                    <div className=\"Test-portal-not-started-yet-inner\">\r\n                                        <Title className=\"Test-portal-not-started-yet-inner-message\" style={{ color: '#fff' }} level={4}>\r\n                                            The Assessment is Over!<br />\r\n                                        </Title>\r\n                                    </div>\r\n                                </div>\r\n                            </Fragment>\r\n                        )\r\n                    }\r\n                    else{\r\n                        if(!this.props.trainee.testbegins){\r\n                            return (\r\n                                <Fragment>\r\n                                     <div className=\"header-container\">\r\n                                        <img src={logo} alt=\"company logo\" className=\"logo\" />\r\n                                    </div>\r\n\r\n                                    <div className=\"Test-portal-not-started-yet-wrapper\">\r\n                                        <div className=\"Test-portal-not-started-yet-inner\">\r\n                                            <Title className=\"Test-portal-not-started-yet-inner-message\" style={{color:'#fff'}} level={4}>The assessment will begin shortly. Please wait for the instruction, then refresh the page.</Title>\r\n                                        </div>\r\n                                    </div>\r\n                                </Fragment>\r\n                            )\r\n                        }\r\n                        else{\r\n                            if(this.props.trainee.startedWriting){\r\n                                return (\r\n                                    <div>\r\n                                        <TestBoard />\r\n                                    </div>\r\n                                );\r\n                            }\r\n                            else{\r\n                                return(\r\n                                    <div>\r\n                                        <Instruction/>                             \r\n                                    </div>\r\n                                )\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n    trainee : state.trainee\r\n});\r\n\r\nexport default connect(mapStateToProps,{\r\n    fetchTraineedata,\r\n    setTestDetsils,\r\n    fetchTestdata,\r\n    FeedbackStatus\r\n})(MainPortal);","import React from 'react';\r\nimport {BrowserRouter,Route} from \"react-router-dom\";\r\nimport './App.css';\r\nimport { Provider } from 'react-redux';\r\nimport store  from './store';\r\n\r\nimport 'ant-design-pro/dist/ant-design-pro.css'; // Ant Design Pro\r\n\r\nimport Home from './components/basic/homepage/Home';\r\nimport Homepage from './components/basic/homepage/homepage';\r\nimport Dashboard from './components/dashboard/backbone';\r\nimport TraineeRegister from './components/trainee/register/traineeregister';\r\nimport MainPortal from './components/trainee/examPortal/portal';\r\nimport Test from './Test';\r\n\r\nfunction App() {\r\n  return (\r\n    <Provider store={store}>\r\n      <BrowserRouter>\r\n        <nav>\r\n          <Route exact path=\"/\" component={Home} />\r\n          <Route exact path=\"/auth/login\" component={Homepage} />\r\n          <Route exact path=\"/home\" component={Homepage} />\r\n          <Route exact path=\"/user\" component={Dashboard}/>\r\n          <Route path=\"/user/:options\" component={Dashboard}/>\r\n          <Route exact path=\"/candidate/register\" component={TraineeRegister}/>\r\n          <Route exact path=\"/candidate/taketest\" component={MainPortal}/>\r\n          {/* <Route exact path=\"/test\" component={Test}/> */}\r\n\r\n        </nav>\r\n      </BrowserRouter>\r\n    </Provider> \r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport moment from 'moment';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nmoment().utcOffset(\"+05:30\");\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\nserviceWorker.unregister();\r\n","const bgcolor=[\r\n                'rgba(255, 99, 132, 0.2)',\r\n                'rgba(54, 162, 235, 0.2)',\r\n                'rgba(255, 206, 86, 0.2)',\r\n                'rgba(75, 192, 192, 0.2)',\r\n                'rgba(153, 102, 255, 0.2)',\r\n                'rgba(255, 159, 64, 0.2)',\r\n                'rgba(255, 99, 132, 0.2)',\r\n                'rgba(54, 162, 235, 0.2)',\r\n                'rgba(255, 206, 86, 0.2)',\r\n                'rgba(75, 192, 192, 0.2)',\r\n                'rgba(153, 102, 255, 0.2)',\r\n                'rgba(255, 159, 64, 0.2)',\r\n                'rgba(255, 99, 132, 0.2)',\r\n                'rgba(54, 162, 235, 0.2)',\r\n                'rgba(255, 206, 86, 0.2)',\r\n                'rgba(75, 192, 192, 0.2)',\r\n                'rgba(153, 102, 255, 0.2)',\r\n                'rgba(255, 159, 64, 0.2)',\r\n                'rgba(255, 99, 132, 0.2)',\r\n                'rgba(54, 162, 235, 0.2)',\r\n                'rgba(255, 206, 86, 0.2)',\r\n                'rgba(75, 192, 192, 0.2)',\r\n                'rgba(153, 102, 255, 0.2)',\r\n                'rgba(255, 159, 64, 0.2)',\r\n                'rgba(255, 99, 132, 0.2)',\r\n                'rgba(54, 162, 235, 0.2)',\r\n                'rgba(255, 206, 86, 0.2)',\r\n                'rgba(75, 192, 192, 0.2)',\r\n                'rgba(153, 102, 255, 0.2)',\r\n                'rgba(255, 159, 64, 0.2)',\r\n                'rgba(255, 99, 132, 0.2)',\r\n                'rgba(54, 162, 235, 0.2)',\r\n                'rgba(255, 206, 86, 0.2)',\r\n                'rgba(75, 192, 192, 0.2)',\r\n                'rgba(153, 102, 255, 0.2)',\r\n                'rgba(255, 159, 64, 0.2)',\r\n                'rgba(255, 99, 132, 0.2)',\r\n                'rgba(54, 162, 235, 0.2)',\r\n                'rgba(255, 206, 86, 0.2)',\r\n                'rgba(75, 192, 192, 0.2)',\r\n                'rgba(153, 102, 255, 0.2)',\r\n                'rgba(255, 159, 64, 0.2)',\r\n                'rgba(255, 99, 132, 0.2)',\r\n                'rgba(54, 162, 235, 0.2)',\r\n                'rgba(255, 206, 86, 0.2)',\r\n                'rgba(75, 192, 192, 0.2)',\r\n                'rgba(153, 102, 255, 0.2)',\r\n                'rgba(255, 159, 64, 0.2)',\r\n                'rgba(255, 99, 132, 0.2)',\r\n                'rgba(54, 162, 235, 0.2)',\r\n                'rgba(255, 206, 86, 0.2)',\r\n                'rgba(75, 192, 192, 0.2)',\r\n                'rgba(153, 102, 255, 0.2)',\r\n                'rgba(255, 159, 64, 0.2)',\r\n                'rgba(255, 99, 132, 0.2)',\r\n                'rgba(54, 162, 235, 0.2)',\r\n                'rgba(255, 206, 86, 0.2)',\r\n                'rgba(75, 192, 192, 0.2)',\r\n                'rgba(153, 102, 255, 0.2)',\r\n                'rgba(255, 159, 64, 0.2)'\r\n]\r\n\r\nconst bordercolor =[\r\n                'rgba(255, 99, 132, 1)',\r\n                'rgba(54, 162, 235, 1)',\r\n                'rgba(255, 206, 86, 1)',\r\n                'rgba(75, 192, 192, 1)',\r\n                'rgba(153, 102, 255, 1)',\r\n                'rgba(255, 159, 64, 1)',\r\n                'rgba(255, 99, 132, 1)',\r\n                'rgba(54, 162, 235, 1)',\r\n                'rgba(255, 206, 86, 1)',\r\n                'rgba(75, 192, 192, 1)',\r\n                'rgba(153, 102, 255, 1)',\r\n                'rgba(255, 159, 64, 1)',\r\n                'rgba(255, 99, 132, 1)',\r\n                'rgba(54, 162, 235, 1)',\r\n                'rgba(255, 206, 86, 1)',\r\n                'rgba(75, 192, 192, 1)',\r\n                'rgba(153, 102, 255, 1)',\r\n                'rgba(255, 159, 64, 1)',\r\n                'rgba(255, 99, 132, 1)',\r\n                'rgba(54, 162, 235, 1)',\r\n                'rgba(255, 206, 86, 1)',\r\n                'rgba(75, 192, 192, 1)',\r\n                'rgba(153, 102, 255, 1)',\r\n                'rgba(255, 159, 64, 1)',\r\n                'rgba(255, 99, 132, 1)',\r\n                'rgba(54, 162, 235, 1)',\r\n                'rgba(255, 206, 86, 1)',\r\n                'rgba(75, 192, 192, 1)',\r\n                'rgba(153, 102, 255, 1)',\r\n                'rgba(255, 159, 64, 1)',\r\n                'rgba(255, 99, 132, 1)',\r\n                'rgba(54, 162, 235, 1)',\r\n                'rgba(255, 206, 86, 1)',\r\n                'rgba(75, 192, 192, 1)',\r\n                'rgba(153, 102, 255, 1)',\r\n                'rgba(255, 159, 64, 1)',\r\n                'rgba(255, 99, 132, 1)',\r\n                'rgba(54, 162, 235, 1)',\r\n                'rgba(255, 206, 86, 1)',\r\n                'rgba(75, 192, 192, 1)',\r\n                'rgba(153, 102, 255, 1)',\r\n                'rgba(255, 159, 64, 1)',\r\n                'rgba(255, 99, 132, 1)',\r\n                'rgba(54, 162, 235, 1)',\r\n                'rgba(255, 206, 86, 1)',\r\n                'rgba(75, 192, 192, 1)',\r\n                'rgba(153, 102, 255, 1)',\r\n                'rgba(255, 159, 64, 1)',\r\n                'rgba(255, 99, 132, 1)',\r\n                'rgba(54, 162, 235, 1)',\r\n                'rgba(255, 206, 86, 1)',\r\n                'rgba(75, 192, 192, 1)',\r\n                'rgba(153, 102, 255, 1)',\r\n                'rgba(255, 159, 64, 1)',\r\n                'rgba(255, 99, 132, 1)',\r\n                'rgba(54, 162, 235, 1)',\r\n                'rgba(255, 206, 86, 1)',\r\n                'rgba(75, 192, 192, 1)',\r\n                'rgba(153, 102, 255, 1)',\r\n                'rgba(255, 159, 64, 1)' \r\n]\r\n\r\nmodule.exports={bgcolor,bordercolor}","module.exports = __webpack_public_path__ + \"static/media/gnius.18d25fd2.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.9992ff04.png\";"],"sourceRoot":""}