{"version":3,"sources":["reducers/opendrawer.js","reducers/admin.js","services/userOption.js","reducers/loggedinuser.js","reducers/trainer.js","reducers/test.js","reducers/conductTest.js","reducers/trainee.js","reducers/index.js","actions/types.js","store.js","components/basic/homepage/Features.js","components/basic/homepage/Home.js","services/Apis.js","services/axiosCall.js","services/AuthServices.js","actions/loginAction.js","components/common/alert.js","components/basic/login/login.js","components/basic/header/header.js","components/basic/homepage/homepage.js","actions/adminAction.js","components/admin/newTrainer/newtrainer.js","components/admin/allTrainer/alltrainer.js","components/admin/newTopics/newtopics.js","components/admin/allTopics/alltopics.js","actions/trainerAction.js","components/trainer/newquestion/newquestion.js","utils/Markdown.js","components/trainer/questionDetails/questiondetails.js","components/trainer/allquestions/allquestion.js","components/trainer/conducttest/questions.js","components/trainer/testdetails/stats.js","components/trainer/testdetails/trainee.js","components/trainer/testdetails/feedbacks.js","actions/traineeAction.js","components/trainee/answersheet/feedback.js","components/trainee/answersheet/answer.js","components/trainer/testdetails/Analysis.js","components/trainer/testdetails/testdetails.js","components/trainer/alltests/alltest.js","actions/conductTest.js","actions/testAction.js","components/trainer/conducttest/details.js","components/trainer/conducttest/candidates.js","components/trainer/conducttest/conducttest.js","services/steps.js","components/trainer/newtest/basicForm.js","components/trainer/newtest/generaterandomquestion.js","components/trainer/newtest/selectQuestion.js","components/trainer/newtest/questionview.js","components/trainer/newtest/newtest.js","components/dashboard/welcome.js","components/dashboard/errorPage.js","actions/useraction.js","components/dashboard/backbone.js","components/trainee/register/traineeregister.js","components/trainee/examPortal/instruction.js","components/trainee/examPortal/user.js","components/trainee/examPortal/operations.js","components/trainee/examPortal/clock.js","components/trainee/examPortal/sidepanel.js","components/trainee/examPortal/singleQuestion.js","components/trainee/examPortal/question.js","components/trainee/examPortal/testBoard.js","components/trainee/examPortal/portal.js","App.js","serviceWorker.js","index.js","assets/gnius.png","components/dashboard/logo.png","services/bgcolor.js","components/basic/header/logo.png"],"names":["initialState","navigationCollapsed","TrainermodalOpened","TrainerconfirmDirty","Trainermode","trainerId","TrainersearchText","trainerTableLoadingStatus","trainerEditFormLoadingStatus","trainerTableData","trainerdetails","subjectTableData","SubjectmodalOpened","SubjectconfirmDirty","Subjectmode","SubjectId","SubjectsearchText","SubjectTableLoading","subjectDetails","ADMIN_PERMISSIONS","display","icon","link","TRAINER_PERMISSIONS","isLoggedIn","userDetails","activeRoute","userOptions","NewQuestionmodalOpened","AllQuestionconfirmDirty","QuestionsearchText","QuestionTableLoading","QuestionTableData","selectedSubjects","QuestionFormData","fifthoptioAddButtonVisible","TestTableLoading","TestTableData","DataActiveTestDetails","testDetailsId","testquestions","greet","currentStep","mode","newtestFormData","testType","testTitle","testDuration","OrganisationName","testSubject","testQuestions","startTime","endTime","questionsAvailablebasedonSubject","id","testRegisterLink","basictestdetails","isRegistrationavailable","testbegins","testconducted","isResultgenerated","start","end","registeredCandidates","questionsOfTest","proceedingToTest","invalidUrl","testid","traineeid","initialloading1","initialloading2","startedWriting","LocaltestDone","m_left","s_left","traineeDetails","name","emailid","contact","activeQuestionIndex","questions","answers","hasGivenFeedBack","combineReducers","drawer","state","arguments","length","undefined","type","Object","objectSpread","admin","action","payload1","payload2","payload3","payload4","payload","user","activeurl","trainer","options","concat","toConsumableArray","image","body","isAnswer","TestDetailsmodalOpened","TestsearchText","test","conduct","trainee","payload5","payload6","middleware","thunk","store","createStore","rootReducer","applyMiddleware","apply","useStyles","makeStyles","theme","marginRight","spacing","heroContent","backgroundColor","palette","background","paper","padding","heroButtons","marginTop","cardGrid","paddingTop","paddingBottom","card","height","flexDirection","cardMedia","cardContent","flexGrow","footer","cards","title","description","Album","classes","react_default","a","createElement","Fragment","CssBaseline","Container","className","maxWidth","Grid","container","map","index","item","key","xs","sm","md","Card","CardContent","Typography","gutterBottom","variant","component","data","Copyright","color","align","Link","href","Date","getFullYear","@global","ul","margin","listStyle","appBar","toolbar","flexWrap","toolbarTitle","cardHeader","cardPricing","justifyContent","alignItems","marginBottom","defineProperty","borderTop","divider","breakpoints","up","tiers","price","buttonText","buttonVariant","subheader","footers","Pricing","AppBar","position","elevation","Toolbar","noWrap","src","logo","alt","Button","tier","CardHeader","titleTypographyProps","subheaderTypographyProps","line","CardActions","fullWidth","row","justify","col","span","style","borderRadius","react","Box","mt","apis","BASE_LOCAL_URL","BASE","LOGIN","GETDETAILSUSER","GET_ALL_TRAINER","GET_SINGLE_TRAINER_DETAILS","CREATE_TRAINER","DELETE_TRAINER","GET_ALL_SUBJECTS","GET_SINGLE_SUBJECT_DETAILS","CREATE_SUBJECT","GET_ALL_QUESTIONS","DELETE_QUESTION","FETCH_SINGLE_QUESTION","CREATE_QUESTIONS","FILE_UPLOAD","CREATE_TEST","GET_ALL_TESTS","GET_SINGLE_TEST","REGISTER_TRAINEE_FOR_TEST","RESEND_TRAINER_REGISTRATION_LINK","GET_SINGLE_TEST_DETAILS_BASIC","STOP_REGISTRATION","START_TEST_BY_TRAINER","GET_TEST_CANDIDATES","GET_TEST_QUESTIONS","FETCH_TRAINEE_DETAILS","FETCH_TRAINEE_TEST_DETAILS","PROCEED_TO_TEST","FETCH_TRAINEE_TEST_QUESTION","FETCH_TRAINEE_TEST_ANSWERSHEET","UPDATE_ANSWERS","END_TEST","FETCH_OWN_RESULT","FETCH_SINGLE_QUESTION_BY_TRAINEE","END_TEST_BY_TRAINER","FEEDBACK_STATUS_CHECK","GIVE_FEEDBACK","GET_STATS","GET_EXCEL","MAX_MARKS_FETCH","GET_FEEDBACKS","CHECK_TEST_NAME","IMPORT_CANDIDATES","axios","require","SecureGet","p","method","baseURL","params","Token","auth","retriveToken","SecurePost","Post","AuthServices","AuthService","classCallCheck","this","localStorage","getItem","storeToken","t","setItem","deleteToken","removeItem","LoginAuth","u","url","password","FetchAuth","token","login","details","dispatch","logout","Alert","s","h","b","Modal","success","content","error","warning","Login","props","_this","possibleConstructorReturn","getPrototypeOf","call","handleSubmit","e","preventDefault","form","validateFields","err","values","email","then","response","message","setState","catch","getFieldDecorator","react_router","to","es_form","onSubmit","autoComplete","Item","label","hasFeedback","rules","required","input","prefix","placeholder","Password","es_button","htmlType","block","React","Component","LoginForm","Form","create","connect","HomepageHeader","main","header_header","login_login","ChangeTrainerModalState","d1","d2","d3","slice","confirmpassword","ChangeTrainerTableData","ChangeSubjectModalState","topic","ChangeSubjectTableData","d","Option","Select","NewTrainer","checked","status","toggle","compareToFirstPassword","rule","value","callback","getFieldValue","validateToNextPassword","force","console","log","validateFieldsAndScroll","_id","prefixSelector","initialValue","es_select","width","newtrainer_Option","whitespace","len","addonBefore","min","max","validator","onBlur","handleConfirmBlur","es_switch","checkedChildren","unCheckedChildren","onChange","NewTrainerForm","ChangeTrainerConfirmDirty","AllTrainer","openModal","closeModal","deleteTrainer","getColumnSearchProps","dataIndex","filterDropdown","_ref","setSelectedKeys","selectedKeys","confirm","clearFilters","ref","node","searchInput","target","onPressEnter","handleSearch","onClick","size","handleReset","filterIcon","filtered","onFilter","record","toString","toLowerCase","includes","onFilterDropdownVisibleChange","visible","setTimeout","select","render","text","main_default","highlightStyle","searchWords","autoEscape","textToHighlight","ChangeTrainerSearchText","TrainertableLoading","_this2","Title","columns","shape","popconfirm","cancelText","okText","onConfirm","level","textAlign","table","bordered","dataSource","pagination","pageSize","loading","rowKey","modal","onOk","handleOk","onCancel","top","destroyOnClose","newTrainer_newtrainer","NewTopics","NewSubjectForm","ChangeSubjectConfirmDirty","AllTopics","ChangeSubjectSearchText","newtopics","ChangeQuestionModalState","ChangeQuestionTableData","subject","NewQuestion","addfifthOption","previousState","previousProps","questionDetails","Customalert","OptionTextChange","i","newOptions","ps","pp","AnswerOptionSwitch","OptionImageonChange","f","submitDisabled","ans","opts","forEach","element","push","optbody","optimg","adding","questionbody","quesimg","questionimage","explanation","weightage","waitage","resetFields","changeqImage","upl","TextArea","Input","QuestionImageprops","listType","showSearch","optionFilterProp","rows","upload","assign","beforeUpload","onRemove","onSuccess","ExplanationChange","offset","input_number","option","es_checkbox","disabled","NewQuestionForm","ChangeQuestionConfirmDirty","renderers","inlineMath","react_katex","math","_ref2","code","_ref3","language","prism","children","Markdown","react_markdown_default","plugins","gfm","TabPane","Tabs","QuestionDetails","tabChange","ID","_this3","skeleton","active","avatar","tabs","defaultActiveKey","tab","Tab1","Tab2","descriptions","border","column","xxl","xl","lg","difficulty","anscount","createdBy","moment","createdAt","format","optn","Optiondata","utils_Markdown","AllQuestions","OpendetailsModal","questiondetailsId","questiondetailsModelVisible","ClosedetailsModal","openNewModal","closeNewModal","handleSubjectChange","ChangeSelectedSubjects","deleteQuestion","ChangeQuestionSearchText","defaultValue","allowClear","newquestion_newquestion","questiondetails_QuestionDetails","Questions","refreshquestionList","updateQuestiosnTest","total","aMap","fontSize","reduce","accumulator","current","dd","ii","Stats","stats","Scorelable","Scoredata","bgColor1","borcolor1","maxmMarks","passData","passLable","stat","statdata","_this$state","maxi","p90_100","p80_90","p70_80","p60_70","p50_60","below50","pc","score","dp","bgcolor","bordercolor","barData","labels","datasets","borderColor","borderWidth","DoughNutData1","DoughNutData2","es_card","file","react_chartjs_2_es","maintainAspectRatio","Trainee","maxMarks","tag","es_tag","FeedBacks","feedbacks","es_comment","author","userid","organisation","rate","rating","feedback","fetchTestdata","completed","pending","Math","floor","Number","String","switchQuestion","FeedbackStatus","Text","Feedback","handleStarChange","star","onCommentChange","comment","submitFeedback","desc","feedback_Title","tooltips","feedback_TextArea","Panel","Collapse","Answer","handleCancel","Mvisible","OpenModel","qid","ActiveQuestionId","TotalScore","p1","p2","p3","Promise","all","v","r","result","tags","toUpperCase","twoToneColor","userData","answer_Title","collapse","header","subTitle","answer_SingleQuestionDetails","SingleQuestionDetails","_this4","fetching","qdetails","_this5","answersheet_answer","TestDetails","showModal","testdetails","mainlink","window","location","split","splice","p4","p5","testdetails_TabPane","addonAfter","lib","onCopy","subjects","questions_Questions","updateQuestiosnActiveTest","stats_Stats","Analysis_Trainee","AllTests","ChangeTestDetailsModalState","ChangeTestSearchText","ChangeTestTableData","afterClose","trainer_testdetails_testdetails","changeConducttestId","updateCandidatesTest","changeStep","changeBasicNewTestDetails","changeRegistrationStatus","changeTestRegisterStatus","changeTestStatus","endTestByTrainee","getCandidates","changeTestRegisterLink","updateCurrentTestBasicDetails","layout","papaparseOptions","dynamicTyping","skipEmptyLines","transformHeader","replace","Candidates","searchText","handleForce","fileInfo","progress","refreshUserList","float","candidates_Title","react_csv_reader_default","cssClass","onFileLoaded","parserOptions","percent","ConductTestS","ChangeLocalTestId","localTestId","ChangetestId","needRedirect","CC","conducttest_Title","C","conducttest_TabPane","candidates","mapStateToProps","steps","utcOffset","BasicTestFormO","DatePicker","RangePicker","duration","validateTestName","checkingName","testname","can_use","ee","basicForm_Option","validateStatus","date_picker","showTime","onChangeStart","onOkStart","onChangeEnd","onOkEnd","BasicTestForm","GeneraterandomQuestionO","no","qus","allquestions","l","random","pushQuestionToQueue","autogenerate","renderItem","handleChange","targetKeys","direction","moveKeys","generating","changeMode","fetchSubjectWiseQuestion","transfer","generaterandomquestion_SingleQuestionDetails","GeneraterandomQuestion","removeQuestionFromMainQueue","questionCount","tabBarExtraContent","selectQuestion_TabPane","generaterandomquestion","FinalQuestionView","createtest","Q","obj","filter","hero","oo","Step","Steps","NewTest","torender","selectQuestion","questionview","basicForm","newtest_Title","welcome_Title","gutter","statistic","precision","valueStyle","suffix","ErrorPage","Header","Layout","Sider","Content","Footer","Dashboard","collapsed","logOut","LocalIsLoggedIn","subUrl","match","find","o","tt","indexOf","changeActiveRoute","allTrainer_alltrainer","allTopics_alltopics","allquestions_allquestion","alltests_alltest","components_dashboard_welcome","newtest_newtest","queryString","parse","search","conducttest","trigger","collapsible","menu","defaultSelectedKeys","react_router_dom","paddingLeft","zIndex","tooltip","placement","minHeight","TraineeRegisterForm","inform","resendMail","traineeregister_Option","traineeregister_Title","TraineeRegister","ProceedtoTest","_useState","useState","_useState2","slicedToArray","setstate","user_icon","Operations","Mark","questionid","isAnswered","mark","isMarked","badge","count","Clock","endTest","clockF","c","setInterval","localMinutes","localSeconds","clearInterval","Sidepanel","clock","operations","SingleQuestion","SaveTocloud","newAnswer","chosenOption","updateIsMarked","previous","next","AnswerSelected","aa","onAnswerChange","ansCount","ticked","op1","op2","PState","Pprops","es_radio","Group","triggerSidebar","fontFamily","Question","fetchTraineeTestQuestions","fetchTraineeTestAnswerSheet","singleQuestion","tid","uid","getWindowDimensions","_window","innerWidth","innerHeight","TestBoard","_useWindowDimensions","windowDimensions","setWindowDimensions","useEffect","handleResize","addEventListener","removeEventListener","useWindowDimensions","_useState3","_useState4","setVisible","onOpen","question","sidepanel","closable","onClose","MainPortal","testDetails","setTestDetsils","fetchTraineedata","portal_Title","instruction","App","es","exact","path","Home","Homepage","Boolean","hostname","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","__webpack_require__"],"mappings":"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SAAStH,MACvB,2DCZNlR,MAASuM,UAAU,UAEnBkM,IAAS5gB,OAAOtS,EAAAC,EAAAC,cAACizB,GAAD,MAASC,SAASC,eAAe,SDyH3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMloB,KAAK,SAAAmoB,GACjCA,EAAaC,4HEnInBC,EAAAC,QAAiBC,EAAA5rB,EAAuB,uDCAxC0rB,EAAAC,QAAiBC,EAAA5rB,EAAuB,sIC8HxC0rB,EAAOC,QAAQ,CAAC7V,QA9HF,CACE,0BACA,0BACA,0BACA,0BACA,2BACA,0BACA,0BACA,0BACA,0BACA,0BACA,2BACA,0BACA,0BACA,0BACA,0BACA,0BACA,2BACA,0BACA,0BACA,0BACA,0BACA,0BACA,2BACA,0BACA,0BACA,0BACA,0BACA,0BACA,2BACA,0BACA,0BACA,0BACA,0BACA,0BACA,2BACA,0BACA,0BACA,0BACA,0BACA,0BACA,2BACA,0BACA,0BACA,0BACA,0BACA,0BACA,2BACA,0BACA,0BACA,0BACA,0BACA,0BACA,2BACA,0BACA,0BACA,0BACA,0BACA,0BACA,2BACA,2BAkEQC,YA/DL,CACH,wBACA,wBACA,wBACA,wBACA,yBACA,wBACA,wBACA,wBACA,wBACA,wBACA,yBACA,wBACA,wBACA,wBACA,wBACA,wBACA,yBACA,wBACA,wBACA,wBACA,wBACA,wBACA,yBACA,wBACA,wBACA,wBACA,wBACA,wBACA,yBACA,wBACA,wBACA,wBACA,wBACA,wBACA,yBACA,wBACA,wBACA,wBACA,wBACA,wBACA,yBACA,wBACA,wBACA,wBACA,wBACA,wBACA,yBACA,wBACA,wBACA,wBACA,wBACA,wBACA,yBACA,wBACA,wBACA,wBACA,wBACA,wBACA,yBACA,qTC3HhB2V,EAAAC,QAAiBC,EAAA5rB,EAAuB","file":"static/js/main.2333496c.chunk.js","sourcesContent":["import { TOOGLE_NAVIGATION } from '../actions/types';\r\n\r\n\r\nconst initialState = {\r\n    navigationCollapsed : true\r\n}\r\n\r\nexport default (state = initialState, action )=>{\r\n    switch(action.type){\r\n        case TOOGLE_NAVIGATION:\r\n            return {\r\n                ...state,\r\n                navigationCollapsed : !state.navigationCollapsed\r\n            }  \r\n        default:\r\n            return state;\r\n    }\r\n}","const initialState = {\r\n    TrainermodalOpened : false,\r\n    TrainerconfirmDirty: false,\r\n    Trainermode : 'Register',\r\n    trainerId : null,\r\n    TrainersearchText : '',\r\n    trainerTableLoadingStatus:false,\r\n    trainerEditFormLoadingStatus:false,\r\n    trainerTableData:[],\r\n    trainerdetails:{},\r\n    subjectTableData : [] ,\r\n    SubjectmodalOpened : false,\r\n    SubjectconfirmDirty: false,\r\n    Subjectmode : 'New Topic',\r\n    SubjectId : null,\r\n    SubjectsearchText : '',\r\n    SubjectTableLoading : false, \r\n    subjectDetails :{}    \r\n}\r\n\r\nexport default (state = initialState, action )=>{\r\n    switch(action.type){\r\n        case 'CHANGE_TRAINER_MODAL_STATE':\r\n            return {\r\n                ...state,\r\n                TrainermodalOpened : action.payload1,\r\n                trainerId : action.payload2,\r\n                Trainermode : action.payload3,\r\n                trainerdetails : action.payload4\r\n\r\n            }\r\n        case 'CHANGE_TRAINER_FORM_CONFIRMDIRTY':\r\n            return {\r\n                ...state,\r\n                TrainerconfirmDirty : action.payload\r\n            }\r\n        case 'CHANGE_TRAINER_SEARCH_TEXT':\r\n                return {\r\n                    ...state,\r\n                    TrainersearchText : action.payload\r\n                }\r\n        case 'CHANGE_TRAINER_TABLE_LOADING_STATUS':\r\n                return {\r\n                    ...state,\r\n                    trainerTableLoadingStatus : action.payload1,\r\n                    trainerTableData : action.payload2,\r\n\r\n                }\r\n        case 'CHANGE_SUBJECT_MODAL_STATE':\r\n            return {\r\n                ...state,\r\n                SubjectmodalOpened : action.payload1,\r\n                SubjectId : action.payload2,\r\n                Subjectmode : action.payload3,\r\n                subjectDetails : action.payload4\r\n            }\r\n        case 'CHANGE_SUBJECT_FORM_CONFIRMDIRTY':\r\n            return {\r\n                ...state,\r\n                SubjectconfirmDirty : action.payload\r\n            }\r\n        case 'CHANGE_SUBJECT_SEARCH_TEXT':\r\n                return {\r\n                    ...state,\r\n                    SubjectsearchText : action.payload\r\n                }\r\n        case 'CHANGE_SUBJECT_TABLE_LOADING_STATUS':\r\n                return {\r\n                    ...state,\r\n                    SubjectTableLoading : action.payload1,\r\n                    subjectTableData :action.payload2\r\n                }\r\n        default:\r\n            return state;\r\n    }\r\n}","export const ADMIN_PERMISSIONS = [\r\n    {\r\n        display: 'Welcome',\r\n        icon: 'home',\r\n        link: '/user/home'\r\n    },\r\n    {\r\n        display: 'All Trainers',\r\n        icon: 'user',\r\n        link: '/user/listtrainers'\r\n    },\r\n    {\r\n        display: 'All Courses',\r\n        icon: 'book',\r\n        link: '/user/listsubjects'\r\n    },\r\n    {\r\n        display: 'All Questions',\r\n        icon: 'form',\r\n        link: '/user/listquestions'\r\n    },\r\n];\r\n\r\nexport const TRAINER_PERMISSIONS = [\r\n    {\r\n        display: 'Welcome',\r\n        icon: 'home',\r\n        link: '/user/home'\r\n    },\r\n    {\r\n        display: 'All Questions',\r\n        icon: 'form',\r\n        link: '/user/listquestions'\r\n    },\r\n    {\r\n        display: 'All Tests',\r\n        icon: 'copy',\r\n        link: '/user/listtests'\r\n    },\r\n    {\r\n        display: 'New Test',\r\n        icon: 'edit',\r\n        link: '/user/newtest'\r\n    },\r\n    {\r\n        display: 'Conduct Test',\r\n        icon: 'edit',\r\n        link: '/user/conducttest'\r\n    }\r\n];","import { ADMIN_PERMISSIONS, TRAINER_PERMISSIONS} from '../services/userOption';\r\n\r\nconst initialState = {\r\n    isLoggedIn : false,\r\n    userDetails : {},\r\n    activeRoute:'0',\r\n    userOptions:[]\r\n}\r\n\r\nexport default (state = initialState, action )=>{\r\n    switch(action.type){\r\n        case 'CHANGE_ACTIVE_URL':\r\n            return {\r\n                ...state,\r\n                activeurl : action.payload\r\n            }\r\n        case 'CHANGE_ACTIVE_ROUTE':\r\n            return {\r\n                ...state,\r\n                activeRoute : action.payload\r\n            }\r\n        case 'LOGIN':\r\n            if(action.payload.type==='ADMIN'){\r\n                return {\r\n                    ...state,\r\n                    isLoggedIn : true,\r\n                    userDetails:{\r\n                        ...action.payload\r\n                    },\r\n                    userOptions : ADMIN_PERMISSIONS                    \r\n                }\r\n            }\r\n            else{\r\n                return {\r\n                    ...state,\r\n                    isLoggedIn : true,\r\n                    userDetails:{\r\n                        ...action.payload\r\n                    },\r\n                    userOptions : TRAINER_PERMISSIONS\r\n                }\r\n            }\r\n            \r\n        case 'LOGOUT':\r\n            return {\r\n                ...state,\r\n                isLoggedIn : false,\r\n                userDetails :{\r\n\r\n                }\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","const initialState = {\r\n    NewQuestionmodalOpened : false,\r\n    AllQuestionconfirmDirty: false,\r\n    QuestionsearchText : '',\r\n    QuestionTableLoading : false, \r\n    QuestionTableData : [],\r\n    selectedSubjects:[],\r\n    QuestionFormData:{},\r\n    fifthoptioAddButtonVisible:true,\r\n    TestTableLoading:false,\r\n    TestTableData:[],\r\n    DataActiveTestDetails : {\r\n        testDetailsId : null,\r\n        testquestions :[]\r\n    }\r\n}\r\n\r\n\r\nexport default (state = initialState, action )=>{\r\n    switch(action.type){\r\n        case 'CHANGE_QUESTION_MODAL_STATE':\r\n            return {\r\n                ...state,\r\n                NewQuestionmodalOpened : action.payload1,\r\n            }\r\n        case 'CHANGE_QUESTION_FORM_CONFIRMDIRTY':\r\n            return {\r\n                ...state,\r\n                AllQuestionconfirmDirty : action.payload\r\n            }\r\n        case 'CHANGE_QUESTION_SEARCH_TEXT':\r\n            return {\r\n                ...state,\r\n                QuestionsearchText : action.payload\r\n            }\r\n        case 'CHANGE_QUESTION_TABLE_LOADING_STATUS':\r\n            return {\r\n                ...state,\r\n                QuestionTableLoading : action.payload1,\r\n                QuestionTableData : action.payload2\r\n            }\r\n        case 'ADD_FIFTH_OPTION':\r\n            return {\r\n                ...state,\r\n                QuestionFormData:{\r\n                    ...state.QuestionFormData,\r\n                    options:[\r\n                        ...state.QuestionFormData.options,\r\n                        {\r\n                            image :null,\r\n                            body : null,\r\n                            isAnswer :false\r\n                        }\r\n                    ]\r\n                },\r\n                fifthoptioAddButtonVisible:false\r\n            }\r\n        case 'CHANGE_SELECTED_SUBJECT':\r\n            return {\r\n                ...state,\r\n                selectedSubjects : action.payload\r\n            }\r\n        case 'CHANGE_QUESTION_FORM_DATA':\r\n            return{\r\n                ...state,\r\n                QuestionFormData : action.payload\r\n            }\r\n        case 'CHANGE_TEST_DETAILS_MODAL_STATE':\r\n            return {\r\n                ...state,\r\n                TestDetailsmodalOpened : action.payload1,\r\n                DataActiveTestDetails :{\r\n                    ...state.DataActiveTestDetails,\r\n                    testDetailsId : action.payload2\r\n                }\r\n            }\r\n        case 'CHANGE_TEST_SEARCH_TEXT':\r\n            return {\r\n                ...state,\r\n                TestsearchText : action.payload\r\n            }\r\n        case 'CHANGE_TEST_TABLE_LOADING_STATUS':\r\n            return {\r\n                ...state,\r\n                TestTableLoading : action.payload1,\r\n                TestTableData :action.payload2\r\n            }\r\n        case 'CHANGE_CURRENT_ACTIVE_TEST_QUESTION':\r\n            return{\r\n                ...state,\r\n                DataActiveTestDetails:{\r\n                    ...state.DataActiveTestDetails,\r\n                    testquestions:action.payload\r\n                }\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","const initialState = {\r\n    greet: 'Hi',\r\n    currentStep: 0,\r\n    mode: \"random\",\r\n    newtestFormData: {\r\n        testType: null,\r\n        testTitle: '',\r\n        testDuration: 60,\r\n        OrganisationName: null,\r\n        testSubject: [],\r\n        testQuestions: [],\r\n        startTime: null,\r\n        endTime: null\r\n    },\r\n    questionsAvailablebasedonSubject: []\r\n};\r\n\r\n\r\nexport default (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'CHANGE_ACTIVE_STEP':\r\n            return {\r\n                ...state,\r\n                currentStep: action.payload\r\n            }\r\n        case 'CHANGE_BASIC_NEW_TEST_DETAILS':\r\n            return {\r\n                ...state,\r\n                newtestFormData: {\r\n                    ...state.newtestFormData,\r\n                    ...action.payload\r\n                }\r\n            }\r\n        case 'FETCH_QUESTIONS_BASED_ON_SUBJECT':\r\n            return {\r\n                ...state,\r\n                questionsAvailablebasedonSubject: action.payload\r\n            }\r\n        case 'ADD_QUESTION_TO_QUESTION_QUEUSE':\r\n            return {\r\n                ...state,\r\n                newtestFormData: {\r\n                    ...state.newtestFormData,\r\n                    testQuestions: action.payload\r\n                }\r\n            }\r\n        case 'REMOVE_QUESTION_FROM_MAIN_QUEUE':\r\n            return {\r\n                ...state,\r\n                questionsAvailablebasedonSubject: action.payload\r\n            }\r\n        case 'CHANGE_MODE_QUESTION_SELECT':\r\n            return {\r\n                ...state,\r\n                mode: action.payload\r\n            }\r\n        \r\n        default:\r\n            return state;\r\n    };\r\n};","const initialState = { \r\n    id : null,\r\n    testRegisterLink:'',\r\n    basictestdetails:{\r\n        isRegistrationavailable:false,\r\n        testbegins:false,\r\n        testconducted:false,\r\n        isResultgenerated: false,\r\n        start: null,\r\n        end: null,\r\n    },\r\n    registeredCandidates:[],\r\n    questionsOfTest:[]\r\n}\r\n\r\nexport default (state = initialState, action )=>{\r\n    switch(action.type){\r\n        case 'SET_CONDUCT_TEST_ID':\r\n            return {\r\n                ...state ,\r\n                id:action.payload\r\n            }\r\n        case 'SET_TEST_REGISTER_LINK':\r\n            return {\r\n                ...state ,\r\n                testRegisterLink:action.payload\r\n            }\r\n        case 'UPDATE_TEST_BASIC_DETAILS':\r\n            return{\r\n                ...state,\r\n                basictestdetails:action.payload\r\n            }\r\n        case 'CHANGE_TEST_ISREGISTRATION_AVAILABLE':\r\n            return{\r\n                ...state,\r\n                basictestdetails:{\r\n                    ...state.basictestdetails,\r\n                    isRegistrationavailable:action.payload\r\n                }\r\n            }\r\n        case 'CHANGE_BEGIN_TEST_STATUS':\r\n            return{\r\n                ...state,\r\n                basictestdetails:action.payload\r\n            }\r\n        case 'CHANGE_CANDIDATES_OF_TEST':\r\n            return{\r\n                ...state,\r\n                registeredCandidates:action.payload\r\n            }\r\n        case 'CHANGE_QUESTIONS_OF_TEST':\r\n            return{\r\n                ...state,\r\n                questionsOfTest :action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","const initialState = {\r\n    proceedingToTest:false,\r\n    invalidUrl:false,\r\n    testid:null,\r\n    traineeid:null,\r\n    initialloading1:true,\r\n    initialloading2:true,\r\n    testbegins : true,\r\n    startedWriting:true,\r\n    testconducted:false,\r\n    LocaltestDone:true,\r\n    m_left:0,\r\n    s_left:0,\r\n    traineeDetails:{\r\n        name:\"\",\r\n        emailid:\"\",\r\n        contact:\"\"\r\n    },\r\n    activeQuestionIndex:0,\r\n    questions:[],\r\n    answers:[],\r\n    hasGivenFeedBack:false\r\n}\r\n\r\n\r\nexport default (state = initialState, action )=>{\r\n    switch(action.type){\r\n        case 'SET_HAS_GIVEN_FEEDBACK':\r\n            return{\r\n                ...state,\r\n                hasGivenFeedBack:action.payload\r\n            }\r\n        case 'SET_TRAINEE_TEST_DETAILS':\r\n            return{\r\n                ...state,\r\n                testid:action.payload1,\r\n                traineeid:action.payload2,\r\n            }\r\n        case 'FETCH_TEST_FLAG':\r\n            return{\r\n                ...state,\r\n                testbegins:action.payload1,\r\n                startedWriting:action.payload2,\r\n                testconducted:action.payload3,\r\n                LocaltestDone:action.payload4,\r\n                m_left:action.payload5,\r\n                s_left:action.payload6,\r\n                initialloading1:false\r\n            }\r\n        case 'INVALID_TEST_URL':\r\n            return{\r\n                ...state,\r\n                invalidUrl:true\r\n            }\r\n        case 'TEST_DONE_LOCAL':\r\n            return {\r\n                ...state,\r\n                LocaltestDone : true\r\n            }\r\n        case 'PROCEEDING_TO_TEST':\r\n            return{\r\n                ...state,\r\n                proceedingToTest:action.payload\r\n            }\r\n        case 'SWITCH_QUESTION':\r\n            return {\r\n                ...state,\r\n                activeQuestionIndex:action.payload\r\n            }\r\n        case 'FETCH_LOGGED_IN_TRAINEE':\r\n            return{\r\n                ...state,\r\n                initialloading2:false,\r\n                traineeDetails:action.payload\r\n            }\r\n        case 'UPDATE_TRAINEE_TEST_QUESTIONS':\r\n            return{\r\n                ...state,\r\n                questions:action.payload\r\n            }\r\n        case 'UPDATE_TRAINEE_TEST_ANSWERSHEET':\r\n            return{\r\n                ...state,\r\n                answers:action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from 'redux';\r\n\r\nimport openDrawer from './opendrawer';\r\nimport adminAction from './admin';\r\nimport userAction from './loggedinuser'\r\nimport trainerAction from './trainer';\r\nimport testAction from './test';\r\nimport conductTest from './conductTest';\r\nimport trainee from './trainee';\r\n\r\nexport default combineReducers({\r\n    drawer: openDrawer,\r\n    admin: adminAction,\r\n    user: userAction,\r\n    trainer: trainerAction,\r\n    test: testAction,\r\n    conduct: conductTest,\r\n    trainee: trainee\r\n});","export const TOOGLE_NAVIGATION = 'TOOGLE_NAVIGATION';\r\n\r\n","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport rootReducer from './reducers/index';\r\n\r\nconst initialState = {};\r\nconst middleware = [thunk];\r\n\r\n// const store = createStore(\r\n//     rootReducer, \r\n//     initialState,\r\n//     compose(\r\n//         applyMiddleware(...middleware),\r\n//         (window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__()) || compose\r\n//     )\r\n// );\r\n\r\nconst store = createStore(\r\n    rootReducer, \r\n    initialState, \r\n    applyMiddleware(...middleware)\r\n);\r\n\r\n\r\nexport default store;","import React from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Button from '@material-ui/core/Button';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport { Icon } from 'antd';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    icon: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    heroContent: {\r\n        backgroundColor: theme.palette.background.paper,\r\n        padding: theme.spacing(8, 0, 6),\r\n    },\r\n    heroButtons: {\r\n        marginTop: theme.spacing(4),\r\n    },\r\n    cardGrid: {\r\n        paddingTop: theme.spacing(8),\r\n        paddingBottom: theme.spacing(8),\r\n    },\r\n    card: {\r\n        height: '100%',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n    },\r\n    cardMedia: {\r\n        paddingTop: '56.25%', // 16:9\r\n    },\r\n    cardContent: {\r\n        flexGrow: 1,\r\n    },\r\n    footer: {\r\n        backgroundColor: theme.palette.background.paper,\r\n        padding: theme.spacing(6),\r\n    },\r\n}));\r\n\r\nconst cards = [\r\n    {\r\n        title: 'MCQ / MSQ',\r\n        icon: 'file-done',\r\n        description: 'Create tests automatically and manually with our huge question library',\r\n    },\r\n    {\r\n        title: 'Codeplayer',\r\n        icon: 'code',\r\n        description: 'Coding Platform and Online Judge Platform',\r\n    },\r\n    {\r\n        title: 'Auto Proctored',\r\n        icon: 'desktop',\r\n        description: 'Remote based hiring using AI and ML',\r\n    },\r\n    {\r\n        title: 'Invite Candidates',\r\n        icon: 'cloud-download',\r\n        description: 'Import and Export Candidates. Invite candidates',\r\n    },\r\n    {\r\n        title: 'Analysis',\r\n        icon: 'area-chart',\r\n        description: 'View detailed reports and in-depth analysis of each candidates performance',\r\n    },\r\n    {\r\n        title: 'Support',\r\n        icon: 'phone',\r\n        description: 'Support via phone and email and much more.',\r\n    },\r\n];\r\n\r\nexport default function Album() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <CssBaseline />\r\n      \r\n      <main>\r\n        <Container className={classes.cardGrid} maxWidth=\"md\">\r\n          {/* End hero unit */}\r\n          <Grid container spacing={4}>\r\n            {cards.map((card, index) => (\r\n              <Grid item key={index} xs={12} sm={6} md={4}>\r\n                <Card className={classes.card}>\r\n                  <CardContent className={classes.cardContent}>\r\n                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                        <Icon type={card.icon} />{'  '} {card.title}\r\n                    </Typography>\r\n                    <Typography>\r\n                      {card.description}\r\n                    </Typography>\r\n                  </CardContent>\r\n                </Card>\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n        </Container>\r\n      </main>\r\n    </React.Fragment>\r\n  );\r\n};","import React, { Fragment } from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Button from '@material-ui/core/Button';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Grid from '@material-ui/core/Grid';\r\n// import StarIcon from '@material-ui/icons/StarBorder';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Link from '@material-ui/core/Link';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport Box from '@material-ui/core/Box';\r\nimport { Col, Row, Icon } from 'antd';\r\n\r\nimport './home.css';\r\nimport logo from '../../../assets/gnius.png';\r\nimport Features from './Features';\r\n\r\nconst data = [\r\n    {\r\n        title: '100 Users',\r\n        description: 'Maximum 100 Users can take asssessments'\r\n    },\r\n    {\r\n        title: 'MCQ / MSQ and Coding Question Library Available',\r\n        description: 'Assess Candidates through MCQ, MSQ, Programming Questions'\r\n    },\r\n    {\r\n        title: 'Remote based hiring using AI and ML',\r\n        description: 'View detailed reports and in-depth analysis of each candidates performance'\r\n    },\r\n    {\r\n        title: 'Other Features',\r\n        description: 'Import and Export Candidates. Invite candidates, Create tests automatically and manually with our huge question library, Support via phone and email and much more.'\r\n    },\r\n];\r\n  \r\n\r\nfunction Copyright() {\r\n    return (\r\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n            {'Copyright © '}\r\n            <Link color=\"inherit\" href=\"/\">\r\n                <b>gnius Talent Solution</b>\r\n            </Link>{' '}\r\n            {new Date().getFullYear()}\r\n            {'.'}\r\n        </Typography>\r\n    );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    '@global': {\r\n        ul: {\r\n            margin: 0,\r\n            padding: 0,\r\n            listStyle: 'none',\r\n        },\r\n    },\r\n    appBar: {\r\n        backgroundColor: '#ffe3fe',\r\n    },\r\n    toolbar: {\r\n        flexWrap: 'wrap',\r\n    },\r\n    toolbarTitle: {\r\n        flexGrow: 1,\r\n    },\r\n    link: {\r\n        margin: theme.spacing(1, 1.5),\r\n    },\r\n    heroContent: {\r\n        padding: theme.spacing(8, 0, 6),\r\n    },\r\n    cardHeader: {\r\n        backgroundColor: '#fdbaf8'\r\n    },\r\n    cardPricing: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'baseline',\r\n        marginBottom: theme.spacing(2),\r\n    },\r\n    footer: {\r\n        borderTop: `1px solid ${theme.palette.divider}`,\r\n        marginTop: theme.spacing(8),\r\n        paddingTop: theme.spacing(3),\r\n        paddingBottom: theme.spacing(3),\r\n        [theme.breakpoints.up('sm')]: {\r\n            paddingTop: theme.spacing(6),\r\n            paddingBottom: theme.spacing(6),\r\n        },\r\n    },\r\n}));\r\n\r\nconst tiers = [\r\n    {\r\n        title: 'MCQ Assessment',\r\n        price: '200',\r\n        description: [\r\n            'Single User can take assessments',\r\n            'Access MCQ/MSQ Questions only',\r\n            'Remote based hiring using AI and ML',\r\n            'View detailed reports and in-depth analysis of each candidates performance',\r\n            'Email and Phone support'\r\n        ],\r\n        buttonText: 'Contact us',\r\n        buttonVariant: 'outlined',\r\n    },\r\n    {\r\n        title: 'Coding & MCQ Assessment',\r\n        subheader: 'Most popular',\r\n        price: '450',\r\n        description: [\r\n            'Single User can take assessments',\r\n            'Access both MCQ/MSQ and programming(CodePlayer) Questions',\r\n            'Remote based hiring using AI and ML',\r\n            'View detailed reports and in-depth analysis of each candidates performance',\r\n            'Email and Phone support'\r\n        ],\r\n        buttonText: 'Contact us',\r\n        buttonVariant: 'contained',\r\n    },\r\n    {\r\n        title: 'Coding Assessment',\r\n        price: '300',\r\n        description: [\r\n            'Single User can take assessments',\r\n            'Access Programming Questions(Codeplayer) only',\r\n            'Remote based hiring using AI and ML',\r\n            'View detailed reports and in-depth analysis of each candidates performance',\r\n            'Email and Phone support'\r\n        ],\r\n        buttonText: 'Contact us',\r\n        buttonVariant: 'outlined',\r\n    },\r\n];\r\n\r\nconst footers = [\r\n    {\r\n        title: 'Company',\r\n        description: ['Team', 'Contact us', 'Location'],\r\n    },\r\n    {\r\n        title: 'Features',\r\n        description: ['Blog', 'Developer stuff'],\r\n    },\r\n    {\r\n        title: 'Resources',\r\n        description: ['Guide', 'Handbook', 'Knowledge Base'],\r\n    },\r\n    {\r\n        title: 'Legal',\r\n        description: ['Privacy policy', 'Terms of use', 'Refund Policy'],\r\n    },\r\n];\r\n\r\nexport default function Pricing() {\r\n  const classes = useStyles();\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <CssBaseline />\r\n            <AppBar position=\"static\" color=\"default\" elevation={0} className={classes.appBar}>\r\n                <Toolbar className={classes.toolbar}>\r\n                    <Typography variant=\"h6\" color=\"inherit\" noWrap className={classes.toolbarTitle}>\r\n                        <img src={logo} alt=\"company logo\" className=\"logo\" />\r\n                    </Typography>\r\n                    <Button href=\"/auth/login\" color=\"primary\" variant=\"outlined\" className={classes.link}>\r\n                        <Icon type=\"lock\" /> {'   '}Recruiter Login\r\n                    </Button>\r\n                </Toolbar>\r\n            </AppBar>\r\n\r\n            <Container maxWidth=\"sm\" component=\"main\" className={classes.heroContent}>\r\n                <Typography component=\"h1\" variant=\"h2\" align=\"center\" color=\"textPrimary\" gutterBottom>\r\n                    Features\r\n                </Typography>\r\n                \r\n                <Typography variant=\"h5\" align=\"center\" color=\"textSecondary\" component=\"p\">\r\n                    An auto proctored assessment system and can be availed by the companies to help them\r\n                    in their end to end recruitment and to select the right candidate based on their skill.\r\n                </Typography>\r\n            </Container>\r\n\r\n            <Features />\r\n\r\n            {/* Hero unit */}\r\n            <Container maxWidth=\"sm\" component=\"main\" className={classes.heroContent}>\r\n                <Typography component=\"h1\" variant=\"h2\" align=\"center\" color=\"textPrimary\" gutterBottom>\r\n                    Single User Pricing\r\n                </Typography>\r\n                \r\n                <Typography variant=\"h5\" align=\"center\" color=\"textSecondary\" component=\"p\">\r\n                    <b>If you are not constantly hiring, then you should check these plans.</b>\r\n                    We've prepared pricing plans for all budgets so you can get started right away.\r\n                    They're great for startups and large organizations\r\n                </Typography>\r\n            </Container>\r\n\r\n            {/* End hero unit */}\r\n\r\n            <Container maxWidth=\"md\" component=\"main\">\r\n                <Grid container spacing={5} alignItems=\"flex-end\">\r\n                    {tiers.map((tier) => (\r\n                        // Enterprise card is full width at sm breakpoint\r\n                        <Grid item key={tier.title} xs={12} sm={tier.title === 'Enterprise' ? 12 : 6} md={4}>\r\n                            <Card>\r\n                                <CardHeader\r\n                                    title={tier.title}\r\n                                    subheader={tier.subheader}\r\n                                    titleTypographyProps={{ align: 'center' }}\r\n                                    subheaderTypographyProps={{ align: 'center' }}\r\n                                    className={classes.cardHeader}\r\n                                />\r\n                                <CardContent>\r\n                                    <div className={classes.cardPricing}>\r\n                                        <Typography component=\"h2\" variant=\"h3\" color=\"textPrimary\">\r\n                                            &#8377;{tier.price}\r\n                                        </Typography>\r\n                                        <Typography variant=\"h6\" color=\"textSecondary\">\r\n                                            /user\r\n                                        </Typography>\r\n                                    </div>\r\n                                    <div className={classes.cardPricing}>\r\n                                        <Typography component=\"h5\" variant=\"h5\" color=\"textSecondary\">\r\n                                           Plan Includes :\r\n                                        </Typography>\r\n                                    </div>\r\n                                    <ul>\r\n                                        {tier.description.map((line) => (\r\n                                            <Typography component=\"li\" variant=\"subtitle1\" align=\"left\" key={line}>\r\n                                                <Icon type=\"check-circle\" /> {'  '}{line}\r\n                                            </Typography>\r\n                                        ))}\r\n                                    </ul>\r\n                                </CardContent>\r\n                                <CardActions>\r\n                                    <Button fullWidth variant={tier.buttonVariant} color=\"primary\">\r\n                                        {tier.buttonText}\r\n                                    </Button>\r\n                                </CardActions>\r\n                            </Card>\r\n                        </Grid>\r\n                    ))}\r\n                </Grid>\r\n            </Container>\r\n\r\n            <Container maxWidth=\"sm\" component=\"main\" className={classes.heroContent}>\r\n                <Typography component=\"h1\" variant=\"h2\" align=\"center\" color=\"textPrimary\" gutterBottom>\r\n                    Monthly Pricing\r\n                </Typography>\r\n                \r\n                <Typography variant=\"h5\" align=\"center\" color=\"textSecondary\" component=\"p\">\r\n                    <b>If you are constantly hiring, then you should check this plan.</b>\r\n                </Typography>\r\n            </Container>\r\n\r\n            <Row type=\"flex\" justify=\"center\">\r\n                <Col span={24}>\r\n                    <Card style={{padding: '0 20px', borderRadius: '10px'}}>\r\n                        <CardHeader\r\n                            title={<h1>Plans starting @ &#8377; 14,000</h1>}\r\n                            titleTypographyProps={{ align: 'center' }}\r\n                            subheaderTypographyProps={{ align: 'center' }}\r\n                            className={classes.cardHeader}\r\n                        />\r\n                        \r\n                        <CardContent>\r\n                            <ul>\r\n                                {data.map((item) => (\r\n                                    <Fragment>\r\n                                        <Typography component=\"li\" variant=\"subtitle1\" align=\"left\" key={item}>\r\n                                            <Icon type=\"check-circle\" /> {'  '}\r\n                                            <b>{item.title}</b>\r\n                                        </Typography>\r\n                                    \r\n                                        <Typography component=\"li\" variant=\"subtitle1\" align=\"left\" key={item}>\r\n                                            {item.description}\r\n                                        </Typography>\r\n                                    </Fragment>\r\n                                ))}\r\n                            </ul>\r\n                        </CardContent>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n            \r\n            \r\n            {/* Footer */}\r\n            <Container maxWidth=\"md\" component=\"footer\" className={classes.footer}>\r\n                <Grid container spacing={4} justify=\"space-evenly\">\r\n                    {footers.map((footer) => (\r\n                        <Grid item xs={6} sm={3} key={footer.title}>\r\n                            <Typography variant=\"h6\" color=\"textPrimary\" gutterBottom>\r\n                                {footer.title}\r\n                            </Typography>\r\n                            <ul>\r\n                                {footer.description.map((item) => (\r\n                                    <li key={item}>\r\n                                        <Link href=\"#\" variant=\"subtitle1\" color=\"textSecondary\">\r\n                                            {item}\r\n                                        </Link>\r\n                                    </li>\r\n                                ))}\r\n                            </ul>\r\n                        </Grid>\r\n                    ))}\r\n                </Grid>\r\n                <Box mt={5}>\r\n                    <Copyright />\r\n                </Box>\r\n            </Container>\r\n            {/* End footer */}\r\n        </React.Fragment>\r\n    );\r\n};","const envoirnment = process.env.NODE_ENV;\r\n\r\n/*const apis={\r\n    BASE_LOCAL_URL:'http://localhost:3000',\r\n    BASE : \"http://localhost:5000\",\r\n    LOGIN : \"/api/v1/login/\",\r\n    GETDETAILSUSER : \"/api/v1/user/details\",\r\n    GET_ALL_TRAINER :'/api/v1/admin/trainer/details/all',\r\n    GET_SINGLE_TRAINER_DETAILS : '/api/v1/admin/trainer/details',\r\n    CREATE_TRAINER : '/api/v1/admin/trainer/create',\r\n    DELETE_TRAINER : '/api/v1/admin/trainer/remove',\r\n    GET_ALL_SUBJECTS : '/api/v1/subject/details/all',\r\n    GET_SINGLE_SUBJECT_DETAILS : '/api/v1/subject/details',\r\n    CREATE_SUBJECT : '/api/v1/subject/create',\r\n    GET_ALL_QUESTIONS : '/api/v1/questions/details/all',\r\n    DELETE_QUESTION:'/api/v1/questions/delete',\r\n    FETCH_SINGLE_QUESTION:'/api/v1/questions/details',\r\n    CREATE_QUESTIONS :'/api/v1/questions/create',\r\n    FILE_UPLOAD:'/api/v1/upload',\r\n    CREATE_TEST : '/api/v1/test/create',\r\n    GET_ALL_TESTS:'/api/v1/test/details/all',\r\n    GET_SINGLE_TEST:'/api/v1/test/trainer/details',\r\n    REGISTER_TRAINEE_FOR_TEST:'/api/v1/trainee/enter',\r\n    RESEND_TRAINER_REGISTRATION_LINK: '/api/v1/trainee/resend/testlink',\r\n    GET_SINGLE_TEST_DETAILS_BASIC:'/api/v1/test/basic/details',\r\n    STOP_REGISTRATION :'/api/v1/trainer/registration/stop',\r\n    START_TEST_BY_TRAINER:'/api/v1/test/begin',\r\n    GET_TEST_CANDIDATES :'/api/v1/test/candidates',\r\n    GET_TEST_QUESTIONS :'/api/v1/test/questions',\r\n    FETCH_TRAINEE_DETAILS:'/api/v1/trainee/details',\r\n    FETCH_TRAINEE_TEST_DETAILS:'/api/v1/trainee/flags',\r\n    PROCEED_TO_TEST:'/api/v1/trainee/answersheet',\r\n    FETCH_TRAINEE_TEST_QUESTION:'/api/v1/trainee/paper/questions',\r\n    FETCH_TRAINEE_TEST_ANSWERSHEET:'/api/v1/trainee/chosen/options',\r\n    UPDATE_ANSWERS:'/api/v1/trainee/update/answer',\r\n    END_TEST : '/api/v1/trainee/end/test',\r\n    FETCH_OWN_RESULT:'/api/v1/final/results',\r\n    FETCH_SINGLE_QUESTION_BY_TRAINEE:'/api/v1/trainee/get/question',\r\n    END_TEST_BY_TRAINER:'/api/v1/test/end',\r\n    FEEDBACK_STATUS_CHECK:'/api/v1/trainee/feedback/status',\r\n    GIVE_FEEDBACK:'/api/v1/trainee/feedback',\r\n    GET_STATS:'/api/v1/test/candidates/details',\r\n    GET_EXCEL:'/api/v1/trainer/result/download',\r\n    MAX_MARKS_FETCH:'/api/v1/test/max/marks'\r\n}*/\r\n\r\nconst apis = {\r\n    BASE_LOCAL_URL:envoirnment==='development'?'http://localhost:3000':'',\r\n    BASE : envoirnment==='development'?'http://localhost:5000':'',\r\n    LOGIN : \"/api/v1/login/\",\r\n    GETDETAILSUSER : \"/api/v1/user/details\",\r\n    GET_ALL_TRAINER :'/api/v1/admin/trainer/details/all',\r\n    GET_SINGLE_TRAINER_DETAILS : '/api/v1/admin/trainer/details',\r\n    CREATE_TRAINER : '/api/v1/admin/trainer/create',\r\n    DELETE_TRAINER : '/api/v1/admin/trainer/remove',\r\n    GET_ALL_SUBJECTS : '/api/v1/subject/details/all',\r\n    GET_SINGLE_SUBJECT_DETAILS : '/api/v1/subject/details',\r\n    CREATE_SUBJECT : '/api/v1/subject/create',\r\n    GET_ALL_QUESTIONS : '/api/v1/questions/details/all',\r\n    DELETE_QUESTION:'/api/v1/questions/delete',\r\n    FETCH_SINGLE_QUESTION:'/api/v1/questions/details',\r\n    CREATE_QUESTIONS :'/api/v1/questions/create',\r\n    FILE_UPLOAD:'/api/v1/upload',\r\n    CREATE_TEST : '/api/v1/test/create',\r\n    GET_ALL_TESTS:'/api/v1/test/details/all',\r\n    GET_SINGLE_TEST:'/api/v1/test/trainer/details',\r\n    REGISTER_TRAINEE_FOR_TEST:'/api/v1/trainee/enter',\r\n    RESEND_TRAINER_REGISTRATION_LINK: '/api/v1/trainee/resend/testlink',\r\n    GET_SINGLE_TEST_DETAILS_BASIC:'/api/v1/test/basic/details',\r\n    STOP_REGISTRATION :'/api/v1/trainer/registration/stop',\r\n    START_TEST_BY_TRAINER:'/api/v1/test/begin',\r\n    GET_TEST_CANDIDATES :'/api/v1/test/candidates',\r\n    GET_TEST_QUESTIONS :'/api/v1/test/questions',\r\n    FETCH_TRAINEE_DETAILS:'/api/v1/trainee/details',\r\n    FETCH_TRAINEE_TEST_DETAILS:'/api/v1/trainee/flags',\r\n    PROCEED_TO_TEST:'/api/v1/trainee/answersheet',\r\n    FETCH_TRAINEE_TEST_QUESTION:'/api/v1/trainee/paper/questions',\r\n    FETCH_TRAINEE_TEST_ANSWERSHEET:'/api/v1/trainee/chosen/options',\r\n    UPDATE_ANSWERS:'/api/v1/trainee/update/answer',\r\n    END_TEST : '/api/v1/trainee/end/test',\r\n    FETCH_OWN_RESULT:'/api/v1/final/results',\r\n    FETCH_SINGLE_QUESTION_BY_TRAINEE:'/api/v1/trainee/get/question',\r\n    END_TEST_BY_TRAINER:'/api/v1/test/end',\r\n    FEEDBACK_STATUS_CHECK:'/api/v1/trainee/feedback/status',\r\n    GIVE_FEEDBACK:'/api/v1/trainee/feedback',\r\n    GET_STATS:'/api/v1/test/candidates/details',\r\n    GET_EXCEL:'/api/v1/trainer/result/download',\r\n    MAX_MARKS_FETCH:'/api/v1/test/max/marks',\r\n    GET_FEEDBACKS:'/api/v1/trainer/get/feedbacks',\r\n    CHECK_TEST_NAME: '/api/v1/test/new/name/check',\r\n    IMPORT_CANDIDATES: '/api/v1/test/candidates/import'\r\n};\r\n\r\nexport default apis;","import auth from './AuthServices';\r\nimport apis from './Apis';\r\nconst axios = require('axios');\r\n\r\nexport const SecureGet = (p)=>{\r\n    return axios({\r\n        method:'get',\r\n        baseURL : apis.BASE,\r\n        ...p,\r\n        params: {\r\n            ...p.params,\r\n            Token : auth.retriveToken()\r\n        }\r\n    })\r\n}\r\n\r\nexport const Get =(p)=>{\r\n    return axios({\r\n        method:'get',\r\n        baseURL : apis.BASE,\r\n        ...p,\r\n    })\r\n}\r\n\r\n\r\nexport const SecurePost =(p)=>{\r\n    return axios({\r\n        method:'post',\r\n        baseURL : apis.BASE,\r\n        ...p,\r\n        params: {\r\n            ...p.params,\r\n            Token : auth.retriveToken()\r\n        }\r\n    })\r\n}\r\n\r\nexport const Post =(p)=>{\r\n    return axios({\r\n        baseURL : apis.BASE,\r\n        method:'post',\r\n        ...p,\r\n    })\r\n}\r\n\r\n\r\n\r\n","import apis from \"./Apis\";\r\nimport { Get, Post} from './axiosCall';\r\n\r\n\r\nclass AuthService{\r\n    constructor(){\r\n        this.token=null;\r\n        // console.log(apis.BASE);\r\n        // console.log(apis.BASE_LOCAL_URL);\r\n    }\r\n    \r\n    retriveToken = ()=>{\r\n        return localStorage.getItem('Token')\r\n    }\r\n\r\n    storeToken = (t)=>{\r\n        localStorage.setItem('Token', t);\r\n    }\r\n\r\n    deleteToken = ()=>{\r\n        localStorage.removeItem('Token');\r\n    }\r\n\r\n    LoginAuth = (u,p)=>{\r\n        return Post({\r\n            url:apis.LOGIN,\r\n            data:{\r\n                emailid : u,\r\n                password : p\r\n            }\r\n        })    \r\n    }\r\n\r\n    FetchAuth = (t)=>{\r\n        return Get({\r\n            url : apis.GETDETAILSUSER,\r\n            params : {\r\n                Token : t\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default new AuthService();\r\n","import auth from '../services/AuthServices';\r\n\r\nexport const login = (details)=> dispatch =>{\r\n    dispatch({\r\n       type : 'LOGIN',\r\n       payload : details\r\n    });\r\n};\r\n\r\n\r\nexport const logout = () => dispatch => {\r\n    dispatch({\r\n        type: 'LOGOUT',\r\n        payload1: 'Manual Logout'\r\n    });\r\n};\r\n\r\n\r\nexport const wakeUp = ()=> dispatch =>{\r\n    var t = auth.retriveToken() || null;\r\n    if(t && t!=='undefined'){\r\n        auth.wakeUp(t).then((res) => {\r\n            // console.log(`Wakeup success ${res}`)\r\n            dispatch({\r\n                type: 'LOGIN',\r\n                payload1: t,\r\n                payload2: res.data.user\r\n            });\r\n        })\r\n        .catch((err) => {\r\n            // console.log(`Wakeup error ${err}`)\r\n            if (err) {\r\n                dispatch({\r\n                    type: 'LOGOUT',\r\n                    payload1: 'Token Expired'\r\n                });\r\n            }\r\n        });\r\n    }\r\n    else{\r\n        dispatch({\r\n            type: 'LOGOUT',\r\n            payload1: 'No Token'\r\n        });\r\n    }\r\n}","import { Modal } from 'antd';\r\n\r\nexport default function Alert(s='warning',h,b) {\r\n    if(s==='success'){\r\n        return (\r\n            Modal.success({\r\n                title: h,\r\n                content:b,\r\n            })\r\n        )\r\n    }\r\n    else if(s==='error'){\r\n        return (\r\n            Modal.error({\r\n                title: h,\r\n                content:b,\r\n            })\r\n        )\r\n    }\r\n    else{\r\n        return (\r\n            Modal.warning({\r\n                title: h,\r\n                content:b,\r\n            })\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport { Form, Input, Icon, Button } from 'antd';\r\nimport './login.css';\r\nimport { connect } from 'react-redux';\r\nimport { login, logout } from '../../../actions/loginAction';\r\nimport auth from '../../../services/AuthServices';\r\nimport Alert from '../../common/alert';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nclass Login extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            isLoggedIn :false\r\n        }\r\n    }\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        this.props.form.validateFields((err, values) => {\r\n            if (!err) {\r\n                // console.log('Received values of form: ', values);\r\n                auth.LoginAuth(values.email,values.password).then((response)=>{\r\n                    // console.log(response);\r\n                    if(response.data.success){\r\n                        this.props.login(response.data.user)\r\n                        auth.storeToken(response.data.token);\r\n                        this.setState({\r\n                            isLoggedIn : true\r\n                        })\r\n                    }\r\n                    else{\r\n                        return Alert('error','Error!',response.data.message);\r\n                    }\r\n                }).catch((error)=>{\r\n                    // console.log(error);\r\n                    return Alert('error','Error!','Server Error');\r\n                })              \r\n            }\r\n        });\r\n    };\r\n\r\n    render(){\r\n        const { getFieldDecorator } = this.props.form;\r\n        if(this.state.isLoggedIn){\r\n            return <Redirect to={this.props.user.userOptions[0].link} />\r\n        }\r\n        else{\r\n            return(\r\n                <div className=\"login-container\">\r\n                    <div className=\"login-inner\">\r\n                        <Form\r\n                            onSubmit={this.handleSubmit}\r\n                            autoComplete=\"off\"\r\n                        >\r\n                            <Form.Item label=\"Email\" hasFeedback>\r\n                                {getFieldDecorator('email', {\r\n                                    rules: [\r\n                                        {\r\n                                            type: 'email',\r\n                                            message: 'The input is not valid E-mail!',\r\n                                        },\r\n                                        {\r\n                                            required: true,\r\n                                            message: 'Please input your E-mail!',\r\n                                        },\r\n                                    ],\r\n                                })(<Input \r\n                                    prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                                    placeholder=\"Email\"/>)}\r\n                            </Form.Item>\r\n                            <Form.Item label=\"Password\" hasFeedback>\r\n                                {getFieldDecorator('password', {\r\n                                    rules: [\r\n                                        { \r\n                                            required: true, message: 'Please input your Password!' \r\n                                        }\r\n                                    ],\r\n                                })(\r\n                                    <Input.Password\r\n                                    prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                                    placeholder=\"Password\"\r\n                                    />,\r\n                                )}\r\n                            </Form.Item>\r\n                            <Form.Item>\r\n                                <Button type=\"primary\" htmlType=\"submit\" block>\r\n                                    Login\r\n                                </Button>\r\n                            </Form.Item>\r\n                        </Form>\r\n                    </div>  \r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n}\r\n\r\nconst LoginForm = Form.create({ name: 'login' })(Login);\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n    user : state.user\r\n});\r\n\r\nexport default connect(mapStateToProps,{\r\n    login, \r\n    logout\r\n})(LoginForm);","import React from 'react';\r\nimport './header.css'; \r\nimport main from './logo.png';\r\n\r\nfunction HomepageHeader(props) {\r\n    return (\r\n        <div>\r\n            <div className=\"header-container-2\">\r\n                <img src={main} alt=\"company logo\" className=\"logo\" />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HomepageHeader;","import React from 'react';\r\nimport './homepage.css';\r\nimport { connect } from 'react-redux';\r\nimport Login from '../login/login';\r\nimport HomepageHeader from '../header/header'; \r\nimport auth from '../../../services/AuthServices';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\n\r\nfunction Homepage(props) {\r\n  if(auth.retriveToken() && auth.retriveToken()!=='undefined'){\r\n    // console.log('Logged In');\r\n    return <Redirect to='/user/home' />\r\n  }\r\n  else{\r\n    // console.log('Not Logged In');\r\n    return (\r\n      <div>\r\n          <div className=\"parallax\">\r\n            <HomepageHeader/>\r\n            <Login />\r\n          </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  user : state.user\r\n});\r\n\r\nexport default connect(mapStateToProps,{\r\n  \r\n})(Homepage);\r\n","import apis from '../services/Apis';\r\nimport Alert from '../components/common/alert';\r\nimport { SecureGet } from '../services/axiosCall';\r\n\r\nexport const ChangeTrainerModalState = (d1,d2,d3)=> dispatch =>{\r\n    if(d3==='Save Changes'){\r\n        SecureGet({\r\n            url : `${apis.GET_SINGLE_TRAINER_DETAILS}/${d2}`\r\n        }).then((response)=>{\r\n            // console.log(response);\r\n            if(response.data.success){\r\n                dispatch({\r\n                    type : 'CHANGE_TRAINER_MODAL_STATE',\r\n                    payload1 : true,\r\n                    payload2 : d2,\r\n                    payload3 : 'Save Changes',\r\n                    payload4: {\r\n                        ...response.data.data[0],\r\n                        contact :response.data.data[0].contact.slice(3),\r\n                        prefix:response.data.data[0].contact.slice(0,3),\r\n                    }\r\n                })\r\n            }\r\n            else{\r\n                return Alert('warning','Warning!',response.data.message);\r\n            }\r\n        }).catch((error)=>{\r\n            return Alert('error','Error!','Server Error');\r\n        })\r\n    }\r\n    else{\r\n        dispatch({\r\n            type : 'CHANGE_TRAINER_MODAL_STATE',\r\n            payload1 : d1,\r\n            payload2 : d2,\r\n            payload3 : d3,\r\n            payload4: {\r\n                name : null,\r\n                emailid:null,\r\n                contact :null,\r\n                prefix:null,\r\n                password:null,\r\n                confirmpassword : null\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const ChangeTrainerConfirmDirty = (d)=> dispatch =>{\r\n    dispatch({\r\n       type : 'CHANGE_TRAINER_FORM_CONFIRMDIRTY',\r\n       payload : d\r\n    })\r\n}\r\n\r\n\r\nexport const ChangeTrainerSearchText = (d)=> dispatch =>{\r\n    dispatch({\r\n       type : 'CHANGE_TRAINER_SEARCH_TEXT',\r\n       payload : d\r\n    })\r\n}\r\n\r\nexport const ChangeTrainerTableData = ()=> dispatch =>{\r\n    dispatch({\r\n        type : 'CHANGE_TRAINER_TABLE_LOADING_STATUS',\r\n        payload1 : true,\r\n        payload2 : []\r\n    })\r\n    SecureGet({\r\n        url:  `${apis.GET_ALL_TRAINER}`\r\n    }).then((response)=>{\r\n        // console.log(response);\r\n        if(response.data.success){\r\n            dispatch({\r\n                type : 'CHANGE_TRAINER_TABLE_LOADING_STATUS',\r\n                payload1 : false,\r\n                payload2 : response.data.data\r\n            })\r\n        }\r\n        else{\r\n            Alert('error','Error!',response.data.message);\r\n            dispatch({\r\n                type : 'CHANGE_TRAINER_TABLE_LOADING_STATUS',\r\n                payload1 : false,\r\n                payload2 : []\r\n            })\r\n        }\r\n      }).catch((error)=>{\r\n        Alert('error','Error!','Server Error');\r\n        dispatch({\r\n            type : 'CHANGE_TRAINER_TABLE_LOADING_STATUS',\r\n            payload1 : false,\r\n            payload2 : []\r\n        })\r\n    })\r\n}\r\n\r\nexport const ChangeSubjectModalState = (d1,d2,d3)=> dispatch =>{\r\n    if(d3==='Save Changes'){\r\n        SecureGet({\r\n            url : `${apis.GET_SINGLE_SUBJECT_DETAILS}/${d2}`\r\n        }).then((response)=>{\r\n            if(response.data.success){\r\n                dispatch({\r\n                    type : 'CHANGE_SUBJECT_MODAL_STATE',\r\n                    payload1 : true,\r\n                    payload2 : d2,\r\n                    payload3 : 'Save Changes',\r\n                    payload4: response.data.data[0]\r\n                })\r\n            }\r\n            else{\r\n                return Alert('warning','Warning!',response.data.message);\r\n            }\r\n        }).catch((error)=>{\r\n            return Alert('error','Error!','Server Error');\r\n        })\r\n    }\r\n    else{\r\n        dispatch({\r\n            type : 'CHANGE_SUBJECT_MODAL_STATE',\r\n            payload1 : d1,\r\n            payload2 : d2,\r\n            payload3 : d3,\r\n            payload4: {\r\n                topic : null\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const ChangeSubjectConfirmDirty = (d)=> dispatch =>{\r\n    dispatch({\r\n       type : 'CHANGE_SUBJECT_FORM_CONFIRMDIRTY',\r\n       payload : d\r\n    })\r\n}\r\n\r\n\r\nexport const ChangeSubjectSearchText = (d)=> dispatch =>{\r\n    dispatch({\r\n       type : 'CHANGE_SUBJECT_SEARCH_TEXT',\r\n       payload : d\r\n    })\r\n}\r\n\r\nexport const ChangeSubjectTableData = (d)=> dispatch =>{\r\n    // console.log('fetchng subjects');\r\n    dispatch({\r\n       type : 'CHANGE_SUBJECT_TABLE_LOADING_STATUS',\r\n       payload1 : true,\r\n       payload2 :[]\r\n    })\r\n    SecureGet({\r\n        url:  `${apis.GET_ALL_SUBJECTS}`\r\n    }).then((response)=>{\r\n        // console.log(response);\r\n        if(response.data.success){\r\n            dispatch({\r\n                type : 'CHANGE_SUBJECT_TABLE_LOADING_STATUS',\r\n                payload1 : false,\r\n                payload2 : response.data.data\r\n            })\r\n        }\r\n        else{\r\n            Alert('error','Error!',response.data.message);\r\n            dispatch({\r\n                type : 'CHANGE_SUBJECT_TABLE_LOADING_STATUS',\r\n                payload1 : false,\r\n                payload2 : []\r\n            })\r\n        }\r\n      }).catch((error)=>{\r\n        Alert('error','Error!','Server Error');\r\n        dispatch({\r\n            type : 'CHANGE_SUBJECT_TABLE_LOADING_STATUS',\r\n            payload1 : false,\r\n            payload2 : []\r\n        })\r\n    })\r\n\r\n}\r\n","import React, { Component } from 'react'\r\nimport './newtrainer.css';\r\nimport {\r\n    Form,\r\n    Input,\r\n    Button,\r\n    Select,\r\n    Switch,\r\n    Icon\r\n} from 'antd';\r\nimport {SecurePost} from '../../../services/axiosCall';\r\nimport apis from '../../../services/Apis';\r\nimport { connect } from 'react-redux';\r\n\r\nimport {\r\n    ChangeTrainerConfirmDirty,\r\n    ChangeTrainerModalState,\r\n    ChangeTrainerTableData\r\n} from '../../../actions/adminAction';\r\nimport Alert from '../../../components/common/alert';\r\nconst { Option } = Select;\r\n\r\nclass NewTrainer extends Component {\r\n    state = {\r\n        checked: this.props.admin.trainerdetails.status,\r\n    };\r\n\r\n    toggle = () => {\r\n        this.setState({\r\n            checked: !this.state.checked,\r\n        });\r\n    };\r\n    \r\n    compareToFirstPassword = (rule, value, callback) => {\r\n        const form = this.props.form;\r\n        if (value && value !== form.getFieldValue('password')) {\r\n            callback('passwords are not same !');\r\n        } else {\r\n            callback();\r\n        }\r\n    };\r\n\r\n    validateToNextPassword = (rule, value, callback) => {\r\n        const form = this.props.form;\r\n        if (value && this.props.admin.TrainerconfirmDirty) {\r\n            form.validateFields(['confirm'], { force: true });\r\n        }\r\n        callback();\r\n    };\r\n    \r\n\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        console.log(this.state.checked);\r\n\r\n        this.props.form.validateFieldsAndScroll((err, values) => {\r\n            if (!err) {\r\n                // console.log('Received values of form: ', values);\r\n                SecurePost({\r\n                    url: `${apis.CREATE_TRAINER}`,\r\n                    data: {\r\n                        _id: this.props.admin.trainerId,\r\n                        name: values.name,\r\n                        password: values.password,\r\n                        emailid: values.emailid,\r\n                        contact: values.prefix + values.contact,\r\n                        status: this.state.checked\r\n                    }\r\n                }).then((response) => {\r\n                    if (response.data.success) {\r\n                        this.props.ChangeTrainerModalState(false, null, 'Register');\r\n                        Alert('success', 'Success', response.data.message);\r\n                        this.props.ChangeTrainerTableData();\r\n                    }\r\n                    else {\r\n                        // console.log(response.data);\r\n                        this.props.ChangeTrainerModalState(false, null, 'Register');\r\n                        return Alert('warning', 'Warning!', response.data.message);\r\n                    }\r\n                }).catch((error) => {\r\n                    this.props.ChangeTrainerModalState(false, null, 'Register');\r\n                    return Alert('error', 'Error!', 'Server Error');\r\n                });\r\n            }\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { getFieldDecorator } = this.props.form;\r\n        const prefixSelector = getFieldDecorator('prefix', {\r\n            initialValue: this.props.admin.trainerdetails.prefix || '+91',\r\n            rules: [{ required: true, message: 'Please enter contact no prefix' }],\r\n          })(\r\n            <Select style={{ width: 70 }}>\r\n              <Option value=\"+91\">+91</Option>\r\n            </Select>,\r\n          );\r\n        return (\r\n            <div className=\"register-trainer-form\">\r\n                <div className=\"register-trainer-form-body\">\r\n                    <Form  onSubmit={this.handleSubmit}>\r\n                        <Form.Item label=\"Name\" hasFeedback className=\"input-admin-trainer\">\r\n                            {getFieldDecorator('name', {\r\n                                initialValue : this.props.admin.trainerdetails.name,\r\n                                rules: [{ required: true, message: 'Please input your name!', whitespace: true }],\r\n                            })(<Input />)}\r\n                        </Form.Item>\r\n                    \r\n                        { !this.props.admin.trainerId ? <Form.Item label=\"E-mail\" hasFeedback className=\"input-admin-trainer\">\r\n                            {getFieldDecorator('emailid', {\r\n                                initialValue : this.props.admin.trainerdetails.emailid,\r\n                                rules: [\r\n                                    {\r\n                                        type: 'email',\r\n                                        message: 'The input is not valid E-mail!',\r\n                                    },\r\n                                    {\r\n                                        required: true,\r\n                                        message: 'Please input your E-mail!',\r\n                                    },\r\n                                ],\r\n                            })(<Input />)}\r\n                        </Form.Item> : null }\r\n\r\n                        <Form.Item label=\"Phone Number\" className=\"input-admin-trainer\">\r\n                            {getFieldDecorator('contact', {\r\n                                initialValue : this.props.admin.trainerdetails.contact,\r\n                                rules: [\r\n                                    { \r\n                                        required: true, \r\n                                        message: 'Please input your phone number!' \r\n                                    },\r\n                                    {\r\n                                        len:10,\r\n                                        message:'Contact number must be 10 digit long'\r\n                                    }],\r\n                            })(<Input addonBefore={prefixSelector} min={10} max={10} />)}\r\n                        </Form.Item>\r\n\r\n                        { !this.props.admin.trainerId ? <div><Form.Item label=\"Password\" hasFeedback className=\"input-admin-trainer\">\r\n                                {getFieldDecorator('password', {\r\n                                    initialValue : this.props.admin.trainerdetails.password,\r\n                                    rules: [\r\n                                        {\r\n                                            required: true,\r\n                                            message: 'Please input your password!',\r\n                                        },\r\n                                        {\r\n                                            validator: this.validateToNextPassword,\r\n                                        },\r\n                                    ],\r\n                                })(<Input.Password />)}\r\n                            </Form.Item>\r\n                        \r\n                            <Form.Item label=\"Confirm Password\" hasFeedback className=\"input-admin-trainer\">\r\n                                {getFieldDecorator('confirm', {\r\n                                    initialValue : this.props.admin.trainerdetails.confirmpassword,\r\n                                    rules: [\r\n                                    {\r\n                                        required: true,\r\n                                        message: 'Please confirm your password!',\r\n                                    },\r\n                                    {\r\n                                        validator: this.compareToFirstPassword,\r\n                                    },\r\n                                    ],\r\n                                })(<Input.Password onBlur={this.handleConfirmBlur} />)}\r\n                            </Form.Item>\r\n                        </div> : null}\r\n                        \r\n                        <Form.Item label=\"status\" className=\"input-admin-trainer\">\r\n                            {getFieldDecorator('status')(\r\n                                <Switch\r\n                                    checkedChildren={<Icon type=\"check\" />}\r\n                                    unCheckedChildren={<Icon type=\"close\" />}\r\n                                    checked={this.state.checked}\r\n                                    onChange={this.toggle}\r\n                                />\r\n                            )}\r\n                        </Form.Item>\r\n\r\n                        <Form.Item>\r\n                            <Button type=\"primary\" htmlType=\"submit\" block>\r\n                                {this.props.admin.Trainermode}\r\n                            </Button>\r\n                        </Form.Item>\r\n                    </Form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    admin : state.admin\r\n});\r\n\r\nconst NewTrainerForm = Form.create({ name: 'register' })(NewTrainer);\r\n\r\nexport default connect(mapStateToProps,{\r\n    ChangeTrainerConfirmDirty,\r\n    ChangeTrainerModalState,\r\n    ChangeTrainerTableData\r\n})(NewTrainerForm);\r\n\r\n","import React, { Component } from 'react';\r\nimport { Table, Input, Button, Icon, Typography, Divider, Modal, Popconfirm } from 'antd';\r\nimport Highlighter from 'react-highlight-words';\r\nimport { connect } from 'react-redux';\r\nimport { \r\n    ChangeTrainerSearchText,\r\n    ChangeTrainerTableData,\r\n    ChangeTrainerModalState\r\n} from '../../../actions/adminAction';\r\nimport './alltrainer.css'\r\nimport Alert from '../../../components/common/alert';\r\nimport {SecurePost} from '../../../services/axiosCall';\r\nimport apis from '../../../services/Apis';\r\nimport NewTrainerForm from '../newTrainer/newtrainer';\r\n\r\n\r\nclass AllTrainer extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state={\r\n      TrainertableLoading : false\r\n    }\r\n  }\r\n\r\n  openModal = (id,mode)=>{\r\n    this.props.ChangeTrainerModalState(true,id,mode);\r\n  }\r\n\r\n  closeModal = ()=>{\r\n    this.props.ChangeTrainerModalState(false,null,'Register');\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.props.ChangeTrainerTableData();\r\n  }\r\n\r\n  deleteTrainer = (id)=>{\r\n    SecurePost({\r\n      url : `${apis.DELETE_TRAINER}`,\r\n      data : {\r\n          _id : id\r\n      }\r\n    }).then((response)=>{\r\n      if(response.data.success){\r\n        Alert('success','Success',response.data.message);\r\n        this.props.ChangeTrainerTableData();\r\n      }\r\n      else{\r\n        return Alert('warning','Warning!',response.data.message);\r\n      }\r\n    }).catch((error)=>{\r\n      return Alert('error','Error!','Server Error');\r\n    })\r\n  }\r\n\r\n    getColumnSearchProps = dataIndex => ({\r\n        filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => (\r\n          <div style={{ padding: 8 }}>\r\n            <Input\r\n              ref={node => {\r\n                this.searchInput = node;\r\n              }}\r\n              placeholder={`Search ${dataIndex}`}\r\n              value={selectedKeys[0]}\r\n              onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\r\n              onPressEnter={() => this.handleSearch(selectedKeys, confirm)}\r\n              style={{ width: 188, marginBottom: 8, display: 'block' }}\r\n            />\r\n            <Button\r\n              type=\"primary\"\r\n              onClick={() => this.handleSearch(selectedKeys, confirm)}\r\n              icon=\"search\"\r\n              size=\"small\"\r\n              style={{ width: 90, marginRight: 8 }}\r\n            >\r\n              Search\r\n            </Button>\r\n            <Button onClick={() => this.handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>\r\n              Reset\r\n            </Button>\r\n          </div>\r\n        ),\r\n        filterIcon: filtered => (\r\n          <Icon type=\"search\" style={{ color: filtered ? '#1890ff' : undefined }} />\r\n        ),\r\n        onFilter: (value, record) =>\r\n          record[dataIndex]\r\n            .toString()\r\n            .toLowerCase()\r\n            .includes(value.toLowerCase()),\r\n        onFilterDropdownVisibleChange: visible => {\r\n          if (visible) {\r\n            setTimeout(() => this.searchInput.select());\r\n          }\r\n        },\r\n        render: text => (\r\n          <Highlighter\r\n            highlightStyle={{ backgroundColor: '#ffc069', padding: 0 }}\r\n            searchWords={[this.props.admin.TrainersearchText]}\r\n            autoEscape\r\n            textToHighlight={text.toString()}\r\n          />\r\n        ),\r\n      });\r\n    \r\n      handleSearch = (selectedKeys, confirm) => {\r\n        confirm();\r\n        this.props.ChangeTrainerSearchText(selectedKeys[0])\r\n      };\r\n    \r\n      handleReset = clearFilters => {\r\n        clearFilters();\r\n        this.props.ChangeTrainerSearchText('')\r\n      };\r\n\r\n    render() {\r\n      const { Title } = Typography;\r\n      const columns = [\r\n        {\r\n          title: 'Name',\r\n          dataIndex: 'name',\r\n          key: 'name',\r\n          width: '25%',\r\n          ...this.getColumnSearchProps('name'),\r\n        },\r\n        {\r\n          title: 'Email Id',\r\n          dataIndex: 'emailid',\r\n          key: 'emailid',\r\n          width: '25%',\r\n          ...this.getColumnSearchProps('emailid'),\r\n        },\r\n        {\r\n          title: 'Contact Number',\r\n          dataIndex: 'contact',\r\n          key: 'contact',\r\n          ...this.getColumnSearchProps('contact'),\r\n        },\r\n        {\r\n          title: 'Action',\r\n          key: '_id',\r\n          dataIndex: '_id',\r\n          render: (key) => (\r\n            <span>\r\n              <Button type=\"primary\" shape=\"circle\" icon=\"edit\" onClick={()=>this.openModal(key,'Save Changes')}/>\r\n                <Divider type=\"vertical\" />\r\n                <Popconfirm\r\n                  title=\"Are you sure？\"\r\n                  cancelText=\"No\"\r\n                  okText=\"Yes\"\r\n                  onConfirm={()=>{this.deleteTrainer(key)}}\r\n                  icon={<Icon type=\"delete\" style={{ color: 'red' }} />}\r\n                >\r\n                  <Button type=\"danger\" shape=\"circle\" icon=\"delete\" />\r\n                </Popconfirm>\r\n              \r\n            </span>\r\n          ),\r\n        },\r\n      ];\r\n        return (\r\n            <div className=\"admin-table-container\">\r\n              <Button type=\"primary\" icon=\"user-add\" style={{marginBottom:'10px'}} onClick={()=>this.openModal(null,'Register')}>\r\n                Add New\r\n              </Button> \r\n              <div className=\"register-trainer-form-header\">\r\n                <Title level={4} style={{color:'#fff',textAlign:'center'}}>List of Trainer</Title>\r\n              </div>\r\n              <Table \r\n                bordered={true} \r\n                columns={columns} \r\n                dataSource={this.props.admin.trainerTableData} \r\n                size=\"medium\" \r\n                pagination={{ pageSize: 5 }}\r\n                loading={this.props.admin.trainerTableLoadingStatus}\r\n                rowKey=\"_id\" \r\n              />;\r\n              <Modal\r\n                visible={this.props.admin.TrainermodalOpened}\r\n                title={false}\r\n                onOk={this.handleOk}\r\n                onCancel={this.closeModal}\r\n                style={{top :'20px',padding:'0px',backgroundColor:'rgb(155,175,190)'}}\r\n                width=\"40%\"\r\n                destroyOnClose={true}\r\n                footer={[\r\n                  \r\n                ]}\r\n              >\r\n                <NewTrainerForm />\r\n              </Modal>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    admin : state.admin\r\n});\r\n\r\nexport default connect(mapStateToProps,{\r\n    ChangeTrainerSearchText,\r\n    ChangeTrainerTableData,\r\n    ChangeTrainerModalState\r\n})(AllTrainer);","import React, { Component } from 'react'\r\nimport './newtopic.css';\r\nimport {\r\n    Form,\r\n    Input,\r\n    Button\r\n} from 'antd';\r\nimport { connect } from 'react-redux';\r\nimport {SecurePost} from '../../../services/axiosCall';\r\nimport apis from '../../../services/Apis';\r\nimport Alert from '../../../components/common/alert';\r\nimport { \r\n    ChangeSubjectConfirmDirty,\r\n    ChangeSubjectTableData,\r\n    ChangeSubjectModalState\r\n} from '../../../actions/adminAction';\r\n\r\nclass NewTopics extends Component {\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        this.props.form.validateFieldsAndScroll((err, values) => {\r\n            if (!err) {\r\n                // console.log('Received values of form: ', values);\r\n                SecurePost({\r\n                    url: `${apis.CREATE_SUBJECT}`,\r\n                    data: {\r\n                        _id: this.props.admin.SubjectId,\r\n                        topic: values.topic\r\n                    }\r\n                }).then((response) => {\r\n                    if (response.data.success) {\r\n                        this.props.ChangeSubjectModalState(false, null, 'New Topic');\r\n                        Alert('success', 'Success', response.data.message);\r\n                        this.props.ChangeSubjectTableData();\r\n                    }\r\n                    else {\r\n                        this.props.ChangeSubjectModalState(false, null, 'New Topic');\r\n                        return Alert('warning', 'Warning!', response.data.message);\r\n                    }\r\n                }).catch((error) => {\r\n                    this.props.ChangeSubjectModalState(false, null, 'New Topic');\r\n                    return Alert('error', 'Error!', 'Server Error');\r\n                });\r\n            }\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { getFieldDecorator } = this.props.form;\r\n        return (\r\n            <div className=\"register-subject-form\" >\r\n                <div className=\"register-trainer-form-body\">\r\n                    <Form  onSubmit={this.handleSubmit}>\r\n                        <Form.Item label=\"Topic Name\" hasFeedback className=\"input-admin-trainer\">\r\n                            {getFieldDecorator('topic', {\r\n                                initialValue : this.props.admin.subjectDetails.topic,\r\n                                rules: [{ required: true, message: 'Please input topic name!', whitespace: true }],\r\n                            })(<Input />)}\r\n                        </Form.Item>\r\n                        <Form.Item>\r\n                            <Button type=\"primary\" htmlType=\"submit\" block>\r\n                                {this.props.admin.Subjectmode}\r\n                            </Button>\r\n                        </Form.Item>\r\n                    </Form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    admin : state.admin\r\n});\r\n\r\nconst NewSubjectForm = Form.create({ name: 'register' })(NewTopics);\r\n\r\nexport default connect(mapStateToProps,{\r\n    ChangeSubjectConfirmDirty,\r\n    ChangeSubjectTableData,\r\n    ChangeSubjectModalState\r\n})(NewSubjectForm);\r\n\r\n","import React, { Component } from 'react';\r\nimport { Table, Input, Button, Icon, Typography,  Modal } from 'antd';\r\nimport Highlighter from 'react-highlight-words';\r\nimport { connect } from 'react-redux';\r\nimport { \r\n    ChangeSubjectSearchText,\r\n    ChangeSubjectTableData,\r\n    ChangeSubjectModalState\r\n} from '../../../actions/adminAction';\r\nimport './alltopics.css'\r\nimport NewSubjectForm from '../newTopics/newtopics';\r\n\r\n\r\n\r\nclass AllTopics extends Component {\r\n\r\n  openModal = (id,mode)=>{\r\n    this.props.ChangeSubjectModalState(true,id,mode);\r\n  }\r\n  \r\n  closeModal = ()=>{\r\n    this.props.ChangeSubjectModalState(false,null,'New Topic');\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.props.ChangeSubjectTableData();\r\n  }\r\n\r\n    getColumnSearchProps = dataIndex => ({\r\n        filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => (\r\n          <div style={{ padding: 8 }}>\r\n            <Input\r\n              ref={node => {\r\n                this.searchInput = node;\r\n              }}\r\n              placeholder={`Search ${dataIndex}`}\r\n              value={selectedKeys[0]}\r\n              onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\r\n              onPressEnter={() => this.handleSearch(selectedKeys, confirm)}\r\n              style={{ width: 188, marginBottom: 8, display: 'block' }}\r\n            />\r\n            <Button\r\n              type=\"primary\"\r\n              onClick={() => this.handleSearch(selectedKeys, confirm)}\r\n              icon=\"search\"\r\n              size=\"small\"\r\n              style={{ width: 90, marginRight: 8 }}\r\n            >\r\n              Search\r\n            </Button>\r\n            <Button onClick={() => this.handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>\r\n              Reset\r\n            </Button>\r\n          </div>\r\n        ),\r\n        filterIcon: filtered => (\r\n          <Icon type=\"search\" style={{ color: filtered ? '#1890ff' : undefined }} />\r\n        ),\r\n        onFilter: (value, record) =>\r\n          record[dataIndex]\r\n            .toString()\r\n            .toLowerCase()\r\n            .includes(value.toLowerCase()),\r\n        onFilterDropdownVisibleChange: visible => {\r\n          if (visible) {\r\n            setTimeout(() => this.searchInput.select());\r\n          }\r\n        },\r\n        render: text => (\r\n          <Highlighter\r\n            highlightStyle={{ backgroundColor: '#ffc069', padding: 0 }}\r\n            searchWords={[this.props.admin.SubjectsearchText]}\r\n            autoEscape\r\n            textToHighlight={text.toString()}\r\n          />\r\n        ),\r\n      });\r\n    \r\n      handleSearch = (selectedKeys, confirm) => {\r\n        confirm();\r\n        this.props.ChangeSubjectSearchText(selectedKeys[0])\r\n      };\r\n    \r\n      handleReset = clearFilters => {\r\n        clearFilters();\r\n        this.props.ChangeSubjectSearchText('')\r\n      };\r\n\r\n    render() {\r\n      const { Title } = Typography;\r\n      const columns = [\r\n        {\r\n          title: 'Name',\r\n          dataIndex: 'topic',\r\n          key: 'topic',\r\n          width: '70%',\r\n          ...this.getColumnSearchProps('topic'),\r\n        },\r\n        {\r\n          title: 'Action',\r\n          key: '_id',\r\n          dataIndex: '_id',\r\n          render: (key) => (\r\n            <span>\r\n              <Button type=\"primary\" shape=\"circle\" icon=\"edit\" onClick={()=>this.openModal(key,'Save Changes')}/>\r\n            </span>\r\n          ),\r\n        },\r\n      ];\r\n        return (\r\n            <div className=\"admin-table-container\">\r\n              <Button type=\"primary\" icon=\"file-text\" style={{marginBottom:'10px'}} onClick={()=>this.openModal(null,'New Topic')}>\r\n                Add New\r\n              </Button> \r\n              <div className=\"register-trainer-form-header\">\r\n                <Title level={4} style={{color:'#fff',textAlign:'center'}}>List of Topics</Title>\r\n              </div>\r\n              <Table \r\n                bordered={true} \r\n                columns={columns} \r\n                dataSource={this.props.admin.subjectTableData} \r\n                size=\"medium\" \r\n                pagination={{ pageSize: 5 }}\r\n                loading={this.props.admin.SubjectTableLoading}\r\n                rowKey=\"_id\"\r\n              />;\r\n              <Modal\r\n                visible={this.props.admin.SubjectmodalOpened}\r\n                title={false}\r\n                onOk={this.handleOk}\r\n                onCancel={this.closeModal}\r\n                style={{top :'20px',padding:'0px',backgroundColor:'rgb(155,175,190)'}}\r\n                destroyOnClose={true}\r\n                footer={[\r\n                  \r\n                ]}\r\n              >\r\n                <NewSubjectForm />\r\n              </Modal>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    admin : state.admin\r\n});\r\n\r\nexport default connect(mapStateToProps,{\r\n    ChangeSubjectSearchText,\r\n    ChangeSubjectTableData,\r\n    ChangeSubjectModalState\r\n})(AllTopics);","import apis from '../services/Apis';\r\nimport Alert from '../components/common/alert';\r\nimport { SecurePost } from '../services/axiosCall';\r\n\r\nexport const ChangeQuestionModalState = (d1)=> dispatch =>{\r\n        dispatch({\r\n            type : 'CHANGE_QUESTION_MODAL_STATE',\r\n            payload1 : d1,\r\n        })\r\n    }\r\n    \r\n\r\nexport const ChangeQuestionConfirmDirty = (d)=> dispatch =>{\r\n    dispatch({\r\n       type : 'CHANGE_QUESTION_FORM_CONFIRMDIRTY',\r\n       payload : d\r\n    })\r\n}\r\n\r\n\r\nexport const ChangeQuestionSearchText = (d)=> dispatch =>{\r\n    dispatch({\r\n       type : 'CHANGE_QUESTION_SEARCH_TEXT',\r\n       payload : d\r\n    })\r\n}\r\n\r\nexport const ChangeQuestionTableData = (d) => dispatch => {\r\n    dispatch({\r\n        type: 'CHANGE_QUESTION_TABLE_LOADING_STATUS',\r\n        payload1: true,\r\n        payload2: []\r\n    });\r\n    SecurePost({\r\n        url: `${apis.GET_ALL_QUESTIONS}`,\r\n        data: {\r\n            subject: d\r\n        }\r\n    }).then((response) => {\r\n        // console.log(response);\r\n        if (response.data.success) {\r\n            dispatch({\r\n                type: 'CHANGE_QUESTION_TABLE_LOADING_STATUS',\r\n                payload1: false,\r\n                payload2: response.data.data\r\n            });\r\n        }\r\n        else {\r\n            Alert('error', 'Error!', response.data.message);\r\n            dispatch({\r\n                type: 'CHANGE_QUESTION_TABLE_LOADING_STATUS',\r\n                payload1: false,\r\n                payload2: []\r\n            });\r\n        }\r\n    }).catch((error) => {\r\n        Alert('error', 'Error!', 'Server Error');\r\n        dispatch({\r\n            type: 'CHANGE_QUESTION_TABLE_LOADING_STATUS',\r\n            payload1: false,\r\n            payload2: []\r\n        });\r\n    });\r\n};\r\n\r\nexport const ChangeSelectedSubjects = (d) => dispatch => {\r\n    dispatch({\r\n        type: 'CHANGE_SELECTED_SUBJECT',\r\n        payload: d\r\n    });\r\n};\r\n\r\nexport const ChangeQuestionFormData = (d) => dispatch => {\r\n    dispatch({\r\n        type: 'CHANGE_QUESTION_FORM_DATA',\r\n        payload: d\r\n    });\r\n};\r\n\r\nexport const AddFifthOptionInQuestion = () => dispatch => {\r\n    dispatch({\r\n        type: 'ADD_FIFTH_OPTION'\r\n    });\r\n};\r\n\r\nexport const ChangeTestDetailsModalState = (d1, d2) => dispatch => {\r\n    dispatch({\r\n        type: 'CHANGE_TEST_DETAILS_MODAL_STATE',\r\n        payload1: d1,\r\n        payload2: d2\r\n    });\r\n};\r\n\r\nexport const ChangeTestSearchText = (d) => dispatch => {\r\n    dispatch({\r\n        type: 'CHANGE_TEST_SEARCH_TEXT',\r\n        payload: d\r\n    });\r\n};\r\n\r\nexport const ChangeTestTableData = () => dispatch => {\r\n    dispatch({\r\n        type: 'CHANGE_TEST_TABLE_LOADING_STATUS',\r\n        payload1: true,\r\n        payload2: []\r\n    });\r\n\r\n    SecurePost({\r\n        url: `${apis.GET_ALL_TESTS}`,\r\n    }).then((response) => {\r\n        // console.log(response.data);\r\n        if (response.data.success) {\r\n            dispatch({\r\n                type: 'CHANGE_TEST_TABLE_LOADING_STATUS',\r\n                payload1: false,\r\n                payload2: response.data.data\r\n            });\r\n        }\r\n        else {\r\n            Alert('error', 'Error!', response.data.message);\r\n            dispatch({\r\n                type: 'CHANGE_TEST_TABLE_LOADING_STATUS',\r\n                payload1: false,\r\n                payload2: []\r\n            });\r\n        }\r\n    }).catch((error) => {\r\n        // console.log(error);\r\n        Alert('error', 'Error!', 'Server Error');\r\n        dispatch({\r\n            type: 'CHANGE_TEST_TABLE_LOADING_STATUS',\r\n            payload1: false,\r\n            payload2: []\r\n        });\r\n    });\r\n};\r\n\r\nexport const updateQuestiosnActiveTest = (d) => {\r\n    return {\r\n        type: 'CHANGE_CURRENT_ACTIVE_TEST_QUESTION',\r\n        payload: d\r\n    };\r\n};","import React, { Component } from 'react'\r\nimport './newquestion.css';\r\nimport {\r\n    Form,\r\n    Input,\r\n    Button,\r\n    Select,\r\n    Row,\r\n    Col,\r\n    Checkbox,\r\n    Modal,\r\n    Upload,\r\n    Icon,\r\n    InputNumber \r\n} from 'antd';\r\nimport { connect } from 'react-redux';\r\nimport { \r\n    ChangeQuestionConfirmDirty,\r\n    ChangeQuestionTableData,\r\n    ChangeQuestionModalState\r\n} from '../../../actions/trainerAction';\r\nimport { SecurePost } from '../../../services/axiosCall';\r\nimport apis from '../../../services/Apis';\r\nimport Alert from '../../../components/common/alert';\r\nimport auth from '../../../services/AuthServices';\r\n\r\n\r\n\r\nclass NewQuestion extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            questionDetails:{\r\n                questionimage:null,\r\n                options :[\r\n                    {\r\n                        image :null,\r\n                        body : null,\r\n                        isAnswer :false\r\n                    },\r\n                    {\r\n                        image :null,\r\n                        body : null,\r\n                        isAnswer :false\r\n                    },\r\n                    {\r\n                        image :null,\r\n                        body : null,\r\n                        isAnswer :false\r\n                    },\r\n                    {\r\n                        image :null,\r\n                        body : null,\r\n                        isAnswer :false\r\n                    }\r\n                ] ,  \r\n            },\r\n            adding:false,\r\n            submitDisabled:false,\r\n            fifthoptioAddButtonVisible:true\r\n        }\r\n        \r\n    }\r\n\r\n    addfifthOption = (e)=>{\r\n        this.setState((previousState,previousProps)=>{\r\n            return({\r\n                fifthoptioAddButtonVisible:false,\r\n                questionDetails:{\r\n                    ...previousState.questionDetails,\r\n                    options:[\r\n                        ...previousState.questionDetails.options,\r\n                        {\r\n                            image :null,\r\n                            body : null,\r\n                            isAnswer :false\r\n                        }\r\n                    ]\r\n                }\r\n            })\r\n        })\r\n    }\r\n\r\n    Customalert = ()=>{\r\n        Modal.confirm({\r\n            title: 'Confirm',\r\n            content: 'empty option can not be set as answer',\r\n            okText: 'I understand',\r\n            cancelText: null,\r\n        });\r\n    }\r\n    \r\n\r\n\r\n\r\n    OptionTextChange =(e,i)=>{\r\n        var newOptions = [...this.state.questionDetails.options]\r\n        newOptions[i]={\r\n            ...this.state.questionDetails.options[i],\r\n            body : e.target.value\r\n        }\r\n        if((newOptions[i].image==='undefined' || newOptions[i].image===undefined || newOptions[i].image===null || newOptions[i].image==='null') && \r\n            (newOptions[i].body==='undefined' || newOptions[i].body===undefined || newOptions[i].body==='null' || newOptions[i].body==='' || newOptions[i].body===null)){\r\n                newOptions[i]={\r\n                    ...this.state.questionDetails.options[i],\r\n                    isAnswer : false\r\n                }\r\n                this.setState((ps,pp)=>{\r\n                    return({\r\n                        questionDetails:{\r\n                            ...ps.questionDetails,\r\n                            options:newOptions\r\n                        }\r\n                    })\r\n                })\r\n        }\r\n        this.setState((ps,pp)=>{\r\n            return({\r\n                questionDetails:{\r\n                    ...ps.questionDetails,\r\n                    options:newOptions\r\n                }\r\n            })\r\n        })     \r\n    }\r\n\r\n    AnswerOptionSwitch = (e,i)=>{\r\n        if((this.state.questionDetails.options[i].body!=='' && this.state.questionDetails.options[i].body!==null)\r\n            || (this.state.questionDetails.options[i].image!==null && this.state.questionDetails.options[i].image!=='undefined' && this.state.questionDetails.options[i].image!==undefined)\r\n        ){\r\n            var newOptions = [...this.state.questionDetails.options]\r\n            newOptions[i]={\r\n                ...this.state.questionDetails.options[i],\r\n                isAnswer : e.target.checked\r\n            }\r\n            this.setState((ps,pp)=>{\r\n                return({\r\n                    questionDetails:{\r\n                        ...ps.questionDetails,\r\n                        options:newOptions\r\n                    }\r\n                })\r\n            })\r\n            \r\n        }\r\n        else{   \r\n            this.Customalert()\r\n            return;\r\n        }\r\n        \r\n    }\r\n\r\n    OptionImageonChange = (f,i)=>{\r\n        var newOptions = [...this.state.questionDetails.options]\r\n        if(!f){\r\n            delete newOptions[i].image\r\n            newOptions[i].image=null\r\n        }\r\n        else{\r\n            newOptions[i]={\r\n                ...this.state.questionDetails.options[i],\r\n                image :`${apis.BASE}/${f.link}`\r\n            }\r\n        }\r\n        this.setState({\r\n            submitDisabled:false\r\n        })\r\n        if((newOptions[i].image==='undefined' || newOptions[i].image===undefined || newOptions[i].image===null || newOptions[i].image==='null') && \r\n            (newOptions[i].body==='undefined' || newOptions[i].body===undefined || newOptions[i].body==='null' || newOptions[i].body==='' || newOptions[i].body===null)){\r\n                newOptions[i]={\r\n                    ...this.state.questionDetails.options[i],\r\n                    isAnswer : false\r\n                }\r\n        }\r\n        this.setState((ps,pp)=>{\r\n            return({\r\n                questionDetails:{\r\n                    ...ps.questionDetails,\r\n                    options:newOptions\r\n                }\r\n            })\r\n        })\r\n    }\r\n\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        this.props.form.validateFieldsAndScroll((err, values) => {\r\n            // console.log(values);\r\n            if (!err) {\r\n                var f=1;\r\n                var ans=0;\r\n                var opts=[]\r\n                // console.log('Received values of form: ', values);\r\n                this.state.questionDetails.options.forEach((element,i) => {\r\n                    opts.push({\r\n                        optbody:element.body,\r\n                        optimg:element.image,\r\n                        isAnswer:element.isAnswer\r\n                    });\r\n                    if((element.image==='undefined' || element.image===undefined || element.image===null || element.image==='null')&&(element.body==='' ||element.body===null || element.body==='null' || element.body==='undefined' || element.body===undefined )){\r\n                        f=0;\r\n                    }\r\n                    if(element.isAnswer){\r\n                        ans=ans+1\r\n                    }\r\n                })\r\n                if(f){\r\n                    if(!ans){\r\n                        Alert('warning','Warning!','There must be atleast one right answer');\r\n                    }\r\n                    else{\r\n                        this.setState({\r\n                            adding:true\r\n                        });\r\n                        SecurePost({\r\n                            url:apis.CREATE_QUESTIONS,\r\n                            data:{\r\n                                body:values.questionbody,\r\n                                options:opts,\r\n                                quesimg:this.state.questionDetails.questionimage,\r\n                                subject:values.subject,\r\n                                explanation:values.explanation,\r\n                                weightage:values.waitage,\r\n                            }\r\n                        }).then((response)=>{\r\n                            // console.log(response);\r\n                            this.setState({\r\n                                adding:false\r\n                            });\r\n                            if(response.data.success){\r\n                                this.props.ChangeQuestionModalState(false);\r\n                                Alert('success','Success',response.data.message);\r\n                                this.props.ChangeQuestionTableData(this.props.trainer.selectedSubjects);\r\n                            }\r\n                            else{\r\n                                this.props.ChangeQuestionModalState(false);\r\n                                this.props.form.resetFields();\r\n                                return Alert('warning','Warning!',response.data.message);\r\n                            }\r\n\r\n                        }).catch((error)=>{\r\n                            // console.log(error);\r\n                            this.props.form.resetFields();\r\n                            this.setState({\r\n                                adding:false,\r\n                                questionDetails:{\r\n                                    questionimage:null,\r\n                                    options :[\r\n                                        {\r\n                                            image :null,\r\n                                            body : null,\r\n                                            isAnswer :false\r\n                                        },\r\n                                        {\r\n                                            image :null,\r\n                                            body : null,\r\n                                            isAnswer :false\r\n                                        },\r\n                                        {\r\n                                            image :null,\r\n                                            body : null,\r\n                                            isAnswer :false\r\n                                        },\r\n                                        {\r\n                                            image :null,\r\n                                            body : null,\r\n                                            isAnswer :false\r\n                                        }\r\n                                    ] ,  \r\n                                }\r\n                            });\r\n                            this.props.ChangeQuestionModalState(false);\r\n                            return Alert('error','Error!','Server Error');\r\n                        })\r\n                        \r\n                    }\r\n                }\r\n                else{\r\n                    Alert('warning','Warning!','Please fill all the options');\r\n                }\r\n            }\r\n        });\r\n    };\r\n\r\n    changeqImage = (f)=>{\r\n        this.setState((ps,pp)=>{\r\n            return({\r\n                questionDetails:{\r\n                    ...ps.questionDetails,\r\n                    questionimage:(f.link ?`${apis.BASE}/${f.link}`:null)\r\n                },\r\n                submitDisabled:false\r\n            })\r\n        })\r\n    }\r\n\r\n    upl=()=>{\r\n        this.setState({\r\n            submitDisabled:true\r\n        })\r\n    }\r\n\r\n    render() {\r\n        // console.log(this.state)\r\n        const { getFieldDecorator } = this.props.form;\r\n        const { Option } = Select;\r\n        const { TextArea } = Input;\r\n        var QuestionImageprops = {\r\n            name: 'file',\r\n            action: `${apis.BASE}${apis.FILE_UPLOAD}?Token=${auth.retriveToken()}`,\r\n            listType: 'picture',\r\n        };\r\n        \r\n        return (\r\n            <div className=\"register-subject-form\" >\r\n                <div className=\"register-trainer-form-body\">\r\n                    <Form  onSubmit={this.handleSubmit}>\r\n                        <div>\r\n                            <Row>\r\n                                <Col span={8}>\r\n                                    <Form.Item label=\"Subject\" hasFeedback>\r\n                                        {getFieldDecorator('subject', {\r\n                                            rules: [{ required: true, message: 'Please select any subject!' }],\r\n                                        })(\r\n                                            <Select\r\n                                                showSearch\r\n                                                style={{ width:'100%'}}\r\n                                                placeholder=\"Select a subject\"\r\n                                                optionFilterProp=\"s\"\r\n                                            >\r\n                                                {\r\n                                                    this.props.admin.subjectTableData.map((d,i)=><Option key={d._id} s={d.topic} value={d._id}>{d.topic}</Option>)\r\n                                                }\r\n                                            </Select>\r\n                                        )}\r\n                                    </Form.Item>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row>\r\n                                <Col span={18}>\r\n                                    <Form.Item label=\"Question\" hasFeedback>\r\n                                        {getFieldDecorator('questionbody', {\r\n                                            rules: [{ required: true, message: 'Please type question!' }],\r\n                                        })(\r\n                                            <TextArea rows={5} />\r\n                                        )}\r\n                                    </Form.Item>\r\n                                </Col>\r\n                                <Col span={6} style={{padding : '0px 20px'}}>\r\n                                    <Form.Item label=\"Question Image\">\r\n                                        <Upload {...QuestionImageprops} beforeUpload={this.upl} onRemove={this.changeqImage} onSuccess={this.changeqImage}>\r\n                                            <Button>\r\n                                                <Icon type=\"upload\" /> Upload\r\n                                            </Button>\r\n                                        </Upload>\r\n                                    </Form.Item>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row>\r\n                                <Col span={18}>\r\n                                    <Form.Item label=\"Explanation\" hasFeedback>\r\n                                        {getFieldDecorator('explanation', {\r\n                                            rules: [{ required: true, message: 'Please type Explanation for the answers!' }],\r\n                                        })(\r\n                                            <TextArea onChange={this.ExplanationChange} rows={3} />\r\n                                        )}\r\n                                    </Form.Item>\r\n                                </Col>\r\n                                <Col offset={2} span={4}>\r\n                                    <Form.Item label=\"Weightage\" hasFeedback>\r\n                                        {getFieldDecorator('waitage', {\r\n                                            rules: [{ required: true, message: 'Please enter the marks' }],\r\n                                        })(\r\n                                            <InputNumber min={1} max={2}  />\r\n                                        )}\r\n                                    </Form.Item>\r\n                                </Col>\r\n                            </Row>\r\n                            <div style={{paddingTop:'20px'}}>\r\n                                {\r\n                                    this.state.questionDetails.options.map((option,i)=>{\r\n                                        return(\r\n                                            <Row key={i} className=\"\">\r\n                                                <Col offset={1} span={13}>\r\n                                                    <Form.Item label={`option${i+1}`}>\r\n                                                        <TextArea value={this.state.questionDetails.options[i].body} onChange={ (e)=>this.OptionTextChange(e,i)} rows={3} />\r\n                                                    </Form.Item>\r\n                                                </Col>\r\n                                                <Col offset={2} span={6} style={{textAlign:'center'}}>\r\n                                                    <Form.Item label={`Option${i+1} Image`}>\r\n                                                        <Upload {...QuestionImageprops} beforeUpload={this.upl} onRemove={(f)=>this.OptionImageonChange(null,i)} onSuccess={(f)=>this.OptionImageonChange(f,i)}>\r\n                                                            <Button>\r\n                                                                <Icon type=\"upload\" /> Upload\r\n                                                            </Button>\r\n                                                        </Upload>\r\n                                                    </Form.Item>\r\n                                                </Col>\r\n                                                <Col span={2} style={{padding : '55px 10px'}}>\r\n                                                    <Form.Item>\r\n                                                        <Checkbox checked={this.state.questionDetails.options[i].isAnswer} onChange={(e)=>this.AnswerOptionSwitch(e,i)} ></Checkbox>\r\n                                                    </Form.Item>\r\n                                                </Col>\r\n                                            </Row>                                                \r\n                                        )\r\n                                    })\r\n                                }\r\n                            </div>\r\n                            <Row>\r\n                                <Col span={12}>\r\n                                    { this.state.fifthoptioAddButtonVisible ? <Button type=\"primary\" onClick={(e)=>this.addfifthOption(e)}>Add 5th option</Button> : null}\r\n                                </Col>\r\n                            </Row>\r\n                            <Row>\r\n                                <Col offset={20}  span={4}>\r\n                                    <Form.Item>\r\n                                        <Button type=\"primary\" htmlType=\"submit\" disabled={this.state.submitDisabled} loading={this.state.adding} block>\r\n                                            Create Question\r\n                                        </Button>\r\n                                    </Form.Item>\r\n                                </Col>\r\n                            </Row>\r\n                            \r\n                        </div>\r\n                    </Form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    trainer : state.trainer,\r\n    admin : state.admin\r\n});\r\n\r\n\r\n\r\nconst NewQuestionForm = Form.create({ name: 'newQuestion' })(NewQuestion);\r\n\r\nexport default connect(mapStateToProps,{\r\n    ChangeQuestionConfirmDirty,\r\n    ChangeQuestionModalState,\r\n    ChangeQuestionTableData\r\n})(NewQuestionForm);\r\n\r\n","import React from 'react';\r\nimport ReactMarkdown from 'react-markdown';\r\nimport gfm from 'remark-gfm';\r\nimport {Prism as SyntaxHighlighter} from 'react-syntax-highlighter';\r\nimport {InlineMath, BlockMath} from 'react-katex';\r\nimport math from 'remark-math';\r\nimport 'katex/dist/katex.min.css';\r\n\r\nconst renderers = {\r\n  inlineMath: ({value}) => <InlineMath math={value} />,\r\n  math: ({value}) => <BlockMath math={value} />,\r\n  code: ({language, value}) => {\r\n    return <SyntaxHighlighter language={language} children={value} />\r\n  }\r\n};\r\n\r\nconst Markdown = (props) => {\r\n  return (\r\n    <ReactMarkdown renderers={renderers} plugins={[gfm,math]} {...props} />\r\n  )\r\n};\r\n\r\nexport default Markdown;","import React, { Component } from 'react';\r\nimport { Skeleton,Row, Col, Icon, Tabs,Descriptions,Button    } from 'antd';\r\nimport './questiondetails.css';\r\nimport apis from '../../../services/Apis';\r\nimport { SecureGet } from '../../../services/axiosCall';\r\nimport moment from 'moment';\r\nimport Markdown from '../../../utils/Markdown';\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nexport default class QuestionDetails extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            loading : true,\r\n            details:null\r\n        }\r\n    }\r\n\r\n    tabChange = (key)=>{\r\n        // console.log(key)\r\n    }\r\n\r\n    componentDidMount(){\r\n        var ID = this.props.id;\r\n\r\n        SecureGet({\r\n            url: `${apis.FETCH_SINGLE_QUESTION}/${ID}`,\r\n        }).then((response) => {\r\n            // console.log(response.data.data[0]);\r\n            this.setState({\r\n                details: response.data.data[0],\r\n                loading: false\r\n            })\r\n        }).catch((error) => {\r\n            // console.log(error);\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Skeleton loading={this.state.loading} active avatar>\r\n                    <Tabs defaultActiveKey=\"1\" onChange={(e) => this.tabChange(e)}>\r\n                        <TabPane tab={<span><Icon type=\"home\" />Basic Info</span>} key=\"1\">\r\n                            <Tab1 id={this.props.id} details={this.state.details} />\r\n                        </TabPane>\r\n                        <TabPane tab={<span><Icon type=\"question-circle\" />Question</span>} key=\"2\">\r\n                            <Tab2 details={this.state.details} />\r\n                        </TabPane>\r\n                    </Tabs>\r\n                </Skeleton>\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\n\r\nfunction Tab1(props) {\r\n    return (\r\n        <div>\r\n            <Descriptions bordered title=\"\" border size=\"small\" column={{ xxl: 1, xl: 1, lg: 1, md: 1, sm: 1, xs: 1 }}>\r\n                <Descriptions.Item label=\"Question Id\">{props.id}</Descriptions.Item>\r\n                <Descriptions.Item label=\"Subject\">{props.details.subject.topic}</Descriptions.Item>\r\n                <Descriptions.Item label=\"Difficulty\">{props.details.difficulty}</Descriptions.Item>\r\n                <Descriptions.Item label=\"No of Right Answers\">{props.details.anscount}</Descriptions.Item>\r\n                <Descriptions.Item label=\"Weightage\">{props.details.weightage}</Descriptions.Item>\r\n                <Descriptions.Item label=\"Created By\">{props.details.createdBy.name}</Descriptions.Item>\r\n                <Descriptions.Item label=\"Created on\">{moment(props.details.createdAt).format(\"DD/ MM/YYYY , hh:mm:ss\")}</Descriptions.Item>\r\n            </Descriptions>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nfunction Tab2(props){\r\n    const optn = ['A', 'B', 'C', 'D', 'E'];\r\n    const Optiondata = props.details;\r\n    // console.log(`details : ${Optiondata}`);\r\n\r\n    return (\r\n        <div className=\"mainQuestionDetailsContaine\">\r\n            <div className=\"questionDetailsBody\">\r\n                <Markdown>\r\n                    {Optiondata.body}\r\n                </Markdown>\r\n            </div>\r\n            \r\n            {Optiondata.quesimg ?\r\n                <div className=\"questionDetailsImageContainer\">\r\n                    <img alt=\"unable to load\" className=\"questionDetailsImage\" src={Optiondata.quesimg} />\r\n                </div>\r\n                : null\r\n            }\r\n            <div>\r\n                {Optiondata.options.map((d, i) => {\r\n                    return (\r\n                        <div key={i}>\r\n                            <Row type=\"flex\" justify=\"center\" className=\"QuestionDetailsOptions\">\r\n                                <Col span={2}>\r\n                                    {\r\n                                        d.isAnswer ? <Button className=\"green\" shape=\"circle\">{optn[i]}</Button> : <Button type=\"primary\" shape=\"circle\">{optn[i]}</Button>\r\n                                    }\r\n                                    \r\n                                </Col>\r\n                                {d.optimg ?\r\n                                    <Col span={6} style={{ padding: '5px' }}>\r\n                                        <img alt=\"unable to load\" className=\"questionDetailsImage\" src={d.optimg} />\r\n                                    </Col>\r\n                                    :\r\n                                    null\r\n                                }\r\n                                {d.optimg ?\r\n                                    <Col span={14}>{d.optbody}</Col>\r\n                                    :\r\n                                    <Col span={20}>{d.optbody}</Col>\r\n                                }\r\n                            </Row>\r\n                           \r\n                        </div>\r\n                    )\r\n                })}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n","import React, { Component } from 'react';\r\nimport { Table, Input, Button, Icon, Typography,Popconfirm,Divider, Modal, Select, Row, Col  } from 'antd';\r\nimport Highlighter from 'react-highlight-words';\r\nimport { connect } from 'react-redux';\r\nimport { \r\n  ChangeQuestionModalState,\r\n  ChangeQuestionTableData,\r\n  ChangeQuestionSearchText,\r\n  ChangeSelectedSubjects\r\n} from '../../../actions/trainerAction';\r\nimport { \r\n  ChangeSubjectTableData\r\n} from '../../../actions/adminAction';\r\nimport './allquestion.css'\r\nimport Alert from '../../../components/common/alert';\r\nimport {SecurePost} from '../../../services/axiosCall';\r\nimport apis from '../../../services/Apis';\r\nimport NewQuestionForm from '../newquestion/newquestion';\r\nimport QuestionDetails from '../questionDetails/questiondetails';\r\n\r\n\r\n\r\nclass AllQuestions extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state={\r\n      questiondetailsId : null,\r\n      questiondetailsModelVisible:false\r\n    }\r\n  }\r\n  OpendetailsModal = (id)=>{\r\n    this.setState((previousState,previousProps)=>{\r\n      return{\r\n        questiondetailsId:id,\r\n        questiondetailsModelVisible:true\r\n      }\r\n    })\r\n  }\r\n  ClosedetailsModal = ()=>{\r\n    this.setState((previousState,previousProps)=>{\r\n      return{\r\n        questiondetailsId:null,\r\n        questiondetailsModelVisible:false\r\n      }\r\n    })\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.props.ChangeSubjectTableData();\r\n    this.props.ChangeQuestionTableData(this.props.trainer.selectedSubjects);\r\n  }\r\n\r\n  openNewModal = (mode)=>{\r\n    this.props.ChangeQuestionModalState(true);\r\n  }\r\n\r\n  closeNewModal = ()=>{\r\n    this.props.ChangeQuestionModalState(false);\r\n  }\r\n\r\n  handleSubjectChange =(s)=>{\r\n    this.props.ChangeSelectedSubjects(s);\r\n    this.props.ChangeQuestionTableData(s);\r\n  }\r\n\r\n  deleteQuestion = (id)=>{\r\n    SecurePost({\r\n      url : `${apis.DELETE_QUESTION}`,\r\n      data : {\r\n          _id : id\r\n      }\r\n    }).then((response)=>{\r\n      if(response.data.success){\r\n        Alert('success','Success',response.data.message);\r\n        this.props.ChangeQuestionTableData(this.props.trainer.selectedSubjects);\r\n      }\r\n      else{\r\n        return Alert('warning','Warning!',response.data.message);\r\n      }\r\n    }).catch((error)=>{\r\n      return Alert('error','Error!','Server Error');\r\n    })\r\n  }\r\n\r\n    getColumnSearchProps = dataIndex => ({\r\n        filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => (\r\n          <div style={{ padding: 8 }}>\r\n            <Input\r\n              ref={node => {\r\n                this.searchInput = node;\r\n              }}\r\n              placeholder={`Search ${dataIndex}`}\r\n              value={selectedKeys[0]}\r\n              onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\r\n              onPressEnter={() => this.handleSearch(selectedKeys, confirm)}\r\n              style={{ width: 188, marginBottom: 8, display: 'block' }}\r\n            />\r\n            <Button\r\n              type=\"primary\"\r\n              onClick={() => this.handleSearch(selectedKeys, confirm)}\r\n              icon=\"search\"\r\n              size=\"small\"\r\n              style={{ width: 90, marginRight: 8 }}\r\n            >\r\n              Search\r\n            </Button>\r\n            <Button onClick={() => this.handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>\r\n              Reset\r\n            </Button>\r\n          </div>\r\n        ),\r\n        filterIcon: filtered => (\r\n          <Icon type=\"search\" style={{ color: filtered ? '#1890ff' : undefined }} />\r\n        ),\r\n        onFilter: (value, record) =>\r\n          record[dataIndex]\r\n            .toString()\r\n            .toLowerCase()\r\n            .includes(value.toLowerCase()),\r\n        onFilterDropdownVisibleChange: visible => {\r\n          if (visible) {\r\n            setTimeout(() => this.searchInput.select());\r\n          }\r\n        },\r\n        render: text => (\r\n          <Highlighter\r\n            highlightStyle={{ backgroundColor: '#ffc069', padding: 0 }}\r\n            searchWords={[this.props.trainer.QuestionsearchText]}\r\n            autoEscape\r\n            textToHighlight={text.toString()}\r\n          />\r\n        ),\r\n      });\r\n    \r\n      handleSearch = (selectedKeys, confirm) => {\r\n        confirm();\r\n        this.props.ChangeQuestionSearchText(selectedKeys[0])\r\n      };\r\n    \r\n      handleReset = clearFilters => {\r\n        clearFilters();\r\n        this.props.ChangeQuestionSearchText('')\r\n      };\r\n\r\n    render() {\r\n      const { Title } = Typography;\r\n      const columns = [\r\n        {\r\n          title: 'Subject',\r\n          dataIndex: 'subject.topic',\r\n          key: 'subject.topic',\r\n          width: '15%',\r\n        },\r\n        {\r\n          title: 'Question',\r\n          dataIndex: 'body',\r\n          key: 'body',\r\n          width: '50%',\r\n          ...this.getColumnSearchProps('body'),\r\n        },\r\n        {\r\n          title: 'Created By',\r\n          dataIndex: 'createdBy.name',\r\n          key: 'createdBy.name',\r\n          width: '15%'\r\n        },\r\n        \r\n        {\r\n          title: 'Action',\r\n          key: '_id',\r\n          dataIndex: '_id',\r\n          width: '15%',\r\n          render: (key) => (\r\n            <span>\r\n              <Button type=\"primary\" shape=\"circle\" onClick={()=>this.OpendetailsModal(key)} icon=\"info-circle\" />\r\n              <Divider type=\"vertical\" />\r\n              <Popconfirm\r\n                  title=\"Are you sure？\"\r\n                  cancelText=\"No\"\r\n                  okText=\"Yes\"\r\n                  onConfirm={()=>{this.deleteQuestion(key)}}\r\n                  icon={<Icon type=\"delete\" style={{ color: 'red' }} />}\r\n                >\r\n                  <Button type=\"danger\" shape=\"circle\" icon=\"delete\" />\r\n                </Popconfirm>\r\n            </span>\r\n          ),\r\n        },\r\n      ];\r\n        return (\r\n            <div className=\"admin-table-container\">\r\n              <div>\r\n                <Row>\r\n                  <Col span={12}>\r\n                    <Button type=\"primary\" icon=\"question-circle\" style={{marginBottom:'10px'}} onClick={()=>this.openNewModal('Add New Question')}>\r\n                      Add New Question\r\n                    </Button>\r\n                  </Col>\r\n                  <Col span={12}>\r\n                    <Select\r\n                      mode=\"multiple\"\r\n                      placeholder=\"Select one or more subjects\"\r\n                      defaultValue={this.props.trainer.selectedSubjects}\r\n                      onChange={this.handleSubjectChange}\r\n                      style={{ width: '100%' }}\r\n                      allowClear={true}\r\n                      optionFilterProp=\"s\"\r\n                    >\r\n                      {this.props.admin.subjectTableData.map(item => (\r\n                        <Select.Option key={item._id} value={item._id} s={item.topic}>\r\n                          {item.topic}\r\n                        </Select.Option>\r\n                      ))}\r\n                    </Select>\r\n                  </Col>\r\n                </Row>\r\n              </div>\r\n              <div className=\"register-trainer-form-header\">\r\n                <Title level={4} style={{color:'#fff',textAlign:'center'}}>List of Questions</Title>\r\n              </div>\r\n              <Table \r\n                bordered={true} \r\n                columns={columns} \r\n                dataSource={this.props.trainer.QuestionTableData} \r\n                size=\"medium\" \r\n                pagination={{ pageSize: 5 }}\r\n                loading={this.props.trainer.QuestionTableLoading}\r\n                rowKey=\"_id\" \r\n              />\r\n              <Modal\r\n                visible={this.props.trainer.NewQuestionmodalOpened}\r\n                title=\"New Question\"\r\n                onCancel={this.closeNewModal}\r\n                style={{top :'20px',padding:'0px',backgroundColor:'rgb(155,175,190)'}}\r\n                width=\"90%\"\r\n                destroyOnClose={true}\r\n                footer={[]}\r\n              >\r\n                <NewQuestionForm />\r\n              </Modal>\r\n\r\n              <Modal\r\n                visible={this.state.questiondetailsModelVisible}\r\n                title=\"Question Details\"\r\n                onCancel={this.ClosedetailsModal}\r\n                style={{top :'20px',padding:'0px',backgroundColor:'rgb(155,175,190)'}}\r\n                width=\"70%\"\r\n                destroyOnClose={true}\r\n                footer={[]}\r\n              >\r\n                <QuestionDetails id={this.state.questiondetailsId} / >\r\n              </Modal>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    trainer : state.trainer,\r\n    admin : state.admin\r\n});\r\n\r\nexport default connect(mapStateToProps,{\r\n  ChangeQuestionModalState,\r\n  ChangeQuestionTableData,\r\n  ChangeQuestionSearchText,\r\n  ChangeSelectedSubjects,\r\n  ChangeSubjectTableData\r\n})(AllQuestions);","import React, { Component } from 'react'\r\nimport apis from '../../../services/Apis';\r\nimport { SecurePost } from '../../../services/axiosCall';\r\nimport Alert from '../../common/alert';\r\nimport { Button, Row, Col, Typography } from 'antd';\r\nimport Markdown from '../../../utils/Markdown';\r\nimport './conducttes.css';\r\n\r\nconst { Title } = Typography;\r\n\r\nexport default class Questions extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            loading: false,\r\n            total: 0\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.refreshquestionList();\r\n    }   \r\n\r\n    refreshquestionList = ()=>{\r\n        this.setState({\r\n            loading: true\r\n        });\r\n        \r\n        SecurePost({\r\n            url: `${apis.GET_TEST_QUESTIONS}`,\r\n            data: {\r\n                id: this.props.id\r\n            }\r\n        }).then((response) => {\r\n            // console.log(response);\r\n            if (response.data.success) {\r\n                this.props.updateQuestiosnTest(response.data.data);\r\n            }\r\n            else {\r\n                Alert('error', 'Error!', response.data.message)\r\n            }\r\n            this.setState({\r\n                loading: false\r\n            })\r\n        }).catch((error) => {\r\n            // console.log(error);\r\n            Alert('error', 'Error!', 'Server Error')\r\n            this.setState({\r\n                loading: false\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const aMap = ['A', 'B', 'C', 'D', 'E'];\r\n        var sum = 0;\r\n\r\n        return (\r\n            <div>\r\n                <Row>\r\n                    <Col span={24}>\r\n                        <h6 style={{fontSize: '14px'}}>\r\n                            Total Marks: {'  '}\r\n                            {\r\n                                this.props.questionsOfTest.reduce((accumulator, current) => accumulator + current.weightage, 0)\r\n                            }\r\n                        </h6>\r\n                    </Col>\r\n                </Row>\r\n                \r\n                {\r\n                    this.props.questionsOfTest.map((d, i) => {\r\n                        \r\n                        return(\r\n                            <div key={i} style={{ paddingBottom: '50px' }}>\r\n                                \r\n                                <Row>\r\n                                    <Col span={1}>\r\n                                        <Button type=\"primary\" shape=\"circle\" >{i+1}</Button>\r\n                                    </Col>\r\n                                    <Col span={d.quesimg?6:0}>\r\n                                        <img alt=\"unable to load\" src={d.quesimg} style={{width:'100%'}}/>\r\n                                    </Col>\r\n                                    <Col span={d.quesimg?16:22} style={{padding:'10px'}}>\r\n                                        <Markdown>{d.body}</Markdown>\r\n                                    </Col>\r\n                                    <Col span={1}>\r\n                                        Marks:{d.weightage}\r\n                                    </Col>\r\n                                    <Col offset={1} span={23}>\r\n                                        <Row>\r\n                                            {d.options.map((dd,ii)=>{\r\n                                                return(\r\n                                                    <Col key={ii} span={12} style={{paddingBottom:'30px'}}>\r\n                                                        <Row>\r\n                                                            <Col span={1}>\r\n                                                            {\r\n                                                                dd.isAnswer?<Button className=\"green\" shape=\"circle\">{aMap[ii]}</Button>:<Button type=\"primary\" shape=\"circle\">{aMap[ii]}</Button>\r\n                                                            }\r\n                                                            </Col>\r\n                                                            <Col offset={1} span={dd.optimg?8:0}>\r\n                                                                <img alt=\"unable to load\" src={dd.optimg} style={{width:'100%'}} />\r\n                                                            </Col>\r\n                                                            <Col offset={1} span={dd.optimg?12:21}>\r\n                                                                <p>{dd.optbody}</p>\r\n                                                            </Col>\r\n                                                        </Row>\r\n                                                    </Col>\r\n                                                )\r\n                                            })}\r\n                                        </Row>\r\n                                    </Col>\r\n                                </Row>\r\n\r\n                            </div> \r\n                        )\r\n                    })\r\n                }\r\n                \r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport './testdetails.css';\r\nimport { Card,Row,Col  } from 'antd';\r\nimport { Bar, Doughnut } from 'react-chartjs-2';\r\nimport {bgcolor,bordercolor} from '../../../services/bgcolor';\r\n\r\nexport default class Stats extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            id:this.props.id,\r\n            stats:this.props.stats,\r\n            Scorelable:[],\r\n            Scoredata:[],\r\n            bgColor1:[],\r\n            borcolor1:[],\r\n            maxmMarks:this.props.maxmMarks,\r\n            passData:[0,0],\r\n            passLable:['Fail','Pass'],\r\n            stat:['91% to 100%','81% to 90%','71% to 80%','61% to 70%','50% to 60%','Below 50%'],\r\n            statdata:[0,0,0,0,0,0]\r\n        } \r\n    }\r\n    \r\n    componentWillMount(){\r\n        let {bgColor1,borcolor1}=this.state;\r\n        var maxi=-1;\r\n        let p=0;\r\n        let f=0;\r\n        let p90_100=0;\r\n        let p80_90=0;\r\n        let p70_80=0;\r\n        let p60_70=0;\r\n        let p50_60=0;\r\n        let below50=0;\r\n        var pc=0;\r\n        this.state.stats.map((d, i) => {\r\n            pc = (d.score / this.state.maxmMarks) * 100;\r\n            if (pc >= 91) {\r\n                p90_100++;\r\n            }\r\n            else if (pc >= 81) {\r\n                p80_90++;\r\n            }\r\n            else if (pc >= 71) {\r\n                p70_80++;\r\n            }\r\n            else if (pc >= 61) {\r\n                p60_70++;\r\n            }\r\n            else if (pc >= 50) {\r\n                p50_60++;\r\n            }\r\n            else {\r\n                below50++;\r\n            }\r\n\r\n            if (d.score >= this.state.maxmMarks / 2) {\r\n                p++;\r\n            }\r\n            else {\r\n                f++;\r\n            }\r\n            if (d.score > maxi) {\r\n                maxi = d.score\r\n            }\r\n        });\r\n        var dp =[];\r\n        var label = [];\r\n        \r\n        for(let i=0;i<=maxi;i++){\r\n            dp.push(0);\r\n            label.push(i);\r\n            bgColor1.push(bgcolor[i]);\r\n            borcolor1.push(bordercolor[i]);\r\n\r\n        };\r\n        \r\n        this.state.stats.map((d, i) => {\r\n            dp[d.score]++;\r\n        });\r\n\r\n        this.setState({\r\n            Scorelable: label,\r\n            Scoredata: dp,\r\n            bgColor1: bgColor1,\r\n            borcolor1: borcolor1,\r\n            passData: [f, p],\r\n            statdata: [p90_100, p80_90, p70_80, p60_70, p50_60, below50]\r\n        });\r\n    }\r\n\r\n    render() {\r\n        let barData={\r\n            labels:this.state.Scorelable,\r\n            datasets:[{\r\n                label: 'Scores',\r\n                data: this.state.Scoredata,\r\n                backgroundColor:this.state.bgColor1,\r\n                borderColor:this.state.borcolor1,\r\n                borderWidth: 1\r\n            }]\r\n        }\r\n        let DoughNutData1={\r\n            labels:this.state.passLable,\r\n            datasets:[{\r\n                label: 'Pass/Fail',\r\n                data: this.state.passData,\r\n                backgroundColor:[bgcolor[0],bgcolor[1]],\r\n                borderColor:[bordercolor[0],bordercolor[1]],\r\n                borderWidth: 1\r\n            }]\r\n        }\r\n        let DoughNutData2={\r\n            labels:this.state.stat,\r\n            datasets:[{\r\n                label: 'Percentage wise category',\r\n                data: this.state.statdata,\r\n                backgroundColor:[bgcolor[0],bgcolor[1],bgcolor[2],bgcolor[3],bgcolor[4],bgcolor[5]],\r\n                borderColor:[bordercolor[0],bordercolor[1],bordercolor[2],bordercolor[3],bordercolor[4],bordercolor[5]],\r\n                borderWidth: 1\r\n            }]\r\n        }\r\n        return (\r\n            <div>\r\n                <div>\r\n                    <Card >\r\n                        <div className=\"download-section\">\r\n                            <b>Download the test result excel sheet.</b>\r\n                            <a href={this.props.file} target=\"_blank\" className=\"download-xlsx\">Download</a>\r\n                        </div>\r\n                    </Card>\r\n                </div> \r\n                <div style={{marginTop:'10px'}}>\r\n                    <Card >\r\n                        <div style={{padding:'10px 10px 0px 10px'}}>\r\n                            <b>Score vs No of students.</b>\r\n                        </div>\r\n                        <div style={{padding:'0px 10px 10px 10px'}}>\r\n                            <Bar\r\n                                data={barData}\r\n                                options={{ maintainAspectRatio: false }}\r\n                            />\r\n                        </div>\r\n                    </Card>\r\n                </div>\r\n                <div style={{marginTop:'10px'}}>\r\n                    <Card >\r\n                        <Row>\r\n                            <Col span={12}>\r\n                                <div style={{padding:'10px 10px 0px 10px'}}>\r\n                                    <b>Pass/Fail.</b>\r\n                                </div>\r\n                                <div style={{padding:'0px 10px 10px 10px'}}>\r\n                                    <Doughnut data={DoughNutData1} />\r\n                                </div>\r\n                            </Col>\r\n                            <Col span={12}>\r\n                                <div style={{padding:'10px 10px 0px 10px'}}>\r\n                                    <b>Percentage wise category.</b>\r\n                                </div>\r\n                                <div style={{padding:'0px 10px 10px 10px'}}>\r\n                                    <Doughnut data={DoughNutData2} />\r\n                                </div>\r\n                            </Col>\r\n                        </Row>\r\n                        \r\n                    </Card>\r\n                </div>                \r\n            </div>\r\n        )\r\n    };\r\n};\r\n","import React from 'react';\r\nimport { Table, Tag, Card } from 'antd';\r\n\r\nexport default function Trainee(props) {\r\n    let maxMarks = props.maxmMarks || 2;\r\n    // console.log(props);\r\n\r\n    const columns = [\r\n        {\r\n            title: 'Name',\r\n            dataIndex: 'userid.name',\r\n            key: 'userid.name'\r\n        },\r\n        {\r\n            title: 'Email Id',\r\n            dataIndex: 'userid.emailid',\r\n            key: 'userid.emailid',\r\n        },\r\n        {\r\n            title: 'Contact No',\r\n            dataIndex: 'userid.contact',\r\n            key: 'userid.contact',\r\n        },\r\n        {\r\n            title: 'Organisation',\r\n            dataIndex: 'userid.organisation',\r\n            key: 'userid.organisation',\r\n        },\r\n        {\r\n            title:'Score',\r\n            dataIndex: 'score',\r\n            key: 'score',\r\n        },\r\n        {\r\n            title:'Status',\r\n            dataIndex:'score',\r\n            key: '_id',\r\n            render: tag => (\r\n                <span>\r\n                    <Tag color={tag >= maxMarks/2 ? 'green' : 'red'} key={tag}>\r\n                        {tag >= maxMarks/2 ? 'Pass' : 'Fail'}\r\n                    </Tag>\r\n                </span>\r\n            )\r\n        }\r\n    ];\r\n    return (\r\n        <div>\r\n            <Card>\r\n                <div className=\"download-section\">\r\n                    <Table pagination={false} rowKey=\"_id\" columns={columns} dataSource={props.stats}/>\r\n                </div>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Card, Rate, Comment, Avatar } from 'antd';\r\n\r\nexport default function FeedBacks(props) {\r\n    // console.log(props.feedbacks);\r\n    return (\r\n        <div>\r\n            <Card>\r\n                <div className=\"download-section\">\r\n                    <h3>\r\n                        <b>Feedbacks</b>\r\n                    </h3>\r\n\r\n                    <div>\r\n                        {props.feedbacks.map((d,i)=>{\r\n                            return(\r\n                                <Card key={i} style={{marginBottom:'10px'}}>\r\n                                    <Comment\r\n                                        author={`${d.userid.name} - ${d.userid.organisation} `}\r\n                                        avatar={\r\n                                            <Avatar\r\n                                                src=\"https://res.cloudinary.com/gniusedu/image/upload/v1616994666/gnius-jpg_aspibu.jpg\"\r\n                                                alt={d.userid.name}\r\n                                            />\r\n                                        }\r\n                                        content={\r\n                                            <span>\r\n                                                <Rate size=\"small\" disabled defaultValue={d.rating} />\r\n                                                <p>\r\n                                                    {d.feedback}\r\n                                                </p>\r\n                                            </span>\r\n                                        }\r\n                                    />\r\n                                </Card>\r\n                            ) \r\n                        })}\r\n                    </div>\r\n                </div>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n","import apis from '../services/Apis';\r\nimport Alert from '../components/common/alert';\r\nimport { Post } from '../services/axiosCall';\r\n\r\nlet parse_time = (d) => {\r\n    // console.log(`${d}I am called`)\r\n    var m_left = Math.floor(d / 60);\r\n    var s_left = Number(String(d % 60).slice(0, 2));\r\n    return {\r\n        m_left: m_left,\r\n        s_left: s_left\r\n    }\r\n};\r\n\r\n\r\nexport const setTestDetsils = (d1, d2) => {\r\n    return ({\r\n        type: 'SET_TRAINEE_TEST_DETAILS',\r\n        payload1: d1,\r\n        payload2: d2\r\n    })\r\n};\r\n\r\nexport const LocaltestDone = (d) => dispatch => {\r\n    dispatch({\r\n        type: 'TEST_DONE_LOCAL'\r\n    });\r\n};\r\n\r\nexport const fetchTraineedata = (d) => dispatch => {\r\n    Post({\r\n        url: apis.FETCH_TRAINEE_DETAILS,\r\n        data: {\r\n            _id: d\r\n        }\r\n    }).then((response) => {\r\n        // console.log(response);\r\n        if (response.data.success) {\r\n            dispatch({\r\n                type: 'FETCH_LOGGED_IN_TRAINEE',\r\n                payload: response.data.data\r\n            });\r\n        }\r\n        else {\r\n            Alert('error', 'Error!', response.data.message);\r\n        }\r\n    });\r\n};\r\n\r\n\r\nexport const fetchTestdata =(d1,d2)=>dispatch=>{\r\n    Post({\r\n        url:apis.FETCH_TRAINEE_TEST_DETAILS,\r\n        data:{\r\n            testid:d1,\r\n            traineeid:d2\r\n        }\r\n    }).then((response)=>{\r\n        // console.log(response.data);\r\n        if(response.data.success){\r\n            if(response.data.data.completed || !response.data.data.startedWriting){\r\n                dispatch({\r\n                    type:'FETCH_TEST_FLAG',\r\n                    payload1:response.data.data.testbegins,\r\n                    payload2:response.data.data.startedWriting,\r\n                    payload3:response.data.data.testconducted,\r\n                    payload4:response.data.data.completed,\r\n                    payload5:0,\r\n                    payload6:0\r\n                })\r\n            }\r\n            else{\r\n                let t = parse_time(response.data.data.pending);\r\n                dispatch({\r\n                    type: 'FETCH_TEST_FLAG',\r\n                    payload1: response.data.data.testbegins,\r\n                    payload2: response.data.data.startedWriting,\r\n                    payload3: response.data.data.testconducted,\r\n                    payload4: response.data.data.completed,\r\n                    payload5: t.m_left,\r\n                    payload6: t.s_left\r\n                });\r\n            }\r\n            \r\n        }\r\n        else{\r\n            dispatch({\r\n                type: 'invalidUrl',\r\n            });\r\n        }\r\n    })\r\n    .catch((err) => {\r\n        dispatch({\r\n            type: 'invalidUrl',\r\n        });\r\n    });\r\n}\r\n\r\n\r\nexport const ProceedtoTest = (d1, d2, d3) => dispatch => {\r\n    // console.log(`Hello from ins${d1},${d2}`)\r\n    dispatch({\r\n        type: 'PROCEEDING_TO_TEST',\r\n        payload: true\r\n    });\r\n\r\n    Post({\r\n        url: `${apis.PROCEED_TO_TEST}`,\r\n        data: {\r\n            testid: d1,\r\n            userid: d2\r\n        }\r\n    }).then((response) => {\r\n        // console.log(response);\r\n        if (!response.data.success) {\r\n            Alert('error', 'Error!', response.data.message);\r\n        }\r\n\r\n        d3();\r\n\r\n        dispatch({\r\n            type: 'PROCEEDING_TO_TEST',\r\n            payload: false\r\n        });\r\n    }).catch((error) => {\r\n        // console.log(error)\r\n        dispatch({\r\n            type: 'PROCEEDING_TO_TEST',\r\n            payload: false\r\n        })\r\n        Alert('error', 'Error!', \"Server error\");\r\n    });\r\n};\r\n\r\n\r\nexport const fetchTraineeTestQuestions = (tid) => dispatch => {\r\n    Post({\r\n        url: `${apis.FETCH_TRAINEE_TEST_QUESTION}`,\r\n        data: {\r\n            id: tid\r\n        }\r\n    }).then((response) => {\r\n        // console.log(response.data);\r\n        if (response.data.success) {\r\n            dispatch({\r\n                type: 'UPDATE_TRAINEE_TEST_QUESTIONS',\r\n                payload: response.data.data\r\n            })\r\n        }\r\n        else {\r\n            Alert('error', 'Error!', response.data.message);\r\n        }\r\n    }).catch((error) => {\r\n        // console.log(error);\r\n        Alert('error', 'Error!', \"Server error\");\r\n    });\r\n};\r\n\r\n\r\nexport const fetchTraineeTestAnswerSheet = (tid, uid) => dispatch => {\r\n    Post({\r\n        url: `${apis.FETCH_TRAINEE_TEST_ANSWERSHEET}`,\r\n        data: {\r\n            testid: tid,\r\n            userid: uid\r\n        }\r\n    }).then((response) => {\r\n        if (response.data.success) {\r\n            // console.log(response.data.data);\r\n            var d = response.data.data.answers.map((d, i) => {\r\n                if (d.chosenOption.length === 0) {\r\n                    return ({\r\n                        ...d,\r\n                        isMarked: false,\r\n                        isAnswered: false\r\n                    })\r\n                }\r\n                else {\r\n                    return ({\r\n                        ...d,\r\n                        isMarked: false,\r\n                        isAnswered: true\r\n                    });\r\n                }\r\n            });\r\n\r\n            dispatch({\r\n                type: 'UPDATE_TRAINEE_TEST_ANSWERSHEET',\r\n                payload: d\r\n            });\r\n        }\r\n        else {\r\n            Alert('error', 'Error!', response.data.message);\r\n        }\r\n    }).catch((error) => {\r\n        // console.log(error);\r\n        Alert('error', 'Error!', \"Server error\");\r\n    });\r\n};\r\n\r\nexport const switchQuestion = (d1) => {\r\n    return {\r\n        type: 'SWITCH_QUESTION',\r\n        payload: d1\r\n    };\r\n};\r\n\r\nexport const updateIsMarked = (d1) => {\r\n    return {\r\n        type: 'UPDATE_TRAINEE_TEST_ANSWERSHEET',\r\n        payload: d1\r\n    };\r\n};\r\n\r\nexport const FeedbackStatus = (s) => {\r\n    return {\r\n        type: 'SET_HAS_GIVEN_FEEDBACK',\r\n        payload: s\r\n    };\r\n};\r\n\r\n","import React, { Component } from 'react';\r\nimport { Rate, Input, Button, Col, Row, Typography, Divider } from 'antd';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { Post } from '../../../services/axiosCall';\r\nimport apis from '../../../services/Apis';\r\nimport Alert from '../../common/alert';\r\nimport { FeedbackStatus } from '../../../actions/traineeAction';\r\nimport './answer.css';\r\n\r\nconst { TextArea } = Input;\r\nconst { Title, Text } = Typography;\r\n\r\nclass Feedback extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            star: 0,\r\n            comment: \"excellent\",\r\n            loading: false\r\n        }\r\n    }\r\n\r\n    handleStarChange=(star)=>{\r\n        // console.log(star);\r\n        this.setState({ star:star });\r\n    } \r\n    onCommentChange=(comment)=>{\r\n        this.setState({ comment:comment.target.value });\r\n    }\r\n\r\n    submitFeedback=()=>{\r\n        this.setState({ loading: true });\r\n        let { star, comment } = this.state;\r\n        \r\n        if(star!==0 && comment.length>0){\r\n            Post({\r\n                url: apis.GIVE_FEEDBACK,\r\n                data: {\r\n                    testid: this.props.trainee.testid,\r\n                    userid: this.props.trainee.traineeid,\r\n                    rating: star,\r\n                    feedback: comment\r\n                }\r\n            })\r\n            .then((response) => {\r\n                if (response.data.success) {\r\n                    this.setState({ loading: false })\r\n                    Alert('success', 'Success', 'Thanks for your feedback');\r\n                    this.props.FeedbackStatus(true)\r\n                }\r\n                else {\r\n                    this.setState({ loading: false })\r\n                    Alert('error', 'Failed', response.data.message);\r\n                }\r\n            }).catch((error) => {\r\n                // console.log(error);\r\n                Alert('error', 'Failed', 'Server Error');\r\n                this.setState({ loading: false })\r\n            });\r\n        }\r\n        else {\r\n            // ...\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const desc = ['terrible', 'bad', 'normal', 'good', 'wonderful'];\r\n        return (\r\n            <Row>\r\n                <Col span={24}>\r\n                    <div\r\n                        style={{ width: '40%', margin: '25px', textAlign: 'left', padding: '10px' }}\r\n                    >\r\n                        <Title level={3}>Feedback Form</Title>\r\n                        <div className=\"pp\">\r\n                            <span>\r\n                                <Text>Please rate your experience</Text> <br />\r\n                                <Rate tooltips={desc} onChange={this.handleStarChange} value={this.state.star} />\r\n                                {this.state.star ? <span className=\"ant-rate-text\">{desc[this.state.star - 1]}</span> : ''}\r\n                            </span>\r\n                        </div>\r\n                        \r\n                        <Divider />\r\n\r\n                        <div className=\"pp\">\r\n                            <TextArea rows={2} onChange={this.onCommentChange} value={this.state.comment} />\r\n                        </div>\r\n                        \r\n                        <Divider />\r\n\r\n                        <div className=\"pp\">\r\n                            <Button type=\"primary\" onClick={this.submitFeedback} loading={this.state.loading}>Submit</Button>\r\n                        </div>\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n    trainee : state.trainee\r\n});\r\n\r\nexport default connect(mapStateToProps,{\r\n    FeedbackStatus\r\n})(Feedback);","import React from 'react';\r\nimport { Table, Icon, Tag, Skeleton, Descriptions, Modal, Button, Row, Col, Collapse } from 'antd';\r\nimport { Typography } from 'antd';\r\nimport { Result } from 'antd';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { Post } from '../../../services/axiosCall';\r\nimport apis from '../../../services/Apis';\r\nimport Alert from '../../common/alert';\r\nimport Feedback from '../answersheet/feedback';\r\nimport { FeedbackStatus } from '../../../actions/traineeAction';\r\nimport Markdown from '../../../utils/Markdown';\r\n\r\nimport './answer.css';\r\nimport './answermobileview.css';\r\nimport './individualquestion_mobileview.css';\r\n\r\nconst { Title } = Typography;\r\nconst { Panel } = Collapse;\r\n\r\nclass Answer extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            loading:false,\r\n            data:[],\r\n            TotalScore:null,\r\n            Mvisible:false,\r\n            ActiveQuestionId:null\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        let traineeid = this.props.trainee.traineeid || this.props.user.userid._id;\r\n        let testid = this.props.trainee.testid || this.props.user.userid.testid;\r\n        \r\n        \r\n        this.setState({\r\n            loading:true\r\n        });\r\n        \r\n        let p1 = Post({\r\n            url: apis.FETCH_OWN_RESULT,\r\n            data: {\r\n                userid: traineeid,\r\n                testid: testid\r\n            }\r\n        });\r\n        \r\n        let p2 = Post({\r\n            url:`${apis.FETCH_TRAINEE_TEST_QUESTION}`,\r\n            data:{\r\n                id:testid\r\n            }\r\n        });\r\n\r\n        let p3 = Post({\r\n            url: `${apis.FEEDBACK_STATUS_CHECK}`,\r\n            data: {\r\n                userid: traineeid,\r\n                testid: testid\r\n            }\r\n        });\r\n        \r\n        Promise.all([p1, p2, p3])\r\n            .then(d => {\r\n            //console.log(d);\r\n            this.setState({\r\n                loading:false\r\n            });\r\n\r\n            if(d[0].data.success && d[1].data.success){\r\n                let v = d[1].data.data;\r\n                let r = d[0].data.result.result.map((dd, i) => {\r\n                    return ({\r\n                        ...dd,\r\n                        ...v[i]\r\n                    });\r\n                });\r\n\r\n                // console.log(r);\r\n                \r\n                this.setState({\r\n                    data: r,\r\n                    TotalScore: d[0].data.result.score\r\n                });\r\n\r\n                if(d[2].data.success){\r\n                    this.props.FeedbackStatus(d[2].data.status);\r\n                }\r\n            }\r\n            else{\r\n                Alert('error','Error!',`${d[0].data.success ? \"\":d[0].data.message} and ${d[1].data.success ? \"\":d[1].data.message}`)\r\n            }\r\n        })\r\n        .catch((err) => {\r\n            // console.log(err)\r\n            this.setState({\r\n                loading:false\r\n            });\r\n            Alert('error','Error!',\"Server Error\")\r\n        })\r\n    }\r\n\r\n    handleCancel=()=>{\r\n        this.setState({\r\n            Mvisible: false\r\n        });\r\n    }\r\n\r\n    OpenModel = (qid) => {\r\n        this.setState({\r\n            ActiveQuestionId: qid,\r\n            Mvisible: true\r\n        })\r\n    };\r\n\r\n    callback = (key) => {\r\n        // console.log(key);\r\n    }\r\n\r\n    render(){\r\n        const columns = [\r\n            {\r\n                title: 'View Question',\r\n                key: 'action',\r\n                render: (text, record) => (\r\n                    <Button shape=\"circle\" icon=\"info\" type=\"primary\" size=\"small\" onClick={() => { this.OpenModel(text.qid) }}></Button>\r\n                )\r\n            },\r\n            {\r\n                title: \"Question\",\r\n                dataIndex: 'body',\r\n                key: 'body'\r\n            },\r\n            {\r\n                title: 'Correct Answers',\r\n                key: 'correctAnswer',\r\n                dataIndex: 'correctAnswer',\r\n                render: tags => (\r\n                    <span>\r\n                        {tags.map(tag => {\r\n                            return (\r\n                                <Tag color=\"green\" key={tag}>\r\n                                    {tag.toUpperCase()}\r\n                                </Tag>\r\n                            );\r\n                        })}\r\n                    </span>\r\n                ),\r\n            },\r\n            {\r\n                title: 'Given Answers',\r\n                key: 'givenAnswer',\r\n                dataIndex: 'givenAnswer',\r\n                render: tags => (\r\n                    <span>\r\n                        {tags.map(tag => {\r\n                            return (\r\n                                <Tag color=\"blue\" key={tag}>\r\n                                    {tag.toUpperCase()}\r\n                                </Tag>\r\n                            );\r\n                        })}\r\n                    </span>\r\n                ),\r\n            },\r\n            {\r\n                title: 'Weightage',\r\n                dataIndex: 'weightage',\r\n                key: 'weightage',\r\n            },\r\n            {\r\n                title: \"Explanation\",\r\n                dataIndex: 'explanation',\r\n                key: 'explanation',\r\n            },\r\n            {\r\n                title: \"Status\",\r\n                dataIndex: 'iscorrect',\r\n                key: 'iscorrect',\r\n                render: tags => (\r\n                    <span>\r\n                        {\r\n                            tags ?\r\n                            \r\n                                <Icon type=\"check-circle\" theme=\"twoTone\" twoToneColor=\"#52c41a\" />\r\n                                :\r\n                                <Icon type=\"close-circle\" theme=\"twoTone\" twoToneColor=\"red\" />\r\n                        }\r\n                    </span>\r\n                    \r\n                )\r\n            }\r\n        ];\r\n\r\n        // let td = this.props.user.userid;\r\n        \r\n        return (\r\n            <div className=\"answer-table-outer\">\r\n                <div className=\"answer-table-wrapper\">\r\n                    {this.props.userData.isLoggedIn ?\r\n                        <div>\r\n                            <Title className=\"answer-table-heading\" level={4}>Result</Title>\r\n                            <Descriptions bordered title={null} border size=\"small\">\r\n                                <Descriptions.Item label=\"Name\">{this.props.user.userid.name}</Descriptions.Item>\r\n                                <Descriptions.Item label=\"Email Id\">{this.props.user.userid.emailid}</Descriptions.Item>\r\n                                <Descriptions.Item label=\"Contact\">{this.props.user.userid.contact}</Descriptions.Item>\r\n                                <Descriptions.Item label=\"Score\">{this.state.TotalScore}</Descriptions.Item>\r\n                            </Descriptions>\r\n                                        \r\n                            <br />\r\n\r\n                            <Collapse onChange={this.callback}>\r\n                                <Panel header=\"Candidate Response\" key=\"1\">\r\n                                    <Table\r\n                                        size=\"small\"\r\n                                        rowKey=\"qid\"\r\n                                        loading={this.state.loading}\r\n                                        columns={columns}\r\n                                        dataSource={this.state.data}\r\n                                        pagination={false}\r\n                                    />\r\n                                </Panel>\r\n                            </Collapse>\r\n                        </div> : null\r\n                    }\r\n                \r\n                    {\r\n                        this.props.userData.isLoggedIn ? null\r\n                            : this.props.trainee.hasGivenFeedBack ?\r\n                            <Row justify=\"space-around\" align=\"middle\">\r\n                                <Col xs={12} sm={12} md={12} lg={24} xl={24}>\r\n                                    <Result\r\n                                        status=\"success\"\r\n                                        title=\"Successfully You Have completed the assessment!\"\r\n                                        subTitle=\"Please Close the Window Now\"\r\n                                    />\r\n                                </Col>\r\n                            </Row> : <Feedback />\r\n                    }\r\n                    <Modal\r\n                        destroyOnClose={true}\r\n                        width=\"70%\"\r\n                        style={{top:'30px'}}\r\n                        title=\"Question details\"\r\n                        visible={this.state.Mvisible}\r\n                        onOk={this.handleCancel}\r\n                        onCancel={this.handleCancel}\r\n                        footer={null}\r\n                    >\r\n                        <SingleQuestionDetails qid={this.state.ActiveQuestionId} />\r\n                    </Modal>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n};\r\n\r\n\r\nclass SingleQuestionDetails extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            fetching:false,\r\n            qdetails:null\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.setState({\r\n            fetching:true\r\n        })\r\n        Post({\r\n            url:apis.FETCH_SINGLE_QUESTION_BY_TRAINEE,\r\n            data:{\r\n                qid:this.props.qid\r\n            }\r\n        })\r\n        .then((response) => {\r\n            // console.log(response)\r\n            if(response.data.success){\r\n                this.setState({\r\n                    qdetails:response.data.data[0]\r\n                })\r\n            }\r\n            else{\r\n                Alert('error','Error !',response.data.message);\r\n            }\r\n            this.setState({\r\n                fetching:false\r\n            })\r\n        })\r\n        .catch((error) => {\r\n            this.setState({\r\n                fetching: false\r\n            });\r\n            // console.log(error)\r\n            Alert('error','Error !',\"Server Error\");\r\n        });\r\n    }\r\n    \r\n    render(){\r\n        const optn = ['A', 'B', 'C', 'D', 'E'];\r\n        let Optiondata = this.state.qdetails;\r\n        \r\n        if(Optiondata!==null){\r\n            return (\r\n                <div>\r\n                    <div className=\"mainQuestionDetailsContaine\">\r\n                        <div className=\"questionDetailsBody\">\r\n                            {Optiondata.body}\r\n                        </div>\r\n                        {Optiondata.quesimg?\r\n                            <div className=\"questionDetailsImageContainer\">\r\n                                <img alt=\"Unable to load\" className=\"questionDetailsImage\" src={Optiondata.quesimg} />  \r\n                            </div>\r\n                            : null\r\n                        }\r\n                        <div>\r\n                            {Optiondata.options.map((d,i)=>{\r\n                                return(\r\n                                    <div key={i}>\r\n                                        <Row type=\"flex\" justify=\"center\" className=\"QuestionDetailsOptions\">\r\n                                            <Col span={2}>\r\n                                                {\r\n                                                    d.isAnswer?<Button className=\"green\" shape=\"circle\">{optn[i]}</Button>:<Button type=\"primary\" shape=\"circle\">{optn[i]}</Button>\r\n                                                }\r\n                                                \r\n                                            </Col>\r\n                                            {d.optimg?\r\n                                                <Col span={6} style={{padding:'5px'}}>\r\n                                                    <img alt=\"Unable to load\" className=\"questionDetailsImage\" src={d.optimg} />\r\n                                                </Col>\r\n                                            :\r\n                                                null\r\n                                            }\r\n                                            {d.optimg?\r\n                                                <Col span={14}>\r\n                                                    <Markdown>{d.optbody}</Markdown>\r\n                                                </Col>\r\n                                            :\r\n                                                <Col span={20}>\r\n                                                    <Markdown>{d.optbody}</Markdown>\r\n                                                </Col>\r\n                                            }\r\n                                        </Row>\r\n                                    \r\n                                    </div>\r\n                                )\r\n                            })}\r\n                        </div>\r\n                    </div>\r\n    \r\n                </div>\r\n            )\r\n        }\r\n        else{\r\n            return(\r\n                <div className=\"skeletor-wrapper\">\r\n                    <Skeleton active />\r\n                    <Skeleton active />\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    userData: state.user,\r\n    trainee : state.trainee\r\n});\r\n\r\nexport default connect(mapStateToProps,{\r\n    FeedbackStatus\r\n})(Answer);","import React, { useState} from 'react';\r\nimport { Table, Tag, Card, Modal, Button } from 'antd';\r\nimport AnswerSheet from '../../trainee/answersheet/answer';\r\n\r\nexport default function Trainee (props){\r\n    return (\r\n        <div>\r\n            <Card>\r\n                <div className=\"download-section\">\r\n                    {props.stats.map(data => (\r\n                        <AnswerSheet user={data} key={data} />\r\n                    ))}\r\n                </div>\r\n            </Card>\r\n        </div>\r\n    )\r\n};\r\n","import React, { Component } from 'react'\r\nimport { Tabs, Icon, Descriptions,Skeleton, Tag, Input ,message, Modal, Button} from 'antd';\r\nimport { connect } from 'react-redux';\r\nimport moment from 'moment';\r\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\r\n\r\n\r\nimport Questions from '../conducttest/questions'\r\nimport {updateQuestiosnActiveTest } from '../../../actions/trainerAction';\r\nimport { SecurePost } from '../../../services/axiosCall';\r\nimport apis from '../../../services/Apis';\r\nimport  Alert  from '../../common/alert';\r\n\r\nimport './testdetails.css';\r\nimport Stats from './stats';\r\nimport Trainee from './trainee';\r\nimport FeedBacks from './feedbacks';\r\nimport Analysis from './Analysis';\r\nconst { TabPane } = Tabs;\r\n\r\n\r\nclass TestDetails extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            id:this.props.trainer.DataActiveTestDetails.testDetailsId,\r\n            testdetails:null,\r\n            stats:null,\r\n            file:null,\r\n            loading:true,\r\n            maxMarks:0,\r\n            mainlink:'',\r\n            feedbacks: [],\r\n            visible: false\r\n        }\r\n        \r\n    }\r\n\r\n    showModal = () => {\r\n      this.setState({\r\n        visible: true,\r\n      });\r\n    };\r\n  \r\n    handleOk = e => {\r\n      // console.log(e);\r\n      this.setState({\r\n        visible: false,\r\n      });\r\n    };\r\n  \r\n    handleCancel = e => {\r\n      // console.log(e);\r\n      this.setState({\r\n        visible: false,\r\n      });\r\n    };\r\n\r\n    tabChange = (key) => {\r\n        // console.log(key)\r\n    };\r\n\r\n    componentDidMount(){\r\n        var link = window.location.href.split('/').splice(0,3);\r\n        var mainlink=\"\";\r\n        link.forEach((d,i)=>{\r\n            mainlink=mainlink+d+\"/\"\r\n        });\r\n        this.setState({mainlink});\r\n        var p1 = SecurePost({\r\n            url: `${apis.GET_SINGLE_TEST}`,\r\n            data: {\r\n                id: this.state.id\r\n            }\r\n        });\r\n\r\n        var p2 = SecurePost({\r\n            url: apis.GET_STATS,\r\n            data: {\r\n                testid: this.state.id\r\n            }\r\n        });\r\n\r\n        var p3 = SecurePost({\r\n            url: apis.GET_EXCEL,\r\n            data: {\r\n                id: this.state.id\r\n            }\r\n        });\r\n\r\n        var p4 = SecurePost({\r\n            url: apis.MAX_MARKS_FETCH,\r\n            data: {\r\n                testid: this.state.id\r\n            }\r\n        });\r\n\r\n        var p5 = SecurePost({\r\n            url: apis.GET_FEEDBACKS,\r\n            data: {\r\n                testid: this.state.id\r\n            }\r\n        });\r\n        \r\n        Promise.all([p1, p2, p3, p4, p5]).then((response) => {\r\n            // console.log(response);\r\n\r\n            if (response[0].data.success && response[1].data.success && response[2].data.success && response[3].data.success && response[4].data.success) {\r\n                this.setState({\r\n                    testdetails: response[0].data.data,\r\n                    stats: response[1].data.data,\r\n                    file: response[2].data.file,\r\n                    maxMarks: response[3].data.data,\r\n                    loading: false,\r\n                    feedbacks: response[4].data.data\r\n                });\r\n            }\r\n            else {\r\n                Alert('error', 'Error !', response[0].data.message + response[1].data.message + response[2].data.message)\r\n            }\r\n        }).catch((error) => {\r\n            // console.log(error);\r\n            Alert('error', 'Error !', 'Server Error.')\r\n        });\r\n    }\r\n\r\n    render() {\r\n        if(this.state.loading){\r\n            return(\r\n                <div className=\"skeletor-wrapper\">\r\n                    <Skeleton active />\r\n                    <Skeleton active />\r\n                </div>\r\n            )\r\n        }\r\n        else{\r\n            let { testdetails,id }=this.state;      \r\n            return (\r\n                <div>\r\n                    <Tabs defaultActiveKey=\"1\" onChange={ (e)=>this.tabChange(e)}>\r\n                        <TabPane tab={ <span><Icon type=\"home\" />Details</span> } key=\"1\">\r\n                            <Descriptions bordered title=\"\" border size=\"small\" column={{ xxl: 1, xl: 1, lg: 1, md: 1, sm: 1, xs: 1 }}>\r\n                                <Descriptions.Item label=\"Test Id\">{this.props.trainer.DataActiveTestDetails.testDetailsId}</Descriptions.Item>\r\n                                <Descriptions.Item label=\"Test Link\"><Input disabled={true} value={`${this.state.mainlink}user/conducttest?testid=${id}`} addonAfter={<CopyToClipboard text={`${this.state.mainlink}user/conducttest?testid=${id}`} onCopy={()=>message.success('Link Copied to clipboard')}><Icon type=\"copy\"/></CopyToClipboard>}/></Descriptions.Item>\r\n                                <Descriptions.Item label=\"Test Name\">{testdetails.title}</Descriptions.Item>\r\n                                <Descriptions.Item label=\"Test Type\">{testdetails.type}</Descriptions.Item>\r\n                                <Descriptions.Item label=\"Subject\">\r\n                                    <span>\r\n                                    {testdetails.subjects.map((tag,i) => {\r\n                                        let color ='geekblue';\r\n                                        return (\r\n                                        <Tag color={color} key={tag._id}>\r\n                                            {tag.topic.toUpperCase()}\r\n                                        </Tag>\r\n                                        );\r\n                                    })}\r\n                                    </span></Descriptions.Item>\r\n                                <Descriptions.Item label=\"Created on\">{moment(testdetails.createdAt).format(\"DD/ MM/YYYY\")}</Descriptions.Item>\r\n                            </Descriptions>\r\n                        </TabPane>\r\n\r\n                        {testdetails.testconducted?\r\n                            <TabPane tab={ <span><Icon type=\"question-circle\" />Questions</span> } key=\"2\">\r\n                                <Questions id={this.props.trainer.DataActiveTestDetails.testDetailsId} questionsOfTest={this.props.trainer.DataActiveTestDetails.testquestions} updateQuestiosnTest={this.props.updateQuestiosnActiveTest}/>\r\n                            </TabPane>\r\n                        : null}\r\n                        \r\n                        {testdetails.testconducted?\r\n                            <TabPane tab={ <span><Icon type=\"user\" />Candidates</span> } key=\"3\">\r\n                                <Trainee maxmMarks={this.state.maxMarks} id={this.state.id} stats={this.state.stats}/>\r\n                            </TabPane>\r\n                        : null}\r\n                        \r\n                        \r\n                        {testdetails.testconducted?\r\n                            <TabPane tab={ <span><Icon type=\"pie-chart\" />Statistics</span> } key=\"4\">\r\n                                <Stats id={this.state.id} stats={this.state.stats} file={this.state.file} maxmMarks={this.state.maxMarks}/>\r\n                            </TabPane>\r\n                        : null}\r\n                        \r\n                        {testdetails.testconducted?\r\n                            <TabPane tab={ <span><Icon type=\"message\" />Feedbacks</span> } key=\"5\">\r\n                               <FeedBacks feedbacks={this.state.feedbacks}/>\r\n                            </TabPane>\r\n                        : null}\r\n                        \r\n                        {testdetails.testconducted?\r\n                            <TabPane tab={ <span><Icon type=\"bar-chart\" />Analysis</span> } key=\"6\">\r\n                               <Analysis maxmMarks={this.state.maxMarks} id={this.state.id} stats={this.state.stats} />\r\n                            </TabPane>\r\n                        :null}\r\n                    </Tabs>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    trainer : state.trainer\r\n});\r\n\r\nexport default connect(mapStateToProps,{\r\n    updateQuestiosnActiveTest\r\n})(TestDetails);\r\n","import React, { Component } from 'react';\r\nimport { Table, Input, Button, Icon, Typography, Modal,Tag   } from 'antd';\r\nimport Highlighter from 'react-highlight-words';\r\nimport { connect } from 'react-redux';\r\nimport { \r\n    ChangeTestSearchText,\r\n    ChangeTestTableData,\r\n    ChangeTestDetailsModalState\r\n} from '../../../actions/trainerAction';\r\nimport './alltest.css';\r\nimport moment from 'moment';\r\n\r\nimport TestDetails from '../testdetails/testdetails';\r\n\r\n\r\n\r\n\r\nclass AllTests extends Component {\r\n\r\n    openModal = (id)=>{\r\n        this.props.ChangeTestDetailsModalState(true,id);\r\n    }\r\n    \r\n    closeModal = ()=>{\r\n        this.props.ChangeTestDetailsModalState(false,null);\r\n    }\r\n    componentDidMount(){\r\n      this.props.ChangeTestTableData();\r\n    }\r\n\r\n    getColumnSearchProps = dataIndex => ({\r\n        filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => (\r\n          <div style={{ padding: 8 }}>\r\n            <Input\r\n              ref={node => {\r\n                this.searchInput = node;\r\n              }}\r\n              placeholder={`Search ${dataIndex}`}\r\n              value={selectedKeys[0]}\r\n              onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\r\n              onPressEnter={() => this.handleSearch(selectedKeys, confirm)}\r\n              style={{ width: 188, marginBottom: 8, display: 'block' }}\r\n            />\r\n            <Button\r\n              type=\"primary\"\r\n              onClick={() => this.handleSearch(selectedKeys, confirm)}\r\n              icon=\"search\"\r\n              size=\"small\"\r\n              style={{ width: 90, marginRight: 8 }}\r\n            >\r\n              Search\r\n            </Button>\r\n            <Button onClick={() => this.handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>\r\n              Reset\r\n            </Button>\r\n          </div>\r\n        ),\r\n        filterIcon: filtered => (\r\n          <Icon type=\"search\" style={{ color: filtered ? '#1890ff' : undefined }} />\r\n        ),\r\n        onFilter: (value, record) =>\r\n          record[dataIndex]\r\n            .toString()\r\n            .toLowerCase()\r\n            .includes(value.toLowerCase()),\r\n        onFilterDropdownVisibleChange: visible => {\r\n          if (visible) {\r\n            setTimeout(() => this.searchInput.select());\r\n          }\r\n        },\r\n        render: text => (\r\n          <Highlighter\r\n            highlightStyle={{ backgroundColor: '#ffc069', padding: 0 }}\r\n            searchWords={[this.props.trainer.TestsearchText]}\r\n            autoEscape\r\n            textToHighlight={text.toString()}\r\n          />\r\n        ),\r\n      });\r\n    \r\n      handleSearch = (selectedKeys, confirm) => {\r\n        confirm();\r\n        this.props.ChangeTestSearchText(selectedKeys[0])\r\n      };\r\n    \r\n      handleReset = clearFilters => {\r\n        clearFilters();\r\n        this.props.ChangeTestSearchText('')\r\n      };\r\n\r\n    render() {\r\n      const { Title } = Typography;\r\n      const columns = [\r\n        {\r\n          title: 'Name',\r\n          dataIndex: 'title',\r\n          key: 'title',\r\n          ...this.getColumnSearchProps('title'),\r\n        },\r\n        {\r\n          title: 'Type',\r\n          dataIndex: 'type',\r\n          key: 'type',\r\n          ...this.getColumnSearchProps('type'),\r\n        },\r\n        {\r\n          title: 'Subjects',\r\n          dataIndex: 'subjects',\r\n          key: 'subjects._id',\r\n          render: tags => (\r\n            <span>\r\n              {tags.map((tag,i) => {\r\n                let color ='geekblue';\r\n                return (\r\n                  <Tag color={color} key={tag._id}>\r\n                    {tag.topic.toUpperCase()}\r\n                  </Tag>\r\n                );\r\n              })}\r\n            </span>\r\n          )\r\n        },\r\n        {\r\n          title: 'Created on',\r\n          dataIndex: 'createdAt',\r\n          key: 'createdAt',\r\n          ...this.getColumnSearchProps('createdAt'),\r\n          render: tags => (\r\n            <span>\r\n              {moment(tags).format(\"DD/ MM/YYYY\")}\r\n            </span>\r\n          )\r\n        },\r\n        {\r\n          title: 'Action',\r\n          key: '_id',\r\n          dataIndex: '_id',\r\n          render: (key) => (\r\n            <span>\r\n              <Button type=\"primary\" shape=\"circle\" icon=\"info-circle\" onClick={()=>this.openModal(key)}/>\r\n            </span>\r\n          ),\r\n        },\r\n      ];\r\n        return (\r\n            <div className=\"admin-table-container\">\r\n              <div className=\"register-trainer-form-header\">\r\n                <Title level={4} style={{color:'#fff',textAlign:'center'}}>List of Tests</Title>\r\n              </div>\r\n              <Table \r\n                bordered={true} \r\n                columns={columns} \r\n                dataSource={this.props.trainer.TestTableData} \r\n                size=\"medium\" \r\n                pagination={{ pageSize: 5 }}\r\n                loading={this.props.trainer.TestTableLoading}\r\n                rowKey=\"_id\" \r\n              />;\r\n              <Modal\r\n                visible={this.props.trainer.TestDetailsmodalOpened}\r\n                title=\"Test details\"\r\n                onOk={this.handleOk}\r\n                onCancel={this.closeModal}\r\n                afterClose={this.closeModal}\r\n                style={{top :'20px',padding:'0px',backgroundColor:'rgb(155,175,190)'}}\r\n                width=\"90%\"\r\n                destroyOnClose={true}\r\n                footer={[\r\n                  \r\n                ]}\r\n              >\r\n                <TestDetails />\r\n              </Modal>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    trainer : state.trainer\r\n});\r\n\r\nexport default connect(mapStateToProps,{\r\n    ChangeTestSearchText,\r\n    ChangeTestTableData,\r\n    ChangeTestDetailsModalState\r\n})(AllTests);","import { SecurePost } from '../services/axiosCall';\r\nimport apis from '../services/Apis';\r\nimport Alert from '../components/common/alert';\r\nexport const changeConducttestId = (d)=> dispatch =>{\r\n    dispatch({\r\n       type : 'SET_CONDUCT_TEST_ID',\r\n       payload : d\r\n    })\r\n}\r\n\r\nexport const changeTestRegisterLink = (d)=> dispatch =>{\r\n    dispatch({\r\n       type : 'SET_TEST_REGISTER_LINK',\r\n       payload : d\r\n    })\r\n}\r\n\r\nexport const changeTestRegisterStatus = (d)=> dispatch =>{\r\n    dispatch({\r\n       type : 'CHANGE_TEST_ISREGISTRATION_AVAILABLE',\r\n       payload : d\r\n    })\r\n}\r\n\r\nexport const changeTestStatus = (d) => dispatch => {\r\n    dispatch({\r\n        type: 'CHANGE_BEGIN_TEST_STATUS',\r\n        payload: d\r\n    });\r\n};\r\n\r\n\r\nexport const updateCurrentTestBasicDetails = (d) => dispatch => {\r\n    SecurePost({\r\n        url: `${apis.GET_SINGLE_TEST_DETAILS_BASIC}`,\r\n        data: {\r\n            id: d\r\n        }\r\n    }).then((response) => {\r\n        if (response.data.success) {\r\n            // console.log(response.data.data);\r\n            dispatch({\r\n                type: 'UPDATE_TEST_BASIC_DETAILS',\r\n                payload: response.data.data\r\n            });\r\n        }\r\n        else {\r\n            return Alert('error', 'Error!', response.data.message);\r\n        }\r\n    })\r\n    .catch((error) => {\r\n        // console.log(error);\r\n        return Alert('error', 'Error!', 'Unable to refresh test status');\r\n    });\r\n};\r\n\r\n\r\n\r\nexport const updateCandidatesTest = (d) => dispatch => {\r\n    dispatch({\r\n        type: 'CHANGE_CANDIDATES_OF_TEST',\r\n        payload: d\r\n    });\r\n};\r\n\r\n\r\nexport const updateQuestiosnTest = (d) => {\r\n    return {\r\n        type: 'CHANGE_QUESTIONS_OF_TEST',\r\n        payload: d\r\n    };\r\n};","import apis from '../services/Apis';\r\nimport Alert from '../components/common/alert';\r\nimport { SecurePost } from '../services/axiosCall';\r\nexport const changeStep = (d)=> dispatch =>{\r\n    dispatch({\r\n       type : 'CHANGE_ACTIVE_STEP',\r\n       payload : d\r\n    })\r\n}\r\n\r\nexport const changeBasicNewTestDetails = (d) => dispatch => {\r\n    dispatch({\r\n        type: 'CHANGE_BASIC_NEW_TEST_DETAILS',\r\n        payload: d\r\n    });\r\n};\r\n\r\nexport const pushQuestionToQueue = (d) => dispatch => {\r\n    dispatch({\r\n        type: 'ADD_QUESTION_TO_QUESTION_QUEUSE',\r\n        payload: d\r\n    });\r\n};\r\n\r\nexport const removeQuestionFromMainQueue = (d)=> dispatch =>{\r\n    dispatch({\r\n        type: 'REMOVE_QUESTION_FROM_MAIN_QUEUE',\r\n        payload:d\r\n    })\r\n}\r\n\r\nexport const changeMode = (d)=> dispatch =>{\r\n    dispatch({\r\n        type : 'CHANGE_MODE_QUESTION_SELECT',\r\n        payload:d\r\n    })\r\n}\r\n\r\n\r\n\r\nexport const fetchSubjectWiseQuestion = (d) => dispatch =>{\r\n    SecurePost({\r\n        url : `${apis.GET_ALL_QUESTIONS}`,\r\n        data:{\r\n            subject : d\r\n        }\r\n    })\r\n    .then((response) => {\r\n        // console.log(response);\r\n        if(response.data.success){\r\n            dispatch({\r\n                type: 'FETCH_QUESTIONS_BASED_ON_SUBJECT',\r\n                payload: response.data.data\r\n            });\r\n        }\r\n        else{\r\n            Alert('error','Error!',response.data.message);\r\n            dispatch({\r\n                type: 'FETCH_QUESTIONS_BASED_ON_SUBJECT',\r\n                payload: []\r\n            });\r\n        }\r\n    })\r\n    .catch((error) => {\r\n        Alert('error','Error!','Server Error');\r\n        dispatch({\r\n            type: 'FETCH_QUESTIONS_BASED_ON_SUBJECT',\r\n            payload: []\r\n        });\r\n    });\r\n}","import React from 'react';\r\nimport {CopyToClipboard} from 'react-copy-to-clipboard';\r\nimport { Input,Button,Descriptions, Icon,message   } from 'antd';\r\nimport { connect } from 'react-redux';\r\nimport moment from 'moment';\r\n\r\nimport {\r\n    changeTestRegisterLink,\r\n    updateCurrentTestBasicDetails,\r\n    changeTestRegisterStatus,\r\n    changeTestStatus,\r\n    updateCandidatesTest\r\n} from '../../../actions/conductTest';\r\nimport { SecurePost } from '../../../services/axiosCall';\r\nimport apis from '../../../services/Apis';\r\nimport Alert from '../../common/alert';\r\n\r\nclass TestDetails extends React.Component {\r\n\r\n    componentDidMount(){\r\n        var link = window.location.href.split('/').splice(0,3);\r\n        var mainlink=\"\";\r\n        link.forEach((d, i) => {\r\n            mainlink = mainlink + d + \"/\"\r\n        });\r\n        \r\n        mainlink=mainlink+`candidate/register?testid=${this.props.conduct.id}`\r\n        this.props.changeTestRegisterLink(mainlink);\r\n        this.props.updateCurrentTestBasicDetails(this.props.conduct.id);\r\n        this.props.updateCandidatesTest();\r\n    };\r\n\r\n    changeRegistrationStatus = (d) => {\r\n        SecurePost({\r\n            url: `${apis.STOP_REGISTRATION}`,\r\n            data: {\r\n                id: this.props.conduct.id,\r\n                status: d\r\n            }\r\n        }).then((response) => {\r\n            if (response.data.success) {\r\n                this.props.changeTestRegisterStatus(d)\r\n                Alert('success', 'Success!', 'Registration status changed');\r\n            }\r\n            else {\r\n                Alert('error', 'Error!', response.data.message)\r\n            }\r\n        }).catch((error) => {\r\n            // console.log(error);\r\n            Alert('error', 'Error!', 'Server Error')\r\n        });\r\n    };\r\n\r\n    changeTestStatus = () => {\r\n        SecurePost({\r\n            url: `${apis.START_TEST_BY_TRAINER}`,\r\n            data: {\r\n                id: this.props.conduct.id\r\n            }\r\n        }).then((response) => {\r\n            // console.log(response);\r\n            if (response.data.success) {\r\n                this.props.changeTestStatus(response.data.data);\r\n                Alert('success', 'Success!', 'Test has begin');\r\n            }\r\n            else {\r\n                Alert('error', 'Error!', response.data.message)\r\n            }\r\n        }).catch((error) => {\r\n            // console.log(error);\r\n            Alert('error', 'Error!', 'Server Error')\r\n        });\r\n    };\r\n\r\n    endTestByTrainee = () => {\r\n        SecurePost({\r\n            url: `${apis.END_TEST_BY_TRAINER}`,\r\n            data: {\r\n                id: this.props.conduct.id\r\n            }\r\n        })\r\n        .then((response) => {\r\n            // console.log(response);\r\n            if (response.data.success) {\r\n                this.props.changeTestStatus(response.data.data);\r\n                Alert('success', 'Success!', 'Test has ended');\r\n            }\r\n            else {\r\n                Alert('error', 'Error!', response.data.message)\r\n            }\r\n        })\r\n        .catch((error) => {\r\n            // console.log(error);\r\n            Alert('error', 'Error!', 'Server Error')\r\n        });\r\n    };\r\n\r\n    getCandidates = () => {\r\n        SecurePost({\r\n            url: `${apis.GET_TEST_CANDIDATES}`,\r\n            data: {\r\n                id: this.props.conduct.id\r\n            }\r\n        }).then((response) => {\r\n            // console.log(response);\r\n        }).catch((error) => {\r\n            console.log(error)\r\n        });\r\n    };\r\n    \r\n    render(){\r\n        // console.log(this.props.conduct.basictestdetails.testbegins);\r\n        return (\r\n            <div>\r\n                <Descriptions size=\"small\" column={4} title=\"Basic Test Info\" layout=\"vertical\" bordered={true}>\r\n                    <Descriptions.Item span={1} label=\"Assessment Id\">{this.props.conduct.id}</Descriptions.Item>\r\n                    <Descriptions.Item span={3} label=\"Registration Link\"><Input disabled={true} value={this.props.conduct.testRegisterLink} addonAfter={<CopyToClipboard text={this.props.conduct.testRegisterLink} onCopy={() => message.success('Link Copied to clipboard')}><Icon type=\"copy\" /></CopyToClipboard>} /></Descriptions.Item>\r\n                    <Descriptions.Item span={1} label={this.props.conduct.basictestdetails.isRegistrationavailable ? \"Registration Open\" : \"Registration Closed\"}>\r\n                        <Button disabled={this.props.conduct.basictestdetails.testbegins} onClick={() => { this.changeRegistrationStatus(!this.props.conduct.basictestdetails.isRegistrationavailable) }} type={this.props.conduct.basictestdetails.isRegistrationavailable ? \"danger\" : \"primary\"}>{this.props.conduct.basictestdetails.isRegistrationavailable ? \"Stop Registration\" : \"Open Registration\"}</Button>\r\n                    </Descriptions.Item>\r\n                    <Descriptions.Item span={3} label={this.props.conduct.basictestdetails.testbegins ? \"Test on Progress\" : \"Test has not started yet\"}><Button disabled={this.props.conduct.basictestdetails.testbegins} onClick={() => { this.changeTestStatus() }} type={\"primary\"}>Start Test</Button><Button disabled={!this.props.conduct.basictestdetails.testbegins} onClick={() => { this.endTestByTrainee() }} type={\"danger\"}>End Test</Button></Descriptions.Item>\r\n                    <Descriptions.Item span={1} label=\"Assessment Start Time\">{moment(this.props.conduct.basictestdetails.start).format('MMMM Do YYYY, h:mm:ss a')}</Descriptions.Item>\r\n                    <Descriptions.Item span={1} label=\"Assessment End Time\">{moment(this.props.conduct.basictestdetails.end).format('MMMM Do YYYY, h:mm:ss a')}</Descriptions.Item>\r\n                </Descriptions>\r\n            </div>\r\n        );\r\n    };\r\n};\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n    trainer: state.trainer,\r\n    conduct: state.conduct\r\n});\r\n\r\nexport default connect(mapStateToProps,{\r\n    changeTestRegisterLink,\r\n    updateCurrentTestBasicDetails,\r\n    changeTestRegisterStatus,\r\n    changeTestStatus,\r\n    updateCandidatesTest\r\n})(TestDetails);","import React, { Component } from 'react'\r\nimport { changeConducttestId, updateCandidatesTest } from '../../../actions/conductTest';\r\nimport { connect } from 'react-redux';\r\nimport apis from '../../../services/Apis';\r\nimport { SecurePost } from '../../../services/axiosCall';\r\nimport Alert from '../../common/alert';\r\nimport { Table, Input, Button, Icon, message, Typography, Modal, Progress } from 'antd';\r\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\r\nimport Highlighter from 'react-highlight-words';\r\nimport CSVReader from \"react-csv-reader\";\r\nimport './conducttes.css';\r\n\r\nconst { Title } = Typography;\r\n\r\n// csv papaparse\r\nconst papaparseOptions = {\r\n  header: true,\r\n  dynamicTyping: true,\r\n  skipEmptyLines: true,\r\n  transformHeader: header => header.toLowerCase().replace(/\\W/g, \"_\")\r\n};\r\n\r\nclass Candidates extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            loading:false,\r\n            searchText: '',\r\n            mainlink: '',\r\n            visible: false,\r\n            progress: 0,\r\n        }\r\n    }\r\n\r\n    getColumnSearchProps = dataIndex => ({\r\n        filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => (\r\n          <div style={{ padding: 8 }}>\r\n            <Input\r\n              ref={node => {\r\n                this.searchInput = node;\r\n              }}\r\n              placeholder={`Search ${dataIndex}`}\r\n              value={selectedKeys[0]}\r\n              onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\r\n              onPressEnter={() => this.handleSearch(selectedKeys, confirm)}\r\n              style={{ width: 188, marginBottom: 8, display: 'block' }}\r\n            />\r\n            <Button\r\n              type=\"primary\"\r\n              onClick={() => this.handleSearch(selectedKeys, confirm)}\r\n              icon=\"search\"\r\n              size=\"small\"\r\n              style={{ width: 90, marginRight: 8 }}\r\n            >\r\n              Search\r\n            </Button>\r\n            <Button onClick={() => this.handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>\r\n              Reset\r\n            </Button>\r\n          </div>\r\n        ),\r\n        filterIcon: filtered => (\r\n          <Icon type=\"search\" style={{ color: filtered ? '#1890ff' : undefined }} />\r\n        ),\r\n        onFilter: (value, record) =>\r\n          record[dataIndex]\r\n            .toString()\r\n            .toLowerCase()\r\n            .includes(value.toLowerCase()),\r\n        onFilterDropdownVisibleChange: visible => {\r\n          if (visible) {\r\n            setTimeout(() => this.searchInput.select());\r\n          }\r\n        },\r\n        render: text => (\r\n          <Highlighter\r\n            highlightStyle={{ backgroundColor: '#ffc069', padding: 0 }}\r\n            searchWords={[this.state.searchText]}\r\n            autoEscape\r\n            textToHighlight={text.toString()}\r\n          />\r\n        ),\r\n    });\r\n\r\n\r\n    handleSearch = (selectedKeys, confirm) => {\r\n        confirm();\r\n        this.setState({ searchText: selectedKeys[0] });\r\n    };\r\n    \r\n    handleReset = clearFilters => {\r\n        clearFilters();\r\n        this.setState({ searchText: '' });\r\n    };\r\n\r\n    componentDidMount(){\r\n      var link = window.location.href.split('/').splice(0,3);\r\n      var mainlink=\"\";\r\n      link.forEach((d,i)=>{\r\n          mainlink=mainlink+d+\"/\"\r\n      });\r\n      this.setState({mainlink});\r\n      this.refreshUserList(); \r\n  }\r\n  \r\n  // Modal\r\n  showModal = () => {\r\n      this.setState({\r\n        visible: true,\r\n      });\r\n  };\r\n\r\n  handleOk = e => {\r\n      // console.log(e);\r\n      this.setState({\r\n        visible: false,\r\n      });\r\n  };\r\n\r\n  handleCancel = e => {\r\n      // console.log(e);\r\n      this.setState({\r\n        visible: false,\r\n      });\r\n  };\r\n\r\n  // csv parser\r\n  handleForce = (data, fileInfo) => {\r\n\r\n    // console.log(data);\r\n    \r\n  SecurePost({\r\n      url: `${apis.IMPORT_CANDIDATES}`,\r\n      data: {\r\n        testid: this.props.conduct.id,\r\n        data: data,\r\n      }\r\n    })\r\n    .then((response) => {\r\n      if (response.data.success) {\r\n          this.setState({progress: 100});\r\n          this.props.updateCandidatesTest(response.data.data);\r\n      }\r\n      else {\r\n          Alert('error', 'Error!', response.data.message)\r\n      }\r\n        this.setState({\r\n          loading: false\r\n        });\r\n    })\r\n    .catch((error) => {\r\n      Alert('error', 'Error!', 'Server Error')\r\n        this.setState({loading: false});\r\n  });\r\n};\r\n\r\n\r\n  refreshUserList = () => {\r\n    this.setState({\r\n      loading: true\r\n    });\r\n        \r\n    SecurePost({\r\n      url: `${apis.GET_TEST_CANDIDATES}`,\r\n      data: {\r\n        id: this.props.conduct.id\r\n      }\r\n    })\r\n      .then((response) => {\r\n        //console.log(response);\r\n        if (response.data.success) {\r\n          this.props.updateCandidatesTest(response.data.data);\r\n        }\r\n        else {\r\n          Alert('error', 'Error!', response.data.message)\r\n        }\r\n        this.setState({\r\n          loading: false\r\n        });\r\n      }).catch((error) => {\r\n        //console.log(error);\r\n        Alert('error', 'Error!', 'Server Error')\r\n        this.setState({\r\n          loading: false\r\n        });\r\n      });\r\n  };\r\n\r\n    render() {\r\n        const columns = [\r\n            {\r\n              title: 'Name',\r\n              dataIndex: 'name',\r\n              key: 'name',\r\n              ...this.getColumnSearchProps('name'),\r\n            },\r\n            {\r\n              title: 'Email Id',\r\n              dataIndex: 'emailid',\r\n              key: 'emailid',\r\n              ...this.getColumnSearchProps('emailid'),\r\n            },\r\n            {\r\n                title: 'Contact No',\r\n                dataIndex: 'contact',\r\n                key: 'contact',\r\n                ...this.getColumnSearchProps('contact'),\r\n            },\r\n            {\r\n                title: 'Links',\r\n                key: '_id',\r\n                dataIndex: '_id',\r\n                render: id => (\r\n                  <Input disabled={true} value={`${this.state.mainlink}candidate/taketest?testid=${this.props.conduct.id}&traineeid=${id}`} addonAfter={<CopyToClipboard text={`${this.state.mainlink}candidate/taketest?testid=${this.props.conduct.id}&traineeid=${id}`} onCopy={()=>message.success('Link Copied to clipboard')}><Icon type=\"copy\"/></CopyToClipboard>}/>\r\n                ),\r\n            }\r\n        ];\r\n\r\n      return (\r\n        <div className=\"candidate-list-header-container\">\r\n          <ul style={{listStyle: 'none'}}>\r\n            <li style={{ float: 'left', marginRight: '5px'}}>\r\n            <Button\r\n              className=\"reload-button\"\r\n              type=\"primary\"\r\n              icon=\"reload\"\r\n              loading={this.state.loading}\r\n              onClick={this.refreshUserList}\r\n            >\r\n              Reload!\r\n            </Button>\r\n            </li>\r\n\r\n            <li>\r\n              <Button\r\n                className=\"reload-button\"\r\n                type=\"primary\"\r\n                icon=\"cloud-download\"\r\n                onClick={this.showModal}\r\n              >\r\n                Import Candidates\r\n              </Button>\r\n            </li>\r\n          </ul>\r\n\r\n          <div className=\"register-trainer-form-header\">\r\n            <Title level={4} style={{ color: '#fff', textAlign: 'center' }}>List of Registered Candidates</Title>\r\n          </div>\r\n          <Table\r\n            columns={columns}\r\n            bordered={true}\r\n            dataSource={this.props.conduct.registeredCandidates}\r\n            rowKey=\"_id\"\r\n            loading={this.state.loading}\r\n          />\r\n\r\n        <Modal\r\n          title=\"Import Candidates\"\r\n          visible={this.state.visible}\r\n          onOk={this.handleOk}\r\n          onCancel={this.handleCancel}\r\n          footer={[ ]}\r\n        >\r\n          <p><b>Note :</b> Upload csv file to import candidates data-</p>\r\n          <p>CSV file header should contain - name, emailid, contact</p>\r\n          <CSVReader\r\n            cssClass=\"react-csv-input\"\r\n            label=\"\"\r\n            onFileLoaded={this.handleForce}\r\n            parserOptions={papaparseOptions}\r\n          />\r\n          <Progress percent={this.state.progress} />\r\n        </Modal>\r\n        </div>\r\n      );\r\n  };\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    conduct : state.conduct\r\n});\r\n\r\nexport default connect(mapStateToProps,{\r\n    changeConducttestId,\r\n    updateCandidatesTest\r\n})(Candidates);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Input,Button, Typography,Tabs, Icon  } from 'antd';\r\nimport './conducttes.css';\r\nimport { changeConducttestId, updateCandidatesTest, updateQuestiosnTest } from '../../../actions/conductTest';\r\nimport { changeStep } from '../../../actions/testAction';\r\nimport TestDetails from './details';\r\nimport Candidates from './candidates';\r\nimport Questions from './questions';\r\nconst { Title } = Typography;\r\nconst { TabPane } = Tabs;\r\n\r\n\r\nclass ConductTestS extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.props.changeConducttestId(this.props.testid);\r\n        this.state={\r\n            localTestId:null,\r\n            needRedirect:false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.changeStep(0);\r\n    };\r\n\r\n    ChangeLocalTestId = (d) => {\r\n        this.setState({\r\n            localTestId: d.target.value\r\n        })\r\n    };\r\n\r\n    ChangetestId = (d) => {\r\n        this.setState({\r\n            needRedirect: true\r\n        })\r\n    };\r\n\r\n\r\n\r\n    render() {\r\n        if(this.state.needRedirect){\r\n            return window.location.href=`/user/conducttest?testid=${this.state.localTestId}`\r\n        }\r\n        else{\r\n            return (\r\n                <div className=\"conduct-test-main-wrapper\">\r\n                    {!this.props.conduct.id ? \r\n                    <div>\r\n                        <Title style={{width:'100%',textAlign:'center'}} level={4}>Enter Test Id</Title>\r\n                        <div className=\"test-conduct-testid-form\">\r\n                            <Input placeholder=\"Enter test id\" onChange={this.ChangeLocalTestId} value={this.state.localTestId}/>\r\n                            <Button onClick={this.ChangetestId}  type=\"primary\" style={{marginTop:'30px'}}>Proceed</Button>\r\n                        </div>\r\n                    </div>:\r\n                    <div>\r\n                        <CC key={this.props.conduct.basictestdetails.testconducted} />\r\n                    </div>}\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n};\r\n\r\n// ...\r\nclass C extends Component {\r\n    render() {\r\n        // console.log(this.props.conduct.basictestdetails.testconducted);\r\n        if(this.props.conduct.basictestdetails.testconducted){\r\n            return(\r\n                <div className=\"reasendmail-container-register\">\r\n                    <Title style={{color:'#fff'}} level={4}>The Test has ended! Go to all tests to check the results</Title>    \r\n                </div>\r\n            )\r\n        }\r\n        else{\r\n            return (\r\n                <div>\r\n                    <TestDetails/>\r\n                    <Tabs defaultActiveKey=\"1\" style={{marginTop:'20px'}}>\r\n                        <TabPane tab={<span><Icon type=\"user\" />Registered Trainee</span>} key=\"1\">\r\n                            <Candidates />\r\n                        </TabPane>\r\n                        <TabPane tab={<span><Icon type=\"question-circle\" />Questions</span>} key=\"2\">\r\n                            <Questions id={this.props.conduct.id} questionsOfTest={this.props.conduct.questionsOfTest} updateQuestiosnTest={this.props.updateQuestiosnTest}  />\r\n                        </TabPane>\r\n                    </Tabs>\r\n                </div>\r\n            )\r\n        }\r\n        \r\n    }\r\n};\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n    trainer : state.trainer,\r\n    conduct : state.conduct\r\n});\r\n\r\n\r\nlet CC=connect(mapStateToProps,{\r\n    changeConducttestId,\r\n    updateCandidatesTest,\r\n    updateQuestiosnTest\r\n})(C);\r\n\r\n\r\nexport default connect(mapStateToProps, {\r\n    changeStep,\r\n    changeConducttestId,\r\n    updateCandidatesTest,\r\n    updateQuestiosnTest\r\n})(ConductTestS);","export const steps = [\r\n    {\r\n      title: 'Basic details'\r\n    },\r\n    {\r\n      title: 'Select Questions'\r\n    },\r\n    {\r\n      title: 'Finalize'\r\n    }\r\n];","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { Form, InputNumber, Input, Button, Select, DatePicker } from 'antd';\r\nimport moment from 'moment';\r\n\r\nimport { changeStep,changeBasicNewTestDetails } from '../../../actions/testAction';\r\nimport { SecurePost } from '../../../services/axiosCall';\r\nimport './newtest.css';\r\nimport apis from '../../../services/Apis';\r\n\r\nmoment().utcOffset(\"+05:30\");\r\n\r\nconst { Option } = Select;\r\nconst { RangePicker } = DatePicker;\r\n\r\nclass BasicTestFormO extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            checkingName: \"\"\r\n        };\r\n    };\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        this.props.form.validateFields((err, values) => {\r\n            if (!err) {\r\n                // console.log(values)\r\n                this.props.changeBasicNewTestDetails({\r\n                    testType: values.type,\r\n                    testTitle: values.title,\r\n                    testDuration: values.duration,\r\n                    OrganisationName: values.organisation,\r\n                    testSubject: values.subjects,\r\n                    startTime: values.start,\r\n                    endTime: values.end\r\n                });\r\n                this.props.changeStep(1);\r\n            }\r\n        });\r\n    };\r\n\r\n    validateTestName = (rule, value, callback) => {\r\n        if(value.length>=5){\r\n            this.setState({\r\n                checkingName:\"validating\"\r\n            })\r\n            SecurePost({\r\n                url: apis.CHECK_TEST_NAME,\r\n                data: {\r\n                    testname: value\r\n                }\r\n            }).then((data) => {\r\n                //console.log(data);\r\n                if (data.data.success) {\r\n                    if (data.data.can_use) {\r\n                        this.setState({\r\n                            checkingName: \"success\"\r\n                        });\r\n                        callback();\r\n                    }\r\n                    else {\r\n                        this.setState({\r\n                            checkingName: \"error\"\r\n                        });\r\n                        callback('Another test exist with same name.');\r\n                    }\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        checkingName: \"success\"\r\n                    })\r\n                    callback()\r\n                }\r\n            }).catch((ee) => {\r\n                //console.log(ee);\r\n                this.setState({\r\n                    checkingName: \"success\"\r\n                });\r\n                callback();\r\n            });\r\n        }\r\n        else{\r\n            callback();\r\n        }        \r\n    };\r\n\r\n    render() {\r\n        const { getFieldDecorator } = this.props.form;\r\n        return (\r\n            <div className=\"basic-test-form-outer\">\r\n                <div className=\"basic-test-form-inner\">\r\n                    <Form\r\n                        onSubmit={this.handleSubmit}\r\n                        autoComplete=\"off\"\r\n                    >\r\n                        <Form.Item label=\"Test Type\"  hasFeedback>\r\n                            {getFieldDecorator('type', {\r\n                                initialValue : this.props.test.newtestFormData.testType,\r\n                                rules: [{ required: true, message: 'Please select a test type' }],\r\n                            })(\r\n                                <Select placeholder=\"Test Type\">\r\n                                    <Option value=\"skill-test\">Skill Test</Option>\r\n                                    <Option value=\"university-hiring\">university Hiring</Option>\r\n                                    <Option value=\"organisation-hiring\">Organisation hiring</Option>\r\n                                </Select>\r\n                            )}\r\n                        </Form.Item>\r\n\r\n                        <Form.Item label=\"Test Title\"  hasFeedback validateStatus={this.state.checkingName}>\r\n                            {getFieldDecorator('title', {\r\n                                initialValue : this.props.test.newtestFormData.testTitle,\r\n                                rules: [\r\n                                    { required: true, message: 'Please give the test title' },\r\n                                    { min:5, message: 'Title should be atleast 5 character long' },\r\n                                    { validator: this.validateTestName }\r\n                                ],\r\n                                \r\n                            })(\r\n                                <Input placeholder=\"Test Title\" />\r\n                            )}\r\n                        </Form.Item>\r\n\r\n                        <Form.Item label=\"Subjects\"  hasFeedback>\r\n                            {getFieldDecorator('subjects', {\r\n                                initialValue : this.props.test.newtestFormData.testSubject,\r\n                                rules: [{ required: true, message: 'Please select a test type' }],\r\n                            })(\r\n                                <Select\r\n                                mode=\"multiple\"\r\n                                placeholder=\"Select one or more subjects\"\r\n                                style={{ width: '100%' }}\r\n                                allowClear={true}\r\n                                optionFilterProp=\"s\"\r\n                                >\r\n                                    {this.props.admin.subjectTableData.map(item => (\r\n                                        <Select.Option key={item._id} value={item._id} s={item.topic}>\r\n                                        {item.topic}\r\n                                        </Select.Option>\r\n                                    ))}\r\n                                </Select>\r\n                            )}\r\n                        </Form.Item>\r\n\r\n                        <Form.Item label=\"Test Duration ( Min. test duration-10m )\" hasFeedback>\r\n                            {getFieldDecorator('duration', {\r\n                                initialValue : this.props.test.newtestFormData.testDuration,\r\n                                rules: [{ required: true, message: 'Please give test duration' }],\r\n                            })(\r\n                                <InputNumber style={{width:'100%'}}  placeholder=\"Test Duration\" min={10} max={180}/>\r\n                            )}\r\n                        </Form.Item>\r\n\r\n                        <Form.Item label=\"Organisation Name\"  hasFeedback>\r\n                            {getFieldDecorator('organisation', {\r\n                                initialValue : this.props.test.newtestFormData.OrganisationName\r\n                            })(\r\n                                <Input placeholder=\"Organisation Name\" />\r\n                            )}\r\n                        </Form.Item>\r\n\r\n                        <Form.Item label=\"Test Start Time\"  hasFeedback>\r\n                            {\r\n                                getFieldDecorator('start', {\r\n                                    rules: [{ required: true, message: 'Please give test start time' }],\r\n                                })(\r\n                                    <DatePicker\r\n                                        showTime\r\n                                        placeholder=\"Select Start Time\"\r\n                                        onChange={this.onChangeStart}\r\n                                        onOk={this.onOkStart}\r\n                                    />\r\n                                )\r\n                            }\r\n                        </Form.Item>\r\n\r\n                        <Form.Item label=\"Test Start Time\"  hasFeedback>\r\n                            {\r\n                                getFieldDecorator('end', {\r\n                                    rules: [{ required: true, message: 'Please give test end time' }],\r\n                                })(\r\n                                    <DatePicker\r\n                                        showTime\r\n                                        placeholder=\"Select End Time\"\r\n                                        onChange={this.onChangeEnd}\r\n                                        onOk={this.onOkEnd}\r\n                                    />\r\n                                )\r\n                            }\r\n                        </Form.Item>\r\n\r\n                        <Form.Item>\r\n                            <Button type=\"primary\" htmlType=\"submit\" block>\r\n                                Next\r\n                            </Button>\r\n                        </Form.Item>\r\n                    </Form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst BasicTestForm = Form.create({ name: 'Basic Form' })(BasicTestFormO);\r\n\r\nconst mapStateToProps = state => ({\r\n    test : state.test,\r\n    admin:state.admin\r\n});\r\n\r\nexport default connect(mapStateToProps,{\r\n    changeStep,\r\n    changeBasicNewTestDetails\r\n})(BasicTestForm);","import React, { Component } from 'react';\r\nimport { Button, Skeleton,Modal,Form,InputNumber,Transfer,Row,Col } from 'antd';\r\nimport { connect } from 'react-redux';\r\nimport { changeStep,changeMode,removeQuestionFromMainQueue,changeBasicNewTestDetails,fetchSubjectWiseQuestion,pushQuestionToQueue } from '../../../actions/testAction';\r\nimport './newtest.css';\r\nimport Alert from '../../common/alert';\r\nimport apis from '../../../services/Apis';\r\nimport { Post } from '../../../services/axiosCall';\r\n\r\nclass GeneraterandomQuestionO extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            generating:false,\r\n            autogenerate:true,\r\n            ActiveQuestionId:null,\r\n            Mvisible:false\r\n        }\r\n        this.props.changeMode(this.props.mode);\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.props.fetchSubjectWiseQuestion(this.props.test.newtestFormData.testSubject);\r\n    }\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        this.props.form.validateFields((err, values) => {\r\n            if (!err) {\r\n                // console.log(values);\r\n                if(values.no<=this.props.test.questionsAvailablebasedonSubject.length){\r\n                    var qus=[];\r\n                    var allquestions=[...this.props.test.questionsAvailablebasedonSubject];\r\n                    var l=allquestions.length-1;\r\n                    for(var i=values.no;i>0;i--){\r\n                        l=l-1;\r\n                        var r = Math.floor(Math.random() * l);\r\n                        qus.push(allquestions[r]._id);\r\n                        allquestions.splice(r,1);\r\n                    }\r\n                    this.props.pushQuestionToQueue(qus);\r\n                    this.setState({\r\n                        autogenerate : false\r\n                    })\r\n                }\r\n                else{\r\n                    Alert('error','Error!',\"You don't have enough questions to select.\" );\r\n                } \r\n            }\r\n        });\r\n    };\r\n\r\n    renderItem = item => {\r\n        const customLabel = (\r\n          <span className=\"custom-item\">\r\n                <Button shape=\"circle\" onClick={()=>{this.OpenModel(item._id)}} icon=\"info\" style={{background:'linear-gradient(to right,rgb(80,190,189),rgb(0,153,153),rgb(0,153,203))',color:'greenblue'}} size=\"small\" ></Button>\r\n                {item.body}\r\n          </span>\r\n        )\r\n        return {\r\n            label: customLabel, \r\n            value: item._id, \r\n        }\r\n    }\r\n\r\n    OpenModel=(qid)=>{\r\n        this.setState({\r\n            ActiveQuestionId:qid,\r\n            Mvisible:true\r\n        })\r\n    }\r\n    handleCancel=()=>{\r\n        this.setState({\r\n            Mvisible:false\r\n        })\r\n    }\r\n\r\n    handleChange = (targetKeys, direction, moveKeys) => {\r\n        this.props.pushQuestionToQueue(targetKeys);\r\n    };\r\n\r\n\r\n    render() {\r\n        const { getFieldDecorator } = this.props.form;\r\n        return (\r\n            <div>\r\n                <Row>\r\n                    <Col span={5} style={{padding:'20px 0px'}}>\r\n                        <div className={`random-question-generation ${this.props.mode ===\"random\"? \"notblind\" : \"blind\"}`}>\r\n                            <Form onSubmit={this.handleSubmit} >\r\n                                <Form.Item label=\"Enter No. of questions\" hasFeedback>\r\n                                    {getFieldDecorator('no', {\r\n                                        rules: [{ required: true, message: 'Please enter no. of question' }],\r\n                                    })(\r\n                                        <InputNumber style={{width:'100%'}}  placeholder=\"No of question\" min={10} max={50}/>\r\n                                    )}\r\n                                </Form.Item> \r\n                                <Form.Item>\r\n                                    <Button type=\"default\" htmlType=\"submit\" block disabled={!this.state.autogenerate}>\r\n                                        Generate Test Paper\r\n                                    </Button>\r\n                                </Form.Item>\r\n                            </Form>\r\n                        </div>\r\n                    </Col>\r\n                    <Col span={19} style={{padding:'20px'}}>\r\n                        <Transfer\r\n                            disabled={this.props.mode ===\"random\"? true : false}\r\n                            rowKey={record => record._id}\r\n                            dataSource={this.props.test.questionsAvailablebasedonSubject}\r\n                            listStyle={{\r\n                                width: '45%',\r\n                                height: 500,\r\n                            }}\r\n                            targetKeys={this.props.test.newtestFormData.testQuestions}\r\n                            render={this.renderItem}\r\n                            onChange={this.handleChange}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n                <Modal\r\n                    destroyOnClose={true}\r\n                    width=\"70%\"\r\n                    style={{top:'30px'}}\r\n                    title=\"Question details\"\r\n                    visible={this.state.Mvisible}\r\n                    onOk={this.handleCancel}\r\n                    onCancel={this.handleCancel}\r\n                    footer={null}\r\n                    >\r\n                    <SingleQuestionDetails qid={this.state.ActiveQuestionId}/>\r\n                </Modal>  \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst GeneraterandomQuestion = Form.create({ name: 'Basic Form' })(GeneraterandomQuestionO);\r\n\r\nconst mapStateToProps = state => ({\r\n    test : state.test\r\n});\r\n\r\nexport default connect(mapStateToProps,{\r\n    changeStep,\r\n    changeBasicNewTestDetails,\r\n    fetchSubjectWiseQuestion,\r\n    pushQuestionToQueue,\r\n    removeQuestionFromMainQueue,\r\n    changeMode\r\n})(GeneraterandomQuestion);\r\n\r\n\r\n\r\nclass SingleQuestionDetails extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            fetching:false,\r\n            qdetails:null\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.setState({\r\n            fetching:true\r\n        })\r\n        Post({\r\n            url: apis.FETCH_SINGLE_QUESTION_BY_TRAINEE,\r\n            data: {\r\n                qid: this.props.qid\r\n            }\r\n        }).then((response) => {\r\n\r\n            // console.log(response);\r\n\r\n            if (response.data.success) {\r\n                this.setState({\r\n                    qdetails: response.data.data[0]\r\n                })\r\n            }\r\n            else {\r\n                Alert('error', 'Error !', response.data.message);\r\n            }\r\n            this.setState({\r\n                fetching: false\r\n            })\r\n        }).catch((error) => {\r\n            this.setState({\r\n                fetching: false\r\n            });\r\n\r\n            // console.log(error);\r\n\r\n            Alert('error', 'Error !', \"Server Error\");\r\n        });\r\n    }\r\n    \r\n    render(){\r\n        const optn =['A','B','C','D','E'];\r\n        let Optiondata=this.state.qdetails;\r\n        if(Optiondata!==null){\r\n            return (\r\n                <div>\r\n                    <div className=\"mainQuestionDetailsContaine\">\r\n                        <div className=\"questionDetailsBody\">\r\n                            {Optiondata.body}\r\n                        </div>\r\n                        {Optiondata.quesimg?\r\n                            <div className=\"questionDetailsImageContainer\">\r\n                                <img alt=\"Question\" className=\"questionDetailsImage\" src={Optiondata.quesimg} />  \r\n                            </div>\r\n                            : null\r\n                        }\r\n                        <div>\r\n                            {Optiondata.options.map((d,i)=>{\r\n                                return(\r\n                                    <div key={i}>\r\n                                        <Row type=\"flex\" justify=\"center\" className=\"QuestionDetailsOptions\">\r\n                                            <Col span={2}>\r\n                                                {\r\n                                                    d.isAnswer?<Button className=\"green\" shape=\"circle\">{optn[i]}</Button>:<Button type=\"primary\" shape=\"circle\">{optn[i]}</Button>\r\n                                                }\r\n                                                \r\n                                            </Col>\r\n                                            {d.optimg?\r\n                                                <Col span={6} style={{padding:'5px'}}>\r\n                                                    <img alt=\"options\" className=\"questionDetailsImage\" src={d.optimg} />\r\n                                                </Col>\r\n                                            :\r\n                                                null\r\n                                            }\r\n                                            {d.optimg?\r\n                                                <Col span={14}>{d.optbody}</Col>\r\n                                            :\r\n                                                <Col span={20}>{d.optbody}</Col>\r\n                                            }\r\n                                        </Row>\r\n                                    \r\n                                    </div>\r\n                                )\r\n                            })}\r\n                        </div>\r\n                    </div>\r\n    \r\n                </div>\r\n            )\r\n        }\r\n        else{\r\n            return(\r\n                <div className=\"skeletor-wrapper\">\r\n                    <Skeleton active />\r\n                    <Skeleton active />\r\n                </div>\r\n            )\r\n        }\r\n        \r\n    }\r\n}","import React from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { Tabs,Button } from 'antd';\r\nimport { changeStep,changeBasicNewTestDetails } from '../../../actions/testAction';\r\nimport GeneraterandomQuestion from'./generaterandomquestion';\r\nimport './newtest.css';\r\nconst { TabPane } = Tabs;\r\n\r\nfunction SelectQuestion(props){\r\n    const questionCount = <Button>Question Selected : {props.test.newtestFormData.testQuestions.length}</Button>;\r\n    return (\r\n        <div>\r\n            <Tabs defaultActiveKey=\"1\" tabBarExtraContent={questionCount}>\r\n                <TabPane tab=\"Questions-Random\" key=\"1\">\r\n                    <GeneraterandomQuestion mode=\"random\" />\r\n                </TabPane>\r\n                <TabPane tab=\"Questions-Manually\" key=\"2\">\r\n                    <GeneraterandomQuestion mode=\"manual\" />\r\n                </TabPane>\r\n            </Tabs>\r\n\r\n            <div style={{ width: '100%', padding: '10px' }}>\r\n                <Button style={{ float: 'right' }} type=\"primary\" onClick={() => props.changeStep(2)}>\r\n                    Next\r\n                </Button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n    test : state.test\r\n});\r\n\r\nexport default connect(mapStateToProps,{\r\n    changeStep,\r\n    changeBasicNewTestDetails\r\n})(SelectQuestion);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Row,Col,Button, } from 'antd';\r\nimport {SecurePost} from '../../../services/axiosCall';\r\nimport apis from '../../../services/Apis';\r\nimport Alert from '../../common/alert';\r\nimport { Redirect } from 'react-router-dom';\r\nimport Markdown from '../../../utils/Markdown';\r\n\r\nclass FinalQuestionView extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            testid:null\r\n        }\r\n    }\r\n\r\n    createtest = () => {\r\n        SecurePost({\r\n            url: apis.CREATE_TEST,\r\n            data: {\r\n                type: this.props.test.newtestFormData.testType,\r\n                title: this.props.test.newtestFormData.testTitle,\r\n                questions: this.props.test.newtestFormData.testQuestions,\r\n                duration: this.props.test.newtestFormData.testDuration,\r\n                subjects: this.props.test.newtestFormData.testSubject,\r\n                organisation: this.props.test.newtestFormData.OrganisationName,\r\n                startTime: this.props.test.newtestFormData.startTime,\r\n                endTime: this.props.test.newtestFormData.endTime\r\n            }\r\n        })\r\n        .then((response) => {\r\n            // console.log(response.data);\r\n            if (response.data.success) {\r\n                Alert('success', 'Test paper Created Successfully!', 'Redirecting to Test Deatils Page.');\r\n                setTimeout(() => {\r\n                    this.setState({\r\n                        testid: response.data.testid\r\n                    })\r\n                }, 3000);\r\n            }\r\n            else {\r\n                Alert('error', 'Error!', response.data.message);\r\n            }\r\n        }).catch((err) => {\r\n            // console.log(err);\r\n            Alert('error', 'Error!', 'Server Error');\r\n        });\r\n    }\r\n\r\n    render(){\r\n        if(this.state.testid){\r\n            return <Redirect to={`/user/conducttest?testid=${this.state.testid}`} />\r\n        }\r\n        else{\r\n            return (\r\n                <div>\r\n                    {this.props.test.newtestFormData.testQuestions.map((d,i)=>{\r\n                        return <Q key={i+1} _id={d} no={i+1}/>\r\n                    })}\r\n                    <div style={{width:'100%',padding:'10px'}}>\r\n                        <Button style={{float:'right'}} type=\"primary\" onClick={this.createtest}>\r\n                            Create Test\r\n                        </Button>\r\n                    </div>\r\n                    \r\n                </div>\r\n            )\r\n        }\r\n    };\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    test : state.test\r\n});\r\n\r\nexport default connect(mapStateToProps,null)(FinalQuestionView);\r\n\r\nfunction QuestionView(props) {\r\n    var _id = props._id;\r\n    var no = props.no;\r\n    var obj = props.test.questionsAvailablebasedonSubject.filter((hero) => {\r\n        return hero._id == _id;\r\n    });\r\n    \r\n    // console.log(obj[0].weightage);\r\n\r\n    var oo = ['A', 'B', 'C', 'D', 'E'];\r\n\r\n    return (\r\n        <div style={{ marginBottom: '20px' }}>\r\n            <div>\r\n                <div style={{ width: '100%' }}>\r\n                    <b style={{ float: 'left' }}>Question No. {no})</b>\r\n                    <b style={{ float: 'right' }}>Marks. {obj[0].weightage}</b>\r\n                </div>\r\n                <div style={{ padding: '5px 20px' }}>\r\n                    <br />\r\n                    <Markdown>\r\n                        {obj[0].body}\r\n                    </Markdown>\r\n                    {obj[0].quesimg ? <img alt=\"Question\" src={obj[0].quesimg} /> : null}\r\n                </div>\r\n            </div>\r\n            <Row>\r\n                {obj[0].options.map((d, i) => {\r\n                    return (\r\n                        <Col key={i} span={12} style={{ padding: '5px 20px' }}>\r\n                            <b>{oo[i]} ) </b> <Markdown>{d.optbody}</Markdown>\r\n                            {d.optimg ? <img alt=\"Option\" src={d.optimg} /> : null}\r\n                        </Col>\r\n                    )\r\n                })}\r\n            </Row>\r\n        </div>\r\n    );\r\n};\r\n\r\nvar Q = connect(mapStateToProps,null)(QuestionView);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Steps, Typography } from 'antd';\r\nimport {steps} from '../../../services/steps';\r\nimport { changeStep } from '../../../actions/testAction';\r\nimport './newtest.css'\r\nimport BasicTestForm from './basicForm';\r\nimport SelectQuestion from './selectQuestion';\r\nimport FinalQuestionView from './questionview';\r\nimport { \r\n    ChangeSubjectTableData\r\n  } from '../../../actions/adminAction';\r\nconst { Step } = Steps;\r\nconst { Title } = Typography;\r\n\r\nclass  NewTest extends React.Component {\r\n    componentDidMount(){\r\n        this.props.ChangeSubjectTableData();\r\n    }\r\n    render(){\r\n        var torender=\"\";\r\n        if(this.props.test.currentStep===1){\r\n            torender=<SelectQuestion />;\r\n        }\r\n        else if(this.props.test.currentStep===2){\r\n            torender=<FinalQuestionView />;\r\n        }\r\n        else{\r\n            torender=<BasicTestForm />;\r\n        }\r\n        return (\r\n            <div>\r\n                <div style={{padding:'0px auto 5px auto',width:'100%',textAlign:'center'}}>\r\n                    <Title level={3}>Create new Test</Title>\r\n                </div>\r\n                <Steps className=\"newtest-steps-holder\" current={this.props.test.currentStep}>\r\n                    {steps.map(item => (\r\n                        <Step key={item.title} title={item.title} />\r\n                    ))}\r\n                </Steps>\r\n                <div className=\"new-test-form-holder\">\r\n                    {torender}\r\n                </div>\r\n            </div>\r\n        )\r\n    }  \r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    test : state.test\r\n});\r\n\r\nexport default connect(mapStateToProps,{\r\n    changeStep,\r\n    ChangeSubjectTableData\r\n})(NewTest);","import React, { Fragment } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Statistic, Row, Col, Button, Typography, Divider, Card, Icon } from 'antd';\r\n\r\nimport './welcome.css';\r\n\r\nconst { Title, Text } = Typography\r\n\r\n\r\n\r\nconst welcome = (props) => {  \r\n  return (\r\n    <Fragment>\r\n      \r\n      <Title level={4}>\r\n        Welcome {props.user.userDetails.name}\r\n      </Title>\r\n\r\n      <Divider />\r\n\r\n      <Row gutter={16}>\r\n\r\n        <Col className=\"gutter-row\" span={6}>\r\n          <Card>\r\n            <Statistic\r\n              title=\"Total Assessments Taken\"\r\n              value={112893}\r\n            />\r\n          </Card>\r\n        </Col>\r\n\r\n        <Col className=\"gutter-row\" span={6}>\r\n          <Card>\r\n              <Statistic\r\n                title=\"Account Balance (CNY)\"\r\n                value={112893}\r\n                precision={2}\r\n                valueStyle={{ color: '#3f8600' }}\r\n              />\r\n            </Card>\r\n        </Col>\r\n\r\n        <Col className=\"gutter-row\" span={6}>\r\n            <Card>\r\n              <Statistic\r\n                title=\"No. of assessments left\"\r\n                value={9.3}\r\n                precision={2}\r\n                valueStyle={{ color: '#cf1322' }}\r\n                prefix={<Icon type=\"arrow-down\" />}\r\n                suffix=\"%\"\r\n              />\r\n            </Card>\r\n        </Col>\r\n\r\n        <Col className=\"gutter-row\" span={6}>\r\n            <Card>\r\n              <Statistic\r\n                title=\"Active\"\r\n                value={11.28}\r\n                precision={2}\r\n                valueStyle={{ color: '#3f8600' }}\r\n                prefix={<Icon type=\"arrow-up\" />}\r\n                suffix=\"%\"\r\n              />\r\n            </Card>\r\n        </Col>\r\n      </Row>\r\n\r\n      <Divider />\r\n\r\n      <h2><b>Admin Instructions</b></h2>\r\n      <h3>1. All Trainers</h3>\r\n      <h4>   List of existing trainers.</h4>\r\n      <ul>\r\n        <li>Add New - Create new trainer account.</li>\r\n        <li>Action - <br /> <p style={{ marginBottom: '2px' }}><Button size='small' type=\"primary\" shape=\"circle\" icon=\"edit\" /> Edit trainer details.</p><Button size='small' type=\"primary\" shape=\"circle\" icon=\"delete\" /> Delete trainer account.</li>\r\n      </ul>\r\n      <h3>2. All Courses</h3>\r\n      <h4>   List of existing courses.</h4>\r\n      <ul>\r\n        <li>Add New - Create new course </li>\r\n        <li>Action - <br /><Button size='small' type=\"primary\" shape=\"circle\" icon=\"edit\" /> Edit course name.</li>\r\n      </ul>\r\n      <br />\r\n      \r\n      <h2><b>Trainer Instructions</b></h2>\r\n      <h3>1. All Questions</h3>\r\n      <h4>   List of existing questions.</h4>\r\n      <ul>\r\n        <li>Add New - Create new question.</li>\r\n        <li>Action - <br /> <p style={{ marginBottom: '2px' }}><Button size='small' type=\"primary\" shape=\"circle\" icon=\"info\" />  Question details & body.</p><Button size='small' type=\"primary\" shape=\"circle\" icon=\"delete\" /> Delete question.</li>\r\n      </ul>\r\n      <h3>2. All Tests</h3>\r\n      <h4>   List of existing tests</h4>\r\n      <ul>\r\n        <li>Action - <Button size='small' type=\"primary\" shape=\"circle\" icon=\"info\" /> <ul>\r\n          <li>Test Details</li>\r\n          <li>Test Questions</li>\r\n          <li>Trainees - List of Registered Candidates</li>\r\n          <li>Statistics - <ul>\r\n            <li>Download excel sheet of results</li>\r\n            <li>Graphical representation of results</li>\r\n          </ul></li>\r\n        </ul></li>\r\n      </ul>\r\n      <h3>3. New Tests</h3>\r\n      <ul>\r\n        <li>Create new test</li>\r\n        <ol>\r\n          <li>Enter basic test details</li>\r\n          <li>Select Questions</li><ul>\r\n            <li>Questions - Random > Enter number of questions to be selected automatically and click Generate Test Paper. Click Next to proceed.</li>\r\n            <li>Questions - Manually > Select Questions manually . Click Next to proceed.</li>\r\n          </ul>\r\n        </ol>\r\n        <li>Basic test info</li>\r\n        <ul>\r\n          <li>Registration link - The link for Registration of trainee for the test.</li>\r\n          <li>Stop Registration - Click to disable Registration Link.</li>\r\n          <li>Reload - Click to get the list of registered candidates.</li>\r\n          <li>Start Test - Click to begin test.</li>\r\n          <li>End Test - Click to end test.</li>\r\n        </ul>\r\n        <p><b>NOTE-</b>A link for this test has been sent to the email id of registered trainees. Click on the link to take test.</p>\r\n      </ul>\r\n\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  user : state.user\r\n});\r\n\r\nexport default connect(mapStateToProps, null)(welcome);","import React from 'react'\r\n\r\nexport default function ErrorPage() {\r\n    return (\r\n        <div>\r\n            404\r\n        </div>\r\n    )\r\n}\r\n","export const changeActiveRoute = (d)=> dispatch =>{\r\n    dispatch({\r\n       type : 'CHANGE_ACTIVE_ROUTE',\r\n       payload : d\r\n    })\r\n}\r\n\r\nexport const changeActiveUrl = (d)=> dispatch =>{\r\n    dispatch({\r\n       type : 'CHANGE_ACTIVE_URL',\r\n       payload : d\r\n    })\r\n}","import React from 'react';\r\nimport './backbone.css';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport queryString from 'query-string';\r\n\r\nimport AllTrainer from '../admin/allTrainer/alltrainer';\r\nimport AllTopics from '../admin/allTopics/alltopics.js';\r\nimport AllQuestions from '../trainer/allquestions/allquestion';\r\nimport AllTests from '../trainer/alltests/alltest';\r\nimport ConductTest from '../trainer/conducttest/conducttest';\r\nimport NewTest from '../trainer/newtest/newtest';\r\nimport auth from '../../services/AuthServices';\r\nimport Welcome from './welcome';\r\nimport ErrorPage from './errorPage';\r\n\r\nimport { login, logout } from '../../actions/loginAction';\r\nimport { changeActiveRoute } from '../../actions/useraction';\r\nimport Alert from '../common/alert';\r\n\r\nimport { Layout, Menu,Button, Icon, Tooltip } from 'antd';\r\nimport main from './logo.png';\r\n\r\nconst { Header, Sider, Content, Footer } = Layout;\r\n\r\nclass Dashboard extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            LocalIsLoggedIn: this.props.user.isLoggedIn,\r\n            collapsed: true\r\n        }\r\n    }\r\n\r\n    toggle = () => {\r\n        this.setState({\r\n          collapsed: !this.state.collapsed,\r\n        });\r\n    };\r\n\r\n    logOut = () => {\r\n        auth.deleteToken();\r\n        window.location.href = '/';\r\n    };\r\n\r\n    componentWillMount(){\r\n        // console.log(this.state.LocalIsLoggedIn);\r\n        var t = auth.retriveToken();\r\n        if(this.state.LocalIsLoggedIn){\r\n            \r\n        }\r\n        else if(t && t!=='undefined'){\r\n            auth.FetchAuth(t).then((response) => {\r\n                //console.log(response.data);\r\n                this.props.login(response.data.user);\r\n                this.setState({\r\n                    LocalIsLoggedIn: true\r\n                });\r\n\r\n                var subUrl = this.props.match.params.options;\r\n                // console.log(subUrl);\r\n                var obj = this.props.user.userOptions.find((o, i) => {\r\n                    if (o.link === `/user/${subUrl}`) {\r\n                        return o\r\n                    }\r\n                });\r\n\r\n                var tt = this.props.user.userOptions.indexOf(obj);\r\n                \r\n                if (tt === -1) {\r\n                    window.location.href = `${this.props.user.userOptions[0].link}`;\r\n                }\r\n                else {\r\n                    this.props.changeActiveRoute(String(tt));\r\n                }\r\n            }).catch((error) => {\r\n                Alert('warning', 'Warning!', 'Server Error.');\r\n                auth.deleteToken();\r\n                window.location.href = '/';\r\n            });\r\n        }\r\n        else{\r\n            window.location='/';\r\n        }   \r\n    };\r\n\r\n\r\n    render(){\r\n        let torender = null;\r\n        if(this.props.match.params.options==='listtrainers'){\r\n            torender = <AllTrainer/>;\r\n        }\r\n        else if(this.props.match.params.options==='listsubjects'){\r\n            torender = <AllTopics/>\r\n        }\r\n        else if(this.props.match.params.options==='listquestions'){\r\n            torender = <AllQuestions/>\r\n        }\r\n        else if(this.props.match.params.options==='listtests'){\r\n            torender = <AllTests/>\r\n        }\r\n        else if(this.props.match.params.options==='home'){\r\n            torender=<Welcome />\r\n        }\r\n        else if(this.props.match.params.options==='newtest'){\r\n            torender=<NewTest />\r\n        }\r\n        else if(this.props.match.params.options==='conducttest'){\r\n            let params = queryString.parse(this.props.location.search)\r\n            // console.log(params)\r\n            torender=<ConductTest {...params}/>\r\n        }\r\n        else{\r\n            torender=<ErrorPage />\r\n        }\r\n\r\n        return (\r\n            <Layout>\r\n                <Sider\r\n                    trigger={null}\r\n                    collapsible\r\n                    collapsed={this.state.collapsed}\r\n                >\r\n                    \r\n                    <div className=\"logo11\">\r\n                        <img src={main} alt=\"company logo\" className=\"d-logo\" />\r\n                    </div>\r\n\r\n                    <Menu \r\n                        defaultSelectedKeys={[this.props.user.activeRoute]}\r\n                        mode=\"inline\"\r\n                        theme=\"dark\"\r\n                        >\r\n                        {\r\n                            this.props.user.userOptions.map((d,i)=>{\r\n                                return(\r\n                                    <Menu.Item key={i}>\r\n                                        <Icon type={d.icon} />\r\n                                        <span>{d.display}</span>\r\n                                        <Link to={d.link}></Link>\r\n                                    </Menu.Item>\r\n                                )\r\n                            })\r\n                        }\r\n                    </Menu>\r\n                </Sider>\r\n                <Layout>\r\n                    <Header\r\n                        style={{ position: 'fixed', width: '100vw', paddingLeft: '10px', zIndex: '1000', background: '#fff' }}\r\n                    >\r\n                        <Icon\r\n                            className=\"trigger\"\r\n                            type={this.state.collapsed ? 'double-right' : 'double-left'}\r\n                            onClick={this.toggle}\r\n                            style={{color:'#000',fontSize:'20px'}}\r\n                            />\r\n                        <ul className=\"user-options-list\">\r\n                            <li>\r\n                                <Tooltip placement=\"bottom\" title=\"Log Out\">\r\n                                    <Button type=\"primary\" size=\"large\" shape=\"circle\" onClick={this.logOut} className=\"logout-button\">\r\n                                        <Icon type=\"logout\" />\r\n                                    </Button>\r\n                                </Tooltip>\r\n                            </li>\r\n                        </ul>\r\n                            \r\n                    </Header>\r\n                    <Content\r\n                        style={{\r\n                        margin: '24px 16px',\r\n                        padding: 24,\r\n                        marginTop:'80px',\r\n                        background: '#fff',\r\n                        minHeight: '100vh'\r\n                        }}\r\n                    >\r\n                        <div style={{ width:'100%', }}>\r\n                            {torender}\r\n                        </div>\r\n                    </Content>\r\n                    <Footer style={{ textAlign: 'center', background: '#fff' }}>\r\n                        gnius Talent Solution ©2021\r\n                    </Footer>\r\n                </Layout>\r\n            </Layout>\r\n        );\r\n    };\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    user : state.user\r\n});\r\n\r\nexport default connect(mapStateToProps,{\r\n    changeActiveRoute,\r\n    login, \r\n    logout\r\n})(Dashboard);\r\n","import React, { Component } from 'react';\r\nimport {Row,Col,Form, Icon, Input, Button,Select,Typography  } from 'antd';\r\nimport queryString from 'query-string';\r\nimport apis from '../../../services/Apis';\r\nimport { Post } from '../../../services/axiosCall';\r\nimport Alert from '../../common/alert';\r\n\r\nimport '../../../Layout.css';\r\nimport './trainerRegister.css';\r\nimport logo from '../../basic/header/logo.png';\r\n\r\nimport { Fragment } from 'react';\r\n\r\nconst { Option } = Select;\r\nconst { Title } = Typography;\r\n\r\nclass TraineeRegisterForm extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            inform:true,\r\n            testid:null,\r\n            user:null\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        let params = queryString.parse(this.props.location.search)\r\n        //console.log(params)\r\n        this.setState({\r\n            testid:params.testid\r\n        });\r\n    }\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        this.props.form.validateFields((err, values) => {\r\n            if (!err) {\r\n                // console.log('Received values of form: ', values);\r\n                // console.log(this.state.testid);\r\n                Post({\r\n                    url: apis.REGISTER_TRAINEE_FOR_TEST,\r\n                    data: {\r\n                        name: values.name,\r\n                        emailid: values.email,\r\n                        contact: `${values.prefix}${values.contact}`,\r\n                        organisation: values.organisation,\r\n                        testid: this.state.testid,\r\n                        location: values.location\r\n                    }\r\n                }).then((data) => {\r\n                    // console.log(data.data);\r\n                    if (data.data.success) {\r\n                        this.setState({\r\n                            inform: false,\r\n                            user: data.data.user\r\n                        });\r\n                    }\r\n                    else {\r\n                        this.props.form.resetFields();\r\n                        Alert('error', 'Error!', data.data.message);\r\n                    }\r\n                }).catch((error) => {\r\n                    // console.log(error);\r\n                    this.props.form.resetFields();\r\n                    Alert('error', 'Error!', \"Server Error\");\r\n                });\r\n            }\r\n        });\r\n    };\r\n\r\n    resendMail = () => {\r\n        Post({\r\n            url: apis.RESEND_TRAINER_REGISTRATION_LINK,\r\n            data: {\r\n                id: this.state.user._id\r\n            }\r\n        })\r\n        .then((response) => {\r\n            if (response.data.success) {\r\n                Alert('success', 'Success!', \"Email has been sent to your email\");\r\n            }\r\n            else {\r\n                Alert('error', 'Error!', response.data.message);\r\n            }\r\n        })\r\n        .catch((error) => {\r\n            // console.log(error);\r\n            Alert('error', 'Error!', \"Server Error\");\r\n        });\r\n    };\r\n\r\n\r\n    render() {\r\n        const { getFieldDecorator } = this.props.form;\r\n        const prefixSelector = getFieldDecorator('prefix', {\r\n            initialValue :'+91',\r\n            rules: [{ required: true, message: 'Please enter contact no prefix' }],\r\n        })(\r\n            <Select style={{ width: 70 }}>\r\n              <Option value=\"+91\">+91</Option>\r\n            </Select>,\r\n        );\r\n        return (\r\n            <Fragment>\r\n                <div className=\"header-container\">\r\n                    <img src={logo} alt=\"company logo\" className=\"logo\" />\r\n                </div>\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12\">\r\n                            <Title level={2} style={{ textAlign: 'center'}} >Assessment Registration</Title>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"registration-form-container\">    \r\n                {this.state.inform ?\r\n                    <div className=\"registration-form-inner\">\r\n                        <div className=\"container\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-12\">\r\n                                    <Form \r\n                                        onSubmit={this.handleSubmit}\r\n                                        autoComplete=\"off\"\r\n                                        className=\"login-form\"\r\n                                    >\r\n                                        <Row>\r\n                                            <Col span={12} style={{ padding: '5px' }}>\r\n                                                <Form.Item label=\"Name\" hasFeedback>\r\n                                                    {getFieldDecorator('name', {\r\n                                                        rules: [{ required: true, message: 'Please input your name' }],\r\n                                                    })(\r\n                                                        <Input\r\n                                                            prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                                                            placeholder=\"Name\"\r\n                                                        />,\r\n                                                    )}\r\n                                                </Form.Item>\r\n                                            </Col>\r\n\r\n                                            <Col span={12} style={{ padding: '5px' }}>\r\n                                                <Form.Item label=\"Email\" hasFeedback>\r\n                                                    {getFieldDecorator('email', {\r\n                                                        rules: [{\r\n                                                            type: 'email',\r\n                                                            message: 'The input is not valid E-mail!',\r\n                                                        },\r\n                                                        {\r\n                                                            required: true,\r\n                                                            message: 'Please input your E-mail!',\r\n                                                        }],\r\n                                                    })(\r\n                                                        <Input\r\n                                                            prefix={<Icon type=\"mail\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                                                            placeholder=\"Email Id\"\r\n                                                        />,\r\n                                                    )}\r\n                                                </Form.Item>\r\n                                            </Col>\r\n                                \r\n                                            <Col span={24} style={{ padding: '5px' }}>\r\n                                                <Form.Item label=\"Phone Number\" hasFeedback>\r\n                                                    {getFieldDecorator('contact', {\r\n                                                        rules: [{\r\n                                                            required: true,\r\n                                                            message: 'Please input your phone number!'\r\n                                                        },\r\n                                                        {\r\n                                                            len: 10,\r\n                                                            message: 'Contact number must be 10 digit long'\r\n                                                        }],\r\n                                                    })(<Input addonBefore={prefixSelector} min={10} max={10} />)}\r\n                                                </Form.Item>\r\n                                                \r\n                                                <Form.Item label=\"Organisation (University/Company Name)\" hasFeedback>\r\n                                                    {getFieldDecorator('organisation', {\r\n                                                        rules: [{\r\n                                                            required: true,\r\n                                                            message: 'Please input your organisation name',\r\n                                                        }],\r\n                                                    })(\r\n                                                        <Input\r\n                                                            prefix={<Icon type=\"idcard\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                                                            placeholder=\"Organisation\"\r\n                                                        />,\r\n                                                    )}\r\n                                                </Form.Item>\r\n                                            </Col>\r\n\r\n                                            <Col span={24} style={{ padding: '5px' }}>\r\n                                                <Form.Item label=\"Address\" hasFeedback>\r\n                                                    {getFieldDecorator('location', {\r\n                                                        rules: [{ required: true, message: 'Please input your name' }],\r\n                                                    })(\r\n                                                        <Input\r\n                                                            prefix={<Icon type=\"home\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                                                            placeholder=\"Address\"\r\n                                                        />,\r\n                                                    )}\r\n                                                </Form.Item>\r\n                                            </Col>\r\n                                \r\n                                            <Col span={24} style={{ paddingTop: '33px' }}>\r\n                                                <Form.Item>\r\n                                                    <Button style={{ width: '100%' }} type=\"primary\" htmlType=\"submit\" className=\"btn\">\r\n                                                        Register\r\n                                                    </Button>\r\n                                                </Form.Item>\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </Form>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div> :\r\n                    <div className=\"reasendmail-container-register\">\r\n                        <Title style={{ color: '#fff' }} level={4}>\r\n                            Thank You, You have successfully registered !!!\r\n                            An email containing your assessment link will be sent to {this.state.user.emailid}, one day before the assessment date.\r\n\r\n                            All the Best !!!\r\n                        </Title>\r\n                    </div>\r\n                }\r\n            </div>\r\n            </Fragment>\r\n        );\r\n    };\r\n};\r\n\r\nconst TraineeRegister = Form.create({ name: 'Trainee Registration' })(TraineeRegisterForm);\r\nexport default TraineeRegister;","import React, { Fragment, useState } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { Button, Checkbox } from 'antd';\r\nimport { ProceedtoTest, fetchTestdata } from '../../../actions/traineeAction';\r\nimport './portal.css';\r\nimport logo from '../../basic/header/logo.png';\r\n\r\nfunction Instruction(props) {\r\n    const [state, setstate] = useState(false);\r\n\r\n    function onChange(e) {\r\n        console.log(e.target.checked);\r\n        setstate(e.target.checked);\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className=\"header-container\">\r\n                <img src={logo} alt=\"company logo\" className=\"logo\" />\r\n            </div>\r\n\r\n            <div className=\"instaruction-page-wrapper\">\r\n                <div className=\"instruction-page-inner\">\r\n                    <h1>Instructions:</h1>\r\n                    <p>Please read the instructions carefully</p>\r\n                    <h4>1. All questions are compulsory.</h4>\r\n                    <h4>\r\n                        2. Please save the question before you proceed to the next question.\r\n                        <b>NOTE :</b>To save answers, click on the 'Save & Next' button.\r\n                    </h4>\r\n                    <h4>3. Please don't leave the window before you submit.</h4>\r\n                    <h4>4. Click on 'End Test' button to submit the assessment. </h4>\r\n                    <h4>5. The test will be automatically submitted when the time ends.</h4>\r\n                    <h4>\r\n                        <Checkbox onChange={onChange}>I have read and understood all the instructions</Checkbox>\r\n                    </h4>\r\n                    <div className=\"proceed-to-test-button\">\r\n                        {state ? \r\n                            <Button\r\n                            style={{ float: 'right' }}\r\n                            type=\"primary\" icon=\"caret-right\"\r\n                            onClick={() => { props.ProceedtoTest(props.trainee.testid, props.trainee.traineeid, () => { props.fetchTestdata(props.trainee.testid, props.trainee.traineeid) }) }} loading={props.trainee.proceedingToTest}\r\n                        >\r\n                            Proceed\r\n                        </Button> : null\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    trainee : state.trainee\r\n});\r\n\r\nexport default connect(mapStateToProps,{\r\n    ProceedtoTest,\r\n    fetchTestdata\r\n})(Instruction);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport './portal.css';\r\n\r\nconst user_icon = 'https://res.cloudinary.com/gniusedu/image/upload/v1616994666/gnius-jpg_aspibu.jpg';\r\n\r\nfunction Trainee(props) {\r\n    return (\r\n        <div className=\"loggedin-trainee-container\">\r\n            <div className=\"loggedin-trainee-inner\">\r\n                <img alt=\"User Icon\" src={user_icon} className=\"loggedin-trainee-logo\"/>\r\n                <div className=\"loggedin-trainee-details-container\">\r\n                    <p>{props.trainee.traineeDetails.name}</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    trainee : state.trainee\r\n});\r\n\r\n\r\n\r\n\r\nexport default connect(mapStateToProps,null)(Trainee);","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { Badge, Icon,Button,Row,Col  } from 'antd';\r\nimport './portal.css';\r\nimport {switchQuestion} from '../../../actions/traineeAction';\r\n\r\nclass Operations extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"question-list-wrapper\">\r\n                <div className=\"question-list-inner\">\r\n                    <Row style={{ padding: '5px' }}>\r\n                        {this.props.trainee.answers.map((d, i) => {\r\n                            return (\r\n                                <Col key={i} span={6} style={{ padding: '10px' }}>\r\n                                    <Mark qid={d.questionid} ans={d.isAnswered} mark={d.isMarked} no={i} />\r\n                                </Col>\r\n                            )\r\n                        })}\r\n                    </Row>\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n};\r\n\r\n\r\nfunction mark(props){\r\n    if(props.mark){\r\n        if(props.ans){\r\n            return(\r\n                <Badge className=\"qb\" count={<Icon type=\"flag\"  theme=\"filled\" style={{ color: '#f5222d' }} />}>\r\n                    <Button\r\n                        onClick={() => props.switchQuestion(props.no)}\r\n                        style={{ background: '#0B6623', color: '#fff' }}\r\n                    >\r\n                        {props.no + 1}\r\n                    </Button>\r\n                </Badge>  \r\n            )\r\n        }\r\n        else{\r\n            return (\r\n                <Badge className=\"qb\" count={<Icon type=\"flag\" theme=\"filled\" style={{ color: '#f5222d' }} />}>\r\n                    <Button\r\n                        onClick={() => props.switchQuestion(props.no)}\r\n                        style={{ background: '#999999', color: '#fff' }}\r\n                    >\r\n                        {props.no + 1}\r\n                    </Button>\r\n                </Badge>\r\n            );\r\n        };\r\n    }\r\n    else{\r\n        if(props.ans){\r\n            return(\r\n                <Button\r\n                    onClick={() => props.switchQuestion(props.no)}\r\n                    className=\"qb\"\r\n                    style={{ background: '#0EFF00', color: '#000' }}\r\n                >\r\n                    {props.no + 1}\r\n                </Button>\r\n            )\r\n        }\r\n        else{\r\n            return (\r\n                <Button\r\n                    onClick={() => props.switchQuestion(props.no)}\r\n                    className=\"qb\"\r\n                    style={{ background: '#CC0000', color: '#fff' }}\r\n                >\r\n                    {props.no + 1}\r\n                </Button>\r\n            );\r\n        };\r\n    };\r\n};\r\n\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n    trainee : state.trainee\r\n});\r\n\r\nlet Mark = connect(mapStateToProps, {\r\n    switchQuestion\r\n})(mark);\r\n\r\nexport default connect(mapStateToProps,null)(Operations);","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport {LocaltestDone,fetchTestdata} from '../../../actions/traineeAction';\r\nimport './portal.css';\r\nimport apis from '../../../services/Apis';\r\nimport { Post } from '../../../services/axiosCall';\r\nimport Alert from '../../common/alert';\r\n\r\nclass Clock extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            localMinutes:this.props.trainee.m_left,\r\n            localSeconds:this.props.trainee.s_left\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        this.clockF(); \r\n    }\r\n\r\n    endTest =()=>{\r\n        Post({\r\n            url:`${apis.END_TEST}`,\r\n            data:{\r\n                testid: this.props.trainee.testid,\r\n                userid:this.props.trainee.traineeid\r\n            }\r\n        }).then((response)=>{\r\n            if(response.data.success){\r\n                this.props.fetchTestdata(this.props.trainee.testid,this.props.trainee.traineeid)\r\n            }\r\n            else{\r\n                return Alert('error','Error!',response.data.message);\r\n            }\r\n        }).catch((error)=>{\r\n            return Alert('error','Error!','Error');\r\n        })\r\n    }\r\n\r\n\r\n    clockF = () => {\r\n        let c = setInterval(() => {\r\n            // console.log('i am done')\r\n            let l = this.state.localMinutes;\r\n            let s = this.state.localSeconds;\r\n\r\n            if (l == 0 && s == 1) {\r\n                clearInterval(c);\r\n                this.endTest();\r\n            }\r\n            else {\r\n                if (s == 0) {\r\n                    s = 59;\r\n                    l = l - 1;\r\n                }\r\n                else {\r\n                    s = s - 1;\r\n                }\r\n                this.setState({\r\n                    localMinutes: l,\r\n                    localSeconds: s\r\n                })\r\n            }\r\n        }, 1000)\r\n    };\r\n\r\n    componentWillUnmount(){}\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"clock-wrapper\">\r\n                <div className=\"clock-container\">{this.state.localMinutes} : {this.state.localSeconds}</div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n    trainee : state.trainee\r\n});\r\n\r\nexport default connect(mapStateToProps,{\r\n    LocaltestDone,fetchTestdata\r\n})(Clock);","import React from 'react'\r\nimport { connect } from 'react-redux';\r\nimport './portal.css';\r\nimport Trainee from './user';\r\nimport {Button,Popconfirm} from 'antd';\r\nimport Operations from './operations';\r\nimport Clock from './clock';\r\nimport Alert from '../../common/alert';\r\nimport apis from '../../../services/Apis';\r\nimport { Post } from '../../../services/axiosCall';\r\nimport { fetchTestdata } from '../../../actions/traineeAction'\r\n\r\nclass Sidepanel extends React.Component {\r\n\r\n    endTest =()=>{\r\n        Post({\r\n            url:`${apis.END_TEST}`,\r\n            data:{\r\n                testid: this.props.trainee.testid,\r\n                userid:this.props.trainee.traineeid\r\n            }\r\n        }).then((response)=>{\r\n            if(response.data.success){\r\n                \r\n                this.props.fetchTestdata(this.props.trainee.testid,this.props.trainee.traineeid)\r\n            }\r\n            else{\r\n                return Alert('error','Error!',response.data.message);\r\n            }\r\n        }).catch((error)=>{\r\n            return Alert('error','Error!','Error');\r\n        })\r\n    }\r\n    \r\n    render(){\r\n        return (\r\n            <div className={\"side-panel-in-exam-dashboard \"+(this.props.mode==='desktop'?'w-20':'w-100')}>\r\n                <Trainee />\r\n                <Clock/>\r\n                <Operations />\r\n                <div className=\"End-test-container\">\r\n                    <Popconfirm\r\n                        title=\"Are you sure to end the test\"\r\n                        onConfirm={this.endTest}\r\n                        okText=\"Yes\"\r\n                        cancelText=\"No\"\r\n                    >\r\n                        <Button type=\"default\">End Test</Button>\r\n                    </Popconfirm>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n    trainee : state.trainee\r\n});\r\n\r\n\r\n\r\nexport default connect(mapStateToProps,{\r\n    fetchTestdata\r\n})(Sidepanel);\r\n\r\n","import React from 'react'\r\nimport { connect } from 'react-redux';\r\nimport Alert from '../../common/alert';\r\nimport apis from '../../../services/Apis';\r\nimport { Post } from '../../../services/axiosCall';\r\nimport { Icon,Button,Row,Col,Radio,Checkbox  } from 'antd';\r\nimport { switchQuestion, updateIsMarked, fetchTestdata } from '../../../actions/traineeAction';\r\nimport Markdown from '../../../utils/Markdown';\r\n\r\nimport './portal.css';\r\n\r\n\r\nclass SingleQuestion extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        if(this.props.trainee.answers[this.props.trainee.activeQuestionIndex].chosenOption.length===this.props.trainee.questions[this.props.trainee.activeQuestionIndex].anscount){\r\n            this.state={\r\n                AnswerSelected:true,\r\n                options:this.props.trainee.questions[this.props.trainee.activeQuestionIndex].options,\r\n                answers:this.props.trainee.answers[this.props.trainee.activeQuestionIndex].chosenOption,\r\n                ticked:0\r\n            }\r\n        }\r\n        else{\r\n            this.state={\r\n                AnswerSelected:false,\r\n                options:this.props.trainee.questions[this.props.trainee.activeQuestionIndex].options,\r\n                answers:this.props.trainee.answers[this.props.trainee.activeQuestionIndex].chosenOption,\r\n                ticked:0\r\n            }\r\n        }\r\n        \r\n    }\r\n    componentWillMount(){\r\n        this.setState((PState,Pprops)=>{\r\n            let t=0;\r\n            var s = PState.options.map((d,i)=>{\r\n                for(var ii=0;ii<PState.answers.length;ii++){\r\n                    if(PState.answers[ii]===d._id){\r\n                        t+=1;\r\n                        return({\r\n                            ...d,\r\n                            checked:true\r\n                        })\r\n                    }\r\n                }\r\n                return({\r\n                    ...d,\r\n                    checked:false\r\n                })\r\n            })\r\n            return({\r\n                ticked:t,\r\n                options :s\r\n            })\r\n        })\r\n    }\r\n\r\n    SaveTocloud = () => {\r\n        Post({\r\n            url: `${apis.UPDATE_ANSWERS}`,\r\n            data: {\r\n                testid: this.props.trainee.testid,\r\n                userid: this.props.trainee.traineeid,\r\n                qid: this.props.trainee.questions[this.props.trainee.activeQuestionIndex]._id,\r\n                newAnswer: this.state.answers\r\n            }\r\n        }).then((response) => {\r\n            if (response.data.success) {\r\n                // console.log(response.data);\r\n                var t = [...this.props.trainee.answers];\r\n                t[this.props.trainee.activeQuestionIndex] = {\r\n                    ...t[this.props.trainee.activeQuestionIndex],\r\n                    chosenOption: this.state.answers,\r\n                    isAnswered: true\r\n                }\r\n                this.props.updateIsMarked(t);\r\n            }\r\n            else {\r\n                this.props.fetchTestdata(this.props.trainee.testid, this.props.trainee.traineeid);\r\n                return Alert('error', 'Error!', response.data.message);\r\n                \r\n            }\r\n        }).catch((err) => {\r\n            return Alert('error', 'Error!', 'Server Error');\r\n        });\r\n        //save to cloud then\r\n    };\r\n\r\n    previous = () => {\r\n        if (this.props.trainee.activeQuestionIndex > 0) {\r\n            this.props.switchQuestion(this.props.trainee.activeQuestionIndex - 1)\r\n        }\r\n    };\r\n\r\n    next = () => {\r\n        if (this.state.AnswerSelected) {\r\n            this.SaveTocloud();\r\n            if (this.props.trainee.activeQuestionIndex < this.props.trainee.questions.length - 1) {\r\n                this.props.switchQuestion(this.props.trainee.activeQuestionIndex + 1)\r\n            }\r\n        }\r\n        else {\r\n            if (this.props.trainee.activeQuestionIndex < this.props.trainee.questions.length - 1) {\r\n                this.props.switchQuestion(this.props.trainee.activeQuestionIndex + 1)\r\n            }\r\n        }\r\n    };\r\n\r\n    mark = () => {\r\n        let aa = [...this.props.trainee.answers];\r\n        let c = aa[this.props.trainee.activeQuestionIndex];\r\n        c.isMarked = !this.props.trainee.answers[this.props.trainee.activeQuestionIndex].isMarked;\r\n        aa[this.props.trainee.activeQuestionIndex] = c\r\n        this.props.updateIsMarked(aa);\r\n    };\r\n\r\n    onAnswerChange=(d1,d2,d3)=>{\r\n        var ansCount=this.props.trainee.questions[this.props.trainee.activeQuestionIndex].anscount;\r\n        if(d2){\r\n            if(this.state.ticked===ansCount){\r\n                return Alert('error','Error!','Clear selected options to select other option')\r\n            }\r\n            else{\r\n                var op1 = [...this.state.options];\r\n                op1[d1]={\r\n                    ...op1[d1],\r\n                    checked:true\r\n                }\r\n                var op2 = [...this.state.answers]\r\n                op2.push(d3);\r\n                \r\n                if(this.state.ticked===ansCount-1){\r\n                    this.setState((PState, Pprops) => {\r\n                        return ({\r\n                            AnswerSelected: true,\r\n                            ticked: PState.ticked + 1,\r\n                            options: op1,\r\n                            answers: op2\r\n                        });\r\n                    });\r\n                }\r\n                else{\r\n                    this.setState((PState, Pprops) => {\r\n                        return ({\r\n                            ticked: PState.ticked + 1,\r\n                            options: op1,\r\n                            answers: op2\r\n                        });\r\n                    });\r\n                }\r\n                \r\n            }\r\n        }\r\n        else{\r\n            op1 = [...this.state.options];\r\n            op1[d1]={\r\n                ...op1[d1],\r\n                checked:false\r\n            }\r\n            op2 = [...this.state.answers]\r\n            var index=op2.indexOf(d3);\r\n            op2.splice(index, 1)\r\n            this.setState((PState, Pprops) => {\r\n                return ({\r\n                    AnswerSelected: false,\r\n                    ticked: PState.ticked - 1,\r\n                    options: op1,\r\n                    answers: op2\r\n                });\r\n            });\r\n        }\r\n    }\r\n\r\n    render(){\r\n        // console.log(this.state)\r\n        let opts = ['A', 'B', 'C', 'D', 'E'];\r\n        return (\r\n            <div>\r\n                <div className=\"Question-single-container\">\r\n                    <Row>\r\n                        <Col span={2}>\r\n                            <Button style={{ background: '#93329e', color: '#fff' }} shape=\"circle\">\r\n                                {this.props.trainee.activeQuestionIndex + 1}\r\n                            </Button>\r\n                        </Col>\r\n                        <Col span={22}>\r\n                            <Radio.Group style={{float:'right'}}>\r\n                                <Radio.Button\r\n                                    style={{ background: '#93329e', color: '#fff' }}\r\n                                >\r\n                                    {this.props.trainee.questions[this.props.trainee.activeQuestionIndex].anscount === 1 ? \"Single answer type\" : \"Multiple answer type\"}\r\n                                </Radio.Button>\r\n\r\n                                <Radio.Button\r\n                                    style={{ background: '#93329e', color: '#fff' }}\r\n                                >\r\n                                    Marks : {this.props.trainee.questions[this.props.trainee.activeQuestionIndex].weightage}\r\n                                </Radio.Button>\r\n                            </Radio.Group>\r\n                        </Col>\r\n                    </Row>\r\n                    {\r\n                        this.props.mode==='mobile'?\r\n                            <Button onClick={this.props.triggerSidebar} style={{ background: '#93329e', color: '#fff', float: 'right' }}>\r\n                                Menu\r\n                            </Button>\r\n                        :null\r\n                    }\r\n                    <div className=\"Question-single-body-holder\">\r\n                        <div>\r\n                            <h3 style={{ fontFamily: \"'Montserrat', sans-serif\" }}>\r\n                                <Markdown>\r\n                                    {this.props.trainee.questions[this.props.trainee.activeQuestionIndex].body}\r\n                                </Markdown>\r\n                            </h3>\r\n                        </div>\r\n                        \r\n                        {this.props.trainee.questions[this.props.trainee.activeQuestionIndex].quesimg?\r\n                            <div className=\"Single-question-body-image-container\">\r\n                                <img alt=\"Unable to load\" src={this.props.trainee.questions[this.props.trainee.activeQuestionIndex].quesimg} className=\"Single-question-body-image\"/>\r\n                            </div>:null\r\n                        }\r\n                    </div>\r\n                    <div className=\"Question-single-option-panel\">\r\n                        <Row>\r\n                            {this.state.options.map((d,i)=>{\r\n                                return (\r\n                                    <Col span={24} key={i} className=\"Single-option\">\r\n                                        <Col span={24} style={{ textAlign: 'left' }}>\r\n                                            <ul\r\n                                                style={{\r\n                                                    listStyle: 'none',\r\n                                                    padding: 0,\r\n                                                }}\r\n                                            >\r\n                                                <li>\r\n                                                    <Col span={1}>\r\n                                                        {opts[i]}{'  '}\r\n                                                    </Col>\r\n                                                    <Col span={19} style={{ background: '#eee', color: '#000' }}>\r\n                                                        <Checkbox\r\n                                                            checked={d.checked}\r\n                                                            onChange={(e) => { this.onAnswerChange(i, e.target.checked, d._id) }}\r\n                                                        >\r\n                                                            <h3 style={{ fontFamily: \"'Montserrat', sans-serif\" }}>\r\n                                                                {d.optbody}\r\n                                                            </h3>\r\n                                                        </Checkbox>\r\n                                                    </Col>\r\n                                                    <Col span={4}>\r\n                                                        \r\n                                                        <div className=\"option-image-in-exam-panel-holder\">\r\n                                                            {d.optimg ? <img alt=\"Unable to load\" className=\"option-image-in-exam-panel\" src={d.optimg} /> : null}\r\n                                                        </div>\r\n                                                    </Col>\r\n                                                </li>\r\n                                            </ul>\r\n                                        </Col>\r\n                                    </Col>\r\n                                );\r\n                            })}\r\n                        </Row>\r\n                    </div>\r\n                </div>\r\n                <div className=\"control-button-in-exam-portal\">\r\n                    <Button.Group>\r\n                        {this.props.trainee.activeQuestionIndex===0?\r\n                            null\r\n                            :\r\n                            <Button style={{background:'#93329e',color:'#fff'}} onClick={this.previous}>\r\n                                <Icon type=\"left\" />\r\n                                Previous\r\n                            </Button>\r\n                        }\r\n                        <Button type=\"default\" onClick={this.mark}>\r\n                                <Icon type=\"flag\" />\r\n                                {!this.props.trainee.answers[this.props.trainee.activeQuestionIndex].isMarked?\"Mark Question\":\"Unmark Question\"}\r\n                        </Button>\r\n                        {this.props.trainee.activeQuestionIndex===this.props.trainee.questions.length-1?\r\n                            null\r\n                            :\r\n                            <Button style={{background:'#93329e',color:'#fff'}} onClick={this.next}>\r\n                                {this.state.AnswerSelected?\"Save & Next\": \"Next\"}\r\n                                <Icon type=\"right\" />\r\n                            </Button>\r\n                        }\r\n                        {this.props.trainee.activeQuestionIndex===this.props.trainee.questions.length-1 && this.state.AnswerSelected?\r\n                            <Button style={{background:'#93329e',color:'#fff'}} onClick={()=>{this.SaveTocloud()}}>\r\n                                Save\r\n                                <Icon type=\"right\" />\r\n                            </Button>:null\r\n                        }\r\n                    </Button.Group>\r\n                </div>\r\n            </div>\r\n        )\r\n    }   \r\n}\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n    trainee : state.trainee\r\n});\r\n\r\nexport default connect(mapStateToProps,{\r\n    switchQuestion,\r\n    updateIsMarked,\r\n    fetchTestdata\r\n})(SingleQuestion);","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport './portal.css';\r\nimport SingleQuestion from './singleQuestion';\r\nimport { fetchTraineeTestQuestions,fetchTraineeTestAnswerSheet } from '../../../actions/traineeAction'\r\n\r\nclass Question extends Component {\r\n\r\n    componentWillMount(){\r\n        this.props.fetchTraineeTestQuestions(this.props.trainee.testid);\r\n        this.props.fetchTraineeTestAnswerSheet(this.props.trainee.testid,this.props.trainee.traineeid)\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"question-holder\">\r\n                <div className=\"single-question-container\">\r\n                    {this.props.trainee.answers.length>0 && this.props.trainee.questions.length>0 ?\r\n                        <SingleQuestion mode={this.props.mode} triggerSidebar={this.props.triggerSidebar}  key={this.props.trainee.activeQuestionIndex} />:null\r\n                    }\r\n                    \r\n                </div>\r\n            </div>\r\n        )\r\n    };\r\n};\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n    trainee : state.trainee\r\n});\r\n\r\nexport default connect(mapStateToProps,{\r\n    fetchTraineeTestQuestions,\r\n    fetchTraineeTestAnswerSheet\r\n})(Question);","import React,{ useState, useEffect } from 'react'\r\nimport './portal.css';\r\nimport Sidepanel from './sidepanel'\r\nimport Question from './question';\r\nimport { Drawer } from \"antd\";\r\n\r\n\r\nfunction getWindowDimensions() {\r\n    const { innerWidth: width, innerHeight: height } = window;\r\n    return {\r\n        width,\r\n        height\r\n    };\r\n}\r\n\r\nfunction useWindowDimensions() {\r\n    const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\r\n  \r\n    useEffect(() => {\r\n        function handleResize() {\r\n            setWindowDimensions(getWindowDimensions());\r\n        }\r\n        window.addEventListener('resize', handleResize);\r\n        return () => window.removeEventListener('resize', handleResize);\r\n    }, []);\r\n  \r\n    return windowDimensions;\r\n}\r\n\r\n\r\n\r\nexport default function TestBoard(props) {\r\n    const { height, width } = useWindowDimensions();\r\n    const [visible,setVisible]=useState(false);\r\n\r\n    let onClose=()=>setVisible(false);\r\n    let onOpen=()=>setVisible(true);\r\n    if(width>768){\r\n        return (\r\n            <div className=\"exam-dashboard-wrapper\">\r\n                <Question mode={width>768?\"desktop\":\"mobile\"} triggerSidebar={onOpen}/>\r\n                <Sidepanel mode={width>768?\"desktop\":\"mobile\"} />\r\n            </div>\r\n        )\r\n    }\r\n    else{\r\n        return (\r\n            <div className=\"exam-dashboard-wrapper\">\r\n                <Question mode={width>768?\"desktop\":\"mobile\"} triggerSidebar={onOpen} />\r\n                <Drawer\r\n                    title=\"Menu\"\r\n                    placement=\"right\"\r\n                    closable={true}\r\n                    onClose={onClose}\r\n                    visible={visible}\r\n                    width=\"100%\"\r\n                >\r\n                    <Sidepanel mode={width>768?\"desktop\":\"mobile\"}/>    \r\n                </Drawer>\r\n            </div>\r\n        )\r\n    }\r\n    \r\n}\r\n\r\n","import React, { Component, Fragment } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Typography,Skeleton  } from 'antd'\r\nimport './portal.css';\r\nimport Instruction from './instruction';\r\nimport TestBoard from './testBoard';\r\nimport Answer from '../answersheet/answer';\r\nimport { fetchTraineedata, setTestDetsils, fetchTestdata, FeedbackStatus } from '../../../actions/traineeAction';\r\nimport queryString from 'query-string';\r\nimport logo from '../../basic/header/logo.png';\r\n\r\n\r\nconst { Title } = Typography;\r\n\r\nclass MainPortal extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        let params = queryString.parse(this.props.location.search);\r\n        this.state={\r\n            testDetails:params\r\n        }\r\n        this.props.setTestDetsils(params.testid,params.traineeid)\r\n        \r\n    }\r\n\r\n    componentDidMount(){\r\n        // console.log(this.props.trainee.traineeid)\r\n        this.props.fetchTraineedata(this.state.testDetails.traineeid)\r\n        this.props.fetchTestdata(this.state.testDetails.testid,this.state.testDetails.traineeid)\r\n    }\r\n\r\n\r\n    render() {\r\n        if(this.props.trainee.initialloading2 || this.props.trainee.initialloading1){\r\n            return(\r\n                <div className=\"skeletor-wrapper\">\r\n                    <Skeleton active />\r\n                    <Skeleton active />\r\n                </div>  \r\n            )\r\n        }\r\n        else{\r\n            if(this.props.trainee.invalidUrl){\r\n                return window.location.href=``;\r\n            }\r\n            else{\r\n                if(this.props.trainee.LocaltestDone){\r\n                    return(\r\n                        <div>\r\n                            <Answer/>\r\n                        </div>\r\n                    )\r\n                }\r\n\r\n                else{\r\n                    if(this.props.trainee.testconducted){\r\n                        return (\r\n                            <Fragment>\r\n                                <div className=\"header-container\">\r\n                                    <img src={logo} alt=\"company logo\" className=\"logo\" />\r\n                                </div>\r\n\r\n                                <div className=\"Test-portal-not-started-yet-wrapper\">\r\n                                    <div className=\"Test-portal-not-started-yet-inner\">\r\n                                        <Title className=\"Test-portal-not-started-yet-inner-message\" style={{ color: '#fff' }} level={4}>\r\n                                            The Assessment is Over!<br />\r\n                                        </Title>\r\n                                    </div>\r\n                                </div>\r\n                            </Fragment>\r\n                        )\r\n                    }\r\n                    else{\r\n                        if(!this.props.trainee.testbegins){\r\n                            return (\r\n                                <Fragment>\r\n                                     <div className=\"header-container\">\r\n                                        <img src={logo} alt=\"company logo\" className=\"logo\" />\r\n                                    </div>\r\n\r\n                                    <div className=\"Test-portal-not-started-yet-wrapper\">\r\n                                        <div className=\"Test-portal-not-started-yet-inner\">\r\n                                            <Title className=\"Test-portal-not-started-yet-inner-message\" style={{color:'#fff'}} level={4}>The assessment will begin shortly. Please wait for the instruction, then refresh the page.</Title>\r\n                                        </div>\r\n                                    </div>\r\n                                </Fragment>\r\n                            )\r\n                        }\r\n                        else{\r\n                            if(this.props.trainee.startedWriting){\r\n                                return (\r\n                                    <div>\r\n                                        <TestBoard />\r\n                                    </div>\r\n                                );\r\n                            }\r\n                            else{\r\n                                return(\r\n                                    <div>\r\n                                        <Instruction/>                             \r\n                                    </div>\r\n                                )\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n    trainee : state.trainee\r\n});\r\n\r\nexport default connect(mapStateToProps,{\r\n    fetchTraineedata,\r\n    setTestDetsils,\r\n    fetchTestdata,\r\n    FeedbackStatus\r\n})(MainPortal);","import React from 'react';\r\nimport {BrowserRouter,Route} from \"react-router-dom\";\r\nimport './App.css';\r\nimport { Provider } from 'react-redux';\r\nimport store  from './store';\r\n\r\nimport Home from './components/basic/homepage/Home';\r\nimport Homepage from './components/basic/homepage/homepage';\r\nimport Dashboard from './components/dashboard/backbone';\r\nimport TraineeRegister from './components/trainee/register/traineeregister';\r\nimport MainPortal from './components/trainee/examPortal/portal';\r\n\r\nfunction App() {\r\n  return (\r\n    <Provider store={store}>\r\n      <BrowserRouter>\r\n        <nav>\r\n          <Route exact path=\"/\" component={Home} />\r\n          <Route exact path=\"/auth/login\" component={Homepage} />\r\n          <Route exact path=\"/home\" component={Homepage} />\r\n          <Route exact path=\"/user\" component={Dashboard}/>\r\n          <Route path=\"/user/:options\" component={Dashboard}/>\r\n          <Route exact path=\"/candidate/register\" component={TraineeRegister}/>\r\n          <Route exact path=\"/candidate/taketest\" component={MainPortal}/>\r\n        </nav>\r\n      </BrowserRouter>\r\n    </Provider> \r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport moment from 'moment';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nmoment().utcOffset(\"+05:30\");\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/gnius.18d25fd2.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.9992ff04.png\";","const bgcolor=[\r\n                'rgba(255, 99, 132, 0.2)',\r\n                'rgba(54, 162, 235, 0.2)',\r\n                'rgba(255, 206, 86, 0.2)',\r\n                'rgba(75, 192, 192, 0.2)',\r\n                'rgba(153, 102, 255, 0.2)',\r\n                'rgba(255, 159, 64, 0.2)',\r\n                'rgba(255, 99, 132, 0.2)',\r\n                'rgba(54, 162, 235, 0.2)',\r\n                'rgba(255, 206, 86, 0.2)',\r\n                'rgba(75, 192, 192, 0.2)',\r\n                'rgba(153, 102, 255, 0.2)',\r\n                'rgba(255, 159, 64, 0.2)',\r\n                'rgba(255, 99, 132, 0.2)',\r\n                'rgba(54, 162, 235, 0.2)',\r\n                'rgba(255, 206, 86, 0.2)',\r\n                'rgba(75, 192, 192, 0.2)',\r\n                'rgba(153, 102, 255, 0.2)',\r\n                'rgba(255, 159, 64, 0.2)',\r\n                'rgba(255, 99, 132, 0.2)',\r\n                'rgba(54, 162, 235, 0.2)',\r\n                'rgba(255, 206, 86, 0.2)',\r\n                'rgba(75, 192, 192, 0.2)',\r\n                'rgba(153, 102, 255, 0.2)',\r\n                'rgba(255, 159, 64, 0.2)',\r\n                'rgba(255, 99, 132, 0.2)',\r\n                'rgba(54, 162, 235, 0.2)',\r\n                'rgba(255, 206, 86, 0.2)',\r\n                'rgba(75, 192, 192, 0.2)',\r\n                'rgba(153, 102, 255, 0.2)',\r\n                'rgba(255, 159, 64, 0.2)',\r\n                'rgba(255, 99, 132, 0.2)',\r\n                'rgba(54, 162, 235, 0.2)',\r\n                'rgba(255, 206, 86, 0.2)',\r\n                'rgba(75, 192, 192, 0.2)',\r\n                'rgba(153, 102, 255, 0.2)',\r\n                'rgba(255, 159, 64, 0.2)',\r\n                'rgba(255, 99, 132, 0.2)',\r\n                'rgba(54, 162, 235, 0.2)',\r\n                'rgba(255, 206, 86, 0.2)',\r\n                'rgba(75, 192, 192, 0.2)',\r\n                'rgba(153, 102, 255, 0.2)',\r\n                'rgba(255, 159, 64, 0.2)',\r\n                'rgba(255, 99, 132, 0.2)',\r\n                'rgba(54, 162, 235, 0.2)',\r\n                'rgba(255, 206, 86, 0.2)',\r\n                'rgba(75, 192, 192, 0.2)',\r\n                'rgba(153, 102, 255, 0.2)',\r\n                'rgba(255, 159, 64, 0.2)',\r\n                'rgba(255, 99, 132, 0.2)',\r\n                'rgba(54, 162, 235, 0.2)',\r\n                'rgba(255, 206, 86, 0.2)',\r\n                'rgba(75, 192, 192, 0.2)',\r\n                'rgba(153, 102, 255, 0.2)',\r\n                'rgba(255, 159, 64, 0.2)',\r\n                'rgba(255, 99, 132, 0.2)',\r\n                'rgba(54, 162, 235, 0.2)',\r\n                'rgba(255, 206, 86, 0.2)',\r\n                'rgba(75, 192, 192, 0.2)',\r\n                'rgba(153, 102, 255, 0.2)',\r\n                'rgba(255, 159, 64, 0.2)'\r\n]\r\n\r\nconst bordercolor =[\r\n                'rgba(255, 99, 132, 1)',\r\n                'rgba(54, 162, 235, 1)',\r\n                'rgba(255, 206, 86, 1)',\r\n                'rgba(75, 192, 192, 1)',\r\n                'rgba(153, 102, 255, 1)',\r\n                'rgba(255, 159, 64, 1)',\r\n                'rgba(255, 99, 132, 1)',\r\n                'rgba(54, 162, 235, 1)',\r\n                'rgba(255, 206, 86, 1)',\r\n                'rgba(75, 192, 192, 1)',\r\n                'rgba(153, 102, 255, 1)',\r\n                'rgba(255, 159, 64, 1)',\r\n                'rgba(255, 99, 132, 1)',\r\n                'rgba(54, 162, 235, 1)',\r\n                'rgba(255, 206, 86, 1)',\r\n                'rgba(75, 192, 192, 1)',\r\n                'rgba(153, 102, 255, 1)',\r\n                'rgba(255, 159, 64, 1)',\r\n                'rgba(255, 99, 132, 1)',\r\n                'rgba(54, 162, 235, 1)',\r\n                'rgba(255, 206, 86, 1)',\r\n                'rgba(75, 192, 192, 1)',\r\n                'rgba(153, 102, 255, 1)',\r\n                'rgba(255, 159, 64, 1)',\r\n                'rgba(255, 99, 132, 1)',\r\n                'rgba(54, 162, 235, 1)',\r\n                'rgba(255, 206, 86, 1)',\r\n                'rgba(75, 192, 192, 1)',\r\n                'rgba(153, 102, 255, 1)',\r\n                'rgba(255, 159, 64, 1)',\r\n                'rgba(255, 99, 132, 1)',\r\n                'rgba(54, 162, 235, 1)',\r\n                'rgba(255, 206, 86, 1)',\r\n                'rgba(75, 192, 192, 1)',\r\n                'rgba(153, 102, 255, 1)',\r\n                'rgba(255, 159, 64, 1)',\r\n                'rgba(255, 99, 132, 1)',\r\n                'rgba(54, 162, 235, 1)',\r\n                'rgba(255, 206, 86, 1)',\r\n                'rgba(75, 192, 192, 1)',\r\n                'rgba(153, 102, 255, 1)',\r\n                'rgba(255, 159, 64, 1)',\r\n                'rgba(255, 99, 132, 1)',\r\n                'rgba(54, 162, 235, 1)',\r\n                'rgba(255, 206, 86, 1)',\r\n                'rgba(75, 192, 192, 1)',\r\n                'rgba(153, 102, 255, 1)',\r\n                'rgba(255, 159, 64, 1)',\r\n                'rgba(255, 99, 132, 1)',\r\n                'rgba(54, 162, 235, 1)',\r\n                'rgba(255, 206, 86, 1)',\r\n                'rgba(75, 192, 192, 1)',\r\n                'rgba(153, 102, 255, 1)',\r\n                'rgba(255, 159, 64, 1)',\r\n                'rgba(255, 99, 132, 1)',\r\n                'rgba(54, 162, 235, 1)',\r\n                'rgba(255, 206, 86, 1)',\r\n                'rgba(75, 192, 192, 1)',\r\n                'rgba(153, 102, 255, 1)',\r\n                'rgba(255, 159, 64, 1)' \r\n]\r\n\r\nmodule.exports={bgcolor,bordercolor}","module.exports = __webpack_public_path__ + \"static/media/logo.cc171c63.png\";"],"sourceRoot":""}