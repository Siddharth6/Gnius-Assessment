{"version":3,"sources":["components/basic/header/logo.png","reducers/opendrawer.js","reducers/admin.js","services/userOption.js","reducers/loggedinuser.js","reducers/trainer.js","reducers/test.js","reducers/conductTest.js","reducers/trainee.js","reducers/coding.js","reducers/index.js","actions/types.js","store.js","components/basic/homepage/Features.js","components/basic/homepage/Home.js","services/Apis.js","services/axiosCall.js","services/AuthServices.js","actions/loginAction.js","components/common/alert.js","components/basic/login/SignInSide.js","components/basic/login/login.js","components/basic/header/header.js","components/basic/homepage/homepage.js","actions/adminAction.js","components/admin/newTrainer/newtrainer.js","components/admin/allTrainer/alltrainer.js","components/admin/newTopics/newtopics.js","components/admin/allTopics/alltopics.js","actions/trainerAction.js","components/trainer/newquestion/newquestion.js","utils/Markdown.js","components/trainer/questionDetails/questiondetails.js","components/trainer/allquestions/allquestion.js","components/trainer/conducttest/questions.js","components/trainer/testdetails/stats.js","components/trainer/testdetails/trainee.js","components/trainer/testdetails/feedbacks.js","components/trainee/examPortal/coding/CodeEditor.js","actions/traineeAction.js","components/trainee/examPortal/coding/index.js","components/trainee/answersheet/feedback.js","components/trainee/answersheet/answer.js","components/trainer/testdetails/Analysis.js","components/trainer/testdetails/CodingResult.js","components/trainer/testdetails/testdetails.js","components/trainer/alltests/alltest.js","actions/conductTest.js","actions/testAction.js","components/trainer/conducttest/details.js","components/trainer/conducttest/candidates.js","components/trainer/conducttest/JobApplications.js","components/trainer/conducttest/conducttest.js","services/steps.js","components/trainer/newtest/basicForm.js","utils/Editor.js","components/trainer/newtest/AddJobPost.js","components/trainer/newtest/generaterandomquestion.js","components/trainer/newtest/selectQuestion.js","actions/codingAction.js","components/trainer/newtest/AddCoding.js","components/trainer/newtest/questionview.js","components/trainer/newtest/newtest.js","components/coding/Question/Toolbar.js","components/coding/Question/AddQuestion.js","components/coding/Question/QuestionDetails.js","components/coding/Question/AllQuestions.js","components/dashboard/Refer.js","components/dashboard/AddRefer.js","components/dashboard/welcome.js","components/dashboard/errorPage.js","components/dashboard/Profile.js","components/dashboard/ResetPassword.js","components/dashboard/settings.js","components/dashboard/backbone.js","actions/useraction.js","components/trainee/register/traineeregister.js","components/trainee/examPortal/instruction.js","components/trainee/examPortal/user.js","components/trainee/examPortal/operations.js","components/trainee/examPortal/clock.js","components/trainee/examPortal/sidepanel.js","components/trainee/examPortal/singleQuestion.js","components/trainee/examPortal/question.js","components/trainee/examPortal/testBoard.js","components/trainee/examPortal/portal.js","App.js","serviceWorker.js","index.js","services/bgcolor.js","assets/gnius.png","components/dashboard/logo.png"],"names":["module","exports","__webpack_require__","p","initialState","navigationCollapsed","TrainermodalOpened","TrainerconfirmDirty","Trainermode","trainerId","TrainersearchText","trainerTableLoadingStatus","trainerEditFormLoadingStatus","trainerTableData","trainerdetails","subjectTableData","SubjectmodalOpened","SubjectconfirmDirty","Subjectmode","SubjectId","SubjectsearchText","SubjectTableLoading","subjectDetails","ADMIN_PERMISSIONS","display","icon","link","TRAINER_PERMISSIONS","isLoggedIn","userDetails","activeRoute","userOptions","NewQuestionmodalOpened","AllQuestionconfirmDirty","QuestionsearchText","QuestionTableLoading","QuestionTableData","selectedSubjects","QuestionFormData","fifthoptioAddButtonVisible","TestTableLoading","TestTableData","DataActiveTestDetails","testDetailsId","testquestions","referTable","greet","currentStep","mode","newtestFormData","testType","testTitle","testDuration","OrganisationName","testSubject","testQuestions","startTime","endTime","addjobpost","jobPostData","title","description","maxApplicants","maxPositions","skillsets","location","type","customdata","questionsAvailablebasedonSubject","addcoding","codingtData","codingquestionsAvailablebasedonSubject","id","testRegisterLink","basictestdetails","isRegistrationavailable","testbegins","testconducted","isResultgenerated","start","end","registeredCandidates","questionsOfTest","proceedingToTest","invalidUrl","testid","traineeid","initialloading1","initialloading2","startedWriting","LocaltestDone","m_left","s_left","traineeDetails","name","emailid","contact","activeQuestionIndex","questions","answers","hasGivenFeedBack","loadcoding","codingData","Iscoding","codingsubmitted","NewQuestionModalState","combineReducers","drawer","state","arguments","length","undefined","Object","objectSpread","admin","action","payload1","payload2","payload3","payload4","payload","user","activeurl","trainer","options","concat","toConsumableArray","image","body","isAnswer","TestDetailsmodalOpened","TestsearchText","test","conduct","trainee","payload5","payload6","payload7","coding","middleware","thunk","store","createStore","rootReducer","applyMiddleware","apply","useStyles","makeStyles","theme","marginRight","spacing","heroContent","backgroundColor","palette","background","paper","padding","heroButtons","marginTop","cardGrid","paddingTop","paddingBottom","card","height","flexDirection","cardMedia","cardContent","flexGrow","footer","cards","Album","classes","react_default","a","createElement","Fragment","CssBaseline","Container","className","maxWidth","Grid","container","map","index","item","key","xs","sm","md","Card","CardContent","Typography","gutterBottom","variant","component","Copyright","color","align","Link","href","Date","getFullYear","@global","ul","margin","listStyle","appBar","toolbar","flexWrap","toolbarTitle","cardHeader","cardPricing","justifyContent","alignItems","marginBottom","defineProperty","borderTop","divider","breakpoints","up","footers","Pricing","AppBar","position","elevation","Toolbar","noWrap","src","logo","alt","Button","justify","Box","mt","Home_Copyright","apis","BASE_LOCAL_URL","BASE","LOGIN","GETDETAILSUSER","UPDATE_USER","GET_ALL_TRAINER","GET_SINGLE_TRAINER_DETAILS","CREATE_TRAINER","DELETE_TRAINER","GET_ALL_SUBJECTS","GET_SINGLE_SUBJECT_DETAILS","CREATE_SUBJECT","GET_ALL_QUESTIONS","DELETE_QUESTION","FETCH_SINGLE_QUESTION","CREATE_QUESTIONS","FILE_UPLOAD","CREATE_TEST","GET_ALL_TESTS","GET_SINGLE_TEST","REGISTER_TRAINEE_FOR_TEST","RESEND_TRAINER_REGISTRATION_LINK","GET_SINGLE_TEST_DETAILS_BASIC","STOP_REGISTRATION","START_TEST_BY_TRAINER","GET_TEST_CANDIDATES","GET_TEST_QUESTIONS","FETCH_TRAINEE_DETAILS","FETCH_TRAINEE_TEST_DETAILS","PROCEED_TO_TEST","FETCH_TRAINEE_TEST_QUESTION","FETCH_TRAINEE_TEST_ANSWERSHEET","UPDATE_ANSWERS","END_TEST","FETCH_OWN_RESULT","FETCH_SINGLE_QUESTION_BY_TRAINEE","END_TEST_BY_TRAINER","FEEDBACK_STATUS_CHECK","GIVE_FEEDBACK","GET_STATS","GET_EXCEL","MAX_MARKS_FETCH","GET_FEEDBACKS","CHECK_TEST_NAME","IMPORT_CANDIDATES","GET_JOB_DETAILS","CREATE_CODING_QUESTION","LIST_CODING_QUESTION","GET_CODING_QUESTION_DETAILS","CREATE_CODING_TESTCASE","GET_CODING_QUESTION_DATA","POST_SUBMISSION","CODING_SECTION_SUBMIT","CODING_SECTION_GET","CODING_SUBMISSION_GET","UPLOAD_RESUME","GET_QUESTION_STAT","GET_TEST_STAT","ADD_REFER","LIST_REFER","RESET_PASSWORD","axios","require","SecureGet","method","baseURL","params","Token","auth","retriveToken","SecurePost","Post","AuthServices","AuthService","classCallCheck","this","localStorage","getItem","storeToken","t","setItem","deleteToken","removeItem","LoginAuth","u","url","data","password","FetchAuth","token","login","details","dispatch","logout","Alert","s","h","b","Modal","success","content","error","warning","root","backgroundImage","backgroundRepeat","grey","backgroundSize","backgroundPosition","avatar","secondary","main","form","width","submit","SignInSide","props","Paper","square","Avatar","LockOutlined_default","children","Login","_this","possibleConstructorReturn","getPrototypeOf","call","handleSubmit","e","preventDefault","validateFields","err","values","email","then","response","message","setState","catch","getFieldDecorator","react_router","to","es_form","onSubmit","autoComplete","Item","label","hasFeedback","rules","required","input","prefix","style","placeholder","Password","es_button","htmlType","block","React","Component","LoginForm","Form","create","connect","HomepageHeader","header_header","basic_login_login","ChangeTrainerModalState","d1","d2","d3","slice","confirmpassword","ChangeTrainerTableData","ChangeSubjectModalState","topic","ChangeSubjectTableData","d","Option","Select","TextArea","Input","NewTrainer","checked","status","submitDisabled","toggle","compareToFirstPassword","rule","value","callback","getFieldValue","validateToNextPassword","force","changeqImage","f","ps","pp","upl","validateFieldsAndScroll","_id","organisation","bio","prefixSelector","initialValue","es_select","newtrainer_Option","QuestionImageprops","listType","whitespace","len","addonBefore","min","max","validator","onBlur","handleConfirmBlur","es_switch","checkedChildren","unCheckedChildren","onChange","newtrainer_TextArea","rows","upload","assign","beforeUpload","onRemove","onSuccess","NewTrainerForm","ChangeTrainerConfirmDirty","AllTrainer","openModal","closeModal","deleteTrainer","getColumnSearchProps","dataIndex","filterDropdown","_ref","setSelectedKeys","selectedKeys","confirm","clearFilters","ref","node","searchInput","target","onPressEnter","handleSearch","onClick","size","handleReset","filterIcon","filtered","onFilter","record","toString","toLowerCase","includes","onFilterDropdownVisibleChange","visible","setTimeout","select","render","text","main_default","highlightStyle","searchWords","autoEscape","textToHighlight","ChangeTrainerSearchText","TrainertableLoading","_this2","Title","columns","shape","popconfirm","cancelText","okText","onConfirm","level","textAlign","table","bordered","dataSource","pagination","pageSize","loading","rowKey","modal","onOk","handleOk","onCancel","top","destroyOnClose","newTrainer_newtrainer","NewTopics","NewSubjectForm","ChangeSubjectConfirmDirty","AllTopics","ChangeSubjectSearchText","newtopics","ChangeQuestionModalState","ChangeQuestionTableData","subject","UpdateReferTable","NewQuestion","addfifthOption","previousState","previousProps","questionDetails","Customalert","OptionTextChange","i","newOptions","AnswerOptionSwitch","OptionImageonChange","ans","opts","forEach","element","push","optbody","optimg","adding","questionbody","quesimg","questionimage","explanation","weightage","waitage","resetFields","row","col","span","showSearch","optionFilterProp","ExplanationChange","offset","input_number","option","es_checkbox","disabled","NewQuestionForm","ChangeQuestionConfirmDirty","renderers","inlineMath","react_katex","math","_ref2","code","_ref3","language","prism","Markdown","react_markdown_default","plugins","gfm","TabPane","Tabs","QuestionDetails","tabChange","ID","_this3","skeleton","active","tabs","defaultActiveKey","tab","Tab1","Tab2","descriptions","border","column","xxl","xl","lg","difficulty","anscount","createdBy","moment","createdAt","format","optn","Optiondata","utils_Markdown","AllQuestions","OpendetailsModal","questiondetailsId","questiondetailsModelVisible","ClosedetailsModal","openNewModal","closeNewModal","handleSubjectChange","ChangeSelectedSubjects","deleteQuestion","ChangeQuestionSearchText","defaultValue","allowClear","newquestion_newquestion","questiondetails_QuestionDetails","Questions","refreshquestionList","updateQuestiosnTest","total","aMap","fontSize","reduce","accumulator","current","dd","ii","Stats","stats","Scorelable","Scoredata","bgColor1","borcolor1","maxmMarks","passData","passLable","stat","statdata","_this$state","maxi","p90_100","p80_90","p70_80","p60_70","p50_60","below50","pc","score","dp","bgcolor","bordercolor","barData","labels","datasets","borderColor","borderWidth","DoughNutData1","DoughNutData2","es_card","file","react_chartjs_2_es","maintainAspectRatio","Trainee","maxMarks","tag","es_tag","trainee_Title","FeedBacks","feedbacks","es_comment","author","userid","rate","rating","feedback","Text","CodeEditor","_useState","useState","evaluating","question","editorMode","testcaseshow","_useState2","slicedToArray","setQuestion","_useState3","_useState4","setscore","react","placement","notification","info","isEvaluating","CodeEditor_Title","maxHeight","overflowY","statement","event","lang","req_mode","selected","react_ace_lib_default","editorProps","$blockScrolling","ncode","testId","traineeId","que_id","source_code","language_id","console","log","twoToneColor","showResult","fetchTestdata","completed","pending","Math","floor","Number","String","switchQuestion","FeedbackStatus","time","Index","handleModeChange","testDetails","testTime","LoadCodingQuestion","targetTime","getTime","CountDown_default","onEnd","submitCoding","tabPosition","Array","from","v","coding_TabPane","coding_CodeEditor","load","tid","uid","Feedback","handleStarChange","star","onCommentChange","comment","submitFeedback","desc","feedback_Title","feedback_Text","tooltips","feedback_TextArea","Panel","Collapse","Answer","handleCancel","Mvisible","OpenModel","qid","ActiveQuestionId","TotalScore","getsubmitCoding","p1","p2","p3","Promise","all","r","result","tags","toUpperCase","userData","answer_Title","collapse","header","subTitle","examPortal_coding","answer_SingleQuestionDetails","SingleQuestionDetails","_this4","fetching","qdetails","_this5","answersheet_answer","CodingResult","setstate","setloading","useEffect","dist_default","field","filtering","exportButton","headerStyle","TestDetails","showModal","testdetails","mainlink","window","split","splice","p4","p5","testdetails_TabPane","addonAfter","lib","onCopy","subjects","questions_Questions","updateQuestiosnActiveTest","stats_Stats","Analysis_Trainee","testdetails_CodingResult","AllTests","ChangeTestDetailsModalState","ChangeTestSearchText","ChangeTestTableData","afterClose","trainer_testdetails_testdetails","changeConducttestId","updateCandidatesTest","changeStep","changeBasicNewTestDetails","changeRegistrationStatus","changeTestRegisterStatus","changeTestStatus","endTestByTrainee","getCandidates","changeTestRegisterLink","updateCurrentTestBasicDetails","layout","papaparseOptions","dynamicTyping","skipEmptyLines","transformHeader","replace","Candidates","searchText","handleForce","fileInfo","progress","refreshUserList","getResume","open","candidates_Title","react_csv_reader_default","cssClass","onFileLoaded","parserOptions","percent","exportFromJSON","fileName","exportType","components","json","ConductTestS","ChangeLocalTestId","localTestId","ChangetestId","needRedirect","CC","conducttest_Title","C","conducttest_TabPane","candidates","conducttest_JobApplications","mapStateToProps","steps","utcOffset","BasicTestFormO","DatePicker","RangePicker","duration","validateTestName","checkingName","testname","can_use","ee","basicForm_Option","validateStatus","date_picker","showTime","onChangeStart","onOkStart","onChangeEnd","onOkEnd","BasicTestForm","QuillModules","font","list","QuillFormats","AddJobPost","onCheck","onChangeEditor","editor","handleFinal","addJobData","jobtitle","joblocation","jobtype","formSchema","AddJobPost_Title","react_quill_lib_default","modules","formats","AddJobPost_Option","AddJobPost_Panel","react_ant_form_builder_dist","formStructure","onSave","schema","onError","allowDraft","changedData","JobForm","check","GeneraterandomQuestionO","no","qus","allquestions","l","random","pushQuestionToQueue","autogenerate","renderItem","handleChange","targetKeys","direction","moveKeys","generating","changeMode","fetchSubjectWiseQuestion","transfer","generaterandomquestion_SingleQuestionDetails","GeneraterandomQuestion","removeQuestionFromMainQueue","questionCount","tabBarExtraContent","selectQuestion_TabPane","generaterandomquestion","float","ChangeCodingQuestionModalState","ChangeCodingQuestionData","AddCoding","checkcode","pushCodingQuestionToQueue","AddCoding_Title","CodingForm","removeCodingQuestionFromMainQueue","FinalQuestionView","createtest","jobdescription","jobcustom","codingquestions","renderHTML","questionview_Title","Q","obj","filter","hero","oo","Step","Steps","NewTest","torender","newtest_AddJobPost","selectQuestion","newtest_AddCoding","questionview","basicForm","newtest_Title","btnStyle","lineHeight","for","AddQuestion","category","timelimit","memorylimit","bind","assertThisInitialized","Question_Toolbar","setquestion","questionId","_useState5","testcases","output","_useState6","testcase","setTestCase","handlechangeFile","QuestionDetails_TabPane","QuestionDetails_TextArea","formData","test-input","test-output","marginLeft","QuestionDetails_Title","TestCaseListComp","Question_AddQuestion","Question_QuestionDetails","CollectionCreateForm","_React$Component","_class","inherits","createClass","_this$props","onCreate","CollectionsPage","handleCreate","formRef","saveFormRef","wrappedComponentRef","questat","teststat","setteststat","cantotal","setcantotal","welcome_Title","statistic","spin","itemLayout","Meta","cnt","AddRefer","dashboard_Refer","pic","ErrorPage","Profile","about","Profile_Text","NewForm","ResetPassword","confirmDirty","currentPassword","newPassword","ResetPasswordForm","Settings","dashboard_Profile","dashboard_ResetPassword","Header","Layout","Sider","Content","Footer","Dashboard","collapsed","logOut","LocalIsLoggedIn","subUrl","match","find","o","tt","indexOf","changeActiveRoute","allTrainer_alltrainer","allTopics_alltopics","allquestions_allquestion","alltests_alltest","dashboard_welcome","newtest_newtest","Question_AllQuestions","queryString","parse","search","conducttest","settings","trigger","collapsible","menu","defaultSelectedKeys","react_router_dom","paddingLeft","zIndex","NoticeIcon_default","count","tooltip","minHeight","TraineeRegisterForm","getJobDetails","jobstatus","jobData","job","custombtn","resume","custom","refer","refid","inform","resendMail","renderJob","Helmet","charSet","postedBy","overflow","traineeregister_Header","traineeregister_Title","fontFamily","outline","dateOfPosting","fromNow","changeResume","traineeregister_Option","uploadProps","traineeregister_Footer","TraineeRegister","ProceedtoTest","user_icon","Operations","Mark","questionid","isAnswered","mark","isMarked","badge","Clock","endTest","clockF","c","setInterval","localMinutes","localSeconds","clearInterval","Sidepanel","clock","operations","SingleQuestion","SaveTocloud","newAnswer","chosenOption","updateIsMarked","previous","next","AnswerSelected","aa","onAnswerChange","ansCount","ticked","op1","op2","PState","Pprops","es_radio","Group","triggerSidebar","Question","fetchTraineeTestQuestions","fetchTraineeTestAnswerSheet","singleQuestion","getWindowDimensions","_window","innerWidth","innerHeight","TestBoard","_useWindowDimensions","windowDimensions","setWindowDimensions","handleResize","addEventListener","removeEventListener","useWindowDimensions","setVisible","onOpen","examPortal_question","sidepanel","closable","onClose","MainPortal","setTestDetsils","fetchTraineedata","portal_Title","instruction","App","es","exact","path","Home","Homepage","Boolean","hostname","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"yUAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,gXCGlCC,EAAe,CACjBC,qBAAsB,GCJpBD,EAAe,CACjBE,oBAAqB,EACrBC,qBAAqB,EACrBC,YAAc,WACdC,UAAY,KACZC,kBAAoB,GACpBC,2BAA0B,EAC1BC,8BAA6B,EAC7BC,iBAAiB,GACjBC,eAAe,GACfC,iBAAmB,GACnBC,oBAAqB,EACrBC,qBAAqB,EACrBC,YAAc,YACdC,UAAY,KACZC,kBAAoB,GACpBC,qBAAsB,EACtBC,eAAgB,ICjBPC,EAAoB,CAC7B,CACIC,QAAS,UACTC,KAAM,OACNC,KAAM,cAEV,CACIF,QAAS,eACTC,KAAM,OACNC,KAAM,sBAEV,CACIF,QAAS,iBACTC,KAAM,OACNC,KAAM,sBAEV,CACIF,QAAS,gBACTC,KAAM,WACNC,KAAM,uBAEV,CACIF,QAAS,WACTC,KAAM,UACNC,KAAM,mBAIDC,EAAsB,CAC/B,CACIH,QAAS,UACTC,KAAM,OACNC,KAAM,cAEV,CACIF,QAAS,oBACTC,KAAM,WACNC,KAAM,uBAEV,CACIF,QAAS,4BACTC,KAAM,OACNC,KAAM,kBAEV,CACIF,QAAS,kBACTC,KAAM,OACNC,KAAM,mBAEV,CACIF,QAAS,kBACTC,KAAM,cACNC,KAAM,iBAEV,CACIF,QAAS,sBACTC,KAAM,WACNC,KAAM,qBAEV,CACIF,QAAS,WACTC,KAAM,UACNC,KAAM,mBC5DRtB,EAAe,CACjBwB,YAAa,EACbC,YAAc,GACdC,YAAY,IACZC,YAAY,YCNV3B,EAAe,CACjB4B,wBAAyB,EACzBC,yBAAyB,EACzBC,mBAAqB,GACrBC,sBAAuB,EACvBC,kBAAoB,GACpBC,iBAAiB,GACjBC,iBAAiB,GACjBC,4BAA2B,EAC3BC,kBAAiB,EACjBC,cAAc,GACdC,sBAAwB,CACpBC,cAAgB,KAChBC,cAAe,IAEnBC,WAAY,ICfVzC,EAAe,CACjB0C,MAAO,KACPC,YAAa,EACbC,KAAM,SACNC,gBAAiB,CACbC,SAAU,KACVC,UAAW,GACXC,aAAc,GACdC,iBAAkB,KAClBC,YAAa,GACbC,cAAe,GACfC,UAAW,KACXC,QAAS,MAEbC,YAAY,EACZC,YAAa,CACTC,MAAO,GACPC,YAAa,KACbC,cAAe,IACfC,aAAc,GACdC,UAAW,GACXC,SAAU,KACVC,KAAM,YACNC,WAAY,IAEhBC,iCAAkC,GAClCC,WAAW,EACXC,YAAa,CACTf,cAAe,IAEnBgB,uCAAwC,IC9BtCnE,EAAe,CACjBoE,GAAK,KACLC,iBAAiB,GACjBC,iBAAiB,CACbC,yBAAwB,EACxBC,YAAW,EACXC,eAAc,EACdC,mBAAmB,EACnBC,MAAO,KACPC,IAAK,MAETC,qBAAqB,GACrBC,gBAAgB,ICZd9E,EAAe,CACjB+E,kBAAiB,EACjBC,YAAW,EACXC,OAAO,KACPC,UAAU,KACVC,iBAAgB,EAChBC,iBAAgB,EAChBZ,YAAa,EACba,gBAAe,EACfZ,eAAc,EACda,eAAc,EACdC,OAAO,EACPC,OAAO,EACPC,eAAe,CACXC,KAAK,GACLC,QAAQ,GACRC,QAAQ,IAEZC,oBAAoB,EACpBC,UAAU,GACVC,QAAQ,GACRC,kBAAiB,EACjBC,YAAY,EACZC,WAAY,GACZC,UAAU,EACVC,gBAAiB,MCzBfpG,EAAe,CACjBqG,uBAAuB,EACvBtE,sBAAuB,EACvBC,kBAAoB,ICQTsE,cAAgB,CAC3BC,OTLW,WAAiC,IAAhCC,EAAgCC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAxBzG,EACpB,QAD4CyG,UAAAC,OAAA,EAAAD,UAAA,QAAAE,GAC9B7C,MACV,IUTyB,oBVUrB,OAAO8C,OAAAC,EAAA,EAAAD,CAAA,GACAJ,EADP,CAEIvG,qBAAuBuG,EAAMvG,sBAErC,QACI,OAAOuG,ISFfM,MROW,WAAiC,IAAhCN,EAAgCC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAxBzG,EAAc+G,EAAUN,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC5C,OAAOI,EAAOjD,MACV,IAAK,6BACD,OAAO8C,OAAAC,EAAA,EAAAD,CAAA,GACAJ,EADP,CAEItG,mBAAqB6G,EAAOC,SAC5B3G,UAAY0G,EAAOE,SACnB7G,YAAc2G,EAAOG,SACrBxG,eAAiBqG,EAAOI,WAGhC,IAAK,mCACD,OAAOP,OAAAC,EAAA,EAAAD,CAAA,GACAJ,EADP,CAEIrG,oBAAsB4G,EAAOK,UAErC,IAAK,6BACG,OAAOR,OAAAC,EAAA,EAAAD,CAAA,GACAJ,EADP,CAEIlG,kBAAoByG,EAAOK,UAEvC,IAAK,sCACG,OAAOR,OAAAC,EAAA,EAAAD,CAAA,GACAJ,EADP,CAEIjG,0BAA4BwG,EAAOC,SACnCvG,iBAAmBsG,EAAOE,WAGtC,IAAK,6BACD,OAAOL,OAAAC,EAAA,EAAAD,CAAA,GACAJ,EADP,CAEI5F,mBAAqBmG,EAAOC,SAC5BjG,UAAYgG,EAAOE,SACnBnG,YAAciG,EAAOG,SACrBhG,eAAiB6F,EAAOI,WAEhC,IAAK,mCACD,OAAOP,OAAAC,EAAA,EAAAD,CAAA,GACAJ,EADP,CAEI3F,oBAAsBkG,EAAOK,UAErC,IAAK,6BACG,OAAOR,OAAAC,EAAA,EAAAD,CAAA,GACAJ,EADP,CAEIxF,kBAAoB+F,EAAOK,UAEvC,IAAK,sCACG,OAAOR,OAAAC,EAAA,EAAAD,CAAA,GACAJ,EADP,CAEIvF,oBAAsB8F,EAAOC,SAC7BrG,iBAAkBoG,EAAOE,WAErC,QACI,OAAOT,IQ3Dfa,KNLW,WAAiC,IAAhCb,EAAgCC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAxBzG,EAAc+G,EAAUN,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC5C,OAAOI,EAAOjD,MACV,IAAK,oBACD,OAAO8C,OAAAC,EAAA,EAAAD,CAAA,GACAJ,EADP,CAEIc,UAAYP,EAAOK,UAE3B,IAAK,sBACD,OAAOR,OAAAC,EAAA,EAAAD,CAAA,GACAJ,EADP,CAEI9E,YAAcqF,EAAOK,UAE7B,IAAK,QACD,MAAyB,UAAtBL,EAAOK,QAAQtD,KACP8C,OAAAC,EAAA,EAAAD,CAAA,GACAJ,EADP,CAEIhF,YAAa,EACbC,YAAYmF,OAAAC,EAAA,EAAAD,CAAA,GACLG,EAAOK,SAEdzF,YAAcR,IAIXyF,OAAAC,EAAA,EAAAD,CAAA,GACAJ,EADP,CAEIhF,YAAa,EACbC,YAAYmF,OAAAC,EAAA,EAAAD,CAAA,GACLG,EAAOK,SAEdzF,YAAcJ,IAI1B,IAAK,SACD,OAAOqF,OAAAC,EAAA,EAAAD,CAAA,GACAJ,EADP,CAEIhF,YAAa,EACbC,YAAa,KAIrB,QACI,OAAO+E,IMrCfe,QLIW,WAAiC,IAAhCf,EAAgCC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAxBzG,EAAc+G,EAAUN,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC5C,OAAOI,EAAOjD,MACV,IAAK,8BACD,OAAO8C,OAAAC,EAAA,EAAAD,CAAA,GACAJ,EADP,CAEI5E,uBAAyBmF,EAAOC,WAExC,IAAK,oCACD,OAAOJ,OAAAC,EAAA,EAAAD,CAAA,GACAJ,EADP,CAEI3E,wBAA0BkF,EAAOK,UAEzC,IAAK,8BACD,OAAOR,OAAAC,EAAA,EAAAD,CAAA,GACAJ,EADP,CAEI1E,mBAAqBiF,EAAOK,UAEpC,IAAK,uCACD,OAAOR,OAAAC,EAAA,EAAAD,CAAA,GACAJ,EADP,CAEIzE,qBAAuBgF,EAAOC,SAC9BhF,kBAAoB+E,EAAOE,WAEnC,IAAK,mBACD,OAAOL,OAAAC,EAAA,EAAAD,CAAA,GACAJ,EADP,CAEItE,iBAAiB0E,OAAAC,EAAA,EAAAD,CAAA,GACVJ,EAAMtE,iBADG,CAEZsF,QAAO,GAAAC,OAAAb,OAAAc,EAAA,EAAAd,CACAJ,EAAMtE,iBAAiBsF,SADvB,CAEH,CACIG,MAAO,KACPC,KAAO,KACPC,UAAU,OAItB1F,4BAA2B,IAEnC,IAAK,0BACD,OAAOyE,OAAAC,EAAA,EAAAD,CAAA,GACAJ,EADP,CAEIvE,iBAAmB8E,EAAOK,UAElC,IAAK,4BACD,OAAAR,OAAAC,EAAA,EAAAD,CAAA,GACOJ,EADP,CAEItE,iBAAmB6E,EAAOK,UAElC,IAAK,kCACD,OAAOR,OAAAC,EAAA,EAAAD,CAAA,GACAJ,EADP,CAEIsB,uBAAyBf,EAAOC,SAChC1E,sBAAqBsE,OAAAC,EAAA,EAAAD,CAAA,GACdJ,EAAMlE,sBADQ,CAEjBC,cAAgBwE,EAAOE,aAGnC,IAAK,0BACD,OAAOL,OAAAC,EAAA,EAAAD,CAAA,GACAJ,EADP,CAEIuB,eAAiBhB,EAAOK,UAEhC,IAAK,mCACD,OAAOR,OAAAC,EAAA,EAAAD,CAAA,GACAJ,EADP,CAEIpE,iBAAmB2E,EAAOC,SAC1B3E,cAAe0E,EAAOE,WAE9B,IAAK,sCACD,OAAAL,OAAAC,EAAA,EAAAD,CAAA,GACOJ,EADP,CAEIlE,sBAAsBsE,OAAAC,EAAA,EAAAD,CAAA,GACfJ,EAAMlE,sBADQ,CAEjBE,cAAcuE,EAAOK,YAGjC,IAAK,qBACD,OAAOR,OAAAC,EAAA,EAAAD,CAAA,GACAJ,EADP,CAEI/D,WAAYsE,EAAOK,UAE3B,QACI,OAAOZ,IKtFfwB,KJkBW,WAAkC,IAAjCxB,EAAiCC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAzBzG,EAAc+G,EAAWN,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC7C,OAAQI,EAAOjD,MACX,IAAK,qBACD,OAAO8C,OAAAC,EAAA,EAAAD,CAAA,GACAJ,EADP,CAEI7D,YAAaoE,EAAOK,UAE5B,IAAK,gCACD,OAAOR,OAAAC,EAAA,EAAAD,CAAA,GACAJ,EADP,CAEI3D,gBAAgB+D,OAAAC,EAAA,EAAAD,CAAA,GACTJ,EAAM3D,gBACNkE,EAAOK,WAGtB,IAAK,mCACD,OAAOR,OAAAC,EAAA,EAAAD,CAAA,GACAJ,EADP,CAEIxC,iCAAkC+C,EAAOK,UAEjD,IAAK,kCACD,OAAOR,OAAAC,EAAA,EAAAD,CAAA,GACAJ,EADP,CAEI3D,gBAAgB+D,OAAAC,EAAA,EAAAD,CAAA,GACTJ,EAAM3D,gBADE,CAEXM,cAAe4D,EAAOK,YAGlC,IAAK,kCACD,OAAOR,OAAAC,EAAA,EAAAD,CAAA,GACAJ,EADP,CAEIxC,iCAAkC+C,EAAOK,UAEjD,IAAK,8BACD,OAAOR,OAAAC,EAAA,EAAAD,CAAA,GACAJ,EADP,CAEI5D,KAAMmE,EAAOK,UAErB,IAAK,eACD,OAAAR,OAAAC,EAAA,EAAAD,CAAA,GACOJ,EADP,CAEIlD,WAAayD,EAAOC,SACpBzD,YAAawD,EAAOE,WAE5B,IAAK,8BACD,OAAAL,OAAAC,EAAA,EAAAD,CAAA,GACOJ,EADP,CAEIvC,UAAY8C,EAAOK,UAE3B,IAAK,wCACD,OAAOR,OAAAC,EAAA,EAAAD,CAAA,GACAJ,EADP,CAEItC,YAAY0C,OAAAC,EAAA,EAAAD,CAAA,GACLJ,EAAMtC,YADF,CAEPf,cAAe4D,EAAOK,YAGlC,IAAK,yCACD,OAAOR,OAAAC,EAAA,EAAAD,CAAA,GACAJ,EADP,CAEIrC,uCAAwC4C,EAAOK,UAEvD,QACI,OAAOZ,IIhFfyB,QHFW,WAAiC,IAAhCzB,EAAgCC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAxBzG,EAAc+G,EAAUN,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC5C,OAAOI,EAAOjD,MACV,IAAK,sBACD,OAAO8C,OAAAC,EAAA,EAAAD,CAAA,GACAJ,EADP,CAEIpC,GAAG2C,EAAOK,UAElB,IAAK,yBACD,OAAOR,OAAAC,EAAA,EAAAD,CAAA,GACAJ,EADP,CAEInC,iBAAiB0C,EAAOK,UAEhC,IAAK,4BACD,OAAAR,OAAAC,EAAA,EAAAD,CAAA,GACOJ,EADP,CAEIlC,iBAAiByC,EAAOK,UAEhC,IAAK,uCACD,OAAAR,OAAAC,EAAA,EAAAD,CAAA,GACOJ,EADP,CAEIlC,iBAAiBsC,OAAAC,EAAA,EAAAD,CAAA,GACVJ,EAAMlC,iBADG,CAEZC,wBAAwBwC,EAAOK,YAG3C,IAAK,2BACD,OAAAR,OAAAC,EAAA,EAAAD,CAAA,GACOJ,EADP,CAEIlC,iBAAiByC,EAAOK,UAEhC,IAAK,4BACD,OAAAR,OAAAC,EAAA,EAAAD,CAAA,GACOJ,EADP,CAEI3B,qBAAqBkC,EAAOK,UAEpC,IAAK,2BACD,OAAAR,OAAAC,EAAA,EAAAD,CAAA,GACOJ,EADP,CAEI1B,gBAAiBiC,EAAOK,UAEhC,QACI,OAAOZ,IGtCf0B,QFWW,WAAiC,IAAhC1B,EAAgCC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAxBzG,EAAc+G,EAAUN,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC5C,OAAOI,EAAOjD,MACV,IAAK,yBACD,OAAA8C,OAAAC,EAAA,EAAAD,CAAA,GACOJ,EADP,CAEIR,iBAAiBe,EAAOK,UAEhC,IAAK,2BACD,OAAAR,OAAAC,EAAA,EAAAD,CAAA,GACOJ,EADP,CAEIvB,OAAO8B,EAAOC,SACd9B,UAAU6B,EAAOE,WAEzB,IAAK,kBACD,OAAAL,OAAAC,EAAA,EAAAD,CAAA,GACOJ,EADP,CAEIhC,WAAYuC,EAAOC,SACnB3B,eAAgB0B,EAAOE,SACvBxC,cAAesC,EAAOG,SACtB5B,cAAeyB,EAAOI,SACtB5B,OAAQwB,EAAOoB,SACf3C,OAAQuB,EAAOqB,SACfjC,SAAUY,EAAOsB,SACjBjC,iBAAiB,EACjBjB,iBAAgB,IAExB,IAAK,mBACD,OAAAyB,OAAAC,EAAA,EAAAD,CAAA,GACOJ,EADP,CAEIxB,YAAW,IAEnB,IAAK,kBACD,OAAO4B,OAAAC,EAAA,EAAAD,CAAA,GACAJ,EADP,CAEIlB,eAAgB,IAExB,IAAK,qBACD,OAAAsB,OAAAC,EAAA,EAAAD,CAAA,GACOJ,EADP,CAEIzB,iBAAiBgC,EAAOK,UAEhC,IAAK,kBACD,OAAOR,OAAAC,EAAA,EAAAD,CAAA,GACAJ,EADP,CAEIX,oBAAoBkB,EAAOK,UAEnC,IAAK,0BACD,OAAAR,OAAAC,EAAA,EAAAD,CAAA,GACOJ,EADP,CAEIpB,iBAAgB,EAChBK,eAAesB,EAAOK,UAE9B,IAAK,gCACD,OAAAR,OAAAC,EAAA,EAAAD,CAAA,GACOJ,EADP,CAEIV,UAAUiB,EAAOK,UAEzB,IAAK,kCACD,OAAAR,OAAAC,EAAA,EAAAD,CAAA,GACOJ,EADP,CAEIT,QAAQgB,EAAOK,UAEvB,IAAK,cACD,OAAAR,OAAAC,EAAA,EAAAD,CAAA,GACOJ,EADP,CAEIP,WAAYc,EAAOC,SACnBd,WAAYa,EAAOE,WAE3B,IAAK,gBACD,OAAAL,OAAAC,EAAA,EAAAD,CAAA,GACOJ,EADP,CAEIJ,gBAAiBW,EAAOK,UAEhC,QACI,OAAOZ,IEpFf8B,ODbW,WAAkC,IAAjC9B,EAAiCC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAzBzG,EAAc+G,EAAWN,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC7C,OAAOI,EAAOjD,MACV,IAAK,qCACD,OAAO8C,OAAAC,EAAA,EAAAD,CAAA,GACAJ,EADP,CAEIH,sBAAwBU,EAAOK,UAEvC,IAAK,8CACD,OAAOR,OAAAC,EAAA,EAAAD,CAAA,GACAJ,EADP,CAEIzE,qBAAuBgF,EAAOC,SAC9BhF,kBAAoB+E,EAAOE,WAEnC,QACI,OAAOT,MGdb+B,EAAa,CAACC,KAmBLC,EANDC,YACVC,EAfiB,GAiBjBC,IAAeC,WAAf,EAAmBN,qKCPjBO,EAAYC,YAAW,SAACC,GAAD,MAAY,CACrC3H,KAAM,CACF4H,YAAaD,EAAME,QAAQ,IAE/BC,YAAa,CACTC,gBAAiBJ,EAAMK,QAAQC,WAAWC,MAC1CC,QAASR,EAAME,QAAQ,EAAG,EAAG,IAEjCO,YAAa,CACTC,UAAWV,EAAME,QAAQ,IAE7BS,SAAU,CACNC,WAAYZ,EAAME,QAAQ,GAC1BW,cAAeb,EAAME,QAAQ,IAEjCY,KAAM,CACFC,OAAQ,OACR3I,QAAS,OACT4I,cAAe,UAEnBC,UAAW,CACPL,WAAY,UAEhBM,YAAa,CACTC,SAAU,GAEdC,OAAQ,CACJhB,gBAAiBJ,EAAMK,QAAQC,WAAWC,MAC1CC,QAASR,EAAME,QAAQ,OAIzBmB,EAAQ,CACV,CACI7G,MAAO,YACPnC,KAAM,YACNoC,YAAa,gFAEjB,CACID,MAAO,aACPnC,KAAM,OACNoC,YAAa,6CAEjB,CACID,MAAO,iBACPnC,KAAM,UACNoC,YAAa,uCAEjB,CACID,MAAO,oBACPnC,KAAM,iBACNoC,YAAa,mDAEjB,CACID,MAAO,WACPnC,KAAM,aACNoC,YAAa,8EAEjB,CACID,MAAO,UACPnC,KAAM,QACNoC,YAAa,+CAIN,SAAS6G,IACtB,IAAMC,EAAUzB,IAEhB,OACE0B,EAAAC,EAAAC,cAACF,EAAAC,EAAME,SAAP,KACEH,EAAAC,EAAAC,cAACE,EAAA,EAAD,MAEAJ,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAWC,UAAWP,EAAQZ,SAAUoB,SAAS,MAE/CP,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAMC,WAAS,EAAC/B,QAAS,GACtBmB,EAAMa,IAAI,SAACpB,EAAMqB,GAAP,OACTX,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAMI,MAAI,EAACC,IAAKF,EAAOG,GAAI,GAAIC,GAAI,EAAGC,GAAI,GACxChB,EAAAC,EAAAC,cAACe,EAAA,EAAD,CAAMX,UAAWP,EAAQT,MACvBU,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAAaZ,UAAWP,EAAQL,aAC9BM,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAYC,cAAY,EAACC,QAAQ,KAAKC,UAAU,MAC5CtB,EAAAC,EAAAC,cAACrJ,EAAA,QAAD,CAAMyC,KAAMgG,EAAKzI,OAAS,KAD9B,IACqCyI,EAAKtG,OAE1CgH,EAAAC,EAAAC,cAACiB,EAAA,EAAD,KACG7B,EAAKrG,sBC7E5B,SAASsI,IACL,OACIvB,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAYE,QAAQ,QAAQG,MAAM,gBAAgBC,MAAM,UACnD,kBACDzB,EAAAC,EAAAC,cAACwB,EAAA,EAAD,CAAMF,MAAM,UAAUG,KAAK,KACvB3B,EAAAC,EAAAC,cAAA,mCACI,KACP,IAAI0B,MAAOC,cACX,KAKb,IAAMvD,EAAYC,YAAW,SAACC,GAAD,MAAY,CACrCsD,UAAW,CACPC,GAAI,CACAC,OAAQ,EACRhD,QAAS,EACTiD,UAAW,SAGnBC,OAAQ,CACJtD,gBAAiB,WAErBuD,QAAS,CACLC,SAAU,QAEdC,aAAc,CACV1C,SAAU,GAEd7I,KAAM,CACFkL,OAAQxD,EAAME,QAAQ,EAAG,MAE7BC,YAAa,CACTK,QAASR,EAAME,QAAQ,EAAG,EAAG,IAEjC4D,WAAY,CACR1D,gBAAiB,WAErB2D,YAAa,CACT3L,QAAS,OACT4L,eAAgB,SAChBC,WAAY,WACZC,aAAclE,EAAME,QAAQ,IAEhCkB,OAAOxD,OAAAuG,EAAA,EAAAvG,CAAA,CACHwG,UAAS,aAAA3F,OAAeuB,EAAMK,QAAQgE,SACtC3D,UAAWV,EAAME,QAAQ,GACzBU,WAAYZ,EAAME,QAAQ,GAC1BW,cAAeb,EAAME,QAAQ,IAC5BF,EAAMsE,YAAYC,GAAG,MAAQ,CAC1B3D,WAAYZ,EAAME,QAAQ,GAC1BW,cAAeb,EAAME,QAAQ,QAMnCsE,EAAU,CACZ,CACIhK,MAAO,UACPC,YAAa,CAAC,OAAQ,aAAc,aAExC,CACID,MAAO,WACPC,YAAa,CAAC,OAAQ,oBAE1B,CACID,MAAO,YACPC,YAAa,CAAC,QAAS,WAAY,mBAEvC,CACID,MAAO,QACPC,YAAa,CAAC,iBAAkB,eAAgB,mBAIzC,SAASgK,IACtB,IAAMlD,EAAUzB,IAEd,OACI0B,EAAAC,EAAAC,cAACF,EAAAC,EAAME,SAAP,KACIH,EAAAC,EAAAC,cAACE,EAAA,EAAD,MACAJ,EAAAC,EAAAC,cAACgD,EAAA,EAAD,CAAQC,SAAS,SAAS3B,MAAM,UAAU4B,UAAW,EAAG9C,UAAWP,EAAQmC,QACvElC,EAAAC,EAAAC,cAACmD,EAAA,EAAD,CAAS/C,UAAWP,EAAQoC,SACxBnC,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAYE,QAAQ,KAAKG,MAAM,UAAU8B,QAAM,EAAChD,UAAWP,EAAQsC,cAC/DrC,EAAAC,EAAAC,cAAA,OAAKqD,IAAKC,IAAMC,IAAI,eAAenD,UAAU,UAEjDN,EAAAC,EAAAC,cAACwD,EAAA,EAAD,CAAQ/B,KAAK,cAAcH,MAAM,UAAUH,QAAQ,WAAWf,UAAWP,EAAQjJ,MAC7EkJ,EAAAC,EAAAC,cAACrJ,EAAA,QAAD,CAAMyC,KAAK,SADf,IAC0B,MAD1B,qBAMR0G,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAWE,SAAS,KAAKe,UAAU,OAAOhB,UAAWP,EAAQpB,aACzDqB,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAYG,UAAU,KAAKD,QAAQ,KAAKI,MAAM,SAASD,MAAM,cAAcJ,cAAY,GAAvF,YAIApB,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAYE,QAAQ,KAAKI,MAAM,SAASD,MAAM,gBAAgBF,UAAU,KAAxE,+JAKJtB,EAAAC,EAAAC,cAACJ,EAAD,MAGAE,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAWE,SAAS,KAAKe,UAAU,OAAOhB,UAAWP,EAAQpB,aACzDqB,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAYG,UAAU,KAAKD,QAAQ,KAAKI,MAAM,SAASD,MAAM,cAAcJ,cAAY,GAAvF,YAKJpB,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAWE,SAAS,KAAKe,UAAU,OAAOhB,UAAWP,EAAQpB,aACzDqB,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAYG,UAAU,KAAKD,QAAQ,KAAKI,MAAM,SAASD,MAAM,cAAcJ,cAAY,GAAvF,+CAUJpB,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAWE,SAAS,KAAKe,UAAU,SAAShB,UAAWP,EAAQH,QAC3DI,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAMC,WAAS,EAAC/B,QAAS,EAAGiF,QAAQ,gBAC/BX,EAAQtC,IAAI,SAACd,GAAD,OACTI,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAMI,MAAI,EAACE,GAAI,EAAGC,GAAI,EAAGF,IAAKjB,EAAO5G,OACjCgH,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAYE,QAAQ,KAAKG,MAAM,cAAcJ,cAAY,GACpDxB,EAAO5G,OAEZgH,EAAAC,EAAAC,cAAA,UACKN,EAAO3G,YAAYyH,IAAI,SAACE,GAAD,OACpBZ,EAAAC,EAAAC,cAAA,MAAIW,IAAKD,GACLZ,EAAAC,EAAAC,cAACwB,EAAA,EAAD,CAAMC,KAAK,IAAIN,QAAQ,YAAYG,MAAM,iBACpCZ,WAQ7BZ,EAAAC,EAAAC,cAAC0D,EAAA,EAAD,CAAKC,GAAI,GACL7D,EAAAC,EAAAC,cAAC4D,EAAD,4FC7FLC,GAvEF,CACTC,eAAmE,GACnEC,KAA2D,GAC3DC,MAAQ,iBACRC,eAAiB,uBACjBC,YAAa,8BACbC,gBAAiB,oCACjBC,2BAA6B,gCAC7BC,eAAiB,+BACjBC,eAAiB,+BAEjBC,iBAAmB,8BACnBC,2BAA6B,0BAC7BC,eAAiB,yBACjBC,kBAAoB,gCACpBC,gBAAgB,2BAChBC,sBAAsB,4BACtBC,iBAAkB,2BAClBC,YAAY,iBAEZC,YAAc,sBACdC,cAAc,2BACdC,gBAAgB,+BAChBC,0BAA0B,wBAC1BC,iCAAkC,kCAClCC,8BAA8B,6BAE9BC,kBAAmB,oCACnBC,sBAAsB,qBACtBC,oBAAqB,0BACrBC,mBAAoB,yBACpBC,sBAAsB,0BACtBC,2BAA2B,wBAE3BC,gBAAgB,8BAChBC,4BAA4B,kCAC5BC,+BAA+B,iCAC/BC,eAAe,gCACfC,SAAW,2BACXC,iBAAiB,wBACjBC,iCAAiC,+BACjCC,oBAAoB,mBACpBC,sBAAsB,kCACtBC,cAAc,2BAEdC,UAAU,kCACVC,UAAU,kCACVC,gBAAgB,yBAChBC,cAAc,gCACdC,gBAAiB,8BAEjBC,kBAAmB,iCACnBC,gBAAgB,kCAEhBC,uBAAwB,iCACxBC,qBAAsB,+BACtBC,4BAA6B,+BAC7BC,uBAAwB,iCACxBC,yBAA0B,0CAC1BC,gBAAiB,4CACjBC,sBAAuB,wCACvBC,mBAAoB,yCACpBC,sBAAuB,2BACvBC,cAAe,wBACfC,kBAAmB,oBACnBC,cAAe,qBACfC,UAAW,oBACXC,WAAY,qBACZC,eAAgB,gCCpEdC,GAAQC,EAAQ,KAETC,GAAY,SAACxS,GACtB,OAAOsS,GAAMzL,OAAAC,EAAA,EAAAD,CAAA,CACT4L,OAAO,MACPC,QAAUlE,GAAKE,MACZ1O,EAHK,CAIR2S,OAAO9L,OAAAC,EAAA,EAAAD,CAAA,GACA7G,EAAE2S,OADH,CAEFC,MAAQC,GAAKC,qBAcZC,GAAY,SAAC/S,GACtB,OAAOsS,GAAMzL,OAAAC,EAAA,EAAAD,CAAA,CACT4L,OAAO,OACPC,QAAUlE,GAAKE,MACZ1O,EAHK,CAIR2S,OAAO9L,OAAAC,EAAA,EAAAD,CAAA,GACA7G,EAAE2S,OADH,CAEFC,MAAQC,GAAKC,qBAKZE,GAAM,SAAChT,GAChB,OAAOsS,GAAMzL,OAAAC,EAAA,EAAAD,CAAA,CACT6L,QAAUlE,GAAKE,KACf+D,OAAO,QACJzS,KCIIiT,GAAA,IAxCX,SAAAC,IAAcrM,OAAAsM,EAAA,EAAAtM,CAAAuM,KAAAF,GAAAE,KAMdN,aAAe,WACX,OAAOO,aAAaC,QAAQ,UAPnBF,KAUbG,WAAa,SAACC,GACVH,aAAaI,QAAQ,QAASD,IAXrBJ,KAcbM,YAAc,WACVL,aAAaM,WAAW,UAffP,KAkBbQ,UAAY,SAACC,EAAE7T,GACX,OAAOgT,GAAK,CACRc,IAAItF,GAAKG,MACToF,KAAK,CACDnO,QAAUiO,EACVG,SAAWhU,MAvBVoT,KA4Bba,UAAY,SAACT,GACT,ODlBWxT,ECkBA,CACP8T,IAAMtF,GAAKI,eACX+D,OAAS,CACLC,MAAQY,IDpBblB,GAAMzL,OAAAC,EAAA,EAAAD,CAAA,CACT4L,OAAO,MACPC,QAAUlE,GAAKE,MACZ1O,IAJO,IAACA,GCVXoT,KAAKc,MAAM,MCJNC,GAAQ,SAACC,GAAD,OAAY,SAAAC,GAC7BA,EAAS,CACNtQ,KAAO,QACPsD,QAAU+M,MAKJE,GAAS,kBAAM,SAAAD,GACxBA,EAAS,CACLtQ,KAAM,SACNkD,SAAU,+BCXH,SAASsN,KAAuB,IAAjBC,EAAiB9N,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAf,UAAU+N,EAAK/N,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAAH8N,EAAGhO,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC3C,MAAO,YAAJ4N,EAEKG,KAAMC,QAAQ,CACVnR,MAAOgR,EACPI,QAAQH,IAIR,UAAJF,EAEAG,KAAMG,MAAM,CACRrR,MAAOgR,EACPI,QAAQH,IAMZC,KAAMI,QAAQ,CACVtR,MAAOgR,EACPI,QAAQH,iDCKlB3L,GAAYC,YAAW,SAACC,GAAD,MAAY,CACvC+L,KAAM,CACJhL,OAAQ,SAEVpC,MAAO,CACLqN,gBAAiB,+FACjBC,iBAAkB,YAClB7L,gBACyB,UAAvBJ,EAAMK,QAAQvF,KAAmBkF,EAAMK,QAAQ6L,KAAK,IAAMlM,EAAMK,QAAQ6L,KAAK,KAC/EC,eAAgB,QAChBC,mBAAoB,UAEtB7L,MAAO,CACLiD,OAAQxD,EAAME,QAAQ,EAAG,GACzB9H,QAAS,OACT4I,cAAe,SACfiD,WAAY,UAEdoI,OAAQ,CACN7I,OAAQxD,EAAME,QAAQ,GACtBE,gBAAiBJ,EAAMK,QAAQiM,UAAUC,MAE3CC,KAAM,CACJC,MAAO,OACP/L,UAAWV,EAAME,QAAQ,IAE3BwM,OAAQ,CACNlJ,OAAQxD,EAAME,QAAQ,EAAG,EAAG,OAIjB,SAASyM,GAAWC,GACjC,IAAMrL,EAAUzB,KAEhB,OACE0B,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAMC,WAAS,EAACa,UAAU,OAAOhB,UAAWP,EAAQwK,MAClDvK,EAAAC,EAAAC,cAACE,EAAA,EAAD,MACAJ,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAMI,MAAI,EAACE,IAAI,EAAOC,GAAI,EAAGC,GAAI,EAAGV,UAAWP,EAAQ5C,QACvD6C,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAMI,MAAI,EAACE,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGM,UAAW+J,KAAOjI,UAAW,EAAGkI,QAAM,GACrEtL,EAAAC,EAAAC,cAAA,OAAKI,UAAWP,EAAQhB,OAEtBiB,EAAAC,EAAAC,cAACqL,GAAA,EAAD,CAAQjL,UAAWP,EAAQ8K,QACzB7K,EAAAC,EAAAC,cAACsL,GAAAvL,EAAD,OAGFD,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAYG,UAAU,KAAKD,QAAQ,MAAnC,mBAIC+J,EAAMK,uBChEXC,eACF,SAAAA,EAAYN,GAAM,IAAAO,EAAA,OAAAvP,OAAAsM,EAAA,EAAAtM,CAAAuM,KAAA+C,IACdC,EAAAvP,OAAAwP,GAAA,EAAAxP,CAAAuM,KAAAvM,OAAAyP,GAAA,EAAAzP,CAAAsP,GAAAI,KAAAnD,KAAMyC,KAMVW,aAAe,SAAAC,GACXA,EAAEC,iBACFN,EAAKP,MAAMJ,KAAKkB,eAAe,SAACC,EAAKC,GAC5BD,GAED/D,GACCe,UAAUiD,EAAOC,MAAMD,EAAO7C,UAC9B+C,KAAK,SAACC,GAEH,IAAGA,EAASjD,KAAKa,QAQb,OAAOL,GAAM,QAAQ,SAAUyC,EAASjD,KAAKkD,SAP7Cb,EAAKP,MAAM1B,MAAM6C,EAASjD,KAAKzM,MAC/BuL,GAAKU,WAAWyD,EAASjD,KAAKG,OAC9BkC,EAAKc,SAAS,CACVzV,YAAa,MAOxB0V,MAAM,SAACrC,GAEJ,OAAOP,GAAM,QAAQ,SAAS,qBA3B1C6B,EAAK3P,MAAM,CACPhF,YAAY,GAHF2U,yEAmCV,IACIgB,EAAsBhE,KAAKyC,MAAMJ,KAAjC2B,kBACR,OAAGhE,KAAK3M,MAAMhF,WACHgJ,EAAAC,EAAAC,cAAC0M,EAAA,EAAD,CAAUC,GAAIlE,KAAKyC,MAAMvO,KAAK1F,YAAY,GAAGL,OAIhDkJ,EAAAC,EAAAC,cAACiL,GAAD,KACQnL,EAAAC,EAAAC,cAAC4M,GAAA,QAAD,CACIC,SAAUpE,KAAKoD,aACfiB,aAAa,OAEbhN,EAAAC,EAAAC,cAAC4M,GAAA,QAAKG,KAAN,CAAWC,MAAM,QAAQC,aAAW,GAC/BR,EAAkB,QAAS,CACxBS,MAAO,CACH,CACI9T,KAAM,QACNkT,QAAS,kCAEb,CACIa,UAAU,EACVb,QAAS,+BARpBG,CAWE3M,EAAAC,EAAAC,cAACoN,GAAA,QAAD,CACCC,OAAQvN,EAAAC,EAAAC,cAACrJ,EAAA,QAAD,CAAMyC,KAAK,OAAOkU,MAAO,CAAEhM,MAAO,qBAC1CiM,YAAY,YAGpBzN,EAAAC,EAAAC,cAAC4M,GAAA,QAAKG,KAAN,CAAWC,MAAM,WAAWC,aAAW,GAClCR,EAAkB,WAAY,CAC3BS,MAAO,CACH,CACIC,UAAU,EAAMb,QAAS,iCAHpCG,CAOG3M,EAAAC,EAAAC,cAACoN,GAAA,QAAMI,SAAP,CACAH,OAAQvN,EAAAC,EAAAC,cAACrJ,EAAA,QAAD,CAAMyC,KAAK,OAAOkU,MAAO,CAAEhM,MAAO,qBAC1CiM,YAAY,eAKpBzN,EAAAC,EAAAC,cAAC4M,GAAA,QAAKG,KAAN,KACIjN,EAAAC,EAAAC,cAACyN,GAAA,QAAD,CAAQrU,KAAK,UAAUsU,SAAS,SAASC,OAAK,GAA9C,mBAjFZC,IAAMC,WA4FpBC,GAAYC,WAAKC,OAAO,CAAEhT,KAAM,SAApB+S,CAA+BvC,IAMlCyC,eAJS,SAAAnS,GAAK,MAAK,CAC9Ba,KAAOb,EAAMa,OAGsB,CACnC6M,SACAG,WAFWsE,CAGZH,mCCpGYI,OAVf,SAAwBhD,GACpB,OACIpL,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKI,UAAU,sBACXN,EAAAC,EAAAC,cAAA,OAAKqD,IAAKwH,KAAMtH,IAAI,eAAenD,UAAU,YCmB7D,IAIe6N,eAJS,SAAAnS,GAAK,MAAK,CAChCa,KAAOb,EAAMa,OAGwB,GAAxBsR,CAtBf,SAAkB/C,GAChB,OAAGhD,GAAKC,gBAAwC,cAAtBD,GAAKC,eAEtBrI,EAAAC,EAAAC,cAAC0M,EAAA,EAAD,CAAUC,GAAG,eAKlB7M,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKI,UAAU,YACbN,EAAAC,EAAAC,cAACmO,GAAD,MACArO,EAAAC,EAAAC,cAACoO,GAAD,0GChBCC,GAA0B,SAACC,EAAGC,EAAGC,GAAP,OAAa,SAAA9E,GACxC,iBAAL8E,EACC3G,GAAU,CACNsB,IAAG,GAAApM,OAAM8G,GAAKO,2BAAX,KAAArH,OAAyCwR,KAC7CnC,KAAK,SAACC,GAEL,IAAGA,EAASjD,KAAKa,QAcb,OAAOL,GAAM,UAAU,WAAWyC,EAASjD,KAAKkD,SAbhD5C,EAAS,CACLtQ,KAAO,6BACPkD,UAAW,EACXC,SAAWgS,EACX/R,SAAW,eACXC,SAASP,OAAAC,EAAA,EAAAD,CAAA,GACFmQ,EAASjD,KAAKA,KAAK,GADlB,CAEJlO,QAASmR,EAASjD,KAAKA,KAAK,GAAGlO,QAAQuT,MAAM,GAC7CpB,OAAOhB,EAASjD,KAAKA,KAAK,GAAGlO,QAAQuT,MAAM,EAAE,SAO1DjC,MAAM,SAACrC,GACN,OAAOP,GAAM,QAAQ,SAAS,kBAIlCF,EAAS,CACLtQ,KAAO,6BACPkD,SAAWgS,EACX/R,SAAWgS,EACX/R,SAAWgS,EACX/R,SAAU,CACNzB,KAAO,KACPC,QAAQ,KACRC,QAAS,KACTmS,OAAO,KACPhE,SAAS,KACTqF,gBAAkB,UAsBrBC,GAAyB,kBAAK,SAAAjF,GACvCA,EAAS,CACLtQ,KAAO,sCACPkD,UAAW,EACXC,SAAW,KAEfsL,GAAU,CACNsB,IAAG,GAAApM,OAAM8G,GAAKM,mBACfiI,KAAK,SAACC,GAEFA,EAASjD,KAAKa,QACbP,EAAS,CACLtQ,KAAO,sCACPkD,UAAW,EACXC,SAAW8P,EAASjD,KAAKA,QAI7BQ,GAAM,QAAQ,SAASyC,EAASjD,KAAKkD,SACrC5C,EAAS,CACLtQ,KAAO,sCACPkD,UAAW,EACXC,SAAW,QAGlBiQ,MAAM,SAACrC,GACRP,GAAM,QAAQ,SAAS,gBACvBF,EAAS,CACLtQ,KAAO,sCACPkD,UAAW,EACXC,SAAW,SAKVqS,GAA0B,SAACN,EAAGC,EAAGC,GAAP,OAAa,SAAA9E,GACxC,iBAAL8E,EACC3G,GAAU,CACNsB,IAAG,GAAApM,OAAM8G,GAAKW,2BAAX,KAAAzH,OAAyCwR,KAC7CnC,KAAK,SAACC,GACL,IAAGA,EAASjD,KAAKa,QAUb,OAAOL,GAAM,UAAU,WAAWyC,EAASjD,KAAKkD,SAThD5C,EAAS,CACLtQ,KAAO,6BACPkD,UAAW,EACXC,SAAWgS,EACX/R,SAAW,eACXC,SAAU4P,EAASjD,KAAKA,KAAK,OAMtCoD,MAAM,SAACrC,GACN,OAAOP,GAAM,QAAQ,SAAS,kBAIlCF,EAAS,CACLtQ,KAAO,6BACPkD,SAAWgS,EACX/R,SAAWgS,EACX/R,SAAWgS,EACX/R,SAAU,CACNoS,MAAQ,UAsBXC,GAAyB,SAACC,GAAD,OAAM,SAAArF,GAExCA,EAAS,CACNtQ,KAAO,sCACPkD,UAAW,EACXC,SAAU,KAEbsL,GAAU,CACNsB,IAAG,GAAApM,OAAM8G,GAAKU,oBACf6H,KAAK,SAACC,GAEFA,EAASjD,KAAKa,QACbP,EAAS,CACLtQ,KAAO,sCACPkD,UAAW,EACXC,SAAW8P,EAASjD,KAAKA,QAI7BQ,GAAM,QAAQ,SAASyC,EAASjD,KAAKkD,SACrC5C,EAAS,CACLtQ,KAAO,sCACPkD,UAAW,EACXC,SAAW,QAGlBiQ,MAAM,SAACrC,GACRP,GAAM,QAAQ,SAAS,gBACvBF,EAAS,CACLtQ,KAAO,sCACPkD,UAAW,EACXC,SAAW,2DC7JfyS,GAAWC,WAAXD,OACAE,GAAaC,WAAbD,SAEFE,gNACFtT,MAAQ,CACJuT,QAAS5D,EAAKP,MAAM9O,MAAMpG,eAAesZ,OACzChM,KAAM,KACNiM,gBAAe,KAGnBC,OAAS,WACL/D,EAAKc,SAAS,CACV8C,SAAU5D,EAAK3P,MAAMuT,aAI7BI,uBAAyB,SAACC,EAAMC,EAAOC,GACnC,IAAM9E,EAAOW,EAAKP,MAAMJ,KACpB6E,GAASA,IAAU7E,EAAK+E,cAAc,YACtCD,EAAS,4BAETA,OAIRE,uBAAyB,SAACJ,EAAMC,EAAOC,GACnC,IAAM9E,EAAOW,EAAKP,MAAMJ,KACpB6E,GAASlE,EAAKP,MAAM9O,MAAM3G,qBAC1BqV,EAAKkB,eAAe,CAAC,WAAY,CAAE+D,OAAO,IAE9CH,OAGJI,aAAe,SAACC,GACZxE,EAAKc,SAAS,SAAC2D,EAAGC,GACd,MAAO,CACH7M,KAAM2M,EAAErZ,KAAF,GAAAmG,OAAWkT,EAAErZ,MAAO,KAC1B2Y,gBAAe,QAK3Ba,IAAI,WACA3E,EAAKc,SAAS,CACVgD,gBAAe,OAIvB1D,aAAe,SAAAC,GACXA,EAAEC,iBAEFN,EAAKP,MAAMJ,KAAKuF,wBAAwB,SAACpE,EAAKC,GACrCD,GAED7D,GAAW,CACPe,IAAG,GAAApM,OAAK8G,GAAKQ,gBACb+E,KAAM,CACFkH,IAAK7E,EAAKP,MAAM9O,MAAMzG,UACtBqF,KAAMkR,EAAOlR,KACbqO,SAAU6C,EAAO7C,SACjBpO,QAASiR,EAAOjR,QAChBC,QAASgR,EAAOmB,OAASnB,EAAOhR,QAChCoU,OAAQ7D,EAAK3P,MAAMuT,QACnBkB,aAAcrE,EAAOqE,aACrB5F,OAAQc,EAAK3P,MAAMwH,KACnBkN,IAAKtE,EAAOsE,OAGnBpE,KAAK,SAACC,GACH,IAAIA,EAASjD,KAAKa,QAQd,OADAwB,EAAKP,MAAMmD,yBAAwB,EAAO,KAAM,YACzCzE,GAAM,UAAW,WAAYyC,EAASjD,KAAKkD,SAPlDb,EAAKP,MAAMmD,yBAAwB,EAAO,KAAM,YAChDzE,GAAM,UAAW,UAAWyC,EAASjD,KAAKkD,SAC1Cb,EAAKP,MAAMyD,2BAOhBnC,MAAM,SAACrC,GAEN,OADAsB,EAAKP,MAAMmD,yBAAwB,EAAO,KAAM,YACzCzE,GAAM,QAAS,SAAU,8FAMvC,IACG6C,EAAsBhE,KAAKyC,MAAMJ,KAAjC2B,kBAEFgE,EAAiBhE,EAAkB,SAAU,CAC/CiE,aAAcjI,KAAKyC,MAAM9O,MAAMpG,eAAeqX,QAAU,MACxDH,MAAO,CAAC,CAAEC,UAAU,EAAMb,QAAS,oCAFhBG,CAInB3M,EAAAC,EAAAC,cAAC2Q,GAAA,QAAD,CAAQrD,MAAO,CAAEvC,MAAO,KACtBjL,EAAAC,EAAAC,cAAC4Q,GAAD,CAAQjB,MAAM,OAAd,SAIFkB,EAAqB,CACrB7V,KAAM,OACNqB,OAAM,GAAAU,OAAK8G,GAAKE,MAAVhH,OAAiB8G,GAAKiB,YAAtB,WAAA/H,OAA2CmL,GAAKC,gBACtD2I,SAAU,WAGd,OACIhR,EAAAC,EAAAC,cAAA,OAAKI,UAAU,yBACXN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,8BACXN,EAAAC,EAAAC,cAAC4M,GAAA,QAAD,CAAOC,SAAUpE,KAAKoD,aAAciB,aAAa,OAC7ChN,EAAAC,EAAAC,cAAC4M,GAAA,QAAKG,KAAN,CAAWC,MAAM,OAAOC,aAAW,EAAC7M,UAAU,uBACzCqM,EAAkB,OAAQ,CACvBiE,aAAejI,KAAKyC,MAAM9O,MAAMpG,eAAegF,KAC/CkS,MAAO,CAAC,CAAEC,UAAU,EAAMb,QAAS,0BAA2ByE,YAAY,KAF7EtE,CAGE3M,EAAAC,EAAAC,cAACoN,GAAA,QAAD,QAGJ3E,KAAKyC,MAAM9O,MAAMzG,UAcL,KAdiBmK,EAAAC,EAAAC,cAAC4M,GAAA,QAAKG,KAAN,CAAWC,MAAM,SAASC,aAAW,EAAC7M,UAAU,uBAC3EqM,EAAkB,UAAW,CAC1BiE,aAAejI,KAAKyC,MAAM9O,MAAMpG,eAAeiF,QAC/CiS,MAAO,CACH,CACI9T,KAAM,QACNkT,QAAS,kCAEb,CACIa,UAAU,EACVb,QAAS,+BATpBG,CAYE3M,EAAAC,EAAAC,cAACoN,GAAA,QAAD,QAGPtN,EAAAC,EAAAC,cAAC4M,GAAA,QAAKG,KAAN,CAAWC,MAAM,eAAe5M,UAAU,uBACrCqM,EAAkB,UAAW,CAC1BiE,aAAejI,KAAKyC,MAAM9O,MAAMpG,eAAekF,QAC/CgS,MAAO,CACH,CACIC,UAAU,EACVb,QAAS,mCAEb,CACI0E,IAAI,GACJ1E,QAAQ,0CATnBG,CAWE3M,EAAAC,EAAAC,cAACoN,GAAA,QAAD,CAAO6D,YAAaR,EAAgBS,IAAK,GAAIC,IAAK,OAGtD1I,KAAKyC,MAAM9O,MAAMzG,UA6BX,KA7BuBmK,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAC4M,GAAA,QAAKG,KAAN,CAAWC,MAAM,WAAWC,aAAW,EAAC7M,UAAU,uBAC9EqM,EAAkB,WAAY,CAC3BiE,aAAejI,KAAKyC,MAAM9O,MAAMpG,eAAeqT,SAC/C6D,MAAO,CACH,CACIC,UAAU,EACVb,QAAS,+BAEb,CACI8E,UAAW3I,KAAKqH,0BAR3BrD,CAWE3M,EAAAC,EAAAC,cAACoN,GAAA,QAAMI,SAAP,QAGP1N,EAAAC,EAAAC,cAAC4M,GAAA,QAAKG,KAAN,CAAWC,MAAM,mBAAmBC,aAAW,EAAC7M,UAAU,uBACrDqM,EAAkB,UAAW,CAC1BiE,aAAejI,KAAKyC,MAAM9O,MAAMpG,eAAe0Y,gBAC/CxB,MAAO,CACP,CACIC,UAAU,EACVb,QAAS,iCAEb,CACI8E,UAAW3I,KAAKgH,0BARvBhD,CAWE3M,EAAAC,EAAAC,cAACoN,GAAA,QAAMI,SAAP,CAAgB6D,OAAQ5I,KAAK6I,uBAIxCxR,EAAAC,EAAAC,cAAC4M,GAAA,QAAKG,KAAN,CAAWC,MAAM,SAAS5M,UAAU,uBAC/BqM,EAAkB,SAAlBA,CACG3M,EAAAC,EAAAC,cAACuR,GAAA,QAAD,CACIC,gBAAiB1R,EAAAC,EAAAC,cAACrJ,EAAA,QAAD,CAAMyC,KAAK,UAC5BqY,kBAAmB3R,EAAAC,EAAAC,cAACrJ,EAAA,QAAD,CAAMyC,KAAK,UAC9BiW,QAAS5G,KAAK3M,MAAMuT,QACpBqC,SAAUjJ,KAAK+G,WAM3B1P,EAAAC,EAAAC,cAAC4M,GAAA,QAAKG,KAAN,CAAWC,MAAM,oBAAoBC,aAAW,EAAC7M,UAAU,uBACtDqM,EAAkB,eAAgB,CAC/BiE,aAAejI,KAAKyC,MAAM9O,MAAMpG,eAAeua,aAC/CrD,MAAO,CAAC,CAAEC,UAAU,EAAMb,QAAS,kCAAmCyE,YAAY,KAFrFtE,CAGE3M,EAAAC,EAAAC,cAACoN,GAAA,QAAD,QAGPtN,EAAAC,EAAAC,cAAC4M,GAAA,QAAKG,KAAN,CAAWC,MAAM,gCAAgC5M,UAAU,sBAAsB6M,aAAW,GACvFR,EAAkB,MAAO,CACtBiE,aAAejI,KAAKyC,MAAM9O,MAAMpG,eAAewa,IAC/CtD,MAAO,CAAC,CAAEC,UAAU,EAAMb,QAAS,4CAFtCG,CAIG3M,EAAAC,EAAAC,cAAC2R,GAAD,CAAUC,KAAM,MAIxB9R,EAAAC,EAAAC,cAAC4M,GAAA,QAAKG,KAAN,CAAWC,MAAM,oBAAoB5M,UAAU,uBAC3CN,EAAAC,EAAAC,cAAC6R,GAAA,EAAD3V,OAAA4V,OAAA,GACQjB,EADR,CAEIkB,aAActJ,KAAK2H,IACnB4B,SAAUvJ,KAAKuH,aACfiC,UAAWxJ,KAAKuH,eAEhBlQ,EAAAC,EAAAC,cAACyN,GAAA,QAAD,KACI3N,EAAAC,EAAAC,cAACrJ,EAAA,QAAD,CAAMyC,KAAK,WADf,aAMR0G,EAAAC,EAAAC,cAAC4M,GAAA,QAAKG,KAAN,KACIjN,EAAAC,EAAAC,cAACyN,GAAA,QAAD,CAAQrU,KAAK,UAAUsU,SAAS,SAASC,OAAK,GACzClF,KAAKyC,MAAM9O,MAAM1G,wBA1NzBmY,aAwOnBqE,GAAiBnE,WAAKC,OAAO,CAAEhT,KAAM,YAApB+S,CAAkCqB,IAE1CnB,eANS,SAAAnS,GAAK,MAAK,CAC9BM,MAAQN,EAAMM,QAKqB,CACnC+V,0BDpNqC,SAACpD,GAAD,OAAM,SAAArF,GAC3CA,EAAS,CACNtQ,KAAO,mCACPsD,QAAUqS,MCkNbV,2BACAM,2BAHWV,CAIZiE,ICxPGE,eAEJ,SAAAA,EAAYlH,GAAM,IAAAO,EAAA,OAAAvP,OAAAsM,EAAA,EAAAtM,CAAAuM,KAAA2J,IAChB3G,EAAAvP,OAAAwP,GAAA,EAAAxP,CAAAuM,KAAAvM,OAAAyP,GAAA,EAAAzP,CAAAkW,GAAAxG,KAAAnD,KAAMyC,KAMRmH,UAAY,SAAC3Y,EAAGxB,GACduT,EAAKP,MAAMmD,yBAAwB,EAAK3U,EAAGxB,IAR3BuT,EAWlB6G,WAAa,WACX7G,EAAKP,MAAMmD,yBAAwB,EAAM,KAAK,aAZ9B5C,EAmBlB8G,cAAgB,SAAC7Y,GACf0O,GAAW,CACTe,IAAG,GAAApM,OAAM8G,GAAKS,gBACd8E,KAAO,CACHkH,IAAM5W,KAET0S,KAAK,SAACC,GACP,IAAGA,EAASjD,KAAKa,QAKf,OAAOL,GAAM,UAAU,WAAWyC,EAASjD,KAAKkD,SAJhD1C,GAAM,UAAU,UAAUyC,EAASjD,KAAKkD,SACxCb,EAAKP,MAAMyD,2BAKZnC,MAAM,SAACrC,GACR,OAAOP,GAAM,QAAQ,SAAS,mBAlChB6B,EAsChB+G,qBAAuB,SAAAC,GAAS,MAAK,CACjCC,eAAgB,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,gBAAiBC,EAApBF,EAAoBE,aAAcC,EAAlCH,EAAkCG,QAASC,EAA3CJ,EAA2CI,aAA3C,OACdjT,EAAAC,EAAAC,cAAA,OAAKsN,MAAO,CAAExO,QAAS,IACrBgB,EAAAC,EAAAC,cAACoN,GAAA,QAAD,CACE4F,IAAK,SAAAC,GACHxH,EAAKyH,YAAcD,GAErB1F,YAAW,UAAAxQ,OAAY0V,GACvB9C,MAAOkD,EAAa,GACpBnB,SAAU,SAAA5F,GAAC,OAAI8G,EAAgB9G,EAAEqH,OAAOxD,MAAQ,CAAC7D,EAAEqH,OAAOxD,OAAS,KACnEyD,aAAc,kBAAM3H,EAAK4H,aAAaR,EAAcC,IACpDxF,MAAO,CAAEvC,MAAO,IAAKvI,aAAc,EAAG9L,QAAS,WAEjDoJ,EAAAC,EAAAC,cAACyN,GAAA,QAAD,CACErU,KAAK,UACLka,QAAS,kBAAM7H,EAAK4H,aAAaR,EAAcC,IAC/Cnc,KAAK,SACL4c,KAAK,QACLjG,MAAO,CAAEvC,MAAO,GAAIxM,YAAa,IALnC,UASAuB,EAAAC,EAAAC,cAACyN,GAAA,QAAD,CAAQ6F,QAAS,kBAAM7H,EAAK+H,YAAYT,IAAeQ,KAAK,QAAQjG,MAAO,CAAEvC,MAAO,KAApF,WAKJ0I,WAAY,SAAAC,GAAQ,OAClB5T,EAAAC,EAAAC,cAACrJ,EAAA,QAAD,CAAMyC,KAAK,SAASkU,MAAO,CAAEhM,MAAOoS,EAAW,eAAYzX,MAE7D0X,SAAU,SAAChE,EAAOiE,GAAR,OACRA,EAAOnB,GACJoB,WACAC,cACAC,SAASpE,EAAMmE,gBACpBE,8BAA+B,SAAAC,GACzBA,GACFC,WAAW,kBAAMzI,EAAKyH,YAAYiB,YAGtCC,OAAQ,SAAAC,GAAI,OACVvU,EAAAC,EAAAC,cAACsU,GAAAvU,EAAD,CACEwU,eAAgB,CAAE7V,gBAAiB,UAAWI,QAAS,GACvD0V,YAAa,CAAC/I,EAAKP,MAAM9O,MAAMxG,mBAC/B6e,YAAU,EACVC,gBAAiBL,EAAKR,gBAnFdpI,EAwFd4H,aAAe,SAACR,EAAcC,GAC5BA,IACArH,EAAKP,MAAMyJ,wBAAwB9B,EAAa,KA1FpCpH,EA6Fd+H,YAAc,SAAAT,GACZA,IACAtH,EAAKP,MAAMyJ,wBAAwB,KA7FvClJ,EAAK3P,MAAM,CACT8Y,qBAAsB,GAHRnJ,oFAgBhBhD,KAAKyC,MAAMyD,0DAkFF,IAAAkG,EAAApM,KACCqM,EAAU7T,KAAV6T,MACFC,EAAU,CAAC7Y,OAAAC,EAAA,EAAAD,CAAA,CAEbpD,MAAO,OACP2Z,UAAW,OACX9R,IAAK,OACLoK,MAAO,OACJtC,KAAK+J,qBAAqB,SANjBtW,OAAAC,EAAA,EAAAD,CAAA,CASZpD,MAAO,WACP2Z,UAAW,UACX9R,IAAK,UACLoK,MAAO,OACJtC,KAAK+J,qBAAqB,YAbjBtW,OAAAC,EAAA,EAAAD,CAAA,CAgBZpD,MAAO,iBACP2Z,UAAW,UACX9R,IAAK,WACF8H,KAAK+J,qBAAqB,YAE/B,CACE1Z,MAAO,SACP6H,IAAK,MACL8R,UAAW,MACX2B,OAAQ,SAACzT,GAAD,OACNb,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAACyN,GAAA,QAAD,CAAQrU,KAAK,UAAU4b,MAAM,SAASre,KAAK,OAAO2c,QAAS,kBAAIuB,EAAKxC,UAAU1R,EAAI,mBAChFb,EAAAC,EAAAC,cAAC2C,GAAA,EAAD,CAASvJ,KAAK,aACd0G,EAAAC,EAAAC,cAACiV,GAAA,EAAD,CACEnc,MAAM,qBACNoc,WAAW,KACXC,OAAO,MACPC,UAAW,WAAKP,EAAKtC,cAAc5R,IACnChK,KAAMmJ,EAAAC,EAAAC,cAACrJ,EAAA,QAAD,CAAMyC,KAAK,SAASkU,MAAO,CAAEhM,MAAO,UAE1CxB,EAAAC,EAAAC,cAACyN,GAAA,QAAD,CAAQrU,KAAK,SAAS4b,MAAM,SAASre,KAAK,gBAOpD,OACImJ,EAAAC,EAAAC,cAAA,OAAKI,UAAU,yBACbN,EAAAC,EAAAC,cAACyN,GAAA,QAAD,CAAQrU,KAAK,UAAUzC,KAAK,WAAW2W,MAAO,CAAC9K,aAAa,QAAS8Q,QAAS,kBAAIuB,EAAKxC,UAAU,KAAK,cAAtG,WAGAvS,EAAAC,EAAAC,cAAA,OAAKI,UAAU,gCACbN,EAAAC,EAAAC,cAAC8U,EAAD,CAAOO,MAAO,EAAG/H,MAAO,CAAChM,MAAM,OAAOgU,UAAU,WAAhD,oBAEFxV,EAAAC,EAAAC,cAACuV,GAAA,EAAD,CACEC,UAAU,EACVT,QAASA,EACTU,WAAYhN,KAAKyC,MAAM9O,MAAMrG,iBAC7Bwd,KAAK,SACLmC,WAAY,CAAEC,SAAU,GACxBC,QAASnN,KAAKyC,MAAM9O,MAAMvG,0BAC1BggB,OAAO,QAdX,IAgBE/V,EAAAC,EAAAC,cAAC8V,GAAA,EAAD,CACE7B,QAASxL,KAAKyC,MAAM9O,MAAM5G,mBAC1BsD,OAAO,EACPid,KAAMtN,KAAKuN,SACXC,SAAUxN,KAAK6J,WACfhF,MAAO,CAAC4I,IAAK,OAAOpX,QAAQ,MAAMJ,gBAAgB,oBAClDqM,MAAM,MACNoL,gBAAgB,EAChBzW,OAAQ,IAIRI,EAAAC,EAAAC,cAACoW,GAAD,eA9KSvI,aAyLVI,eAJS,SAAAnS,GAAK,MAAK,CAC9BM,MAAQN,EAAMM,QAGqB,CACnCuY,wBFjJmC,SAAC5F,GAAD,OAAM,SAAArF,GACzCA,EAAS,CACNtQ,KAAO,6BACPsD,QAAUqS,ME+IbJ,0BACAN,4BAHWJ,CAIZmE,IC5LGiE,iOAEFxK,aAAe,SAAAC,GACXA,EAAEC,iBACFN,EAAKP,MAAMJ,KAAKuF,wBAAwB,SAACpE,EAAKC,GACrCD,GAED7D,GAAW,CACPe,IAAG,GAAApM,OAAK8G,GAAKY,gBACb2E,KAAM,CACFkH,IAAK7E,EAAKP,MAAM9O,MAAM/F,UACtBwY,MAAO3C,EAAO2C,SAEnBzC,KAAK,SAACC,GACL,IAAIA,EAASjD,KAAKa,QAOd,OADAwB,EAAKP,MAAM0D,yBAAwB,EAAO,KAAM,aACzChF,GAAM,UAAW,WAAYyC,EAASjD,KAAKkD,SANlDb,EAAKP,MAAM0D,yBAAwB,EAAO,KAAM,aAChDhF,GAAM,UAAW,UAAWyC,EAASjD,KAAKkD,SAC1Cb,EAAKP,MAAM4D,2BAMhBtC,MAAM,SAACrC,GAEN,OADAsB,EAAKP,MAAM0D,yBAAwB,EAAO,KAAM,aACzChF,GAAM,QAAS,SAAU,8FAMvC,IACG6C,EAAsBhE,KAAKyC,MAAMJ,KAAjC2B,kBACR,OACI3M,EAAAC,EAAAC,cAAA,OAAKI,UAAU,yBACXN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,8BACXN,EAAAC,EAAAC,cAAC4M,GAAA,QAAD,CAAOC,SAAUpE,KAAKoD,cAClB/L,EAAAC,EAAAC,cAAC4M,GAAA,QAAKG,KAAN,CAAWC,MAAM,aAAaC,aAAW,EAAC7M,UAAU,uBAC/CqM,EAAkB,QAAS,CACxBiE,aAAejI,KAAKyC,MAAM9O,MAAM5F,eAAeqY,MAC/C3B,MAAO,CAAC,CAAEC,UAAU,EAAMb,QAAS,2BAA4ByE,YAAY,KAF9EtE,CAGE3M,EAAAC,EAAAC,cAACoN,GAAA,QAAD,QAEPtN,EAAAC,EAAAC,cAAC4M,GAAA,QAAKG,KAAN,KACIjN,EAAAC,EAAAC,cAACyN,GAAA,QAAD,CAAQrU,KAAK,UAAUsU,SAAS,SAASC,OAAK,GACzClF,KAAKyC,MAAM9O,MAAMhG,wBA7C1ByX,cA2DlByI,GAAiBvI,WAAKC,OAAO,CAAEhT,KAAM,YAApB+S,CAAkCsI,IAE1CpI,eANS,SAAAnS,GAAK,MAAK,CAC9BM,MAAQN,EAAMM,QAKqB,CACnCma,0BHuDqC,SAACxH,GAAD,OAAM,SAAArF,GAC3CA,EAAS,CACNtQ,KAAO,mCACPsD,QAAUqS,MGzDbD,0BACAF,4BAHWX,CAIZqI,ICpEGE,gNAEJnE,UAAY,SAAC3Y,EAAGxB,GACduT,EAAKP,MAAM0D,yBAAwB,EAAKlV,EAAGxB,MAG7Coa,WAAa,WACX7G,EAAKP,MAAM0D,yBAAwB,EAAM,KAAK,gBAO9C4D,qBAAuB,SAAAC,GAAS,MAAK,CACjCC,eAAgB,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,gBAAiBC,EAApBF,EAAoBE,aAAcC,EAAlCH,EAAkCG,QAASC,EAA3CJ,EAA2CI,aAA3C,OACdjT,EAAAC,EAAAC,cAAA,OAAKsN,MAAO,CAAExO,QAAS,IACrBgB,EAAAC,EAAAC,cAACoN,GAAA,QAAD,CACE4F,IAAK,SAAAC,GACHxH,EAAKyH,YAAcD,GAErB1F,YAAW,UAAAxQ,OAAY0V,GACvB9C,MAAOkD,EAAa,GACpBnB,SAAU,SAAA5F,GAAC,OAAI8G,EAAgB9G,EAAEqH,OAAOxD,MAAQ,CAAC7D,EAAEqH,OAAOxD,OAAS,KACnEyD,aAAc,kBAAM3H,EAAK4H,aAAaR,EAAcC,IACpDxF,MAAO,CAAEvC,MAAO,IAAKvI,aAAc,EAAG9L,QAAS,WAEjDoJ,EAAAC,EAAAC,cAACyN,GAAA,QAAD,CACErU,KAAK,UACLka,QAAS,kBAAM7H,EAAK4H,aAAaR,EAAcC,IAC/Cnc,KAAK,SACL4c,KAAK,QACLjG,MAAO,CAAEvC,MAAO,GAAIxM,YAAa,IALnC,UASAuB,EAAAC,EAAAC,cAACyN,GAAA,QAAD,CAAQ6F,QAAS,kBAAM7H,EAAK+H,YAAYT,IAAeQ,KAAK,QAAQjG,MAAO,CAAEvC,MAAO,KAApF,WAKJ0I,WAAY,SAAAC,GAAQ,OAClB5T,EAAAC,EAAAC,cAACrJ,EAAA,QAAD,CAAMyC,KAAK,SAASkU,MAAO,CAAEhM,MAAOoS,EAAW,eAAYzX,MAE7D0X,SAAU,SAAChE,EAAOiE,GAAR,OACRA,EAAOnB,GACJoB,WACAC,cACAC,SAASpE,EAAMmE,gBACpBE,8BAA+B,SAAAC,GACzBA,GACFC,WAAW,kBAAMzI,EAAKyH,YAAYiB,YAGtCC,OAAQ,SAAAC,GAAI,OACVvU,EAAAC,EAAAC,cAACsU,GAAAvU,EAAD,CACEwU,eAAgB,CAAE7V,gBAAiB,UAAWI,QAAS,GACvD0V,YAAa,CAAC/I,EAAKP,MAAM9O,MAAM9F,mBAC/Bme,YAAU,EACVC,gBAAiBL,EAAKR,kBAK5BR,aAAe,SAACR,EAAcC,GAC5BA,IACArH,EAAKP,MAAMuL,wBAAwB5D,EAAa,OAGlDW,YAAc,SAAAT,GACZA,IACAtH,EAAKP,MAAMuL,wBAAwB,yFA5DvChO,KAAKyC,MAAM4D,0DA+DF,IAAA+F,EAAApM,KACCqM,EAAU7T,KAAV6T,MACFC,EAAU,CAAC7Y,OAAAC,EAAA,EAAAD,CAAA,CAEbpD,MAAO,OACP2Z,UAAW,QACX9R,IAAK,QACLoK,MAAO,OACJtC,KAAK+J,qBAAqB,UAE/B,CACE1Z,MAAO,SACP6H,IAAK,MACL8R,UAAW,MACX2B,OAAQ,SAACzT,GAAD,OACNb,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAACyN,GAAA,QAAD,CAAQrU,KAAK,UAAU4b,MAAM,SAASre,KAAK,OAAO2c,QAAS,kBAAIuB,EAAKxC,UAAU1R,EAAI,uBAKxF,OACIb,EAAAC,EAAAC,cAAA,OAAKI,UAAU,yBACbN,EAAAC,EAAAC,cAACyN,GAAA,QAAD,CAAQrU,KAAK,UAAUzC,KAAK,YAAY2W,MAAO,CAAC9K,aAAa,QAAS8Q,QAAS,kBAAIuB,EAAKxC,UAAU,KAAK,eAAvG,WAGAvS,EAAAC,EAAAC,cAAA,OAAKI,UAAU,gCACbN,EAAAC,EAAAC,cAAC8U,EAAD,CAAOO,MAAO,EAAG/H,MAAO,CAAChM,MAAM,OAAOgU,UAAU,WAAhD,mBAEFxV,EAAAC,EAAAC,cAACuV,GAAA,EAAD,CACEC,UAAU,EACVT,QAASA,EACTU,WAAYhN,KAAKyC,MAAM9O,MAAMnG,iBAC7Bsd,KAAK,SACLmC,WAAY,CAAEC,SAAU,GACxBC,QAASnN,KAAKyC,MAAM9O,MAAM7F,oBAC1Bsf,OAAO,QAdX,IAgBE/V,EAAAC,EAAAC,cAAC8V,GAAA,EAAD,CACE7B,QAASxL,KAAKyC,MAAM9O,MAAMlG,mBAC1B4C,OAAO,EACPid,KAAMtN,KAAKuN,SACXC,SAAUxN,KAAK6J,WACfhF,MAAO,CAAC4I,IAAK,OAAOpX,QAAQ,MAAMJ,gBAAgB,oBAClDyX,gBAAgB,EAChBzW,OAAQ,IAIRI,EAAAC,EAAAC,cAAC0W,GAAD,eA3HQ7I,aAsITI,eAJS,SAAAnS,GAAK,MAAK,CAC9BM,MAAQN,EAAMM,QAGqB,CACnCqa,wBJPmC,SAAC1H,GAAD,OAAM,SAAArF,GACzCA,EAAS,CACNtQ,KAAO,6BACPsD,QAAUqS,MIKbD,0BACAF,4BAHWX,CAIZuI,uBCpJUG,GAA2B,SAACrI,GAAD,OAAQ,SAAA5E,GAC5CA,EAAS,CACLtQ,KAAO,8BACPkD,SAAWgS,MAmBNsI,GAA0B,SAAC7H,GAAD,OAAO,SAAArF,GAC1CA,EAAS,CACLtQ,KAAM,uCACNkD,UAAU,EACVC,SAAU,KAGd6L,GAAW,CACPe,IAAG,GAAApM,OAAK8G,GAAKa,mBACb0E,KAAM,CACFyN,QAAS9H,KAGhB3C,KAAK,SAACC,GACCA,EAASjD,KAAKa,QACdP,EAAS,CACLtQ,KAAM,uCACNkD,UAAU,EACVC,SAAU8P,EAASjD,KAAKA,QAI5BQ,GAAM,QAAS,SAAUyC,EAASjD,KAAKkD,SACvC5C,EAAS,CACLtQ,KAAM,uCACNkD,UAAU,EACVC,SAAU,QAIrBiQ,MAAM,SAACrC,GACJP,GAAM,QAAS,SAAU,gBACzBF,EAAS,CACLtQ,KAAM,uCACNkD,UAAU,EACVC,SAAU,SAqFTua,GAAmB,kBAAM,SAAApN,GAClCtB,GAAW,CACPe,IAAKtF,GAAK4D,aAEb2E,KAAK,SAACC,GACAA,EAASjD,KAAKa,SACbP,EAAS,CACLtQ,KAAM,qBACNsD,QAAS2P,EAASjD,KAAKA,SAIlCoD,MAAM,SAACrC,GACJ,OAAOP,GAAM,QAAQ,SAAS,2DCnIhCmN,eACF,SAAAA,EAAY7L,GAAM,IAAAO,EAAA,OAAAvP,OAAAsM,EAAA,EAAAtM,CAAAuM,KAAAsO,IACdtL,EAAAvP,OAAAwP,GAAA,EAAAxP,CAAAuM,KAAAvM,OAAAyP,GAAA,EAAAzP,CAAA6a,GAAAnL,KAAAnD,KAAMyC,KAkCV8L,eAAiB,SAAClL,GACdL,EAAKc,SAAS,SAAC0K,EAAcC,GACzB,MAAO,CACHzf,4BAA2B,EAC3B0f,gBAAgBjb,OAAAC,EAAA,EAAAD,CAAA,GACT+a,EAAcE,gBADN,CAEXra,QAAO,GAAAC,OAAAb,OAAAc,EAAA,EAAAd,CACA+a,EAAcE,gBAAgBra,SAD9B,CAEH,CACIG,MAAO,KACPC,KAAO,KACPC,UAAU,WA9ChBsO,EAsDlB2L,YAAc,WACVpN,KAAM8I,QAAQ,CACVha,MAAO,UACPoR,QAAS,wCACTiL,OAAQ,eACRD,WAAY,QA3DFzJ,EAkElB4L,iBAAkB,SAACvL,EAAEwL,GACjB,IAAIC,EAAUrb,OAAAc,EAAA,EAAAd,CAAOuP,EAAK3P,MAAMqb,gBAAgBra,SAChDya,EAAWD,GAAXpb,OAAAC,EAAA,EAAAD,CAAA,GACOuP,EAAK3P,MAAMqb,gBAAgBra,QAAQwa,GAD1C,CAEIpa,KAAO4O,EAAEqH,OAAOxD,QAEM,cAAtB4H,EAAWD,GAAGra,YAA6ChB,IAAtBsb,EAAWD,GAAGra,OAA2C,OAAtBsa,EAAWD,GAAGra,OAAsC,SAAtBsa,EAAWD,GAAGra,OAC9F,cAArBsa,EAAWD,GAAGpa,WAA2CjB,IAArBsb,EAAWD,GAAGpa,MAAyC,SAArBqa,EAAWD,GAAGpa,MAAsC,KAArBqa,EAAWD,GAAGpa,MAAkC,OAArBqa,EAAWD,GAAGpa,OAC3Iqa,EAAWD,GAAXpb,OAAAC,EAAA,EAAAD,CAAA,GACOuP,EAAK3P,MAAMqb,gBAAgBra,QAAQwa,GAD1C,CAEIna,UAAW,IAEfsO,EAAKc,SAAS,SAAC2D,EAAGC,GACd,MAAO,CACHgH,gBAAgBjb,OAAAC,EAAA,EAAAD,CAAA,GACTgU,EAAGiH,gBADK,CAEXra,QAAQya,QAK5B9L,EAAKc,SAAS,SAAC2D,EAAGC,GACd,MAAO,CACHgH,gBAAgBjb,OAAAC,EAAA,EAAAD,CAAA,GACTgU,EAAGiH,gBADK,CAEXra,QAAQya,QA3FN9L,EAiGlB+L,mBAAqB,SAAC1L,EAAEwL,GACpB,GAAiD,KAA7C7L,EAAK3P,MAAMqb,gBAAgBra,QAAQwa,GAAGpa,MAA0D,OAA7CuO,EAAK3P,MAAMqb,gBAAgBra,QAAQwa,GAAGpa,MACvC,OAA9CuO,EAAK3P,MAAMqb,gBAAgBra,QAAQwa,GAAGra,OAA8D,cAA9CwO,EAAK3P,MAAMqb,gBAAgBra,QAAQwa,GAAGra,YAAqEhB,IAA9CwP,EAAK3P,MAAMqb,gBAAgBra,QAAQwa,GAAGra,MADjK,CAGI,IAAIsa,EAAUrb,OAAAc,EAAA,EAAAd,CAAOuP,EAAK3P,MAAMqb,gBAAgBra,SAChDya,EAAWD,GAAXpb,OAAAC,EAAA,EAAAD,CAAA,GACOuP,EAAK3P,MAAMqb,gBAAgBra,QAAQwa,GAD1C,CAEIna,SAAW2O,EAAEqH,OAAO9D,UAExB5D,EAAKc,SAAS,SAAC2D,EAAGC,GACd,MAAO,CACHgH,gBAAgBjb,OAAAC,EAAA,EAAAD,CAAA,GACTgU,EAAGiH,gBADK,CAEXra,QAAQya,YAOpB9L,EAAK2L,eArHK3L,EA2HlBgM,oBAAsB,SAACxH,EAAEqH,GACrB,IAAIC,EAAUrb,OAAAc,EAAA,EAAAd,CAAOuP,EAAK3P,MAAMqb,gBAAgBra,SAC5CmT,EAKAsH,EAAWD,GAAXpb,OAAAC,EAAA,EAAAD,CAAA,GACOuP,EAAK3P,MAAMqb,gBAAgBra,QAAQwa,GAD1C,CAEIra,MAAK,GAAAF,OAAK8G,GAAKE,KAAV,KAAAhH,OAAkBkT,EAAErZ,gBANtB2gB,EAAWD,GAAGra,MACrBsa,EAAWD,GAAGra,MAAM,MAQxBwO,EAAKc,SAAS,CACVgD,gBAAe,IAEO,cAAtBgI,EAAWD,GAAGra,YAA6ChB,IAAtBsb,EAAWD,GAAGra,OAA2C,OAAtBsa,EAAWD,GAAGra,OAAsC,SAAtBsa,EAAWD,GAAGra,OAC9F,cAArBsa,EAAWD,GAAGpa,WAA2CjB,IAArBsb,EAAWD,GAAGpa,MAAyC,SAArBqa,EAAWD,GAAGpa,MAAsC,KAArBqa,EAAWD,GAAGpa,MAAkC,OAArBqa,EAAWD,GAAGpa,OAC3Iqa,EAAWD,GAAXpb,OAAAC,EAAA,EAAAD,CAAA,GACOuP,EAAK3P,MAAMqb,gBAAgBra,QAAQwa,GAD1C,CAEIna,UAAW,KAGvBsO,EAAKc,SAAS,SAAC2D,EAAGC,GACd,MAAO,CACHgH,gBAAgBjb,OAAAC,EAAA,EAAAD,CAAA,GACTgU,EAAGiH,gBADK,CAEXra,QAAQya,QArJN9L,EA4JlBI,aAAe,SAAAC,GACXA,EAAEC,iBACFN,EAAKP,MAAMJ,KAAKuF,wBAAwB,SAACpE,EAAKC,GAE1C,IAAKD,EAAK,CACN,IAAIgE,EAAE,EACFyH,EAAI,EACJC,EAAK,GAETlM,EAAK3P,MAAMqb,gBAAgBra,QAAQ8a,QAAQ,SAACC,EAAQP,GAChDK,EAAKG,KAAK,CACNC,QAAQF,EAAQ3a,KAChB8a,OAAOH,EAAQ5a,MACfE,SAAS0a,EAAQ1a,WAED,cAAhB0a,EAAQ5a,YAAuChB,IAAhB4b,EAAQ5a,OAAqC,OAAhB4a,EAAQ5a,OAAgC,SAAhB4a,EAAQ5a,OAAiC,KAAf4a,EAAQ3a,MAA2B,OAAf2a,EAAQ3a,MAA8B,SAAf2a,EAAQ3a,MAAgC,cAAf2a,EAAQ3a,WAAqCjB,IAAf4b,EAAQ3a,OACxN+S,EAAE,GAEH4H,EAAQ1a,WACPua,GAAQ,KAGbzH,EACKyH,GAIAjM,EAAKc,SAAS,CACV0L,QAAO,IAEX7P,GAAW,CACPe,IAAItF,GAAKgB,iBACTuE,KAAK,CACDlM,KAAKgP,EAAOgM,aACZpb,QAAQ6a,EACRQ,QAAQ1M,EAAK3P,MAAMqb,gBAAgBiB,cACnCvB,QAAQ3K,EAAO2K,QACfwB,YAAYnM,EAAOmM,YACnBC,UAAUpM,EAAOqM,WAEtBnM,KAAK,SAACC,GAKL,GAHAZ,EAAKc,SAAS,CACV0L,QAAO,KAER5L,EAASjD,KAAKa,QAQb,OAFAwB,EAAKP,MAAMyL,0BAAyB,GACpClL,EAAKP,MAAMJ,KAAK0N,cACT5O,GAAM,UAAU,WAAWyC,EAASjD,KAAKkD,SAPhDb,EAAKP,MAAMyL,0BAAyB,GACpC/M,GAAM,UAAU,UAAUyC,EAASjD,KAAKkD,SACxCb,EAAKP,MAAM0L,wBAAwBnL,EAAKP,MAAMrO,QAAQtF,oBAQ3DiV,MAAM,SAACrC,GAgCN,OA9BAsB,EAAKP,MAAMJ,KAAK0N,cAChB/M,EAAKc,SAAS,CACV0L,QAAO,EACPd,gBAAgB,CACZiB,cAAc,KACdtb,QAAS,CACL,CACIG,MAAO,KACPC,KAAO,KACPC,UAAU,GAEd,CACIF,MAAO,KACPC,KAAO,KACPC,UAAU,GAEd,CACIF,MAAO,KACPC,KAAO,KACPC,UAAU,GAEd,CACIF,MAAO,KACPC,KAAO,KACPC,UAAU,OAK1BsO,EAAKP,MAAMyL,0BAAyB,GAC7B/M,GAAM,QAAQ,SAAS,mBAhElCA,GAAM,UAAU,WAAW,0CAsE/BA,GAAM,UAAU,WAAW,mCA1PzB6B,EAgQlBuE,aAAe,SAACC,GACZxE,EAAKc,SAAS,SAAC2D,EAAGC,GACd,MAAO,CACHgH,gBAAgBjb,OAAAC,EAAA,EAAAD,CAAA,GACTgU,EAAGiH,gBADK,CAEXiB,cAAenI,EAAErZ,KAAF,GAAAmG,OAAW8G,GAAKE,KAAhB,KAAAhH,OAAwBkT,EAAErZ,MAAO,OAEpD2Y,gBAAe,MAvQT9D,EA4QlB2E,IAAI,WACA3E,EAAKc,SAAS,CACVgD,gBAAe,KA5QnB9D,EAAK3P,MAAM,CACPqb,gBAAgB,CACZiB,cAAc,KACdtb,QAAS,CACL,CACIG,MAAO,KACPC,KAAO,KACPC,UAAU,GAEd,CACIF,MAAO,KACPC,KAAO,KACPC,UAAU,GAEd,CACIF,MAAO,KACPC,KAAO,KACPC,UAAU,GAEd,CACIF,MAAO,KACPC,KAAO,KACPC,UAAU,KAItB8a,QAAO,EACP1I,gBAAe,EACf9X,4BAA2B,GA9BjBgU,yEAkRT,IAAAoJ,EAAApM,KAEGgE,EAAsBhE,KAAKyC,MAAMJ,KAAjC2B,kBACAuC,EAAWC,WAAXD,OACAE,EAAaC,WAAbD,SACJ2B,EAAqB,CACrB7V,KAAM,OACNqB,OAAM,GAAAU,OAAK8G,GAAKE,MAAVhH,OAAiB8G,GAAKiB,YAAtB,WAAA/H,OAA2CmL,GAAKC,gBACtD2I,SAAU,WAGd,OACIhR,EAAAC,EAAAC,cAAA,OAAKI,UAAU,yBACXN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,8BACXN,EAAAC,EAAAC,cAAC4M,GAAA,QAAD,CAAOC,SAAUpE,KAAKoD,cAClB/L,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACyY,GAAA,QAAD,KACI3Y,EAAAC,EAAAC,cAAC0Y,GAAA,QAAD,CAAKC,KAAM,GACP7Y,EAAAC,EAAAC,cAAC4M,GAAA,QAAKG,KAAN,CAAWC,MAAM,UAAUC,aAAW,GACjCR,EAAkB,UAAW,CAC1BS,MAAO,CAAC,CAAEC,UAAU,EAAMb,QAAS,gCADtCG,CAGG3M,EAAAC,EAAAC,cAAC2Q,GAAA,QAAD,CACIiI,YAAU,EACVtL,MAAO,CAAEvC,MAAM,QACfwC,YAAY,mBACZsL,iBAAiB,KAGbpQ,KAAKyC,MAAM9O,MAAMnG,iBAAiBuK,IAAI,SAACuO,EAAEuI,GAAH,OAAOxX,EAAAC,EAAAC,cAACgP,EAAD,CAAQrO,IAAKoO,EAAEuB,IAAKzG,EAAGkF,EAAEF,MAAOc,MAAOZ,EAAEuB,KAAMvB,EAAEF,cAOtH/O,EAAAC,EAAAC,cAACyY,GAAA,QAAD,KACI3Y,EAAAC,EAAAC,cAAC0Y,GAAA,QAAD,CAAKC,KAAM,IACP7Y,EAAAC,EAAAC,cAAC4M,GAAA,QAAKG,KAAN,CAAWC,MAAM,WAAWC,aAAW,GAClCR,EAAkB,eAAgB,CAC/BS,MAAO,CAAC,CAAEC,UAAU,EAAMb,QAAS,2BADtCG,CAGG3M,EAAAC,EAAAC,cAACkP,EAAD,CAAU0C,KAAM,OAI5B9R,EAAAC,EAAAC,cAAC0Y,GAAA,QAAD,CAAKC,KAAM,EAAGrL,MAAO,CAACxO,QAAU,aAC5BgB,EAAAC,EAAAC,cAAC4M,GAAA,QAAKG,KAAN,CAAWC,MAAM,kBACblN,EAAAC,EAAAC,cAAC6R,GAAA,EAAD3V,OAAA4V,OAAA,GAAYjB,EAAZ,CAAgCkB,aAActJ,KAAK2H,IAAK4B,SAAUvJ,KAAKuH,aAAciC,UAAWxJ,KAAKuH,eACjGlQ,EAAAC,EAAAC,cAACyN,GAAA,QAAD,KACI3N,EAAAC,EAAAC,cAACrJ,EAAA,QAAD,CAAMyC,KAAK,WADf,eAOhB0G,EAAAC,EAAAC,cAACyY,GAAA,QAAD,KACI3Y,EAAAC,EAAAC,cAAC0Y,GAAA,QAAD,CAAKC,KAAM,IACP7Y,EAAAC,EAAAC,cAAC4M,GAAA,QAAKG,KAAN,CAAWC,MAAM,cAAcC,aAAW,GACrCR,EAAkB,cAAe,CAC9BS,MAAO,CAAC,CAAEC,UAAU,EAAMb,QAAS,8CADtCG,CAGG3M,EAAAC,EAAAC,cAACkP,EAAD,CAAUwC,SAAUjJ,KAAKqQ,kBAAmBlH,KAAM,OAI9D9R,EAAAC,EAAAC,cAAC0Y,GAAA,QAAD,CAAKK,OAAQ,EAAGJ,KAAM,GAClB7Y,EAAAC,EAAAC,cAAC4M,GAAA,QAAKG,KAAN,CAAWC,MAAM,YAAYC,aAAW,GACnCR,EAAkB,UAAW,CAC1BS,MAAO,CAAC,CAAEC,UAAU,EAAMb,QAAS,4BADtCG,CAGG3M,EAAAC,EAAAC,cAACgZ,GAAA,EAAD,CAAa9H,IAAK,EAAGC,IAAK,QAK1CrR,EAAAC,EAAAC,cAAA,OAAKsN,MAAO,CAACpO,WAAW,SAEhBuJ,KAAK3M,MAAMqb,gBAAgBra,QAAQ0D,IAAI,SAACyY,EAAO3B,GAC3C,OACIxX,EAAAC,EAAAC,cAACyY,GAAA,QAAD,CAAK9X,IAAK2W,EAAGlX,UAAU,IACnBN,EAAAC,EAAAC,cAAC0Y,GAAA,QAAD,CAAKK,OAAQ,EAAGJ,KAAM,IAClB7Y,EAAAC,EAAAC,cAAC4M,GAAA,QAAKG,KAAN,CAAWC,MAAK,SAAAjQ,OAAWua,EAAE,IACzBxX,EAAAC,EAAAC,cAACkP,EAAD,CAAUS,MAAOkF,EAAK/Y,MAAMqb,gBAAgBra,QAAQwa,GAAGpa,KAAMwU,SAAW,SAAC5F,GAAD,OAAK+I,EAAKwC,iBAAiBvL,EAAEwL,IAAI1F,KAAM,MAGvH9R,EAAAC,EAAAC,cAAC0Y,GAAA,QAAD,CAAKK,OAAQ,EAAGJ,KAAM,EAAGrL,MAAO,CAACgI,UAAU,WACvCxV,EAAAC,EAAAC,cAAC4M,GAAA,QAAKG,KAAN,CAAWC,MAAK,SAAAjQ,OAAWua,EAAE,EAAb,WACZxX,EAAAC,EAAAC,cAAC6R,GAAA,EAAD3V,OAAA4V,OAAA,GAAYjB,EAAZ,CAAgCkB,aAAc8C,EAAKzE,IAAK4B,SAAU,SAAC/B,GAAD,OAAK4E,EAAK4C,oBAAoB,KAAKH,IAAIrF,UAAW,SAAChC,GAAD,OAAK4E,EAAK4C,oBAAoBxH,EAAEqH,MAChJxX,EAAAC,EAAAC,cAACyN,GAAA,QAAD,KACI3N,EAAAC,EAAAC,cAACrJ,EAAA,QAAD,CAAMyC,KAAK,WADf,cAMZ0G,EAAAC,EAAAC,cAAC0Y,GAAA,QAAD,CAAKC,KAAM,EAAGrL,MAAO,CAACxO,QAAU,cAC5BgB,EAAAC,EAAAC,cAAC4M,GAAA,QAAKG,KAAN,KACIjN,EAAAC,EAAAC,cAACkZ,GAAA,QAAD,CAAU7J,QAASwF,EAAK/Y,MAAMqb,gBAAgBra,QAAQwa,GAAGna,SAAUuU,SAAU,SAAC5F,GAAD,OAAK+I,EAAK2C,mBAAmB1L,EAAEwL,YAQxIxX,EAAAC,EAAAC,cAACyY,GAAA,QAAD,KACI3Y,EAAAC,EAAAC,cAAC0Y,GAAA,QAAD,CAAKC,KAAM,IACLlQ,KAAK3M,MAAMrE,2BAA6BqI,EAAAC,EAAAC,cAACyN,GAAA,QAAD,CAAQrU,KAAK,UAAUka,QAAS,SAACxH,GAAD,OAAK+I,EAAKmC,eAAelL,KAAzD,kBAAuF,OAGzIhM,EAAAC,EAAAC,cAACyY,GAAA,QAAD,KACI3Y,EAAAC,EAAAC,cAAC0Y,GAAA,QAAD,CAAKK,OAAQ,GAAKJ,KAAM,GACpB7Y,EAAAC,EAAAC,cAAC4M,GAAA,QAAKG,KAAN,KACIjN,EAAAC,EAAAC,cAACyN,GAAA,QAAD,CAAQrU,KAAK,UAAUsU,SAAS,SAASyL,SAAU1Q,KAAK3M,MAAMyT,eAAgBqG,QAASnN,KAAK3M,MAAMmc,OAAQtK,OAAK,GAA/G,iCApYdE,aA0ZpBuL,GAAkBrL,WAAKC,OAAO,CAAEhT,KAAM,eAApB+S,CAAqCgJ,IAE9C9I,eATS,SAAAnS,GAAK,MAAK,CAC9Be,QAAUf,EAAMe,QAChBT,MAAQN,EAAMM,QAOqB,CACnCid,2BD9asC,SAACtK,GAAD,OAAO,SAAArF,GAC7CA,EAAS,CACNtQ,KAAO,oCACPsD,QAAUqS,MC4ab4H,4BACAC,4BAHW3I,CAIZmL,kICpbGE,YAAY,CAChBC,WAAY,SAAA5G,GAAA,IAAEhD,EAAFgD,EAAEhD,MAAF,OAAa7P,EAAAC,EAAAC,cAACwZ,GAAA,WAAD,CAAYC,KAAM9J,KAC3C8J,KAAM,SAAAC,GAAA,IAAE/J,EAAF+J,EAAE/J,MAAF,OAAa7P,EAAAC,EAAAC,cAACwZ,GAAA,UAAD,CAAWC,KAAM9J,KACpCgK,KAAM,SAAAC,GAAuB,IAArBC,EAAqBD,EAArBC,SAAUlK,EAAWiK,EAAXjK,MAChB,OAAO7P,EAAAC,EAAAC,cAAC8Z,GAAA,EAAD,CAAmBD,SAAUA,EAAUtO,SAAUoE,OAU7CoK,GANE,SAAC7O,GAChB,OACEpL,EAAAC,EAAAC,cAACga,GAAAja,EAAD7D,OAAA4V,OAAA,CAAewH,UAAWA,GAAWW,QAAS,CAACC,KAAIT,OAAWvO,KCV1DiP,GAAYC,KAAZD,QAEaE,eACjB,SAAAA,EAAYnP,GAAM,IAAAO,EAAA,OAAAvP,OAAAsM,EAAA,EAAAtM,CAAAuM,KAAA4R,IACd5O,EAAAvP,OAAAwP,GAAA,EAAAxP,CAAAuM,KAAAvM,OAAAyP,GAAA,EAAAzP,CAAAme,GAAAzO,KAAAnD,KAAMyC,KAOVoP,UAAY,SAAC3Z,KANT8K,EAAK3P,MAAM,CACP8Z,SAAU,EACVnM,QAAQ,MAJEgC,oFAYC,IAAAoJ,EAAApM,KACX8R,EAAK9R,KAAKyC,MAAMxR,GAEpBmO,GAAU,CACNsB,IAAG,GAAApM,OAAK8G,GAAKe,sBAAV,KAAA7H,OAAmCwd,KACvCnO,KAAK,SAACC,GAELwI,EAAKtI,SAAS,CACV9C,QAAS4C,EAASjD,KAAKA,KAAK,GAC5BwM,SAAS,MAEdpJ,MAAM,SAACrC,uCAKL,IAAAqQ,EAAA/R,KACL,OACI3I,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACya,GAAA,EAAD,CAAU7E,QAASnN,KAAK3M,MAAM8Z,QAAS8E,QAAM,EAAC/P,QAAM,GAChD7K,EAAAC,EAAAC,cAAC2a,GAAA,EAAD,CAAMC,iBAAiB,IAAIlJ,SAAU,SAAC5F,GAAD,OAAO0O,EAAKF,UAAUxO,KACvDhM,EAAAC,EAAAC,cAACma,GAAD,CAASU,IAAK/a,EAAAC,EAAAC,cAAA,YAAMF,EAAAC,EAAAC,cAACrJ,EAAA,QAAD,CAAMyC,KAAK,SAAjB,cAA6CuH,IAAI,KAC3Db,EAAAC,EAAAC,cAAC8a,GAAD,CAAMphB,GAAI+O,KAAKyC,MAAMxR,GAAI+P,QAAShB,KAAK3M,MAAM2N,WAEjD3J,EAAAC,EAAAC,cAACma,GAAD,CAASU,IAAK/a,EAAAC,EAAAC,cAAA,YAAMF,EAAAC,EAAAC,cAACrJ,EAAA,QAAD,CAAMyC,KAAK,oBAAjB,YAAsDuH,IAAI,KACpEb,EAAAC,EAAAC,cAAC+a,GAAD,CAAMtR,QAAShB,KAAK3M,MAAM2N,qBAtCToE,aAgD7C,SAASiN,GAAK5P,GACV,OACIpL,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACgb,GAAA,EAAD,CAAcxF,UAAQ,EAAC1c,MAAM,GAAGmiB,QAAM,EAAC1H,KAAK,QAAQ2H,OAAQ,CAAEC,IAAK,EAAGC,GAAI,EAAGC,GAAI,EAAGva,GAAI,EAAGD,GAAI,EAAGD,GAAI,IAClGd,EAAAC,EAAAC,cAACgb,GAAA,EAAajO,KAAd,CAAmBC,MAAM,eAAe9B,EAAMxR,IAC9CoG,EAAAC,EAAAC,cAACgb,GAAA,EAAajO,KAAd,CAAmBC,MAAM,WAAW9B,EAAMzB,QAAQoN,QAAQhI,OAC1D/O,EAAAC,EAAAC,cAACgb,GAAA,EAAajO,KAAd,CAAmBC,MAAM,cAAc9B,EAAMzB,QAAQ6R,YACrDxb,EAAAC,EAAAC,cAACgb,GAAA,EAAajO,KAAd,CAAmBC,MAAM,uBAAuB9B,EAAMzB,QAAQ8R,UAC9Dzb,EAAAC,EAAAC,cAACgb,GAAA,EAAajO,KAAd,CAAmBC,MAAM,aAAa9B,EAAMzB,QAAQ6O,WACpDxY,EAAAC,EAAAC,cAACgb,GAAA,EAAajO,KAAd,CAAmBC,MAAM,cAAc9B,EAAMzB,QAAQ+R,UAAUxgB,MAC/D8E,EAAAC,EAAAC,cAACgb,GAAA,EAAajO,KAAd,CAAmBC,MAAM,cAAcyO,IAAOvQ,EAAMzB,QAAQiS,WAAWC,OAAO,6BAO9F,SAASZ,GAAK7P,GACV,IAAM0Q,EAAO,CAAC,IAAK,IAAK,IAAK,IAAK,KAC5BC,EAAa3Q,EAAMzB,QAGzB,OACI3J,EAAAC,EAAAC,cAAA,OAAKI,UAAU,+BACXN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,uBACXN,EAAAC,EAAAC,cAAC8b,GAAD,KACKD,EAAW3e,OAInB2e,EAAW1D,QACRrY,EAAAC,EAAAC,cAAA,OAAKI,UAAU,iCACXN,EAAAC,EAAAC,cAAA,OAAKuD,IAAI,iBAAiBnD,UAAU,uBAAuBiD,IAAKwY,EAAW1D,WAE7E,KAENrY,EAAAC,EAAAC,cAAA,WACK6b,EAAW/e,QAAQ0D,IAAI,SAACuO,EAAGuI,GACxB,OACIxX,EAAAC,EAAAC,cAAA,OAAKW,IAAK2W,GACNxX,EAAAC,EAAAC,cAACyY,GAAA,QAAD,CAAKrf,KAAK,OAAOqK,QAAQ,SAASrD,UAAU,0BACxCN,EAAAC,EAAAC,cAAC0Y,GAAA,QAAD,CAAKC,KAAM,GAEH5J,EAAE5R,SAAW2C,EAAAC,EAAAC,cAACyN,GAAA,QAAD,CAAQrN,UAAU,QAAQ4U,MAAM,UAAU4G,EAAKtE,IAAexX,EAAAC,EAAAC,cAACyN,GAAA,QAAD,CAAQrU,KAAK,UAAU4b,MAAM,UAAU4G,EAAKtE,KAI9HvI,EAAEiJ,OACClY,EAAAC,EAAAC,cAAC0Y,GAAA,QAAD,CAAKC,KAAM,EAAGrL,MAAO,CAAExO,QAAS,QAC5BgB,EAAAC,EAAAC,cAAA,OAAKuD,IAAI,iBAAiBnD,UAAU,uBAAuBiD,IAAK0L,EAAEiJ,UAGtE,KAEHjJ,EAAEiJ,OACClY,EAAAC,EAAAC,cAAC0Y,GAAA,QAAD,CAAKC,KAAM,IAAK5J,EAAEgJ,SAElBjY,EAAAC,EAAAC,cAAC0Y,GAAA,QAAD,CAAKC,KAAM,IAAK5J,EAAEgJ,mBC/FhDgE,eACJ,SAAAA,EAAY7Q,GAAM,IAAAO,EAAA,OAAAvP,OAAAsM,EAAA,EAAAtM,CAAAuM,KAAAsT,IAChBtQ,EAAAvP,OAAAwP,GAAA,EAAAxP,CAAAuM,KAAAvM,OAAAyP,GAAA,EAAAzP,CAAA6f,GAAAnQ,KAAAnD,KAAMyC,KAOR8Q,iBAAmB,SAACtiB,GAClB+R,EAAKc,SAAS,SAAC0K,EAAcC,GAC3B,MAAM,CACJ+E,kBAAkBviB,EAClBwiB,6BAA4B,MAZhBzQ,EAgBlB0Q,kBAAoB,WAClB1Q,EAAKc,SAAS,SAAC0K,EAAcC,GAC3B,MAAM,CACJ+E,kBAAkB,KAClBC,6BAA4B,MApBhBzQ,EA8BlB2Q,aAAe,SAAClkB,GACduT,EAAKP,MAAMyL,0BAAyB,IA/BpBlL,EAkClB4Q,cAAgB,WACd5Q,EAAKP,MAAMyL,0BAAyB,IAnCpBlL,EAsClB6Q,oBAAqB,SAACzS,GACpB4B,EAAKP,MAAMqR,uBAAuB1S,GAClC4B,EAAKP,MAAM0L,wBAAwB/M,IAxCnB4B,EA2ClB+Q,eAAiB,SAAC9iB,GAChB0O,GAAW,CACTe,IAAG,GAAApM,OAAM8G,GAAKc,iBACdyE,KAAO,CACHkH,IAAM5W,KAET0S,KAAK,SAACC,GACP,IAAGA,EAASjD,KAAKa,QAKf,OAAOL,GAAM,UAAU,WAAWyC,EAASjD,KAAKkD,SAJhD1C,GAAM,UAAU,UAAUyC,EAASjD,KAAKkD,SACxCb,EAAKP,MAAM0L,wBAAwBnL,EAAKP,MAAMrO,QAAQtF,oBAKvDiV,MAAM,SAACrC,GACR,OAAOP,GAAM,QAAQ,SAAS,mBA1DhB6B,EA8DhB+G,qBAAuB,SAAAC,GAAS,MAAK,CACjCC,eAAgB,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,gBAAiBC,EAApBF,EAAoBE,aAAcC,EAAlCH,EAAkCG,QAASC,EAA3CJ,EAA2CI,aAA3C,OACdjT,EAAAC,EAAAC,cAAA,OAAKsN,MAAO,CAAExO,QAAS,IACrBgB,EAAAC,EAAAC,cAACoN,GAAA,QAAD,CACE4F,IAAK,SAAAC,GACHxH,EAAKyH,YAAcD,GAErB1F,YAAW,UAAAxQ,OAAY0V,GACvB9C,MAAOkD,EAAa,GACpBnB,SAAU,SAAA5F,GAAC,OAAI8G,EAAgB9G,EAAEqH,OAAOxD,MAAQ,CAAC7D,EAAEqH,OAAOxD,OAAS,KACnEyD,aAAc,kBAAM3H,EAAK4H,aAAaR,EAAcC,IACpDxF,MAAO,CAAEvC,MAAO,IAAKvI,aAAc,EAAG9L,QAAS,WAEjDoJ,EAAAC,EAAAC,cAACyN,GAAA,QAAD,CACErU,KAAK,UACLka,QAAS,kBAAM7H,EAAK4H,aAAaR,EAAcC,IAC/Cnc,KAAK,SACL4c,KAAK,QACLjG,MAAO,CAAEvC,MAAO,GAAIxM,YAAa,IALnC,UASAuB,EAAAC,EAAAC,cAACyN,GAAA,QAAD,CAAQ6F,QAAS,kBAAM7H,EAAK+H,YAAYT,IAAeQ,KAAK,QAAQjG,MAAO,CAAEvC,MAAO,KAApF,WAKJ0I,WAAY,SAAAC,GAAQ,OAClB5T,EAAAC,EAAAC,cAACrJ,EAAA,QAAD,CAAMyC,KAAK,SAASkU,MAAO,CAAEhM,MAAOoS,EAAW,eAAYzX,MAE7D0X,SAAU,SAAChE,EAAOiE,GAAR,OACRA,EAAOnB,GACJoB,WACAC,cACAC,SAASpE,EAAMmE,gBACpBE,8BAA+B,SAAAC,GACzBA,GACFC,WAAW,kBAAMzI,EAAKyH,YAAYiB,YAGtCC,OAAQ,SAAAC,GAAI,OACVvU,EAAAC,EAAAC,cAACsU,GAAAvU,EAAD,CACEwU,eAAgB,CAAE7V,gBAAiB,UAAWI,QAAS,GACvD0V,YAAa,CAAC/I,EAAKP,MAAMrO,QAAQzF,oBACjCqd,YAAU,EACVC,gBAAiBL,EAAKR,gBA3GdpI,EAgHd4H,aAAe,SAACR,EAAcC,GAC5BA,IACArH,EAAKP,MAAMuR,yBAAyB5J,EAAa,KAlHrCpH,EAqHd+H,YAAc,SAAAT,GACZA,IACAtH,EAAKP,MAAMuR,yBAAyB,KArHxChR,EAAK3P,MAAM,CACTmgB,kBAAoB,KACpBC,6BAA4B,GAJdzQ,oFA0BhBhD,KAAKyC,MAAM4D,yBACXrG,KAAKyC,MAAM0L,wBAAwBnO,KAAKyC,MAAMrO,QAAQtF,mDA+F7C,IAAAsd,EAAApM,KACCqM,EAAU7T,KAAV6T,MAEFC,EAAU,CACd,CACEjc,MAAO,UACP2Z,UAAW,gBACX9R,IAAK,gBACLoK,MAAO,OALK7O,OAAAC,EAAA,EAAAD,CAAA,CAQZpD,MAAO,WACP2Z,UAAW,OACX9R,IAAK,OACLoK,MAAO,OACJtC,KAAK+J,qBAAqB,SAE/B,CACE1Z,MAAO,aACP2Z,UAAW,iBACX9R,IAAK,iBACLoK,MAAO,OAET,CACEjS,MAAO,SACP6H,IAAK,MACL8R,UAAW,MACX1H,MAAO,MACPqJ,OAAQ,SAACzT,GAAD,OACNb,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAACyN,GAAA,QAAD,CACErU,KAAK,UACL4b,MAAM,SACN1B,QAAS,kBAAIuB,EAAKmH,iBAAiBrb,IACnChK,KAAK,oBAMb,OACImJ,EAAAC,EAAAC,cAAA,OAAKI,UAAU,yBACbN,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACyY,GAAA,QAAD,KAEE3Y,EAAAC,EAAAC,cAAC0Y,GAAA,QAAD,CAAKC,KAAM,IACT7Y,EAAAC,EAAAC,cAACyN,GAAA,QAAD,CACErU,KAAK,UACLzC,KAAK,kBACL2W,MAAO,CAAC9K,aAAa,QACrB8Q,QAAS,kBAAIuB,EAAKuH,aAAa,sBAJjC,6BAUFtc,EAAAC,EAAAC,cAAC0Y,GAAA,QAAD,CAAKC,KAAM,IACT7Y,EAAAC,EAAAC,cAAC2Q,GAAA,QAAD,CACEzY,KAAK,WACLqV,YAAY,8BACZmP,aAAcjU,KAAKyC,MAAMrO,QAAQtF,iBACjCma,SAAUjJ,KAAK6T,oBACfhP,MAAO,CAAEvC,MAAO,QAChB4R,YAAY,EACZ9D,iBAAiB,KAEhBpQ,KAAKyC,MAAM9O,MAAMnG,iBAAiBuK,IAAI,SAAAE,GAAI,OACzCZ,EAAAC,EAAAC,cAAC2Q,GAAA,QAAO3B,OAAR,CAAerO,IAAKD,EAAK4P,IAAKX,MAAOjP,EAAK4P,IAAKzG,EAAGnJ,EAAKmO,OACpDnO,EAAKmO,aAQlB/O,EAAAC,EAAAC,cAAA,OAAKI,UAAU,gCACbN,EAAAC,EAAAC,cAAC8U,EAAD,CAAOO,MAAO,EAAG/H,MAAO,CAAChM,MAAM,OAAOgU,UAAU,WAAhD,8BAKFxV,EAAAC,EAAAC,cAACuV,GAAA,EAAD,CACEC,UAAU,EACVT,QAASA,EACTU,WAAYhN,KAAKyC,MAAMrO,QAAQvF,kBAC/Bic,KAAK,SACLmC,WAAY,CAAEC,SAAU,GACxBC,QAASnN,KAAKyC,MAAMrO,QAAQxF,qBAC5Bwe,OAAO,QAGT/V,EAAAC,EAAAC,cAAC8V,GAAA,EAAD,CACE7B,QAASxL,KAAKyC,MAAMrO,QAAQ3F,uBAC5B4B,MAAM,eACNmd,SAAUxN,KAAK4T,cACf/O,MAAO,CAAC4I,IAAK,OAAOpX,QAAQ,MAAMJ,gBAAgB,oBAClDqM,MAAM,MACNoL,gBAAgB,EAChBzW,OAAQ,IAERI,EAAAC,EAAAC,cAAC4c,GAAD,OAGF9c,EAAAC,EAAAC,cAAC8V,GAAA,EAAD,CACE7B,QAASxL,KAAK3M,MAAMogB,4BACpBpjB,MAAM,mBACNmd,SAAUxN,KAAK0T,kBACf7O,MAAO,CAAC4I,IAAK,OAAOpX,QAAQ,MAAMJ,gBAAgB,oBAClDqM,MAAM,MACNoL,gBAAgB,EAChBzW,OAAQ,IAERI,EAAAC,EAAAC,cAAC6c,GAAD,CAAiBnjB,GAAI+O,KAAK3M,MAAMmgB,6BA5OrBpO,aAyPZI,eALS,SAAAnS,GAAK,MAAK,CAC9Be,QAAUf,EAAMe,QAChBT,MAAQN,EAAMM,QAGqB,CACrCua,4BACAC,2BACA6F,yBJ7PsC,SAAC1N,GAAD,OAAM,SAAArF,GAC1CA,EAAS,CACNtQ,KAAO,8BACPsD,QAAUqS,MI2PfwN,uBJ/MoC,SAACxN,GAAD,OAAO,SAAArF,GACzCA,EAAS,CACLtQ,KAAM,0BACNsD,QAASqS,MI6MfD,2BALab,CAMZ8N,6CCzQkBe,WAFH7b,KAAV6T,kBAGJ,SAAAgI,EAAY5R,GAAM,IAAAO,EAAA,OAAAvP,OAAAsM,EAAA,EAAAtM,CAAAuM,KAAAqU,IACdrR,EAAAvP,OAAAwP,GAAA,EAAAxP,CAAAuM,KAAAvM,OAAAyP,GAAA,EAAAzP,CAAA4gB,GAAAlR,KAAAnD,KAAMyC,KAWV6R,oBAAsB,WAClBtR,EAAKc,SAAS,CACVqJ,SAAS,IAGbxN,GAAW,CACPe,IAAG,GAAApM,OAAK8G,GAAK2B,oBACb4D,KAAM,CACF1P,GAAI+R,EAAKP,MAAMxR,MAEpB0S,KAAK,SAACC,GAEDA,EAASjD,KAAKa,QACdwB,EAAKP,MAAM8R,oBAAoB3Q,EAASjD,KAAKA,MAG7CQ,GAAM,QAAS,SAAUyC,EAASjD,KAAKkD,SAE3Cb,EAAKc,SAAS,CACVqJ,SAAS,MAEdpJ,MAAM,SAACrC,GAENP,GAAM,QAAS,SAAU,gBACzB6B,EAAKc,SAAS,CACVqJ,SAAS,OAnCjBnK,EAAK3P,MAAQ,CACT8Z,SAAS,EACTqH,MAAO,GAJGxR,oFASdhD,KAAKsU,uDAkCL,IAAMG,EAAO,CAAC,IAAK,IAAK,IAAK,IAAK,KAGlC,OACIpd,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACyY,GAAA,QAAD,KACI3Y,EAAAC,EAAAC,cAAC0Y,GAAA,QAAD,CAAKC,KAAM,IACP7Y,EAAAC,EAAAC,cAAA,MAAIsN,MAAO,CAAC6P,SAAU,SAAtB,gBACkB,KAEV1U,KAAKyC,MAAM9Q,gBAAgBgjB,OAAO,SAACC,EAAaC,GAAd,OAA0BD,EAAcC,EAAQhF,WAAW,MAOzG7P,KAAKyC,MAAM9Q,gBAAgBoG,IAAI,SAACuO,EAAGuI,GAE/B,OACIxX,EAAAC,EAAAC,cAAA,OAAKW,IAAK2W,EAAGhK,MAAO,CAAEnO,cAAe,SAEjCW,EAAAC,EAAAC,cAACyY,GAAA,QAAD,KACI3Y,EAAAC,EAAAC,cAAC0Y,GAAA,QAAD,CAAKC,KAAM,GACP7Y,EAAAC,EAAAC,cAACyN,GAAA,QAAD,CAAQrU,KAAK,UAAU4b,MAAM,UAAWsC,EAAE,IAE9CxX,EAAAC,EAAAC,cAAC0Y,GAAA,QAAD,CAAKC,KAAM5J,EAAEoJ,QAAQ,EAAE,GACnBrY,EAAAC,EAAAC,cAAA,OAAKuD,IAAI,iBAAiBF,IAAK0L,EAAEoJ,QAAS7K,MAAO,CAACvC,MAAM,WAE5DjL,EAAAC,EAAAC,cAAC0Y,GAAA,QAAD,CAAKC,KAAM5J,EAAEoJ,QAAQ,GAAG,GAAI7K,MAAO,CAACxO,QAAQ,SACxCgB,EAAAC,EAAAC,cAAC8b,GAAD,KAAW/M,EAAE7R,OAEjB4C,EAAAC,EAAAC,cAAC0Y,GAAA,QAAD,CAAKC,KAAM,GAAX,SACW5J,EAAEuJ,WAEbxY,EAAAC,EAAAC,cAAC0Y,GAAA,QAAD,CAAKK,OAAQ,EAAGJ,KAAM,IAClB7Y,EAAAC,EAAAC,cAACyY,GAAA,QAAD,KACK1J,EAAEjS,QAAQ0D,IAAI,SAAC+c,EAAGC,GACf,OACI1d,EAAAC,EAAAC,cAAC0Y,GAAA,QAAD,CAAK/X,IAAK6c,EAAI7E,KAAM,GAAIrL,MAAO,CAACnO,cAAc,SAC1CW,EAAAC,EAAAC,cAACyY,GAAA,QAAD,KACI3Y,EAAAC,EAAAC,cAAC0Y,GAAA,QAAD,CAAKC,KAAM,GAEP4E,EAAGpgB,SAAS2C,EAAAC,EAAAC,cAACyN,GAAA,QAAD,CAAQrN,UAAU,QAAQ4U,MAAM,UAAUkI,EAAKM,IAAc1d,EAAAC,EAAAC,cAACyN,GAAA,QAAD,CAAQrU,KAAK,UAAU4b,MAAM,UAAUkI,EAAKM,KAGzH1d,EAAAC,EAAAC,cAAC0Y,GAAA,QAAD,CAAKK,OAAQ,EAAGJ,KAAM4E,EAAGvF,OAAO,EAAE,GAC9BlY,EAAAC,EAAAC,cAAA,OAAKuD,IAAI,iBAAiBF,IAAKka,EAAGvF,OAAQ1K,MAAO,CAACvC,MAAM,WAE5DjL,EAAAC,EAAAC,cAAC0Y,GAAA,QAAD,CAAKK,OAAQ,EAAGJ,KAAM4E,EAAGvF,OAAO,GAAG,IAC/BlY,EAAAC,EAAAC,cAAA,SAAIud,EAAGxF,4BA9FhClK,qDCJlB4P,eACjB,SAAAA,EAAYvS,GAAM,IAAAO,EAAA,OAAAvP,OAAAsM,EAAA,EAAAtM,CAAAuM,KAAAgV,IACdhS,EAAAvP,OAAAwP,GAAA,EAAAxP,CAAAuM,KAAAvM,OAAAyP,GAAA,EAAAzP,CAAAuhB,GAAA7R,KAAAnD,KAAMyC,KACDpP,MAAM,CACPpC,GAAG+R,EAAKP,MAAMxR,GACdgkB,MAAMjS,EAAKP,MAAMwS,MACjBC,WAAW,GACXC,UAAU,GACVC,SAAS,GACTC,UAAU,GACVC,UAAUtS,EAAKP,MAAM6S,UACrBC,SAAS,CAAC,EAAE,GACZC,UAAU,CAAC,OAAO,QAClBC,KAAK,CAAC,cAAc,aAAa,aAAa,aAAa,aAAa,aACxEC,SAAS,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,IAbV1S,qFAiBE,IAAAoJ,EAAApM,KAAA2V,EACS3V,KAAK3M,MAAzB+hB,EADWO,EACXP,SAASC,EADEM,EACFN,UACVO,GAAM,EACNhpB,EAAE,EACF4a,EAAE,EACFqO,EAAQ,EACRC,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAQ,EACRC,EAAG,EACPnW,KAAK3M,MAAM4hB,MAAMld,IAAI,SAACuO,EAAGuI,IACrBsH,EAAM7P,EAAE8P,MAAQhK,EAAK/Y,MAAMiiB,UAAa,MAC9B,GACNO,IAEKM,GAAM,GACXL,IAEKK,GAAM,GACXJ,IAEKI,GAAM,GACXH,IAEKG,GAAM,GACXF,IAGAC,IAGA5P,EAAE8P,OAAShK,EAAK/Y,MAAMiiB,UAAY,EAClC1oB,IAGA4a,IAEAlB,EAAE8P,MAAQR,IACVA,EAAOtP,EAAE8P,SAMjB,IAHA,IAAIC,EAAI,GACJ9R,EAAQ,GAEJsK,EAAE,EAAEA,GAAG+G,EAAK/G,IAChBwH,EAAGhH,KAAK,GACR9K,EAAM8K,KAAKR,GACXuG,EAAS/F,KAAKiH,WAAQzH,IACtBwG,EAAUhG,KAAKkH,eAAY1H,IAI/B7O,KAAK3M,MAAM4hB,MAAMld,IAAI,SAACuO,EAAGuI,GACrBwH,EAAG/P,EAAE8P,WAGTpW,KAAK8D,SAAS,CACVoR,WAAY3Q,EACZ4Q,UAAWkB,EACXjB,SAAUA,EACVC,UAAWA,EACXE,SAAU,CAAC/N,EAAG5a,GACd8oB,SAAU,CAACG,EAASC,EAAQC,EAAQC,EAAQC,EAAQC,sCAKxD,IAAIM,EAAQ,CACRC,OAAOzW,KAAK3M,MAAM6hB,WAClBwB,SAAS,CAAC,CACNnS,MAAO,SACP5D,KAAMX,KAAK3M,MAAM8hB,UACjBlf,gBAAgB+J,KAAK3M,MAAM+hB,SAC3BuB,YAAY3W,KAAK3M,MAAMgiB,UACvBuB,YAAa,KAGjBC,EAAc,CACdJ,OAAOzW,KAAK3M,MAAMmiB,UAClBkB,SAAS,CAAC,CACNnS,MAAO,YACP5D,KAAMX,KAAK3M,MAAMkiB,SACjBtf,gBAAgB,CAACqgB,WAAQ,GAAGA,WAAQ,IACpCK,YAAY,CAACJ,eAAY,GAAGA,eAAY,IACxCK,YAAa,KAGjBE,EAAc,CACdL,OAAOzW,KAAK3M,MAAMoiB,KAClBiB,SAAS,CAAC,CACNnS,MAAO,2BACP5D,KAAMX,KAAK3M,MAAMqiB,SACjBzf,gBAAgB,CAACqgB,WAAQ,GAAGA,WAAQ,GAAGA,WAAQ,GAAGA,WAAQ,GAAGA,WAAQ,GAAGA,WAAQ,IAChFK,YAAY,CAACJ,eAAY,GAAGA,eAAY,GAAGA,eAAY,GAAGA,eAAY,GAAGA,eAAY,GAAGA,eAAY,IACpGK,YAAa,KAGrB,OACIvf,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACwf,GAAA,QAAD,KACI1f,EAAAC,EAAAC,cAAA,OAAKI,UAAU,oBACXN,EAAAC,EAAAC,cAAA,kDACAF,EAAAC,EAAAC,cAAA,KAAGyB,KAAMgH,KAAKyC,MAAMuU,KAAMtM,OAAO,SAAS/S,UAAU,iBAApD,eAIZN,EAAAC,EAAAC,cAAA,OAAKsN,MAAO,CAACtO,UAAU,SACnBc,EAAAC,EAAAC,cAACwf,GAAA,QAAD,KACI1f,EAAAC,EAAAC,cAAA,OAAKsN,MAAO,CAACxO,QAAQ,uBACjBgB,EAAAC,EAAAC,cAAA,sCAEJF,EAAAC,EAAAC,cAAA,OAAKsN,MAAO,CAACxO,QAAQ,uBACjBgB,EAAAC,EAAAC,cAAC0f,GAAA,EAAD,CACItW,KAAM6V,EACNniB,QAAS,CAAE6iB,qBAAqB,QAKhD7f,EAAAC,EAAAC,cAAA,OAAKsN,MAAO,CAACtO,UAAU,SACnBc,EAAAC,EAAAC,cAACwf,GAAA,QAAD,KACI1f,EAAAC,EAAAC,cAACyY,GAAA,QAAD,KACI3Y,EAAAC,EAAAC,cAAC0Y,GAAA,QAAD,CAAKC,KAAM,IACP7Y,EAAAC,EAAAC,cAAA,OAAKsN,MAAO,CAACxO,QAAQ,uBACjBgB,EAAAC,EAAAC,cAAA,wBAEJF,EAAAC,EAAAC,cAAA,OAAKsN,MAAO,CAACxO,QAAQ,uBACjBgB,EAAAC,EAAAC,cAAC0f,GAAA,EAAD,CAAUtW,KAAMkW,MAGxBxf,EAAAC,EAAAC,cAAC0Y,GAAA,QAAD,CAAKC,KAAM,IACP7Y,EAAAC,EAAAC,cAAA,OAAKsN,MAAO,CAACxO,QAAQ,uBACjBgB,EAAAC,EAAAC,cAAA,uCAEJF,EAAAC,EAAAC,cAAA,OAAKsN,MAAO,CAACxO,QAAQ,uBACjBgB,EAAAC,EAAAC,cAAC0f,GAAA,EAAD,CAAUtW,KAAMmW,iBA5JjB1R,aCH3BiH,GAAU7T,KAAV6T,MAEO,SAAS8K,GAAQ1U,GAC5B,IAAI2U,EAAW3U,EAAM6S,WAAa,EAE5BhJ,EAAU,CACZ,CACIjc,MAAO,OACP2Z,UAAW,cACX9R,IAAK,eAET,CACI7H,MAAO,WACP2Z,UAAW,iBACX9R,IAAK,kBAET,CACI7H,MAAO,aACP2Z,UAAW,iBACX9R,IAAK,kBAET,CACI7H,MAAO,eACP2Z,UAAW,sBACX9R,IAAK,uBAET,CACI7H,MAAM,QACN2Z,UAAW,QACX9R,IAAK,SAET,CACI7H,MAAM,SACN2Z,UAAU,QACV9R,IAAK,MACLyT,OAAQ,SAAA0L,GAAG,OACPhgB,EAAAC,EAAAC,cAAA,YACIF,EAAAC,EAAAC,cAAC+f,GAAA,EAAD,CAAKze,MAAOwe,GAAOD,EAAS,EAAI,QAAU,MAAOlf,IAAKmf,GACjDA,GAAOD,EAAS,EAAI,OAAS,YAMlD,OACI/f,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACwf,GAAA,QAAD,KACI1f,EAAAC,EAAAC,cAAA,OAAKI,UAAU,oBACXN,EAAAC,EAAAC,cAACggB,GAAD,CAAO3K,MAAO,GAAd,yBAIAvV,EAAAC,EAAAC,cAACuV,GAAA,EAAD,CACIG,YAAY,EACZG,OAAO,MACPd,QAASA,EACTU,WAAYvK,EAAMwS,gDCxD3B,SAASuC,GAAU/U,GAE9B,OACIpL,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACwf,GAAA,QAAD,KACI1f,EAAAC,EAAAC,cAAA,OAAKI,UAAU,oBACXN,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,uBAGJF,EAAAC,EAAAC,cAAA,WACKkL,EAAMgV,UAAU1f,IAAI,SAACuO,EAAEuI,GACpB,OACIxX,EAAAC,EAAAC,cAACwf,GAAA,QAAD,CAAM7e,IAAK2W,EAAGhK,MAAO,CAAC9K,aAAa,SAC/B1C,EAAAC,EAAAC,cAACmgB,GAAA,EAAD,CACIC,OAAM,GAAArjB,OAAKgS,EAAEsR,OAAOrlB,KAAd,OAAA+B,OAAwBgS,EAAEsR,OAAO9P,aAAjC,KACN5F,OACI7K,EAAAC,EAAAC,cAAC2K,GAAA,EAAD,CACItH,IAAI,oFACJE,IAAKwL,EAAEsR,OAAOrlB,OAGtBkP,QACIpK,EAAAC,EAAAC,cAAA,YACIF,EAAAC,EAAAC,cAACsgB,GAAA,EAAD,CAAM/M,KAAK,QAAQ4F,UAAQ,EAACuD,aAAc3N,EAAEwR,SAC5CzgB,EAAAC,EAAAC,cAAA,SACK+O,EAAEyR,4GCZ/C1L,2DAAgB7T,KAAhB6T,OAAO2L,GAASxf,KAATwf,KA8NAC,GA3NI,SAACxV,GAAU,IAAAyV,EACIC,mBAAS,CACvChL,SAAS,EACTzL,MAAO,GACP0W,YAAY,EACZC,SAAU,GACV9lB,KAAM,GACN6e,SAAU,GACVF,KAAM,GACNoH,WAAY,QACZ5D,SAAU,GACV6D,cAAc,IAXYC,EAAA/kB,OAAAglB,GAAA,EAAAhlB,CAAAykB,EAAA,GACrBG,EADqBG,EAAA,GACXE,EADWF,EAAA,GAAAG,EAcFR,mBAAS,IAdPS,EAAAnlB,OAAAglB,GAAA,EAAAhlB,CAAAklB,EAAA,GAcrBvC,EAdqBwC,EAAA,GAcdC,EAdcD,EAAA,GA4H5B,OACEvhB,EAAAC,EAAAC,cAACuhB,EAAA,SAAD,KAEIzhB,EAAAC,EAAAC,cAAA,OAAKI,UAAU,aACXN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,OACXN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,aACXN,EAAAC,EAAAC,cAAA,OAAKsN,MAAO,CAACtO,UAAW,aArCnB,SAACwiB,GAClB,GAAGV,EAASD,WACR,OAAOY,KAAaC,KAAK,CACrBpV,QAAO,aACPvT,YAAa,+CACbyoB,cAqCPG,CAAa,eAEd7hB,EAAAC,EAAAC,cAAA,OAAKI,UAAU,aACXN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,OAEXN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,YAEXN,EAAAC,EAAAC,cAACygB,GAAD,qBACkBvV,EAAM9B,KAAKkH,KAG7BxQ,EAAAC,EAAAC,cAAC4hB,GAAD,CAAOvM,MAAO,GAAd,qBAEAvV,EAAAC,EAAAC,cAAA,OAAKsN,MAAO,CAAEuU,UAAW,QAASC,UAAW,WACzChiB,EAAAC,EAAAC,cAAC8b,GAAD,KACK5Q,EAAM9B,KAAK2Y,aAOxBjiB,EAAAC,EAAAC,cAAA,OAAKI,UAAU,YAEfN,EAAAC,EAAAC,cAAA,UACII,UAAU,gBACVkN,MAAO,CAACtO,UAAW,OAAQwD,aAAc,OAAQuI,MAAO,OACxD2G,SA3IC,SAACsQ,GAClB,IAAIC,EAAOD,EAAM7O,OAAOxD,MAEpBuS,EAAW,QAEF,OAATD,IACFC,EAAW,SAGA,OAATD,EACAC,EAAW,QAGE,OAARD,EACPC,EAAW,OAGK,OAATD,EACPC,EAAW,SAGI,OAARD,IACPC,EAAW,UAGbf,EAAYjlB,OAAAC,EAAA,EAAAD,CAAA,GAAK4kB,EAAN,CAAgBC,WAAYmB,EAAUrI,SAAUoI,OAoH3CniB,EAAAC,EAAAC,cAAA,UAAQ2P,MAAM,GAAGwS,UAAQ,GAAzB,mBAEAriB,EAAAC,EAAAC,cAAA,UAAQ2P,MAAM,MAAd,iBACA7P,EAAAC,EAAAC,cAAA,UAAQ2P,MAAM,MAAd,mBACA7P,EAAAC,EAAAC,cAAA,UAAQ2P,MAAM,MAAd,yBACA7P,EAAAC,EAAAC,cAAA,UAAQ2P,MAAM,MAAd,mBACA7P,EAAAC,EAAAC,cAAA,UAAQ2P,MAAM,MAAd,mBAGJ7P,EAAAC,EAAAC,cAACoiB,GAAAriB,EAAD,CACI7H,KAAM4oB,EAASC,WACfziB,MAAM,UACNtD,KAAK,SACLmiB,SAAU2D,EAAS3D,SACnBkF,YAAa,CAAEC,iBAAiB,GAChC5Q,SAjKO,SAAC6Q,GACxBpB,EAAYjlB,OAAAC,EAAA,EAAAD,CAAA,GAAK4kB,EAAN,CAAgBnH,KAAM4I,MAiKjB5S,MAAOmR,EAASnH,OAGpB7Z,EAAAC,EAAAC,cAAA,OAAKsN,MAAO,CAACtO,UAAW,OAAQwD,aAAc,UAE9C1C,EAAAC,EAAAC,cAACyN,GAAA,QAAD,CACIrU,KAAK,UACLka,QAvIG,SAAC0O,GAChBA,EAAMjW,iBACNoV,EAAYjlB,OAAAC,EAAA,EAAAD,CAAA,GAAK4kB,EAAN,CACP3W,MAAO,GACP0W,YAAY,EACZG,cAAc,KAIlB5Y,GAAW,CACPe,IAAItF,GAAKoD,gBACTmC,KAAK,CACDoZ,OAAQtX,EAAM5N,KAAK/C,OACnBkoB,UAAWvX,EAAM5N,KAAK9C,UACtBkoB,OAAQxX,EAAM9B,KAAKkH,IACnBqS,YAAa7B,EAASnH,KACtBiJ,YAAa9B,EAASjH,YAG7BzN,KAAK,SAACC,GACH8U,EAAYjlB,OAAAC,EAAA,EAAAD,CAAA,GACL4kB,EADI,CAEP3W,MAAO,GACP0W,YAAY,EACZG,cAAc,KAGlBM,EAASjV,EAASjD,KAAKyV,OAEvBgE,QAAQC,IAAIzW,EAASjD,KAAKyV,SAE7BrS,MAAM,SAACrC,GACJgX,EAAYjlB,OAAAC,EAAA,EAAAD,CAAA,GACL4kB,EADI,CAEP3W,MAAO,GACP0W,YAAY,EACZG,cAAc,QAoGV7H,SAAU2H,EAASD,YAHvB,aAYPC,EAASE,aACNlhB,EAAAC,EAAAC,cAAA,OAAKI,UAAU,aACXN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,OACXN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,aACXN,EAAAC,EAAAC,cAAA,OAAKsN,MAAO,CAACtO,UAAW,OAAQsW,UAAW,WACvCxV,EAAAC,EAAAC,cAAC4hB,GAAD,CAAOvM,MAAO,GAAd,WAEAvV,EAAAC,EAAAC,cAAA,OAAKsN,MAAO,CAACjO,OAAQ,QAASmD,aAAa,OAAQyY,OAAQ,oBAAqBlQ,MAAO,SAClF8T,EAAM7iB,OAAS,EAtGzB,WACf,IAAIsb,EAAI,EACR,OAAOuH,EAAMre,IAAI,SAAC4I,GACd,OAAOtJ,EAAAC,EAAAC,cAAA,OAAKI,UAAU,aACtBN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,OACXN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,YACXN,EAAAC,EAAAC,cAAA,0BAAqBsX,KAGzBxX,EAAAC,EAAAC,cAAA,OAAKI,UAAU,YACXN,EAAAC,EAAAC,cAAA,sBAAiBoJ,EADrB,IAC4B,MACd,WAATA,EACGtJ,EAAAC,EAAAC,cAACrJ,EAAA,QAAD,CAAMyC,KAAK,eAAekF,MAAM,UAAUykB,aAAa,YACrDjjB,EAAAC,EAAAC,cAACrJ,EAAA,QAAD,CAAMyC,KAAK,eAAekF,MAAM,UAAUykB,aAAa,iBAyF7BC,GAAe,UAOvD,OCtLCC,GAAe,SAAC3U,EAAGC,GAAJ,OAAS,SAAA7E,GACjCrB,GAAK,CACDc,IAAItF,GAAK6B,2BACT0D,KAAK,CACD7O,OAAO+T,EACP9T,UAAU+T,KAEfnC,KAAK,SAACC,GAEL,GAAGA,EAASjD,KAAKa,QACb,GAAGoC,EAASjD,KAAKA,KAAK8Z,YAAc7W,EAASjD,KAAKA,KAAKzO,eACnD+O,EAAS,CACLtQ,KAAK,kBACLkD,SAAU+P,EAASjD,KAAKA,KAAKtP,WAC7ByC,SAAU8P,EAASjD,KAAKA,KAAKzO,eAC7B6B,SAAU6P,EAASjD,KAAKA,KAAKrP,cAC7B0C,SAAU4P,EAASjD,KAAKA,KAAK8Z,UAC7BzlB,SAAU,EACVC,SAAU,EACVC,SAAU0O,EAASjD,KAAKA,KAAK7P,gBAGjC,CACA,IAAIsP,GArEFkG,EAqEiB1C,EAASjD,KAAKA,KAAK+Z,QAjE3C,CACHtoB,OAHSuoB,KAAKC,MAAMtU,EAAI,IAIxBjU,OAHSwoB,OAAOC,OAAOxU,EAAI,IAAIN,MAAM,EAAG,MAmEhC/E,EAAS,CACLtQ,KAAM,kBACNkD,SAAU+P,EAASjD,KAAKA,KAAKtP,WAC7ByC,SAAU8P,EAASjD,KAAKA,KAAKzO,eAC7B6B,SAAU6P,EAASjD,KAAKA,KAAKrP,cAC7B0C,SAAU4P,EAASjD,KAAKA,KAAK8Z,UAC7BzlB,SAAUoL,EAAEhO,OACZ6C,SAAUmL,EAAE/N,OACZ6C,SAAU0O,EAASjD,KAAKA,KAAK7P,iBAMrCmQ,EAAS,CACLtQ,KAAM,eArFL,IAAC2V,IAyFbvC,MAAM,SAACP,GACJvC,EAAS,CACLtQ,KAAM,mBA2GLoqB,GAAiB,SAAClV,GAC3B,MAAO,CACHlV,KAAM,kBACNsD,QAAS4R,IAWJmV,GAAiB,SAAC5Z,GAC3B,MAAO,CACHzQ,KAAM,yBACNsD,QAASmN,IC3MTsQ,YAAYC,KAAZD,SACJuJ,GAAO,EAELC,eACF,SAAAA,EAAYzY,GAAO,IAAAO,EAAAvP,OAAAsM,EAAA,EAAAtM,CAAAuM,KAAAkb,IACjBlY,EAAAvP,OAAAwP,GAAA,EAAAxP,CAAAuM,KAAAvM,OAAAyP,GAAA,EAAAzP,CAAAynB,GAAA/X,KAAAnD,KAAMyC,KAiDR0Y,iBAAmB,SAAA9X,GACf,IAAM5T,EAAO4T,EAAEqH,OAAOxD,MACtBlE,EAAKc,SAAS,CAAErU,UAjDlB,IAAI8P,EAAS,CACXzN,OAAQkR,EAAKP,MAAM1N,QAAQjD,OAC3BC,UAAWiR,EAAKP,MAAM1N,QAAQhD,WALf,OAQjBiR,EAAK3P,MAAQ,CACX5D,KAAM,OACN2rB,YAAa7b,EACb8b,SAAU,GAXKrY,oFAgBA,IAAAoJ,EAAApM,KACT+Z,EAAS/Z,KAAKyC,MAAM1N,QAAQjD,OAChBkO,KAAKyC,MAAM1N,QAAQhD,UAErCiO,KAAK8D,SAAS,CAACqJ,SAAS,IAEY,OAAjClN,aAAaC,QAAQ,QACpBD,aAAaI,QAAQ,OAAQ,IAAIpH,MAGjCgiB,GAAOhb,aAAaC,QAAQ,QAIhCP,GAAW,CACPe,IAAItF,GAAKmD,yBACToC,KAAK,CACDoZ,OAAQA,KAGfpW,KAAK,SAACC,GACH,IAAGA,EAASjD,KAAKa,QAKb,OAAOL,GAAM,UAAU,WAAWyC,EAASjD,KAAKkD,SAJhDuI,EAAK3J,MAAM6Y,oBAAmB,EAAM1X,EAASjD,KAAKhO,WAClDyZ,EAAKtI,SAAS,CAACuX,SAAUzX,EAASjD,KAAKsa,SAM9ClX,MAAM,SAACrC,GACJ,OAAOP,GAAM,QAAQ,SAAS,mDAS7B,IAAA4Q,EAAA/R,KAAA2V,EACoB3V,KAAK3M,MAAxB5D,EADDkmB,EACClmB,KAAM4rB,EADP1F,EACO0F,SAEVE,EAAa,EAOjB,OAHgBA,EAAH,KAFbN,GAAOhb,aAAaC,QAAQ,UAEC,IAAIjH,MAAOuiB,UAAqB,IAATH,EAClC,IAAIpiB,KAAKgiB,IAAMO,UAAoB,IAATH,EAG1ChkB,EAAAC,EAAAC,cAACuhB,EAAA,SAAD,KACIzhB,EAAAC,EAAAC,cAAA,OAAKI,UAAU,aACXN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,OACXN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,aACXN,EAAAC,EAAAC,cAAA,OAAKsN,MAAO,CAACtO,UAAW,aAKpCc,EAAAC,EAAAC,cAAA,OAAKI,UAAU,aACXN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,OACXN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,aACXN,EAAAC,EAAAC,cAACya,GAAA,EAAD,CAAU7E,QAASnN,KAAKyC,MAAM1N,QAAQjC,WAAYmf,QAAM,EAAC/P,QAAM,GAE/D7K,EAAAC,EAAAC,cAAA,OAAKsN,MAAO,CAACjO,OAAQ,SACjBS,EAAAC,EAAAC,cAAA,OAAKI,UAAU,aACXN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,OACXN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,YACXN,EAAAC,EAAAC,cAAA,MAAItG,GAAG,QACHoG,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAACrJ,EAAA,QAAD,CAAM2W,MAAO,CAAC6P,SAAU,QAAS/jB,KAAK,UAG1C0G,EAAAC,EAAAC,cAAA,WAIAF,EAAAC,EAAAC,cAAA,qBAIAF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAACkkB,GAAAnkB,EAAD,CACIuN,MAAO,CAAE6P,SAAU,IACnBhK,OAAQ6Q,EACRG,MAAO,kBAAM3J,EAAKtP,MAAMkZ,aAAa5J,EAAKtP,MAAM1N,QAAQjD,OAAOigB,EAAKtP,MAAM1N,QAAQhD,iBAMlGsF,EAAAC,EAAAC,cAAA,OAAKI,UAAU,YACXN,EAAAC,EAAAC,cAACiV,GAAA,EAAD,CACInc,MAAM,+BACNsc,UAAW,WACPoF,EAAKtP,MAAMkZ,aAAa5J,EAAKtP,MAAM1N,QAAQjD,OAAOigB,EAAKtP,MAAM1N,QAAQhD,WACrEkO,aAAaM,WAAW,SAE5BmM,OAAO,MACPD,WAAW,MAEXpV,EAAAC,EAAAC,cAACyN,GAAA,QAAD,CAAQrU,KAAK,WAAb,uBAUhB0G,EAAAC,EAAAC,cAAA,OAAKsN,MAAO,CAAC9K,aAAc,UAE3B1C,EAAAC,EAAAC,cAAC2a,GAAA,EAAD,CAAMC,iBAAiB,IAAIyJ,YAAansB,EAAMoV,MAAO,CAAEjO,OAAQ,SAC1DnD,OAAAc,EAAA,EAAAd,CAAIooB,MAAMC,KAAK,CAAEvoB,OAAQyM,KAAKyC,MAAM1N,QAAQhC,WAAWQ,QAAU,SAACwoB,EAAGlN,GAAJ,OAAUA,KAAI9W,IAAI,SAAA8W,GAAC,OACjFxX,EAAAC,EAAAC,cAACykB,GAAD,CAAS5J,IAAG,WAAA9d,OAAaua,EAAE,GAAK3W,IAAK2W,GAArC,WAEaA,EAAE,EAEXxX,EAAAC,EAAAC,cAAA,WAEAF,EAAAC,EAAAC,cAAC0kB,GAAD,CACI/jB,IAAK2W,EACLlO,KAAMoR,EAAKtP,MAAM1N,QAAQhC,WAAW8b,GACpCha,KAAMkd,EAAK1e,MAAM+nB,8BA7IzCjW,IAAMC,WAgKXI,eAJS,SAAAnS,GAAK,MAAK,CAC9B0B,QAAS1B,EAAM0B,UAGqB,CACpCumB,mBD2C8B,SAACY,EAAMvb,GACrC,MAAO,CACHhQ,KAAM,cACNkD,SAAUqoB,EACVpoB,SAAU6M,IC9Cdgb,aDmDwB,SAACQ,EAAKC,GAAN,OAAc,SAAAnb,GACtCrB,GAAK,CACDc,IAAG,GAAApM,OAAK8G,GAAKqD,uBACbkC,KAAM,CACFoZ,OAAQoC,EACRnC,UAAWoC,KAGlBzY,KAAK,SAACC,GACCA,EAASjD,KAAKa,QACdP,EAAS,CACLtQ,KAAM,gBACNsD,SAAS,IAIbkN,GAAM,QAAS,SAAUyC,EAASjD,KAAKkD,WAG9CE,MAAM,SAACrC,GACJP,GAAM,QAAS,SAAU,qBCzElBqE,CAGZ0V,IC5KKzU,WAAaC,WAAbD,UACA4F,GAAgB7T,KAAhB6T,MAAO2L,GAASxf,KAATwf,KAETqE,eACF,SAAAA,EAAY5Z,GAAM,IAAAO,EAAA,OAAAvP,OAAAsM,EAAA,EAAAtM,CAAAuM,KAAAqc,IACdrZ,EAAAvP,OAAAwP,GAAA,EAAAxP,CAAAuM,KAAAvM,OAAAyP,GAAA,EAAAzP,CAAA4oB,GAAAlZ,KAAAnD,KAAMyC,KAQV6Z,iBAAiB,SAACC,GAEdvZ,EAAKc,SAAS,CAAEyY,KAAKA,KAXPvZ,EAalBwZ,gBAAgB,SAACC,GACbzZ,EAAKc,SAAS,CAAE2Y,QAAQA,EAAQ/R,OAAOxD,SAdzBlE,EAiBlB0Z,eAAe,WACX1Z,EAAKc,SAAS,CAAEqJ,SAAS,IADV,IAAAwI,EAES3S,EAAK3P,MAAvBkpB,EAFS5G,EAET4G,KAAME,EAFG9G,EAEH8G,QAEF,IAAPF,GAAYE,EAAQlpB,OAAO,GAC1BqM,GAAK,CACDc,IAAKtF,GAAKuC,cACVgD,KAAM,CACF7O,OAAQkR,EAAKP,MAAM1N,QAAQjD,OAC3B8lB,OAAQ5U,EAAKP,MAAM1N,QAAQhD,UAC3B+lB,OAAQyE,EACRxE,SAAU0E,KAGjB9Y,KAAK,SAACC,GACCA,EAASjD,KAAKa,SACdwB,EAAKc,SAAS,CAAEqJ,SAAS,IACzBhM,GAAM,UAAW,UAAW,4BAC5B6B,EAAKP,MAAMuY,gBAAe,KAG1BhY,EAAKc,SAAS,CAAEqJ,SAAS,IACzBhM,GAAM,QAAS,SAAUyC,EAASjD,KAAKkD,YAE5CE,MAAM,SAACrC,GAENP,GAAM,QAAS,SAAU,gBACzB6B,EAAKc,SAAS,CAAEqJ,SAAS,OA1CjCnK,EAAK3P,MAAQ,CACTkpB,KAAM,EACNE,QAAS,YACTtP,SAAS,GALCnK,yEAqDd,IAAM2Z,EAAO,CAAC,WAAY,MAAO,SAAU,OAAQ,aACnD,OACItlB,EAAAC,EAAAC,cAACyY,GAAA,QAAD,KACI3Y,EAAAC,EAAAC,cAAC0Y,GAAA,QAAD,CAAKC,KAAM,IACP7Y,EAAAC,EAAAC,cAAA,OACIsN,MAAO,CAAEvC,MAAO,MAAOjJ,OAAQ,OAAQwT,UAAW,OAAQxW,QAAS,SAEnEgB,EAAAC,EAAAC,cAACqlB,GAAD,CAAOhQ,MAAO,GAAd,iBACAvV,EAAAC,EAAAC,cAAA,OAAKI,UAAU,MACXN,EAAAC,EAAAC,cAAA,YACIF,EAAAC,EAAAC,cAACslB,GAAD,oCADJ,IAC6CxlB,EAAAC,EAAAC,cAAA,WACzCF,EAAAC,EAAAC,cAACsgB,GAAA,EAAD,CAAMiF,SAAUH,EAAM1T,SAAUjJ,KAAKsc,iBAAkBpV,MAAOlH,KAAK3M,MAAMkpB,OACxEvc,KAAK3M,MAAMkpB,KAAOllB,EAAAC,EAAAC,cAAA,QAAMI,UAAU,iBAAiBglB,EAAK3c,KAAK3M,MAAMkpB,KAAO,IAAa,KAIhGllB,EAAAC,EAAAC,cAAC2C,GAAA,EAAD,MAEA7C,EAAAC,EAAAC,cAAA,OAAKI,UAAU,MACXN,EAAAC,EAAAC,cAACwlB,GAAD,CAAU5T,KAAM,EAAGF,SAAUjJ,KAAKwc,gBAAiBtV,MAAOlH,KAAK3M,MAAMopB,WAGzEplB,EAAAC,EAAAC,cAAC2C,GAAA,EAAD,MAEA7C,EAAAC,EAAAC,cAAA,OAAKI,UAAU,MACXN,EAAAC,EAAAC,cAACyN,GAAA,QAAD,CAAQrU,KAAK,UAAUka,QAAS7K,KAAK0c,eAAgBvP,QAASnN,KAAK3M,MAAM8Z,SAAzE,qBA/EL/H,aA6FRI,eAJS,SAAAnS,GAAK,MAAK,CAC9B0B,QAAU1B,EAAM0B,UAGmB,CACnCimB,mBADWxV,CAEZ6W,ICrFKhQ,oBAAU7T,KAAV6T,OACA2Q,GAAUC,KAAVD,MAEFE,eACF,SAAAA,EAAYza,GAAM,IAAAO,EAAA,OAAAvP,OAAAsM,EAAA,EAAAtM,CAAAuM,KAAAkd,IACdla,EAAAvP,OAAAwP,GAAA,EAAAxP,CAAAuM,KAAAvM,OAAAyP,GAAA,EAAAzP,CAAAypB,GAAA/Z,KAAAnD,KAAMyC,KAsFV0a,aAAa,WACTna,EAAKc,SAAS,CACVsZ,UAAU,KAzFApa,EA6FlBqa,UAAY,SAACC,GACTta,EAAKc,SAAS,CACVyZ,iBAAkBD,EAClBF,UAAU,KAhGApa,EAoGlBmE,SAAW,SAACjP,KAlGR8K,EAAK3P,MAAM,CACP8Z,SAAQ,EACRxM,KAAK,GACL6c,WAAW,KACXJ,UAAS,EACTG,iBAAiB,MAPPva,oFAWC,IAAAoJ,EAAApM,KACXjO,EAAYiO,KAAKyC,MAAM1N,QAAQhD,WAAaiO,KAAKyC,MAAMvO,KAAK0jB,OAAO/P,IACnE/V,EAASkO,KAAKyC,MAAM1N,QAAQjD,QAAUkO,KAAKyC,MAAMvO,KAAK0jB,OAAO9lB,OAGjEkO,KAAKyC,MAAMgb,gBAAgBzd,KAAKyC,MAAM1N,QAAQjD,OAAQkO,KAAKyC,MAAM1N,QAAQjD,QAEzEkO,KAAK8D,SAAS,CACVqJ,SAAQ,IAGZ,IAAIuQ,EAAK9d,GAAK,CACVc,IAAKtF,GAAKmC,iBACVoD,KAAM,CACFiX,OAAQ7lB,EACRD,OAAQA,KAIZ6rB,EAAK/d,GAAK,CACVc,IAAG,GAAApM,OAAI8G,GAAK+B,6BACZwD,KAAK,CACD1P,GAAGa,KAIP8rB,EAAKhe,GAAK,CACVc,IAAG,GAAApM,OAAK8G,GAAKsC,uBACbiD,KAAM,CACFiX,OAAQ7lB,EACRD,OAAQA,KAIhB+rB,QAAQC,IAAI,CAACJ,EAAIC,EAAIC,IAChBja,KAAK,SAAA2C,GAQN,GAJA8F,EAAKtI,SAAS,CACVqJ,SAAQ,IAGT7G,EAAE,GAAG3F,KAAKa,SAAW8E,EAAE,GAAG3F,KAAKa,QAAQ,CACtC,IAAIua,EAAIzV,EAAE,GAAG3F,KAAKA,KACdod,EAAIzX,EAAE,GAAG3F,KAAKqd,OAAOA,OAAOjmB,IAAI,SAAC+c,EAAIjG,GACrC,OAAOpb,OAAAC,EAAA,EAAAD,CAAA,GACAqhB,EACAiH,EAAElN,MAMbzC,EAAKtI,SAAS,CACVnD,KAAMod,EACNP,WAAYlX,EAAE,GAAG3F,KAAKqd,OAAO5H,QAG9B9P,EAAE,GAAG3F,KAAKa,SACT4K,EAAK3J,MAAMuY,eAAe1U,EAAE,GAAG3F,KAAKkG,aAIxC1F,GAAM,QAAQ,SAAT,GAAA7M,OAAqBgS,EAAE,GAAG3F,KAAKa,QAAU,GAAG8E,EAAE,GAAG3F,KAAKkD,QAAtD,SAAAvP,OAAqEgS,EAAE,GAAG3F,KAAKa,QAAU,GAAG8E,EAAE,GAAG3F,KAAKkD,YAGlHE,MAAM,SAACP,GAEJ4I,EAAKtI,SAAS,CACVqJ,SAAQ,IAEZhM,GAAM,QAAQ,SAAS,mDAqBvB,IAAA4Q,EAAA/R,KACEsM,EAAU,CACZ,CACIjc,MAAO,gBACP6H,IAAK,SACLyT,OAAQ,SAACC,EAAMT,GAAP,OACJ9T,EAAAC,EAAAC,cAACyN,GAAA,QAAD,CACIuH,MAAM,SACNre,KAAK,OACLyC,KAAK,UACLma,KAAK,QACLD,QAAS,WAAQkH,EAAKsL,UAAUzR,EAAK0R,UAIjD,CACIjtB,MAAO,WACP2Z,UAAW,OACX9R,IAAK,QAET,CACI7H,MAAO,kBACP6H,IAAK,gBACL8R,UAAW,gBACX2B,OAAQ,SAAAsS,GAAI,OACR5mB,EAAAC,EAAAC,cAAA,YACK0mB,EAAKlmB,IAAI,SAAAsf,GACN,OACIhgB,EAAAC,EAAAC,cAAC+f,GAAA,EAAD,CAAKze,MAAM,QAAQX,IAAKmf,GACnBA,EAAI6G,oBAO7B,CACI7tB,MAAO,gBACP6H,IAAK,cACL8R,UAAW,cACX2B,OAAQ,SAAAsS,GAAI,OACR5mB,EAAAC,EAAAC,cAAA,YACK0mB,EAAKlmB,IAAI,SAAAsf,GACN,OACIhgB,EAAAC,EAAAC,cAAC+f,GAAA,EAAD,CAAKze,MAAM,OAAOX,IAAKmf,GAClBA,EAAI6G,oBAO7B,CACI7tB,MAAO,YACP2Z,UAAW,YACX9R,IAAK,aAET,CACI7H,MAAO,cACP2Z,UAAW,cACX9R,IAAK,eAET,CACI7H,MAAO,SACP2Z,UAAW,YACX9R,IAAK,YACLyT,OAAQ,SAAAsS,GAAI,OACR5mB,EAAAC,EAAAC,cAAA,YAEQ0mB,EAEI5mB,EAAAC,EAAAC,cAACrJ,EAAA,QAAD,CAAMyC,KAAK,eAAekF,MAAM,UAAUykB,aAAa,YAEvDjjB,EAAAC,EAAAC,cAACrJ,EAAA,QAAD,CAAMyC,KAAK,eAAekF,MAAM,UAAUykB,aAAa,YAU/E,OACIjjB,EAAAC,EAAAC,cAAA,OAAKI,UAAU,sBACXN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,wBACVqI,KAAKyC,MAAM0b,SAAS9vB,WACjBgJ,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAC6mB,GAAD,CAAOzmB,UAAU,uBAAuBiV,MAAO,GAA/C,UACAvV,EAAAC,EAAAC,cAACgb,GAAA,EAAD,CAAcxF,UAAQ,EAAC1c,MAAO,KAAMmiB,QAAM,EAAC1H,KAAK,SAC5CzT,EAAAC,EAAAC,cAACgb,GAAA,EAAajO,KAAd,CAAmBC,MAAM,QACpBvE,KAAKyC,MAAMvO,KAAK0jB,OAAOrlB,MAG5B8E,EAAAC,EAAAC,cAACgb,GAAA,EAAajO,KAAd,CAAmBC,MAAM,YACpBvE,KAAKyC,MAAMvO,KAAK0jB,OAAOplB,SAG5B6E,EAAAC,EAAAC,cAACgb,GAAA,EAAajO,KAAd,CAAmBC,MAAM,WACpBvE,KAAKyC,MAAMvO,KAAK0jB,OAAOnlB,SAG5B4E,EAAAC,EAAAC,cAACgb,GAAA,EAAajO,KAAd,CAAmBC,MAAM,SACpBvE,KAAK3M,MAAMmqB,aAIpBnmB,EAAAC,EAAAC,cAAA,WAEAF,EAAAC,EAAAC,cAAC8mB,GAAA,EAAD,CAAUpV,SAAUjJ,KAAKmH,UACrB9P,EAAAC,EAAAC,cAACylB,GAAD,CAAOsB,OAAO,qBAAqBpmB,IAAI,KACnCb,EAAAC,EAAAC,cAACuV,GAAA,EAAD,CACIhC,KAAK,QACLsC,OAAO,MACPD,QAASnN,KAAK3M,MAAM8Z,QACpBb,QAASA,EACTU,WAAYhN,KAAK3M,MAAMsN,KACvBsM,YAAY,OAInB,KAITjN,KAAKyC,MAAM0b,SAAS9vB,WAAa,KAC3B2R,KAAKyC,MAAM1N,QAAQlC,iBACrBwE,EAAAC,EAAAC,cAACyY,GAAA,QAAD,CAAKhV,QAAQ,eAAelC,MAAM,UAC9BzB,EAAAC,EAAAC,cAAC0Y,GAAA,QAAD,CAAK9X,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIua,GAAI,GAAID,GAAI,IACrCtb,EAAAC,EAAAC,cAACymB,GAAA,EAAD,CACInX,OAAO,UACPxW,MAAM,kDACNkuB,SAAS,kCAIrBlnB,EAAAC,EAAAC,cAAA,WAGQyI,KAAKyC,MAAM1N,QAAQ/B,SACnBqE,EAAAC,EAAAC,cAAA,WAEQyI,KAAKyC,MAAM1N,QAAQ9B,gBAAkBoE,EAAAC,EAAAC,cAACwgB,GAAD,MAAe1gB,EAAAC,EAAAC,cAACinB,GAAD,OAG1DnnB,EAAAC,EAAAC,cAACwgB,GAAD,OAKlB1gB,EAAAC,EAAAC,cAAC8V,GAAA,EAAD,CACIK,gBAAgB,EAChBpL,MAAM,MACNuC,MAAO,CAAC4I,IAAI,QACZpd,MAAM,mBACNmb,QAASxL,KAAK3M,MAAM+pB,SACpB9P,KAAMtN,KAAKmd,aACX3P,SAAUxN,KAAKmd,aACflmB,OAAQ,MAERI,EAAAC,EAAAC,cAACknB,GAAD,CAAuBnB,IAAKtd,KAAK3M,MAAMkqB,6BAzQ1CpY,IAAMC,WAkRrBsZ,eACF,SAAAA,EAAYjc,GAAM,IAAAkc,EAAA,OAAAlrB,OAAAsM,EAAA,EAAAtM,CAAAuM,KAAA0e,IACdC,EAAAlrB,OAAAwP,GAAA,EAAAxP,CAAAuM,KAAAvM,OAAAyP,GAAA,EAAAzP,CAAAirB,GAAAvb,KAAAnD,KAAMyC,KACDpP,MAAM,CACPurB,UAAS,EACTC,SAAS,MAJCF,oFAQC,IAAAG,EAAA9e,KACfA,KAAK8D,SAAS,CACV8a,UAAS,IAEbhf,GAAK,CACDc,IAAItF,GAAKoC,iCACTmD,KAAK,CACD2c,IAAItd,KAAKyC,MAAM6a,OAGtB3Z,KAAK,SAACC,GAEAA,EAASjD,KAAKa,QACbsd,EAAKhb,SAAS,CACV+a,SAASjb,EAASjD,KAAKA,KAAK,KAIhCQ,GAAM,QAAQ,UAAUyC,EAASjD,KAAKkD,SAE1Cib,EAAKhb,SAAS,CACV8a,UAAS,MAGhB7a,MAAM,SAACrC,GACJod,EAAKhb,SAAS,CACV8a,UAAU,IAGdzd,GAAM,QAAQ,UAAU,mDAK5B,IAAMgS,EAAO,CAAC,IAAK,IAAK,IAAK,IAAK,KAC9BC,EAAapT,KAAK3M,MAAMwrB,SAE5B,OAAgB,OAAbzL,EAEK/b,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKI,UAAU,+BACXN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,uBACVyb,EAAW3e,MAEf2e,EAAW1D,QACRrY,EAAAC,EAAAC,cAAA,OAAKI,UAAU,iCACXN,EAAAC,EAAAC,cAAA,OAAKuD,IAAI,iBAAiBnD,UAAU,uBAAuBiD,IAAKwY,EAAW1D,WAE7E,KAENrY,EAAAC,EAAAC,cAAA,WACK6b,EAAW/e,QAAQ0D,IAAI,SAACuO,EAAEuI,GACvB,OACIxX,EAAAC,EAAAC,cAAA,OAAKW,IAAK2W,GACNxX,EAAAC,EAAAC,cAACyY,GAAA,QAAD,CAAKrf,KAAK,OAAOqK,QAAQ,SAASrD,UAAU,0BACxCN,EAAAC,EAAAC,cAAC0Y,GAAA,QAAD,CAAKC,KAAM,GAEH5J,EAAE5R,SAAS2C,EAAAC,EAAAC,cAACyN,GAAA,QAAD,CAAQrN,UAAU,QAAQ4U,MAAM,UAAU4G,EAAKtE,IAAaxX,EAAAC,EAAAC,cAACyN,GAAA,QAAD,CAAQrU,KAAK,UAAU4b,MAAM,UAAU4G,EAAKtE,KAI1HvI,EAAEiJ,OACClY,EAAAC,EAAAC,cAAC0Y,GAAA,QAAD,CAAKC,KAAM,EAAGrL,MAAO,CAACxO,QAAQ,QAC1BgB,EAAAC,EAAAC,cAAA,OAAKuD,IAAI,iBAAiBnD,UAAU,uBAAuBiD,IAAK0L,EAAEiJ,UAGtE,KAEHjJ,EAAEiJ,OACClY,EAAAC,EAAAC,cAAC0Y,GAAA,QAAD,CAAKC,KAAM,IACP7Y,EAAAC,EAAAC,cAAC8b,GAAD,KAAW/M,EAAEgJ,UAGjBjY,EAAAC,EAAAC,cAAC0Y,GAAA,QAAD,CAAKC,KAAM,IACP7Y,EAAAC,EAAAC,cAAC8b,GAAD,KAAW/M,EAAEgJ,iBAgBjDjY,EAAAC,EAAAC,cAAA,OAAKI,UAAU,oBACXN,EAAAC,EAAAC,cAACya,GAAA,EAAD,CAAUC,QAAM,IAChB5a,EAAAC,EAAAC,cAACya,GAAA,EAAD,CAAUC,QAAM,YArGA9M,IAAMC,WAiH3BI,eALS,SAAAnS,GAAK,MAAK,CAC9B8qB,SAAU9qB,EAAMa,KAChBa,QAAU1B,EAAM0B,UAGmB,CACnCimB,kBACAyC,gBH9J2B,SAACtB,EAAKC,GAAN,OAAc,SAAAnb,GACzCrB,GAAK,CACDc,IAAG,GAAApM,OAAK8G,GAAKsD,oBACbiC,KAAM,CACFoZ,OAAQoC,EACRnC,UAAWoC,KAGlBzY,KAAK,SAACC,GACCA,EAASjD,KAAKa,QACdP,EAAS,CACLtQ,KAAM,gBACNsD,QAAS2P,EAASjD,KAAKkD,YAUlCE,MAAM,SAACrC,GACJ0Y,QAAQC,IAAI3Y,QGqIL8D,CAGZ0X,IC5ZY,SAAS/F,GAAS1U,GAC7B,OACIpL,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACwf,GAAA,QAAD,KACI1f,EAAAC,EAAAC,cAAA,OAAKI,UAAU,oBACV8K,EAAMwS,MAAMld,IAAI,SAAA4I,GAAI,OACjBtJ,EAAAC,EAAAC,cAACwnB,GAAD,CAAa7qB,KAAMyM,EAAMzI,IAAKyI,kCC0DvCqe,GA3DM,SAACvc,GAAU,IAAAyV,EACJC,mBAAS,IADLK,EAAA/kB,OAAAglB,GAAA,EAAAhlB,CAAAykB,EAAA,GACvB7kB,EADuBmlB,EAAA,GAChByG,EADgBzG,EAAA,GAAAG,EAEAR,oBAAS,GAFTS,EAAAnlB,OAAAglB,GAAA,EAAAhlB,CAAAklB,EAAA,GAEduG,GAFctG,EAAA,GAAAA,EAAA,IA0B9B,OAtBAuG,oBAAU,WACRD,GAAW,GAEXvf,GAAW,CACTe,IAAKtF,GAAKuD,sBACVgC,KAAM,CACJoZ,OAAQtX,EAAMxR,MAGjB0S,KAAK,SAACC,GACFA,EAASjD,KAAKa,UACfyd,EAASrb,EAASjD,KAAKqd,QACvBkB,GAAW,MAGdnb,MAAM,SAACrC,GAEN,OADA0Y,QAAQC,IAAI3Y,GACLP,GAAM,QAAQ,SAAS,mBAE/B,IAID9J,EAAAC,EAAAC,cAACuhB,EAAA,SAAD,KACEzhB,EAAAC,EAAAC,cAAC6nB,GAAA9nB,EAAD,CACEjH,MAAM,2BACNic,QAAS,CACP,CAAEjc,MAAO,KAAMgvB,MAAO,YACtB,CAAEhvB,MAAO,OAAQgvB,MAAO,aACxB,CAAEhvB,MAAO,QAASgvB,MAAO,gBACzB,CAAEhvB,MAAO,cAAegvB,MAAO,YAC/B,CAAEhvB,MAAO,QAASgvB,MAAO,SACzB,CACEhvB,MAAO,SACPgvB,MAAO,cAET,CAAEhvB,MAAO,OAAQgvB,MAAO,eACxB,CAAEhvB,MAAO,SAAUgvB,MAAO,kBAG5B1e,KAAMtN,EAENgB,QAAS,CACPirB,WAAW,EACXC,cAAc,EACdC,YAAa,CACXvpB,gBAAiB,UACjB4C,MAAO,aCxCX6Y,GAAYC,KAAZD,QAEF+N,eACF,SAAAA,EAAYhd,GAAM,IAAAO,EAAA,OAAAvP,OAAAsM,EAAA,EAAAtM,CAAAuM,KAAAyf,IACdzc,EAAAvP,OAAAwP,GAAA,EAAAxP,CAAAuM,KAAAvM,OAAAyP,GAAA,EAAAzP,CAAAgsB,GAAAtc,KAAAnD,KAAMyC,KAcVid,UAAY,WACV1c,EAAKc,SAAS,CACZ0H,SAAS,KAjBKxI,EAqBlBuK,SAAW,SAAAlK,GAETL,EAAKc,SAAS,CACZ0H,SAAS,KAxBKxI,EA4BlBma,aAAe,SAAA9Z,GAEbL,EAAKc,SAAS,CACZ0H,SAAS,KA/BKxI,EAmClB6O,UAAY,SAAC3Z,KAjCT8K,EAAK3P,MAAM,CACPpC,GAAG+R,EAAKP,MAAMrO,QAAQjF,sBAAsBC,cAC5CuwB,YAAY,KACZ1K,MAAM,KACN+B,KAAK,KACL7J,SAAQ,EACRiK,SAAS,EACTwI,SAAS,GACTnI,UAAW,GACXjM,SAAS,GAXCxI,oFAuCC,IAAAoJ,EAAApM,KACX7R,EAAO0xB,OAAOnvB,SAASsI,KAAK8mB,MAAM,KAAKC,OAAO,EAAE,GAChDH,EAAS,GACbzxB,EAAKghB,QAAQ,SAAC7I,EAAEuI,GACZ+Q,EAASA,EAAStZ,EAAE,MAExBtG,KAAK8D,SAAS,CAAC8b,aACf,IAAIlC,EAAK/d,GAAW,CAChBe,IAAG,GAAApM,OAAK8G,GAAKoB,iBACbmE,KAAM,CACF1P,GAAI+O,KAAK3M,MAAMpC,MAInB0sB,EAAKhe,GAAW,CAChBe,IAAKtF,GAAKwC,UACV+C,KAAM,CACF7O,OAAQkO,KAAK3M,MAAMpC,MAIvB2sB,EAAKje,GAAW,CAChBe,IAAKtF,GAAKyC,UACV8C,KAAM,CACF1P,GAAI+O,KAAK3M,MAAMpC,MAInB+uB,EAAKrgB,GAAW,CAChBe,IAAKtF,GAAK0C,gBACV6C,KAAM,CACF7O,OAAQkO,KAAK3M,MAAMpC,MAIvBgvB,EAAKtgB,GAAW,CAChBe,IAAKtF,GAAK2C,cACV4C,KAAM,CACF7O,OAAQkO,KAAK3M,MAAMpC,MAI3B4sB,QAAQC,IAAI,CAACJ,EAAIC,EAAIC,EAAIoC,EAAIC,IAAKtc,KAAK,SAACC,GAGhCA,EAAS,GAAGjD,KAAKa,SAAWoC,EAAS,GAAGjD,KAAKa,SAAWoC,EAAS,GAAGjD,KAAKa,SAAWoC,EAAS,GAAGjD,KAAKa,SAAWoC,EAAS,GAAGjD,KAAKa,QACjI4K,EAAKtI,SAAS,CACV6b,YAAa/b,EAAS,GAAGjD,KAAKA,KAC9BsU,MAAOrR,EAAS,GAAGjD,KAAKA,KACxBqW,KAAMpT,EAAS,GAAGjD,KAAKqW,KACvBI,SAAUxT,EAAS,GAAGjD,KAAKA,KAC3BwM,SAAS,EACTsK,UAAW7T,EAAS,GAAGjD,KAAKA,OAIhCQ,GAAM,QAAS,UAAWyC,EAAS,GAAGjD,KAAKkD,QAAUD,EAAS,GAAGjD,KAAKkD,QAAUD,EAAS,GAAGjD,KAAKkD,WAEtGE,MAAM,SAACrC,GAENP,GAAM,QAAS,UAAW,oDAKzB,IAAA4Q,EAAA/R,KACL,GAAGA,KAAK3M,MAAM8Z,QACV,OACI9V,EAAAC,EAAAC,cAAA,OAAKI,UAAU,oBACXN,EAAAC,EAAAC,cAACya,GAAA,EAAD,CAAUC,QAAM,IAChB5a,EAAAC,EAAAC,cAACya,GAAA,EAAD,CAAUC,QAAM,KAIxB,IAAA0D,EAC0B3V,KAAK3M,MAAzBssB,EADNhK,EACMgK,YAAa1uB,EADnB0kB,EACmB1kB,GAEnB,OACIoG,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAC2a,GAAA,EAAD,CAAMC,iBAAiB,IAAIlJ,SAAW,SAAC5F,GAAD,OAAK0O,EAAKF,UAAUxO,KACtDhM,EAAAC,EAAAC,cAAC2oB,GAAD,CAAS9N,IAAM/a,EAAAC,EAAAC,cAAA,YAAMF,EAAAC,EAAAC,cAACrJ,EAAA,QAAD,CAAMyC,KAAK,SAAjB,WAA2CuH,IAAI,KAC1Db,EAAAC,EAAAC,cAACgb,GAAA,EAAD,CAAcxF,UAAQ,EAAC1c,MAAM,GAAGmiB,QAAM,EAAC1H,KAAK,QAAQ2H,OAAQ,CAAEC,IAAK,EAAGC,GAAI,EAAGC,GAAI,EAAGva,GAAI,EAAGD,GAAI,EAAGD,GAAI,IAElGd,EAAAC,EAAAC,cAACgb,GAAA,EAAajO,KAAd,CAAmBC,MAAM,iBACpBvE,KAAKyC,MAAMrO,QAAQjF,sBAAsBC,eAG9CiI,EAAAC,EAAAC,cAACgb,GAAA,EAAajO,KAAd,CAAmBC,MAAM,mBACrBlN,EAAAC,EAAAC,cAACoN,GAAA,QAAD,CAAO+L,UAAU,EAAMxJ,MAAK,GAAA5S,OAAK0L,KAAK3M,MAAMusB,SAAhB,4BAAAtrB,OAAmDrD,GAAMkvB,WAAY9oB,EAAAC,EAAAC,cAAC6oB,GAAA,gBAAD,CAAiBxU,KAAI,GAAAtX,OAAK0L,KAAK3M,MAAMusB,SAAhB,4BAAAtrB,OAAmDrD,GAAMovB,OAAQ,kBAAIxc,KAAQrC,QAAQ,8BACvMnK,EAAAC,EAAAC,cAACrJ,EAAA,QAAD,CAAMyC,KAAK,aAGnB0G,EAAAC,EAAAC,cAACgb,GAAA,EAAajO,KAAd,CAAmBC,MAAM,mBACpBob,EAAYtvB,OAGjBgH,EAAAC,EAAAC,cAACgb,GAAA,EAAajO,KAAd,CAAmBC,MAAM,mBACpBob,EAAYhvB,MAGjB0G,EAAAC,EAAAC,cAACgb,GAAA,EAAajO,KAAd,CAAmBC,MAAM,WACrBlN,EAAAC,EAAAC,cAAA,YACCooB,EAAYW,SAASvoB,IAAI,SAACsf,EAAIxI,GAE3B,OACAxX,EAAAC,EAAAC,cAAC+f,GAAA,EAAD,CAAKze,MAFM,WAEQX,IAAKmf,EAAIxP,KACvBwP,EAAIjR,MAAM8X,mBAOvB7mB,EAAAC,EAAAC,cAACgb,GAAA,EAAajO,KAAd,CAAmBC,MAAM,cACpByO,IAAO2M,EAAY1M,WAAWC,OAAO,kBAMjDyM,EAAYruB,cACT+F,EAAAC,EAAAC,cAAC2oB,GAAD,CAAS9N,IAAM/a,EAAAC,EAAAC,cAAA,YAAMF,EAAAC,EAAAC,cAACrJ,EAAA,QAAD,CAAMyC,KAAK,oBAAjB,aAAwDuH,IAAI,KACvEb,EAAAC,EAAAC,cAACgpB,GAAD,CAAWtvB,GAAI+O,KAAKyC,MAAMrO,QAAQjF,sBAAsBC,cAAeuC,gBAAiBqO,KAAKyC,MAAMrO,QAAQjF,sBAAsBE,cAAeklB,oBAAqBvU,KAAKyC,MAAM+d,6BAEtL,KAEDb,EAAYruB,cACT+F,EAAAC,EAAAC,cAAC2oB,GAAD,CAAS9N,IAAM/a,EAAAC,EAAAC,cAAA,YAAMF,EAAAC,EAAAC,cAACrJ,EAAA,QAAD,CAAMyC,KAAK,SAAjB,cAA8CuH,IAAI,KAC7Db,EAAAC,EAAAC,cAAC4f,GAAD,CAAS7B,UAAWtV,KAAK3M,MAAM+jB,SAAUnmB,GAAI+O,KAAK3M,MAAMpC,GAAIgkB,MAAOjV,KAAK3M,MAAM4hB,SAEpF,KAGD0K,EAAYruB,cACT+F,EAAAC,EAAAC,cAAC2oB,GAAD,CAAS9N,IAAM/a,EAAAC,EAAAC,cAAA,YAAMF,EAAAC,EAAAC,cAACrJ,EAAA,QAAD,CAAMyC,KAAK,cAAjB,cAAmDuH,IAAI,KAClEb,EAAAC,EAAAC,cAACkpB,GAAD,CAAOxvB,GAAI+O,KAAK3M,MAAMpC,GAAIgkB,MAAOjV,KAAK3M,MAAM4hB,MAAO+B,KAAMhX,KAAK3M,MAAM2jB,KAAM1B,UAAWtV,KAAK3M,MAAM+jB,YAEtG,KAEDuI,EAAYruB,cACT+F,EAAAC,EAAAC,cAAC2oB,GAAD,CAAS9N,IAAM/a,EAAAC,EAAAC,cAAA,YAAMF,EAAAC,EAAAC,cAACrJ,EAAA,QAAD,CAAMyC,KAAK,YAAjB,aAAgDuH,IAAI,KAChEb,EAAAC,EAAAC,cAACigB,GAAD,CAAWC,UAAWzX,KAAK3M,MAAMokB,aAEtC,KAEDkI,EAAYruB,cACT+F,EAAAC,EAAAC,cAAC2oB,GAAD,CAAS9N,IAAM/a,EAAAC,EAAAC,cAAA,YAAMF,EAAAC,EAAAC,cAACrJ,EAAA,QAAD,CAAMyC,KAAK,cAAjB,YAAiDuH,IAAI,KACjEb,EAAAC,EAAAC,cAACmpB,GAAD,CAAUpL,UAAWtV,KAAK3M,MAAM+jB,SAAUnmB,GAAI+O,KAAK3M,MAAMpC,GAAIgkB,MAAOjV,KAAK3M,MAAM4hB,SAErF,KAGA0K,EAAYruB,eAAiBquB,EAAY7uB,UACtCuG,EAAAC,EAAAC,cAAC2oB,GAAD,CAAS9N,IAAM/a,EAAAC,EAAAC,cAAA,YAAMF,EAAAC,EAAAC,cAACrJ,EAAA,QAAD,CAAMyC,KAAK,SAAjB,UAA0CuH,IAAI,KAC1Db,EAAAC,EAAAC,cAACopB,GAAD,CAAQ1vB,GAAI+O,KAAK3M,MAAMpC,MAE5B,cApMAmU,aAgNXI,eAJS,SAAAnS,GAAK,MAAK,CAC9Be,QAAUf,EAAMe,UAGmB,CACnCosB,0BhB7FqC,SAACla,GACtC,MAAO,CACH3V,KAAM,sCACNsD,QAASqS,KgByFFd,CAEZia,IC1NGmB,gNAEFhX,UAAY,SAAC3Y,GACT+R,EAAKP,MAAMoe,6BAA4B,EAAK5vB,MAGhD4Y,WAAa,WACT7G,EAAKP,MAAMoe,6BAA4B,EAAM,SAMjD9W,qBAAuB,SAAAC,GAAS,MAAK,CACjCC,eAAgB,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,gBAAiBC,EAApBF,EAAoBE,aAAcC,EAAlCH,EAAkCG,QAASC,EAA3CJ,EAA2CI,aAA3C,OACdjT,EAAAC,EAAAC,cAAA,OAAKsN,MAAO,CAAExO,QAAS,IACrBgB,EAAAC,EAAAC,cAACoN,GAAA,QAAD,CACE4F,IAAK,SAAAC,GACHxH,EAAKyH,YAAcD,GAErB1F,YAAW,UAAAxQ,OAAY0V,GACvB9C,MAAOkD,EAAa,GACpBnB,SAAU,SAAA5F,GAAC,OAAI8G,EAAgB9G,EAAEqH,OAAOxD,MAAQ,CAAC7D,EAAEqH,OAAOxD,OAAS,KACnEyD,aAAc,kBAAM3H,EAAK4H,aAAaR,EAAcC,IACpDxF,MAAO,CAAEvC,MAAO,IAAKvI,aAAc,EAAG9L,QAAS,WAEjDoJ,EAAAC,EAAAC,cAACyN,GAAA,QAAD,CACErU,KAAK,UACLka,QAAS,kBAAM7H,EAAK4H,aAAaR,EAAcC,IAC/Cnc,KAAK,SACL4c,KAAK,QACLjG,MAAO,CAAEvC,MAAO,GAAIxM,YAAa,IALnC,UASAuB,EAAAC,EAAAC,cAACyN,GAAA,QAAD,CAAQ6F,QAAS,kBAAM7H,EAAK+H,YAAYT,IAAeQ,KAAK,QAAQjG,MAAO,CAAEvC,MAAO,KAApF,WAKJ0I,WAAY,SAAAC,GAAQ,OAClB5T,EAAAC,EAAAC,cAACrJ,EAAA,QAAD,CAAMyC,KAAK,SAASkU,MAAO,CAAEhM,MAAOoS,EAAW,eAAYzX,MAE7D0X,SAAU,SAAChE,EAAOiE,GAAR,OACRA,EAAOnB,GACJoB,WACAC,cACAC,SAASpE,EAAMmE,gBACpBE,8BAA+B,SAAAC,GACzBA,GACFC,WAAW,kBAAMzI,EAAKyH,YAAYiB,YAGtCC,OAAQ,SAAAC,GAAI,OACVvU,EAAAC,EAAAC,cAACsU,GAAAvU,EAAD,CACEwU,eAAgB,CAAE7V,gBAAiB,UAAWI,QAAS,GACvD0V,YAAa,CAAC/I,EAAKP,MAAMrO,QAAQQ,gBACjCoX,YAAU,EACVC,gBAAiBL,EAAKR,kBAK5BR,aAAe,SAACR,EAAcC,GAC5BA,IACArH,EAAKP,MAAMqe,qBAAqB1W,EAAa,OAG/CW,YAAc,SAAAT,GACZA,IACAtH,EAAKP,MAAMqe,qBAAqB,yFA5DlC9gB,KAAKyC,MAAMse,uDA+DJ,IAAA3U,EAAApM,KACCqM,EAAU7T,KAAV6T,MACFC,EAAU,CAAC7Y,OAAAC,EAAA,EAAAD,CAAA,CAEbpD,MAAO,OACP2Z,UAAW,QACX9R,IAAK,SACF8H,KAAK+J,qBAAqB,UALjBtW,OAAAC,EAAA,EAAAD,CAAA,CAQZpD,MAAO,OACP2Z,UAAW,OACX9R,IAAK,QACF8H,KAAK+J,qBAAqB,SAE/B,CACE1Z,MAAO,WACP2Z,UAAW,WACX9R,IAAK,eACLyT,OAAQ,SAAAsS,GAAI,OACV5mB,EAAAC,EAAAC,cAAA,YACG0mB,EAAKlmB,IAAI,SAACsf,EAAIxI,GAEb,OACExX,EAAAC,EAAAC,cAAC+f,GAAA,EAAD,CAAKze,MAFI,WAEUX,IAAKmf,EAAIxP,KACzBwP,EAAIjR,MAAM8X,oBAvBTzqB,OAAAC,EAAA,EAAAD,CAAA,CA+BZpD,MAAO,aACP2Z,UAAW,YACX9R,IAAK,aACF8H,KAAK+J,qBAAqB,aAlCjB,CAmCZ4B,OAAQ,SAAAsS,GAAI,OACV5mB,EAAAC,EAAAC,cAAA,YACGyb,IAAOiL,GAAM/K,OAAO,mBAI3B,CACE7iB,MAAO,SACP6H,IAAK,MACL8R,UAAW,MACX2B,OAAQ,SAACzT,GAAD,OACNb,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAACyN,GAAA,QAAD,CAAQrU,KAAK,UAAU4b,MAAM,SAASre,KAAK,cAAc2c,QAAS,kBAAIuB,EAAKxC,UAAU1R,UAK3F,OACIb,EAAAC,EAAAC,cAAA,OAAKI,UAAU,yBAEbN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,gCACbN,EAAAC,EAAAC,cAAC8U,EAAD,CAAOO,MAAO,EAAG/H,MAAO,CAAChM,MAAM,OAAOgU,UAAU,WAAhD,wBAGFxV,EAAAC,EAAAC,cAACuV,GAAA,EAAD,CACEC,UAAU,EACVT,QAASA,EACTU,WAAYhN,KAAKyC,MAAMrO,QAAQlF,cAC/B4b,KAAK,SACLmC,WAAY,CAAEC,SAAU,GACxBC,QAASnN,KAAKyC,MAAMrO,QAAQnF,iBAC5Bme,OAAO,QAGT/V,EAAAC,EAAAC,cAAC8V,GAAA,EAAD,CACE7B,QAASxL,KAAKyC,MAAMrO,QAAQO,uBAC5BtE,MAAM,qBACNid,KAAMtN,KAAKuN,SACXC,SAAUxN,KAAK6J,WACfmX,WAAYhhB,KAAK6J,WACjBhF,MAAO,CAAC4I,IAAK,OAAOpX,QAAQ,MAAMJ,gBAAgB,oBAClDqM,MAAM,MACNoL,gBAAgB,EAChBzW,OAAQ,IAIRI,EAAAC,EAAAC,cAAC0pB,GAAD,eA7JO7b,aAwKRI,eAJS,SAAAnS,GAAK,MAAK,CAChCe,QAAUf,EAAMe,UAGqB,CACnC0sB,qBjBzFgC,SAACxa,GAAD,OAAO,SAAArF,GACvCA,EAAS,CACLtQ,KAAM,0BACNsD,QAASqS,MiBuFbya,oBjBnF+B,kBAAM,SAAA9f,GACrCA,EAAS,CACLtQ,KAAM,mCACNkD,UAAU,EACVC,SAAU,KAGd6L,GAAW,CACPe,IAAG,GAAApM,OAAK8G,GAAKmB,iBACdoH,KAAK,SAACC,GAEDA,EAASjD,KAAKa,QACdP,EAAS,CACLtQ,KAAM,mCACNkD,UAAU,EACVC,SAAU8P,EAASjD,KAAKA,QAI5BQ,GAAM,QAAS,SAAUyC,EAASjD,KAAKkD,SACvC5C,EAAS,CACLtQ,KAAM,mCACNkD,UAAU,EACVC,SAAU,QAGnBiQ,MAAM,SAACrC,GAENP,GAAM,QAAS,SAAU,gBACzBF,EAAS,CACLtQ,KAAM,mCACNkD,UAAU,EACVC,SAAU,SiBoDlB+sB,4BjBnGuC,SAAChb,EAAIC,GAAL,OAAY,SAAA7E,GACnDA,EAAS,CACLtQ,KAAM,kCACNkD,SAAUgS,EACV/R,SAAUgS,OiB4FHN,CAIZob,ICvLUM,GAAsB,SAAC5a,GAAD,OAAM,SAAArF,GACrCA,EAAS,CACNtQ,KAAO,sBACPsD,QAAUqS,MAoDJ6a,GAAuB,SAAC7a,GAAD,OAAO,SAAArF,GACvCA,EAAS,CACLtQ,KAAM,4BACNsD,QAASqS,MAKJiO,GAAsB,SAACjO,GAChC,MAAO,CACH3V,KAAM,2BACNsD,QAASqS,IClEJ8a,GAAa,SAAC9a,GAAD,OAAM,SAAArF,GAC5BA,EAAS,CACNtQ,KAAO,qBACPsD,QAAUqS,MAIJ+a,GAA4B,SAAC/a,GAAD,OAAO,SAAArF,GAC5CA,EAAS,CACLtQ,KAAM,gCACNsD,QAASqS,MCMXmZ,IAFYjnB,KAAV6T,mNAiBJiV,yBAA2B,SAAChb,GACxB3G,GAAW,CACPe,IAAG,GAAApM,OAAK8G,GAAKwB,mBACb+D,KAAM,CACF1P,GAAI+R,EAAKP,MAAM3N,QAAQ7D,GACvB4V,OAAQP,KAEb3C,KAAK,SAACC,GACDA,EAASjD,KAAKa,SACdwB,EAAKP,MAAM8e,yBAAyBjb,GACpCnF,GAAM,UAAW,WAAY,gCAG7BA,GAAM,QAAS,SAAUyC,EAASjD,KAAKkD,WAE5CE,MAAM,SAACrC,GAENP,GAAM,QAAS,SAAU,qBAIjCqgB,iBAAmB,WACf7hB,GAAW,CACPe,IAAG,GAAApM,OAAK8G,GAAKyB,uBACb8D,KAAM,CACF1P,GAAI+R,EAAKP,MAAM3N,QAAQ7D,MAE5B0S,KAAK,SAACC,GAEDA,EAASjD,KAAKa,SACdwB,EAAKP,MAAM+e,iBAAiB5d,EAASjD,KAAKA,MAC1CQ,GAAM,UAAW,WAAY,mBAG7BA,GAAM,QAAS,SAAUyC,EAASjD,KAAKkD,WAE5CE,MAAM,SAACrC,GAENP,GAAM,QAAS,SAAU,qBAIjCsgB,iBAAmB,WACf9hB,GAAW,CACPe,IAAG,GAAApM,OAAK8G,GAAKqC,qBACbkD,KAAM,CACF1P,GAAI+R,EAAKP,MAAM3N,QAAQ7D,MAG9B0S,KAAK,SAACC,GAECA,EAASjD,KAAKa,SACdwB,EAAKP,MAAM+e,iBAAiB5d,EAASjD,KAAKA,MAC1CQ,GAAM,UAAW,WAAY,mBAG7BA,GAAM,QAAS,SAAUyC,EAASjD,KAAKkD,WAG9CE,MAAM,SAACrC,GAEJP,GAAM,QAAS,SAAU,qBAIjCugB,cAAgB,WACZ/hB,GAAW,CACPe,IAAG,GAAApM,OAAK8G,GAAK0B,qBACb6D,KAAM,CACF1P,GAAI+R,EAAKP,MAAM3N,QAAQ7D,MAE5B0S,KAAK,SAACC,MAENG,MAAM,SAACrC,GACN0Y,QAAQC,IAAI3Y,0FAtFhB,IAAIvT,EAAO0xB,OAAOnvB,SAASsI,KAAK8mB,MAAM,KAAKC,OAAO,EAAE,GAChDH,EAAS,GACbzxB,EAAKghB,QAAQ,SAAC7I,EAAGuI,GACb+Q,EAAWA,EAAWtZ,EAAI,MAG9BsZ,GAAiB,6BAAAtrB,OAA8B0L,KAAKyC,MAAM3N,QAAQ7D,IAClE+O,KAAKyC,MAAMkf,uBAAuB/B,GAClC5f,KAAKyC,MAAMmf,8BAA8B5hB,KAAKyC,MAAM3N,QAAQ7D,IAC5D+O,KAAKyC,MAAM0e,wDAiFP,IAAA/U,EAAApM,KACJ,OACI3I,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACgb,GAAA,EAAD,CACIzH,KAAK,QACL2H,OAAQ,EACRpiB,MAAM,wBACNwxB,OAAO,WACP9U,UAAU,GAEV1V,EAAAC,EAAAC,cAACgb,GAAA,EAAajO,KAAd,CAAmB4L,KAAM,EAAG3L,MAAM,iBAC7BvE,KAAKyC,MAAM3N,QAAQ7D,IAGxBoG,EAAAC,EAAAC,cAACgb,GAAA,EAAajO,KAAd,CAAmB4L,KAAM,EAAG3L,MAAM,qBAAoBlN,EAAAC,EAAAC,cAACoN,GAAA,QAAD,CAAO+L,UAAU,EAAMxJ,MAAOlH,KAAKyC,MAAM3N,QAAQ5D,iBAAkBivB,WAAY9oB,EAAAC,EAAAC,cAAC6oB,GAAA,gBAAD,CAAiBxU,KAAM5L,KAAKyC,MAAM3N,QAAQ5D,iBAAkBmvB,OAAQ,kBAAMxc,KAAQrC,QAAQ,8BAA6BnK,EAAAC,EAAAC,cAACrJ,EAAA,QAAD,CAAMyC,KAAK,aAGnQqP,KAAKyC,MAAM3N,QAAQ3D,iBAAiBG,cACpC+F,EAAAC,EAAAC,cAACgb,GAAA,EAAajO,KAAd,CACC4L,KAAM,EACN3L,MAAM,wBAFP,wEAOAlN,EAAAC,EAAAC,cAACgb,GAAA,EAAajO,KAAd,CACC4L,KAAM,EACN3L,MAAOvE,KAAKyC,MAAM3N,QAAQ3D,iBAAiBC,wBAA0B,oBAAsB,uBAExFiG,EAAAC,EAAAC,cAACyN,GAAA,QAAD,CACI0L,SAAU1Q,KAAKyC,MAAM3N,QAAQ3D,iBAAiBE,WAAYwZ,QAAS,WAAQuB,EAAKkV,0BAA0BlV,EAAK3J,MAAM3N,QAAQ3D,iBAAiBC,0BAC9IT,KAAMqP,KAAKyC,MAAM3N,QAAQ3D,iBAAiBC,wBAA0B,SAAW,WACjF4O,KAAKyC,MAAM3N,QAAQ3D,iBAAiBC,wBAA0B,oBAAsB,sBAM1F4O,KAAKyC,MAAM3N,QAAQ3D,iBAAiBG,cACpC+F,EAAAC,EAAAC,cAACgb,GAAA,EAAajO,KAAd,CACC4L,KAAM,EACN3L,MAAM,sBAFP,wEAOAlN,EAAAC,EAAAC,cAACgb,GAAA,EAAajO,KAAd,CACI4L,KAAM,EACN3L,MAAOvE,KAAKyC,MAAM3N,QAAQ3D,iBAAiBE,WAAa,mBAAqB,4BAE7EgG,EAAAC,EAAAC,cAACyN,GAAA,QAAD,CACI0L,SAAU1Q,KAAKyC,MAAM3N,QAAQ3D,iBAAiBE,WAC9CwZ,QAAS,WAAQuB,EAAKoV,oBACtB7wB,KAAM,WAHV,cAQA0G,EAAAC,EAAAC,cAACyN,GAAA,QAAD,CACI0L,UAAW1Q,KAAKyC,MAAM3N,QAAQ3D,iBAAiBE,WAC/CwZ,QAAS,WAAQuB,EAAKqV,oBAAsB9wB,KAAM,UAFtD,aASR0G,EAAAC,EAAAC,cAACgb,GAAA,EAAajO,KAAd,CACI4L,KAAM,EACN3L,MAAM,yBAELyO,IAAOhT,KAAKyC,MAAM3N,QAAQ3D,iBAAiBK,OAAO0hB,OAAO,4BAG9D7b,EAAAC,EAAAC,cAACgb,GAAA,EAAajO,KAAd,CACI4L,KAAM,EACN3L,MAAM,uBAELyO,IAAOhT,KAAKyC,MAAM3N,QAAQ3D,iBAAiBM,KAAKyhB,OAAO,qCA3KtD/N,IAAMC,YAyLjBI,eALS,SAAAnS,GAAK,MAAK,CAC9Be,QAASf,EAAMe,QACfU,QAASzB,EAAMyB,UAGoB,CACnC6sB,uBFnMkC,SAACrb,GAAD,OAAM,SAAArF,GACxCA,EAAS,CACNtQ,KAAO,yBACPsD,QAAUqS,MEiMbsb,8BF9KyC,SAACtb,GAAD,OAAO,SAAArF,GAChDtB,GAAW,CACPe,IAAG,GAAApM,OAAK8G,GAAKuB,+BACbgE,KAAM,CACF1P,GAAIqV,KAET3C,KAAK,SAACC,GACL,IAAIA,EAASjD,KAAKa,QAQd,OAAOL,GAAM,QAAS,SAAUyC,EAASjD,KAAKkD,SAN9C5C,EAAS,CACLtQ,KAAM,4BACNsD,QAAS2P,EAASjD,KAAKA,SAOlCoD,MAAM,SAACrC,GAEJ,OAAOP,GAAM,QAAS,SAAU,qCE2JpCogB,yBF9LoC,SAACjb,GAAD,OAAM,SAAArF,GAC1CA,EAAS,CACNtQ,KAAO,uCACPsD,QAAUqS,ME4Lbkb,iBFxL4B,SAAClb,GAAD,OAAO,SAAArF,GACnCA,EAAS,CACLtQ,KAAM,2BACNsD,QAASqS,MEsLb6a,yBALW3b,CAMZia,mCCtMKpT,GAAU7T,KAAV6T,MAGFyV,GAAmB,CACvBxD,QAAQ,EACRyD,eAAe,EACfC,gBAAgB,EAChBC,gBAAiB,SAAA3D,GAAM,OAAIA,EAAOjT,cAAc6W,QAAQ,MAAO,OAG3DC,eAEF,SAAAA,EAAY1f,GAAM,IAAAO,EAAA,OAAAvP,OAAAsM,EAAA,EAAAtM,CAAAuM,KAAAmiB,IACdnf,EAAAvP,OAAAwP,GAAA,EAAAxP,CAAAuM,KAAAvM,OAAAyP,GAAA,EAAAzP,CAAA0uB,GAAAhf,KAAAnD,KAAMyC,KAUVsH,qBAAuB,SAAAC,GAAS,MAAK,CACjCC,eAAgB,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,gBAAiBC,EAApBF,EAAoBE,aAAcC,EAAlCH,EAAkCG,QAASC,EAA3CJ,EAA2CI,aAA3C,OACdjT,EAAAC,EAAAC,cAAA,OAAKsN,MAAO,CAAExO,QAAS,IACrBgB,EAAAC,EAAAC,cAACoN,GAAA,QAAD,CACE4F,IAAK,SAAAC,GACHxH,EAAKyH,YAAcD,GAErB1F,YAAW,UAAAxQ,OAAY0V,GACvB9C,MAAOkD,EAAa,GACpBnB,SAAU,SAAA5F,GAAC,OAAI8G,EAAgB9G,EAAEqH,OAAOxD,MAAQ,CAAC7D,EAAEqH,OAAOxD,OAAS,KACnEyD,aAAc,kBAAM3H,EAAK4H,aAAaR,EAAcC,IACpDxF,MAAO,CAAEvC,MAAO,IAAKvI,aAAc,EAAG9L,QAAS,WAEjDoJ,EAAAC,EAAAC,cAACyN,GAAA,QAAD,CACErU,KAAK,UACLka,QAAS,kBAAM7H,EAAK4H,aAAaR,EAAcC,IAC/Cnc,KAAK,SACL4c,KAAK,QACLjG,MAAO,CAAEvC,MAAO,GAAIxM,YAAa,IALnC,UASAuB,EAAAC,EAAAC,cAACyN,GAAA,QAAD,CAAQ6F,QAAS,kBAAM7H,EAAK+H,YAAYT,IAAeQ,KAAK,QAAQjG,MAAO,CAAEvC,MAAO,KAApF,WAKJ0I,WAAY,SAAAC,GAAQ,OAClB5T,EAAAC,EAAAC,cAACrJ,EAAA,QAAD,CAAMyC,KAAK,SAASkU,MAAO,CAAEhM,MAAOoS,EAAW,eAAYzX,MAE7D0X,SAAU,SAAChE,EAAOiE,GAAR,OACRA,EAAOnB,GACJoB,WACAC,cACAC,SAASpE,EAAMmE,gBACpBE,8BAA+B,SAAAC,GACzBA,GACFC,WAAW,kBAAMzI,EAAKyH,YAAYiB,YAGtCC,OAAQ,SAAAC,GAAI,OACVvU,EAAAC,EAAAC,cAACsU,GAAAvU,EAAD,CACEwU,eAAgB,CAAE7V,gBAAiB,UAAWI,QAAS,GACvD0V,YAAa,CAAC/I,EAAK3P,MAAM+uB,YACzBpW,YAAU,EACVC,gBAAiBL,EAAKR,gBAxDZpI,EA8DlB4H,aAAe,SAACR,EAAcC,GAC1BA,IACArH,EAAKc,SAAS,CAAEse,WAAYhY,EAAa,MAhE3BpH,EAmElB+H,YAAc,SAAAT,GACVA,IACAtH,EAAKc,SAAS,CAAEse,WAAY,MArEdpf,EAmFpB0c,UAAY,WACR1c,EAAKc,SAAS,CACZ0H,SAAS,KArFKxI,EAyFpBuK,SAAW,SAAAlK,GAEPL,EAAKc,SAAS,CACZ0H,SAAS,KA5FKxI,EAgGpBma,aAAe,SAAA9Z,GAEXL,EAAKc,SAAS,CACZ0H,SAAS,KAnGKxI,EAwGpBqf,YAAc,SAAC1hB,EAAM2hB,GAIrB3iB,GAAW,CACPe,IAAG,GAAApM,OAAK8G,GAAK6C,mBACb0C,KAAM,CACJ7O,OAAQkR,EAAKP,MAAM3N,QAAQ7D,GAC3B0P,KAAMA,KAGTgD,KAAK,SAACC,GACDA,EAASjD,KAAKa,SACdwB,EAAKc,SAAS,CAACye,SAAU,MACzBvf,EAAKP,MAAM0e,qBAAqBvd,EAASjD,KAAKA,OAG9CQ,GAAM,QAAS,SAAUyC,EAASjD,KAAKkD,SAEzCb,EAAKc,SAAS,CACZqJ,SAAS,MAGdpJ,MAAM,SAACrC,GACNP,GAAM,QAAS,SAAU,gBACvB6B,EAAKc,SAAS,CAACqJ,SAAS,OAjIVnK,EAsIpBwf,gBAAkB,WAChBxf,EAAKc,SAAS,CACZqJ,SAAS,IAGXxN,GAAW,CACTe,IAAG,GAAApM,OAAK8G,GAAK0B,qBACb6D,KAAM,CACJ1P,GAAI+R,EAAKP,MAAM3N,QAAQ7D,MAGxB0S,KAAK,SAACC,GAEDA,EAASjD,KAAKa,QAChBwB,EAAKP,MAAM0e,qBAAqBvd,EAASjD,KAAKA,MAG9CQ,GAAM,QAAS,SAAUyC,EAASjD,KAAKkD,SAEzCb,EAAKc,SAAS,CACZqJ,SAAS,MAEVpJ,MAAM,SAACrC,GAERP,GAAM,QAAS,SAAU,gBACzB6B,EAAKc,SAAS,CACZqJ,SAAS,OAhKGnK,EAqKpByf,UAAY,SAACzL,GACX6I,OAAO6C,KAAK1L,IApKRhU,EAAK3P,MAAM,CACP8Z,SAAQ,EACRiV,WAAY,GACZxC,SAAU,GACVpU,SAAS,EACT+W,SAAU,GAPAvf,oFAyEhB,IAAI7U,EAAO0xB,OAAOnvB,SAASsI,KAAK8mB,MAAM,KAAKC,OAAO,EAAE,GAChDH,EAAS,GACbzxB,EAAKghB,QAAQ,SAAC7I,EAAEuI,GACZ+Q,EAASA,EAAStZ,EAAE,MAExBtG,KAAK8D,SAAS,CAAC8b,aACf5f,KAAKwiB,mDA0FE,IAAApW,EAAApM,KACCsM,EAAU,CAAC7Y,OAAAC,EAAA,EAAAD,CAAA,CAEXpD,MAAO,OACP2Z,UAAW,OACX9R,IAAK,QACF8H,KAAK+J,qBAAqB,SALnBtW,OAAAC,EAAA,EAAAD,CAAA,CAQVpD,MAAO,WACP2Z,UAAW,UACX9R,IAAK,WACF8H,KAAK+J,qBAAqB,YAXnBtW,OAAAC,EAAA,EAAAD,CAAA,CAcRpD,MAAO,aACP2Z,UAAW,UACX9R,IAAK,WACF8H,KAAK+J,qBAAqB,YAEjC,CACE1Z,MAAO,SACP2Z,UAAW,SACX9R,IAAK,SACLyT,OAAQ,SAAA1a,GAAE,OACRoG,EAAAC,EAAAC,cAACyN,GAAA,QAAD,CACEnM,MAAM,UACNgS,QAAS,kBAAMuB,EAAKqW,UAAUxxB,KAFhC,qBAQJ,CACIZ,MAAO,QACP6H,IAAK,MACL8R,UAAW,MACX2B,OAAQ,SAAA1a,GAAE,OACRoG,EAAAC,EAAAC,cAACoN,GAAA,QAAD,CAAO+L,UAAU,EAAMxJ,MAAK,GAAA5S,OAAK8X,EAAK/Y,MAAMusB,SAAhB,8BAAAtrB,OAAqD8X,EAAK3J,MAAM3N,QAAQ7D,GAAxE,eAAAqD,OAAwFrD,GAAMkvB,WAAY9oB,EAAAC,EAAAC,cAAC6oB,GAAA,gBAAD,CAAiBxU,KAAI,GAAAtX,OAAK8X,EAAK/Y,MAAMusB,SAAhB,8BAAAtrB,OAAqD8X,EAAK3J,MAAM3N,QAAQ7D,GAAxE,eAAAqD,OAAwFrD,GAAMovB,OAAQ,kBAAIxc,KAAQrC,QAAQ,8BAA6BnK,EAAAC,EAAAC,cAACrJ,EAAA,QAAD,CAAMyC,KAAK,eAKzU,OACE0G,EAAAC,EAAAC,cAAA,OAAKI,UAAU,mCACbN,EAAAC,EAAAC,cAACyN,GAAA,QAAD,CACErN,UAAU,gBACVhH,KAAK,UACLzC,KAAK,SACLif,QAASnN,KAAK3M,MAAM8Z,QACpBtC,QAAS7K,KAAKwiB,iBALhB,UAUAnrB,EAAAC,EAAAC,cAAA,OAAKI,UAAU,gCACbN,EAAAC,EAAAC,cAACorB,GAAD,CAAO/V,MAAO,EAAG/H,MAAO,CAAEhM,MAAO,OAAQgU,UAAW,WAApD,kCAEFxV,EAAAC,EAAAC,cAACuV,GAAA,EAAD,CACER,QAASA,EACTS,UAAU,EACVC,WAAYhN,KAAKyC,MAAM3N,QAAQpD,qBAC/B0b,OAAO,MACPD,QAASnN,KAAK3M,MAAM8Z,UAGxB9V,EAAAC,EAAAC,cAAC8V,GAAA,EAAD,CACEhd,MAAM,oBACNmb,QAASxL,KAAK3M,MAAMmY,QACpB8B,KAAMtN,KAAKuN,SACXC,SAAUxN,KAAKmd,aACflmB,OAAQ,IAERI,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,mBAAH,+CACAF,EAAAC,EAAAC,cAAA,oEACAF,EAAAC,EAAAC,cAACqrB,GAAAtrB,EAAD,CACEurB,SAAS,kBACTte,MAAM,GACNue,aAAc9iB,KAAKqiB,YACnBU,cAAejB,KAEjBzqB,EAAAC,EAAAC,cAACgrB,GAAA,EAAD,CAAUS,QAAShjB,KAAK3M,MAAMkvB,oBA5Pfnd,aAuQVI,eAJS,SAAAnS,GAAK,MAAK,CAC9ByB,QAAUzB,EAAMyB,UAGmB,CACnCosB,uBACAC,yBAFW3b,CAGZ2c,wBCpPY3c,eAJS,SAAAnS,GAAK,MAAK,CAChCyB,QAASzB,EAAMyB,UAGuB,KAAzB0Q,CAvCS,SAAC/C,GACvB,IAAM9B,EAAO8B,EAAM3N,QAAQpD,qBAQ3B,OACM2F,EAAAC,EAAAC,cAACuhB,EAAA,SAAD,KACEzhB,EAAAC,EAAAC,cAAA,OAAKI,UAAU,aACbN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,OACbN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,aAEfN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,YACbN,EAAAC,EAAAC,cAAA,UAAQ5G,KAAK,SAASka,QAXd,WACpBoY,aAAe,CAAEtiB,OAAMuiB,SAJR,WAIkBC,WAHhB,UAaL,oBAKN9rB,EAAAC,EAAAC,cAAA,WAEAF,EAAAC,EAAAC,cAAA,OAAKI,UAAU,aACbN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,OACbN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,YAAakN,MAAO,CAAEuU,UAAW,QAASC,UAAW,WAClEhiB,EAAAC,EAAAC,cAAC6rB,GAAA,YAAD,CAAaC,KAAM5gB,EAAM3N,QAAQpD,6BCdzC2a,GAAU7T,KAAV6T,MACAqF,GAAYC,KAAZD,QAEF4R,eACF,SAAAA,EAAY7gB,GAAM,IAAAO,EAAA,OAAAvP,OAAAsM,EAAA,EAAAtM,CAAAuM,KAAAsjB,IACdtgB,EAAAvP,OAAAwP,GAAA,EAAAxP,CAAAuM,KAAAvM,OAAAyP,GAAA,EAAAzP,CAAA6vB,GAAAngB,KAAAnD,KAAMyC,KAYV8gB,kBAAoB,SAACjd,GACjBtD,EAAKc,SAAS,CACV0f,YAAald,EAAEoE,OAAOxD,SAfZlE,EAmBlBygB,aAAe,SAACnd,GACZtD,EAAKc,SAAS,CACV4f,cAAc,KAnBlB1gB,EAAKP,MAAMye,oBAAoBle,EAAKP,MAAM3Q,QAC1CkR,EAAK3P,MAAM,CACPmwB,YAAY,KACZE,cAAa,GALH1gB,oFAUdhD,KAAKyC,MAAM2e,WAAW,oCAgBtB,OAAGphB,KAAK3M,MAAMqwB,aACH7D,OAAOnvB,SAASsI,KAAhB,4BAAA1E,OAAiD0L,KAAK3M,MAAMmwB,aAI/DnsB,EAAAC,EAAAC,cAAA,OAAKI,UAAU,6BACTqI,KAAKyC,MAAM3N,QAAQ7D,GAwBjBoG,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACosB,GAAD,CAAIzrB,IAAK8H,KAAKyC,MAAM3N,QAAQ3D,iBAAiBG,iBAxBjD+F,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACqsB,GAAD,CACI/e,MAAO,CAAEvC,MAAM,OAAQuK,UAAU,UACjCD,MAAO,GAFX,uBAOAvV,EAAAC,EAAAC,cAAA,OAAKI,UAAU,4BACXN,EAAAC,EAAAC,cAACoN,GAAA,QAAD,CACIG,YAAY,sBACZmE,SAAUjJ,KAAKujB,kBACfrc,MAAOlH,KAAK3M,MAAMmwB,cAEtBnsB,EAAAC,EAAAC,cAACyN,GAAA,QAAD,CACI6F,QAAS7K,KAAKyjB,aACd9yB,KAAK,UACLkU,MAAO,CAACtO,UAAU,SAHtB,qBAhDL6O,aAoErBye,uLAEE,OACQxsB,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACyJ,GAAD,MAGA3J,EAAAC,EAAAC,cAAC2a,GAAA,EAAD,CAAMC,iBAAiB,IAAItN,MAAO,CAACtO,UAAU,SAEzCc,EAAAC,EAAAC,cAACusB,GAAD,CAAS1R,IAAK/a,EAAAC,EAAAC,cAAA,YAAMF,EAAAC,EAAAC,cAACrJ,EAAA,QAAD,CAAMyC,KAAK,SAAjB,sBAAqDuH,IAAI,KACnEb,EAAAC,EAAAC,cAACwsB,GAAD,OAGJ1sB,EAAAC,EAAAC,cAACusB,GAAD,CAAS1R,IAAK/a,EAAAC,EAAAC,cAAA,YAAMF,EAAAC,EAAAC,cAACrJ,EAAA,QAAD,CAAMyC,KAAK,oBAAjB,aAAuDuH,IAAI,KACrEb,EAAAC,EAAAC,cAACgpB,GAAD,CAAWtvB,GAAI+O,KAAKyC,MAAM3N,QAAQ7D,GAAIU,gBAAiBqO,KAAKyC,MAAM3N,QAAQnD,gBAAiB4iB,oBAAqBvU,KAAKyC,MAAM8R,uBAG/Hld,EAAAC,EAAAC,cAACusB,GAAD,CAAS1R,IAAK/a,EAAAC,EAAAC,cAAA,YAAMF,EAAAC,EAAAC,cAACrJ,EAAA,QAAD,CAAMyC,KAAK,aAAjB,oBAAuDuH,IAAI,KACrEb,EAAAC,EAAAC,cAACysB,GAAD,gBAlBZ5e,aA4BV6e,GAAkB,SAAA5wB,GAAK,MAAK,CAC9Be,QAAUf,EAAMe,QAChBU,QAAUzB,EAAMyB,UAIhB6uB,GAAGne,YAAQye,GAAgB,CAC3B/C,uBACAC,wBACA5M,wBAHG/O,CAIJqe,IAGYre,eAAQye,GAAiB,CACpC7C,cACAF,uBACAC,wBACA5M,wBAJW/O,CAKZ8d,eCtIUY,GAAQ,CACjB,CACE7zB,MAAO,iBAET,CACEA,MAAO,gBAET,CACEA,MAAO,oBAET,CACEA,MAAO,mBAET,CACEA,MAAO,+BCJb2iB,MAASmR,UAAU,cAEX5d,GAAWC,WAAXD,OAGF6d,IAFkBC,WAAhBC,wBAGJ,SAAAF,EAAY3hB,GAAM,IAAAO,EAAA,OAAAvP,OAAAsM,EAAA,EAAAtM,CAAAuM,KAAAokB,IACdphB,EAAAvP,OAAAwP,GAAA,EAAAxP,CAAAuM,KAAAvM,OAAAyP,GAAA,EAAAzP,CAAA2wB,GAAAjhB,KAAAnD,KAAMyC,KAMVW,aAAe,SAAAC,GACXA,EAAEC,iBACFN,EAAKP,MAAMJ,KAAKkB,eAAe,SAACC,EAAKC,GAC5BD,IAEDR,EAAKP,MAAM4e,0BAA0B,CACjC1xB,SAAU8T,EAAO9S,KACjBf,UAAW6T,EAAOpT,MAClBR,aAAc4T,EAAO8gB,SACrBz0B,iBAAkB2T,EAAOqE,aACzB/X,YAAa0T,EAAO6c,SACpBrwB,UAAWwT,EAAOjS,MAClBtB,QAASuT,EAAOhS,MAEpBuR,EAAKP,MAAM2e,WAAW,OArBhBpe,EA0BlBwhB,iBAAmB,SAACvd,EAAMC,EAAOC,GAC1BD,EAAM3T,QAAQ,GACbyP,EAAKc,SAAS,CACV2gB,aAAa,eAEjB9kB,GAAW,CACPe,IAAKtF,GAAK4C,gBACV2C,KAAM,CACF+jB,SAAUxd,KAEfvD,KAAK,SAAChD,GAEDA,EAAKA,KAAKa,QACNb,EAAKA,KAAKgkB,SACV3hB,EAAKc,SAAS,CACV2gB,aAAc,YAElBtd,MAGAnE,EAAKc,SAAS,CACV2gB,aAAc,UAElBtd,EAAS,wCAIbnE,EAAKc,SAAS,CACV2gB,aAAc,YAElBtd,OAELpD,MAAM,SAAC6gB,GAEN5hB,EAAKc,SAAS,CACV2gB,aAAc,YAElBtd,OAIJA,KAjEJnE,EAAK3P,MAAQ,CACToxB,aAAc,IAHJzhB,yEAuET,IACGgB,EAAsBhE,KAAKyC,MAAMJ,KAAjC2B,kBACR,OACI3M,EAAAC,EAAAC,cAAA,OAAKI,UAAU,yBACXN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,yBACXN,EAAAC,EAAAC,cAAC4M,GAAA,QAAD,CACIC,SAAUpE,KAAKoD,aACfiB,aAAa,OAEbhN,EAAAC,EAAAC,cAAC4M,GAAA,QAAKG,KAAN,CAAWC,MAAM,kBAAmBC,aAAW,GAC1CR,EAAkB,OAAQ,CACvBiE,aAAejI,KAAKyC,MAAM5N,KAAKnF,gBAAgBC,SAC/C8U,MAAO,CAAC,CAAEC,UAAU,EAAMb,QAAS,qCAFtCG,CAIG3M,EAAAC,EAAAC,cAAC2Q,GAAA,QAAD,CAAQpD,YAAY,aAChBzN,EAAAC,EAAAC,cAACstB,GAAD,CAAQ3d,MAAM,cAAd,cACA7P,EAAAC,EAAAC,cAACstB,GAAD,CAAQ3d,MAAM,qBAAd,qBACA7P,EAAAC,EAAAC,cAACstB,GAAD,CAAQ3d,MAAM,uBAAd,0BAKZ7P,EAAAC,EAAAC,cAAC4M,GAAA,QAAKG,KAAN,CAAWC,MAAM,mBAAoBC,aAAW,EAACsgB,eAAgB9kB,KAAK3M,MAAMoxB,cACvEzgB,EAAkB,QAAS,CACxBiE,aAAejI,KAAKyC,MAAM5N,KAAKnF,gBAAgBE,UAC/C6U,MAAO,CACH,CAAEC,UAAU,EAAMb,QAAS,oCAC3B,CAAE4E,IAAI,EAAG5E,QAAS,4CAClB,CAAE8E,UAAW3I,KAAKwkB,oBALzBxgB,CASG3M,EAAAC,EAAAC,cAACoN,GAAA,QAAD,CAAOG,YAAY,uBAI3BzN,EAAAC,EAAAC,cAAC4M,GAAA,QAAKG,KAAN,CAAWC,MAAM,WAAYC,aAAW,GACnCR,EAAkB,WAAY,CAC3BiE,aAAejI,KAAKyC,MAAM5N,KAAKnF,gBAAgBK,YAC/C0U,MAAO,CAAC,CAAEC,UAAU,EAAMb,QAAS,yCAFtCG,CAIG3M,EAAAC,EAAAC,cAAC2Q,GAAA,QAAD,CACAzY,KAAK,WACLqV,YAAY,8BACZD,MAAO,CAAEvC,MAAO,QAChB4R,YAAY,EACZ9D,iBAAiB,KAEZpQ,KAAKyC,MAAM9O,MAAMnG,iBAAiBuK,IAAI,SAAAE,GAAI,OACvCZ,EAAAC,EAAAC,cAAC2Q,GAAA,QAAO3B,OAAR,CAAerO,IAAKD,EAAK4P,IAAKX,MAAOjP,EAAK4P,IAAKzG,EAAGnJ,EAAKmO,OACtDnO,EAAKmO,YAOtB/O,EAAAC,EAAAC,cAAC4M,GAAA,QAAKG,KAAN,CAAWC,MAAM,yDAAyDC,aAAW,GAChFR,EAAkB,WAAY,CAC3BiE,aAAejI,KAAKyC,MAAM5N,KAAKnF,gBAAgBG,aAC/C4U,MAAO,CAAC,CAAEC,UAAU,EAAMb,QAAS,qCAFtCG,CAIG3M,EAAAC,EAAAC,cAACgZ,GAAA,EAAD,CAAa1L,MAAO,CAACvC,MAAM,QAAUwC,YAAY,gBAAgB2D,IAAK,GAAIC,IAAK,QAIvFrR,EAAAC,EAAAC,cAAC4M,GAAA,QAAKG,KAAN,CAAWC,MAAM,oBAAqBC,aAAW,GAC5CR,EAAkB,eAAgB,CAC/BiE,aAAejI,KAAKyC,MAAM5N,KAAKnF,gBAAgBI,kBADlDkU,CAGG3M,EAAAC,EAAAC,cAACoN,GAAA,QAAD,CAAOG,YAAY,wBAI3BzN,EAAAC,EAAAC,cAAC4M,GAAA,QAAKG,KAAN,CAAWC,MAAM,uBAAwBC,aAAW,GAE5CR,EAAkB,QAAS,CACvBS,MAAO,CAAC,CAAEC,UAAU,EAAMb,QAAS,uCADvCG,CAGI3M,EAAAC,EAAAC,cAACwtB,GAAA,QAAD,CACIC,UAAQ,EACRlgB,YAAY,oBACZmE,SAAUjJ,KAAKilB,cACf3X,KAAMtN,KAAKklB,cAM3B7tB,EAAAC,EAAAC,cAAC4M,GAAA,QAAKG,KAAN,CAAWC,MAAM,uBAAwBC,aAAW,GAE5CR,EAAkB,MAAO,CACrBS,MAAO,CAAC,CAAEC,UAAU,EAAMb,QAAS,qCADvCG,CAGI3M,EAAAC,EAAAC,cAACwtB,GAAA,QAAD,CACIC,UAAQ,EACRlgB,YAAY,kBACZmE,SAAUjJ,KAAKmlB,YACf7X,KAAMtN,KAAKolB,YAM3B/tB,EAAAC,EAAAC,cAAC4M,GAAA,QAAKG,KAAN,KACIjN,EAAAC,EAAAC,cAACyN,GAAA,QAAD,CAAQrU,KAAK,UAAUsU,SAAS,SAASC,OAAK,GAA9C,mBAjLCE,cA4LvBigB,GAAgB/f,WAAKC,OAAO,CAAEhT,KAAM,cAApB+S,CAAoC8e,IAO3C5e,eALS,SAAAnS,GAAK,MAAK,CAC9BwB,KAAOxB,EAAMwB,KACblB,MAAMN,EAAMM,QAGuB,CACnCytB,cACAC,8BAFW7b,CAGZ6f,mCCrNUC,YAAe,CACxB9rB,QAAS,CACL,CAAC,CAAE8kB,OAAQ,KAAO,CAAEA,OAAQ,KAAO,CAAEA,OAAQ,CAAC,EAAG,EAAG,EAAG,IAAM,CAAEiH,KAAM,KACrE,CAAC,CAAEza,KAAM,KACT,CAAC,OAAQ,SAAU,YAAa,SAAU,cAC1C,CAAC,CAAE0a,KAAM,WAAa,CAAEA,KAAM,WAC9B,CAAC,OAAQ,QAAS,SAClB,CAAC,SACD,CAAC,iBAIIC,GAAe,CACxB,SACA,OACA,OACA,OACA,SACA,YACA,SACA,aACA,OACA,SACA,OACA,QACA,QACA,cCGIpZ,GAAU7T,KAAV6T,MACA9F,GAAWC,WAAXD,OAEAyW,IADgBqH,WAAhBC,YACUrH,KAAVD,OAEF0I,eACF,SAAAA,EAAYjjB,GAAM,IAAAO,EAAA,OAAAvP,OAAAsM,EAAA,EAAAtM,CAAAuM,KAAA0lB,IACd1iB,EAAAvP,OAAAwP,GAAA,EAAAxP,CAAAuM,KAAAvM,OAAAyP,GAAA,EAAAzP,CAAAiyB,GAAAviB,KAAAnD,KAAMyC,KAUVkjB,QAAU,SAACtiB,GACPL,EAAKc,SAAS,CAAE8C,QAASvD,EAAEqH,OAAO9D,WAZpB5D,EAelB4iB,eAAiB,SAAC1e,GACdkT,QAAQC,IAAInT,GACZlE,EAAKc,SAAS,CAAE+hB,OAAQ3e,KAjBVlE,EAqBlB8iB,YAAc,SAAAziB,GACVA,EAAEC,iBACFN,EAAKP,MAAMJ,KAAKkB,eAAe,SAACC,EAAKC,GAC5BD,IACD4W,QAAQC,IAAI5W,GACZT,EAAKP,MAAMsjB,WAAW/iB,EAAK3P,MAAMuT,QAAQ,CACrCvW,MAAOoT,EAAOuiB,SACd11B,YAAa0S,EAAK3P,MAAMwyB,OACxBp1B,UAAW,GACXC,SAAU+S,EAAOwiB,YACjBt1B,KAAM8S,EAAOyiB,QACbt1B,WAAYoS,EAAK3P,MAAM8yB,aAG3BnjB,EAAKP,MAAM2e,WAAW,OAnChBpe,EAyClB0c,UAAY,WACR1c,EAAKc,SAAS,CAAE0H,SAAS,KA1CXxI,EA6ClBuK,SAAW,SAAAlK,GACPL,EAAKc,SAAS,CAAE0H,SAAS,KA9CXxI,EAiDlBma,aAAe,SAAA9Z,GACXL,EAAKc,SAAS,CAAE0H,SAAS,KAhDzBxI,EAAK3P,MAAQ,CACTuT,SAAS,EACTif,OAAQ,KACRM,WAAY,GACZxlB,KAAM,GACN6K,SAAS,GAPCxI,yEAqDT,IAAAoJ,EAAApM,KACGgE,EAAsBhE,KAAKyC,MAAMJ,KAAjC2B,kBAER,OACI3M,EAAAC,EAAAC,cAACuhB,EAAA,SAAD,KACIzhB,EAAAC,EAAAC,cAAA,OAAKsN,MAAO,CAAExO,QAAS,oBAAqBiM,MAAO,OAAQuK,UAAW,WAClExV,EAAAC,EAAAC,cAAC6uB,GAAD,CAAOxZ,MAAO,GAAd,iBAGJvV,EAAAC,EAAAC,cAAA,OAAKI,UAAU,aACXN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,OACXN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,aACXN,EAAAC,EAAAC,cAACkZ,GAAA,QAAD,CAAUxH,SAAUjJ,KAAK2lB,SAAzB,2DAOZtuB,EAAAC,EAAAC,cAAA,OAAKI,UAAU,aACXN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,OACXN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,aACdqI,KAAK3M,MAAMuT,QACRvP,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAC6uB,GAAD,CAAOvhB,MAAO,CAACgI,UAAW,UAAWD,MAAO,GAA5C,wBACAvV,EAAAC,EAAAC,cAAC4M,GAAA,QAAD,CACIC,SAAUpE,KAAK8lB,YACfzhB,aAAa,OAEbhN,EAAAC,EAAAC,cAAC4M,GAAA,QAAKG,KAAN,CAAWC,MAAM,YAAaC,aAAW,GACpCR,EAAkB,WAAY,CAC3BiE,aAAejI,KAAKyC,MAAM5N,KAAKzE,YAAYC,MAC3CoU,MAAO,CAAC,CAAEC,UAAU,EAAMb,QAAS,+BAFtCG,CAIG3M,EAAAC,EAAAC,cAACoN,GAAA,QAAD,CAAOG,YAAY,gBAK3BzN,EAAAC,EAAAC,cAAC4M,GAAA,QAAKG,KAAN,CAAWC,MAAM,kBAAmBC,aAAW,GAC3CnN,EAAAC,EAAAC,cAAC8uB,GAAA/uB,EAAD,CACIgvB,QAAShB,GACTiB,QAASd,GACTve,MAAOlH,KAAK3M,MAAMwyB,OAClB/gB,YAAY,4BACZmE,SAAUjJ,KAAK4lB,kBAIvBvuB,EAAAC,EAAAC,cAAC4M,GAAA,QAAKG,KAAN,CAAWC,MAAM,WAAYC,aAAW,GACnCR,EAAkB,UAAW,CAC1BiE,aAAejI,KAAKyC,MAAM5N,KAAKzE,YAAY81B,QAC3CzhB,MAAO,CAAC,CAAEC,UAAU,EAAMb,QAAS,8BAFtCG,CAIG3M,EAAAC,EAAAC,cAAC2Q,GAAA,QAAD,CAAQpD,YAAY,YAChBzN,EAAAC,EAAAC,cAACivB,GAAD,CAAQtf,MAAM,aAAd,aACA7P,EAAAC,EAAAC,cAACivB,GAAD,CAAQtf,MAAM,aAAd,aACA7P,EAAAC,EAAAC,cAACivB,GAAD,CAAQtf,MAAM,cAAd,cACA7P,EAAAC,EAAAC,cAACivB,GAAD,CAAQtf,MAAM,kBAAd,qBAKZ7P,EAAAC,EAAAC,cAAC4M,GAAA,QAAKG,KAAN,CAAWC,MAAM,eAAgBC,aAAW,GACvCR,EAAkB,cAAe,CAC9BiE,aAAejI,KAAKyC,MAAM5N,KAAKzE,YAAYM,SAC3C+T,MAAO,CAAC,CAAEC,UAAU,EAAMb,QAAS,kCAFtCG,CAIG3M,EAAAC,EAAAC,cAACoN,GAAA,QAAD,CAAOG,YAAY,mBAI3BzN,EAAAC,EAAAC,cAAC4M,GAAA,QAAKG,KAAN,KACIjN,EAAAC,EAAAC,cAACyN,GAAA,QAAD,CAAQrU,KAAK,UAAUsU,SAAS,SAASC,OAAK,GAA9C,UAMR7N,EAAAC,EAAAC,cAAC8mB,GAAA,EAAD,CAAUlM,iBAAkB,CAAC,MACzB9a,EAAAC,EAAAC,cAACkvB,GAAD,CAAOnI,OAAO,uBAAuBpmB,IAAI,KACrCb,EAAAC,EAAAC,cAACmvB,GAAA,YAAD,CACIC,cAAe3mB,KAAK3M,MAAM8yB,WAC1BS,OAAQ,SAAAC,GACJza,EAAKtI,SAAS,CAAEqiB,WAAYU,IAE5BzM,QAAQC,IAAIwM,IAEhBC,QAAS,SAAAplB,GAAK,OAAI0Y,QAAQC,IAAI3Y,MAGlCrK,EAAAC,EAAAC,cAAC2C,GAAA,EAAD,MAEC,SACD7C,EAAAC,EAAAC,cAAA,yDAEAF,EAAAC,EAAAC,cAACyN,GAAA,QAAD,CAAQrU,KAAK,UAAUka,QAAS7K,KAAK0f,WAArC,aAORroB,EAAAC,EAAAC,cAAC8V,GAAA,EAAD,CACIhd,MAAM,UACNmb,QAASxL,KAAK3M,MAAMmY,QACpB8B,KAAMtN,KAAKuN,SACXC,SAAUxN,KAAKmd,cAEf9lB,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAACmvB,GAAA,aAAD,CACIK,YAAY,EACZJ,cAAe3mB,KAAK3M,MAAM8yB,WAC1BxlB,KAAMX,KAAK3M,MAAMsN,KACjBimB,OAAQ,SAAAI,GAEJ5a,EAAKtI,SAAS,CAAEnD,KAAMqmB,KAE1BF,QAAS,SAAAplB,GAAK,OAAI0Y,QAAQC,IAAI3Y,QAK1CrK,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OAAKI,UAAU,aACXN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,OACXN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,aACXN,EAAAC,EAAAC,cAACyN,GAAA,QAAD,CACI6F,QAAS,kBAAIuB,EAAK3J,MAAM2e,WAAW,IACnCzwB,KAAK,UACLsU,SAAS,SAASC,OAAK,GAH3B,uBAvLnBE,aA2MnB6hB,GAAU3hB,WAAKC,OAAO,CAAEhT,KAAM,cAApB+S,CAAoCogB,IAMrClgB,eAJS,SAAAnS,GAAK,MAAK,CAC9BwB,KAAOxB,EAAMwB,OAGuB,CACpCusB,cACA2E,WR5KsB,SAACmB,EAAOvmB,GAAR,OAAgB,SAAAM,GACtCA,EAAS,CACLtQ,KAAO,eACPkD,SAAUqzB,EACVpzB,SAAU6M,OQsKH6E,CAGZyhB,eCtOGE,eACF,SAAAA,EAAY1kB,GAAM,IAAAO,EAAA,OAAAvP,OAAAsM,EAAA,EAAAtM,CAAAuM,KAAAmnB,IACdnkB,EAAAvP,OAAAwP,GAAA,EAAAxP,CAAAuM,KAAAvM,OAAAyP,GAAA,EAAAzP,CAAA0zB,GAAAhkB,KAAAnD,KAAMyC,KAcVW,aAAe,SAAAC,GACXA,EAAEC,iBACFN,EAAKP,MAAMJ,KAAKkB,eAAe,SAACC,EAAKC,GACjC,IAAKD,EAED,GAAGC,EAAO2jB,IAAIpkB,EAAKP,MAAM5N,KAAKhE,iCAAiC0C,OAAO,CAIlE,IAHA,IAAI8zB,EAAI,GACJC,EAAa7zB,OAAAc,EAAA,EAAAd,CAAIuP,EAAKP,MAAM5N,KAAKhE,kCACjC02B,EAAED,EAAa/zB,OAAO,EAClBsb,EAAEpL,EAAO2jB,GAAGvY,EAAE,EAAEA,IAAI,CACxB0Y,GAAI,EACJ,IAAIxJ,EAAIpD,KAAKC,MAAMD,KAAK6M,SAAWD,GACnCF,EAAIhY,KAAKiY,EAAavJ,GAAGlW,KACzByf,EAAavH,OAAOhC,EAAE,GAE1B/a,EAAKP,MAAMglB,oBAAoBJ,GAC/BrkB,EAAKc,SAAS,CACV4jB,cAAe,SAInBvmB,GAAM,QAAQ,SAAS,iDApCrB6B,EA0ClB2kB,WAAa,SAAA1vB,GAOT,MAAO,CACHsM,MANFlN,EAAAC,EAAAC,cAAA,QAAMI,UAAU,eACVN,EAAAC,EAAAC,cAACyN,GAAA,QAAD,CAAQuH,MAAM,SAAS1B,QAAS,WAAK7H,EAAKqa,UAAUplB,EAAK4P,MAAO3Z,KAAK,OAAO2W,MAAO,CAAC1O,WAAW,0EAA0E0C,MAAM,aAAciS,KAAK,UACjM7S,EAAKxD,MAKVyS,MAAOjP,EAAK4P,MAnDF7E,EAuDlBqa,UAAU,SAACC,GACPta,EAAKc,SAAS,CACVyZ,iBAAiBD,EACjBF,UAAS,KA1DCpa,EA6DlBma,aAAa,WACTna,EAAKc,SAAS,CACVsZ,UAAS,KA/DCpa,EAmElB4kB,aAAe,SAACC,EAAYC,EAAWC,GACnC/kB,EAAKP,MAAMglB,oBAAoBI,IAlE/B7kB,EAAK3P,MAAM,CACP20B,YAAW,EACXN,cAAa,EACbnK,iBAAiB,KACjBH,UAAS,GAEbpa,EAAKP,MAAMwlB,WAAWjlB,EAAKP,MAAMhT,MARnBuT,oFAYdhD,KAAKyC,MAAMylB,yBAAyBloB,KAAKyC,MAAM5N,KAAKnF,gBAAgBK,8CA4D/D,IACGiU,EAAsBhE,KAAKyC,MAAMJ,KAAjC2B,kBACR,OACI3M,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACyY,GAAA,QAAD,KACI3Y,EAAAC,EAAAC,cAAC0Y,GAAA,QAAD,CAAKC,KAAM,EAAGrL,MAAO,CAACxO,QAAQ,aAC1BgB,EAAAC,EAAAC,cAAA,OAAKI,UAAS,8BAAArD,OAAmD,WAAnB0L,KAAKyC,MAAMhT,KAAkB,WAAa,UACpF4H,EAAAC,EAAAC,cAAC4M,GAAA,QAAD,CAAMC,SAAUpE,KAAKoD,cACjB/L,EAAAC,EAAAC,cAAC4M,GAAA,QAAKG,KAAN,CAAWC,MAAM,yBAAyBC,aAAW,GAChDR,EAAkB,KAAM,CACrBS,MAAO,CAAC,CAAEC,UAAU,EAAMb,QAAS,kCADtCG,CAGG3M,EAAAC,EAAAC,cAACgZ,GAAA,EAAD,CAAa1L,MAAO,CAACvC,MAAM,QAAUwC,YAAY,iBAAiB2D,IAAK,GAAIC,IAAK,OAGxFrR,EAAAC,EAAAC,cAAC4M,GAAA,QAAKG,KAAN,KACIjN,EAAAC,EAAAC,cAACyN,GAAA,QAAD,CAAQrU,KAAK,UAAUsU,SAAS,SAASC,OAAK,EAACwL,UAAW1Q,KAAK3M,MAAMq0B,cAArE,2BAQhBrwB,EAAAC,EAAAC,cAAC0Y,GAAA,QAAD,CAAKC,KAAM,GAAIrL,MAAO,CAACxO,QAAQ,SAC3BgB,EAAAC,EAAAC,cAAC4wB,GAAA,EAAD,CACIzX,SAA6B,WAAnB1Q,KAAKyC,MAAMhT,KACrB2d,OAAQ,SAAAjC,GAAM,OAAIA,EAAOtD,KACzBmF,WAAYhN,KAAKyC,MAAM5N,KAAKhE,iCAC5ByI,UAAW,CACPgJ,MAAO,MACP1L,OAAQ,KAEZixB,WAAY7nB,KAAKyC,MAAM5N,KAAKnF,gBAAgBM,cAC5C2b,OAAQ3L,KAAK2nB,WACb1e,SAAUjJ,KAAK4nB,iBAK3BvwB,EAAAC,EAAAC,cAAC8V,GAAA,EAAD,CACIK,gBAAgB,EAChBpL,MAAM,MACNuC,MAAO,CAAC4I,IAAI,QACZpd,MAAM,mBACNmb,QAASxL,KAAK3M,MAAM+pB,SACpB9P,KAAMtN,KAAKmd,aACX3P,SAAUxN,KAAKmd,aACflmB,OAAQ,MAERI,EAAAC,EAAAC,cAAC6wB,GAAD,CAAuB9K,IAAKtd,KAAK3M,MAAMkqB,4BA3HrBnY,aAkIhCijB,GAAyB/iB,WAAKC,OAAO,CAAEhT,KAAM,cAApB+S,CAAoC6hB,IAMpD3hB,eAJS,SAAAnS,GAAK,MAAK,CAC9BwB,KAAOxB,EAAMwB,OAGsB,CACnCusB,cACAC,6BACA6G,yBTnHoC,SAAC5hB,GAAD,OAAO,SAAArF,GAC3CtB,GAAW,CACPe,IAAG,GAAApM,OAAM8G,GAAKa,mBACd0E,KAAK,CACDyN,QAAU9H,KAGjB3C,KAAK,SAACC,GAEAA,EAASjD,KAAKa,QACbP,EAAS,CACLtQ,KAAM,mCACNsD,QAAS2P,EAASjD,KAAKA,QAI3BQ,GAAM,QAAQ,SAASyC,EAASjD,KAAKkD,SACrC5C,EAAS,CACLtQ,KAAM,mCACNsD,QAAS,QAIpB8P,MAAM,SAACrC,GACJP,GAAM,QAAQ,SAAS,gBACvBF,EAAS,CACLtQ,KAAM,mCACNsD,QAAS,SSyFjBwzB,oBT3I+B,SAACnhB,GAAD,OAAO,SAAArF,GACtCA,EAAS,CACLtQ,KAAM,kCACNsD,QAASqS,MSyIbgiB,4BTrIuC,SAAChiB,GAAD,OAAM,SAAArF,GAC7CA,EAAS,CACLtQ,KAAM,kCACNsD,QAAQqS,MSmIZ2hB,WT/HsB,SAAC3hB,GAAD,OAAM,SAAArF,GAC5BA,EAAS,CACLtQ,KAAO,8BACPsD,QAAQqS,OSsHDd,CAOZ6iB,IAIG3J,eACF,SAAAA,EAAYjc,GAAM,IAAA2J,EAAA,OAAA3Y,OAAAsM,EAAA,EAAAtM,CAAAuM,KAAA0e,IACdtS,EAAA3Y,OAAAwP,GAAA,EAAAxP,CAAAuM,KAAAvM,OAAAyP,GAAA,EAAAzP,CAAAirB,GAAAvb,KAAAnD,KAAMyC,KACDpP,MAAM,CACPurB,UAAS,EACTC,SAAS,MAJCzS,oFAQC,IAAA2F,EAAA/R,KACfA,KAAK8D,SAAS,CACV8a,UAAS,IAEbhf,GAAK,CACDc,IAAKtF,GAAKoC,iCACVmD,KAAM,CACF2c,IAAKtd,KAAKyC,MAAM6a,OAErB3Z,KAAK,SAACC,GAIDA,EAASjD,KAAKa,QACduQ,EAAKjO,SAAS,CACV+a,SAAUjb,EAASjD,KAAKA,KAAK,KAIjCQ,GAAM,QAAS,UAAWyC,EAASjD,KAAKkD,SAE5CkO,EAAKjO,SAAS,CACV8a,UAAU,MAEf7a,MAAM,SAACrC,GACNqQ,EAAKjO,SAAS,CACV8a,UAAU,IAKdzd,GAAM,QAAS,UAAW,mDAK9B,IAAMgS,EAAM,CAAC,IAAI,IAAI,IAAI,IAAI,KACzBC,EAAWpT,KAAK3M,MAAMwrB,SAC1B,OAAgB,OAAbzL,EAEK/b,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKI,UAAU,+BACXN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,uBACVyb,EAAW3e,MAEf2e,EAAW1D,QACRrY,EAAAC,EAAAC,cAAA,OAAKI,UAAU,iCACXN,EAAAC,EAAAC,cAAA,OAAKuD,IAAI,WAAWnD,UAAU,uBAAuBiD,IAAKwY,EAAW1D,WAEvE,KAENrY,EAAAC,EAAAC,cAAA,WACK6b,EAAW/e,QAAQ0D,IAAI,SAACuO,EAAEuI,GACvB,OACIxX,EAAAC,EAAAC,cAAA,OAAKW,IAAK2W,GACNxX,EAAAC,EAAAC,cAACyY,GAAA,QAAD,CAAKrf,KAAK,OAAOqK,QAAQ,SAASrD,UAAU,0BACxCN,EAAAC,EAAAC,cAAC0Y,GAAA,QAAD,CAAKC,KAAM,GAEH5J,EAAE5R,SAAS2C,EAAAC,EAAAC,cAACyN,GAAA,QAAD,CAAQrN,UAAU,QAAQ4U,MAAM,UAAU4G,EAAKtE,IAAaxX,EAAAC,EAAAC,cAACyN,GAAA,QAAD,CAAQrU,KAAK,UAAU4b,MAAM,UAAU4G,EAAKtE,KAI1HvI,EAAEiJ,OACClY,EAAAC,EAAAC,cAAC0Y,GAAA,QAAD,CAAKC,KAAM,EAAGrL,MAAO,CAACxO,QAAQ,QAC1BgB,EAAAC,EAAAC,cAAA,OAAKuD,IAAI,UAAUnD,UAAU,uBAAuBiD,IAAK0L,EAAEiJ,UAG/D,KAEHjJ,EAAEiJ,OACClY,EAAAC,EAAAC,cAAC0Y,GAAA,QAAD,CAAKC,KAAM,IAAK5J,EAAEgJ,SAElBjY,EAAAC,EAAAC,cAAC0Y,GAAA,QAAD,CAAKC,KAAM,IAAK5J,EAAEgJ,gBAelDjY,EAAAC,EAAAC,cAAA,OAAKI,UAAU,oBACXN,EAAAC,EAAAC,cAACya,GAAA,EAAD,CAAUC,QAAM,IAChB5a,EAAAC,EAAAC,cAACya,GAAA,EAAD,CAAUC,QAAM,YAlGA9M,IAAMC,WC7JlCsM,GAAYC,KAAZD,QA0BR,IAIelM,eAJS,SAAAnS,GAAK,MAAK,CAC9BwB,KAAOxB,EAAMwB,OAGsB,CACnCusB,cACAC,8BAFW7b,CA5Bf,SAAwB/C,GACpB,IAAM8lB,EAAgBlxB,EAAAC,EAAAC,cAACyN,GAAA,QAAD,4BAA6BvC,EAAM5N,KAAKnF,gBAAgBM,cAAcuD,QAE5F,OACI8D,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAC2a,GAAA,EAAD,CAAMC,iBAAiB,IAAIqW,mBAAoBD,GAC3ClxB,EAAAC,EAAAC,cAACkxB,GAAD,CAASrW,IAAI,mBAAmBla,IAAI,KAChCb,EAAAC,EAAAC,cAACmxB,GAAD,CAAwBj5B,KAAK,YAEjC4H,EAAAC,EAAAC,cAACkxB,GAAD,CAASrW,IAAI,qBAAqBla,IAAI,KAClCb,EAAAC,EAAAC,cAACmxB,GAAD,CAAwBj5B,KAAK,aAIrC4H,EAAAC,EAAAC,cAAA,OAAKsN,MAAO,CAAEvC,MAAO,OAAQjM,QAAS,SAClCgB,EAAAC,EAAAC,cAACyN,GAAA,QAAD,CAAQH,MAAO,CAAE8jB,MAAO,SAAWh4B,KAAK,UAAUka,QAAS,kBAAMpI,EAAM2e,WAAW,KAAlF,YCjBHwH,GAAiC,SAACjoB,GAAD,OAAU,SAAAM,GACpDA,EAAS,CACLtQ,KAAM,qCACNsD,QAAS0M,MAKJkoB,GAA2B,kBAAM,SAAA5nB,GAC1CA,EAAS,CACLtQ,KAAM,8CACNkD,UAAU,EACVC,SAAU,KAGd6L,GAAW,CACPe,IAAG,GAAApM,OAAK8G,GAAKgD,wBAEhBuF,KAAK,SAACC,GACCA,EAASjD,KAAKa,QACdP,EAAS,CACLtQ,KAAM,8CACNkD,UAAU,EACVC,SAAU8P,EAASjD,KAAKhO,aAI5BwO,GAAM,QAAS,SAAUyC,EAASjD,KAAKkD,SACvC5C,EAAS,CACLtQ,KAAM,8CACNkD,UAAU,EACVC,SAAU,QAIrBiQ,MAAM,SAACrC,GACJP,GAAM,QAAS,SAAU,gBACzBF,EAAS,CACLtQ,KAAM,8CACNkD,UAAU,EACVC,SAAU,SClBduY,GAAU7T,KAAV6T,MAEFyc,eACF,SAAAA,EAAYrmB,GAAM,IAAAO,EAAA,OAAAvP,OAAAsM,EAAA,EAAAtM,CAAAuM,KAAA8oB,IACd9lB,EAAAvP,OAAAwP,GAAA,EAAAxP,CAAAuM,KAAAvM,OAAAyP,GAAA,EAAAzP,CAAAq1B,GAAA3lB,KAAAnD,KAAMyC,KAcVW,aAAe,SAAAC,GACXA,EAAEC,kBAhBYN,EAoBlB2iB,QAAU,SAACtiB,GACPL,EAAKP,MAAMsmB,UAAU1lB,EAAEqH,OAAO9D,SAC9B5D,EAAKc,SAAS,CAAE8C,QAASvD,EAAEqH,OAAO9D,WAtBpB5D,EA0BlB4kB,aAAe,SAACC,EAAYC,EAAWC,GACnC/kB,EAAKP,MAAMumB,0BAA0BnB,IA3BvB7kB,EA+BlB2kB,WAAa,SAAA1vB,GAcT,MAAO,CACHsM,MAbFlN,EAAAC,EAAAC,cAAA,QAAMI,UAAU,eACVN,EAAAC,EAAAC,cAACyN,GAAA,QAAD,CACIuH,MAAM,SACN1B,QAAS,WAAK7H,EAAKqa,UAAUplB,EAAK4P,MAClChD,MAAO,CAAC1O,WAAW,0EAA0E0C,MAAM,aACnG3K,KAAK,OACL4c,KAAK,UAER7S,EAAK5H,OAMV6W,MAAOjP,EAAK4P,MA/CF7E,EAmDlBqa,UAAY,SAACC,GACTta,EAAKc,SAAS,CACVyZ,iBAAiBD,EACjBF,UAAS,KAtDCpa,EA0DlBma,aAAa,WACTna,EAAKc,SAAS,CACVsZ,UAAS,KA1Dbpa,EAAK3P,MAAQ,CACTuT,SAAS,EACTohB,YAAW,EACXN,cAAa,EACbnK,iBAAiB,KACjBH,UAAS,GAPCpa,oFAYdhD,KAAKyC,MAAMomB,4DAoDN,IAAAzc,EAAApM,KACL,OACI3I,EAAAC,EAAAC,cAACuhB,EAAA,SAAD,KACIzhB,EAAAC,EAAAC,cAAA,OAAKsN,MAAO,CAAExO,QAAS,oBAAqBiM,MAAO,OAAQuK,UAAW,WAClExV,EAAAC,EAAAC,cAAC0xB,GAAD,CAAOrc,MAAO,GAAd,8BAGJvV,EAAAC,EAAAC,cAAA,OAAKI,UAAU,aACXN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,OACXN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,aACXN,EAAAC,EAAAC,cAACkZ,GAAA,QAAD,CAAUxH,SAAUjJ,KAAK2lB,SAAzB,sEAOZtuB,EAAAC,EAAAC,cAAA,OAAKI,UAAU,aACXN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,OACXN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,aACdqI,KAAK3M,MAAMuT,QACRvP,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAC4wB,GAAA,EAAD,CACI/a,OAAQ,SAAAjC,GAAM,OAAIA,EAAOtD,KACzBmF,WAAYhN,KAAKyC,MAAMtN,OAAOtG,kBAC9ByK,UAAW,CACPgJ,MAAO,MACP1L,OAAQ,KAEZixB,WAAY7nB,KAAKyC,MAAM5N,KAAK9D,YAAYf,cACxC2b,OAAQ3L,KAAK2nB,WACb1e,SAAUjJ,KAAK4nB,eAGnBvwB,EAAAC,EAAAC,cAAA,OAAKsN,MAAO,CAAEvC,MAAO,OAAQjM,QAAS,SAClCgB,EAAAC,EAAAC,cAACyN,GAAA,QAAD,CACIH,MAAO,CAAE8jB,MAAO,SAChBh4B,KAAK,UACLuU,OAAK,EACL2F,QAAS,kBAAMuB,EAAK3J,MAAM2e,WAAW,KAJzC,UAWR/pB,EAAAC,EAAAC,cAAA,WACC,SACDF,EAAAC,EAAAC,cAAA,WAEAF,EAAAC,EAAAC,cAAA,OAAKI,UAAU,aACXN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,OACXN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,aACXN,EAAAC,EAAAC,cAACyN,GAAA,QAAD,CACI6F,QAAS,kBAAMuB,EAAK3J,MAAM2e,WAAW,IACrCzwB,KAAK,UACLsU,SAAS,SAASC,OAAK,GAH3B,eAgBxB7N,EAAAC,EAAAC,cAAC8V,GAAA,EAAD,CACIK,gBAAgB,EAChBpL,MAAM,MACNuC,MAAO,CAAC4I,IAAI,QACZpd,MAAM,mBACNmb,QAASxL,KAAK3M,MAAM+pB,SACpB9P,KAAMtN,KAAKmd,aACX3P,SAAUxN,KAAKmd,aACflmB,OAAQ,eA9IJmO,aAwJlB8jB,GAAa5jB,WAAKC,OAAO,CAAEhT,KAAM,cAApB+S,CAAoCwjB,IAOxCtjB,eALS,SAAAnS,GAAK,MAAK,CAC9BwB,KAAMxB,EAAMwB,KACZM,OAAQ9B,EAAM8B,SAGsB,CACpCisB,cACA2H,UZ7GqB,SAACpoB,GAAD,OAAS,SAAAM,GAC9BA,EAAS,CACLtQ,KAAO,8BACPsD,QAAS0M,MY2GbkoB,4BACAG,0BZvGqC,SAACroB,GAAD,OAAU,SAAAM,GAC/CA,EAAS,CACLtQ,KAAM,wCACNsD,QAAS0M,MYqGbwoB,kCZhG6C,SAACxoB,GAAD,OAAS,SAAAM,GACtDA,EAAS,CACLtQ,KAAM,yCACNsD,QAAQ0M,OYwFD6E,CAMZ0jB,yBCtLK7c,GAAU7T,KAAV6T,MAEF+c,eACF,SAAAA,EAAY3mB,GAAM,IAAAO,EAAA,OAAAvP,OAAAsM,EAAA,EAAAtM,CAAAuM,KAAAopB,IACdpmB,EAAAvP,OAAAwP,GAAA,EAAAxP,CAAAuM,KAAAvM,OAAAyP,GAAA,EAAAzP,CAAA21B,GAAAjmB,KAAAnD,KAAMyC,KAMV4mB,WAAa,WACT1pB,GAAW,CACPe,IAAKtF,GAAKkB,YACVqE,KAAM,CACFhQ,KAAMqS,EAAKP,MAAM5N,KAAKnF,gBAAgBC,SACtCU,MAAO2S,EAAKP,MAAM5N,KAAKnF,gBAAgBE,UACvC+C,UAAWqQ,EAAKP,MAAM5N,KAAKnF,gBAAgBM,cAC3Cu0B,SAAUvhB,EAAKP,MAAM5N,KAAKnF,gBAAgBG,aAC1CywB,SAAUtd,EAAKP,MAAM5N,KAAKnF,gBAAgBK,YAC1C+X,aAAc9E,EAAKP,MAAM5N,KAAKnF,gBAAgBI,iBAC9CG,UAAW+S,EAAKP,MAAM5N,KAAKnF,gBAAgBO,UAC3CC,QAAS8S,EAAKP,MAAM5N,KAAKnF,gBAAgBQ,QAEzCC,WAAY6S,EAAKP,MAAM5N,KAAK1E,WAC5B61B,SAAShjB,EAAKP,MAAM5N,KAAKzE,YAAYC,MACrCi5B,eAAgBtmB,EAAKP,MAAM5N,KAAKzE,YAAYE,YAC5C21B,YAAajjB,EAAKP,MAAM5N,KAAKzE,YAAYM,SACzCw1B,QAASljB,EAAKP,MAAM5N,KAAKzE,YAAYO,KACrC44B,UAAWvmB,EAAKP,MAAM5N,KAAKzE,YAAYQ,WAEvCE,UAAWkS,EAAKP,MAAM5N,KAAK/D,UAC3B04B,gBAAiBxmB,EAAKP,MAAM5N,KAAK9D,YAAYf,iBAGpD2T,KAAK,SAACC,GAECA,EAASjD,KAAKa,SACdL,GAAM,UAAW,mCAAoC,qCACrDsK,WAAW,WACPzI,EAAKc,SAAS,CACVhS,OAAQ8R,EAASjD,KAAK7O,UAE3B,MAGHqP,GAAM,QAAS,SAAUyC,EAASjD,KAAKkD,WAE5CE,MAAM,SAACP,GAENrC,GAAM,QAAS,SAAU,mBA5C7B6B,EAAK3P,MAAQ,CACTvB,OAAQ,MAHEkR,yEAmDd,OAAGhD,KAAK3M,MAAMvB,OACHuF,EAAAC,EAAAC,cAAC0M,EAAA,EAAD,CAAUC,GAAE,4BAAA5P,OAA8B0L,KAAK3M,MAAMvB,UAIxDuF,EAAAC,EAAAC,cAAA,WACKyI,KAAKyC,MAAM5N,KAAK1E,WACbkH,EAAAC,EAAAC,cAAA,OAAKsN,MAAO,CAAChL,eAAgB,SACzBxC,EAAAC,EAAAC,cAACgb,GAAA,EAAD,CACIzH,KAAK,QACLza,MAAM,gBACNoiB,OAAQ,EACRoP,OAAO,WACP9U,UAAU,GAEV1V,EAAAC,EAAAC,cAACgb,GAAA,EAAajO,KAAd,CAAmB4L,KAAM,EAAG3L,MAAM,aAC7BvE,KAAKyC,MAAM5N,KAAKzE,YAAYC,OAGjCgH,EAAAC,EAAAC,cAACgb,GAAA,EAAajO,KAAd,CACI4L,KAAM,EACN3L,MAAM,kBACNM,MAAO,CAAChL,eAAgB,SAEvB4vB,KAAWzpB,KAAKyC,MAAM5N,KAAKzE,YAAYE,cAG5C+G,EAAAC,EAAAC,cAACgb,GAAA,EAAajO,KAAd,CAAmB4L,KAAM,EAAG3L,MAAM,eAAeM,MAAO,CAAChL,eAAgB,SACpEmG,KAAKyC,MAAM5N,KAAKzE,YAAYM,UAGjC2G,EAAAC,EAAAC,cAACgb,GAAA,EAAajO,KAAd,CAAmB4L,KAAM,EAAG3L,MAAM,WAAWM,MAAO,CAAChL,eAAgB,SAChEmG,KAAKyC,MAAM5N,KAAKzE,YAAYO,MAGjC0G,EAAAC,EAAAC,cAACgb,GAAA,EAAajO,KAAd,CAAmB4L,KAAM,EAAG3L,MAAM,cAAcM,MAAO,CAAChL,eAAgB,SACpExC,EAAAC,EAAAC,cAACmvB,GAAA,aAAD,CACIK,YAAY,EACZJ,cAAe3mB,KAAKyC,MAAM5N,KAAKzE,YAAYQ,WAC3Ck2B,QAAS,SAAAplB,GAAK,OAAI0Y,QAAQC,IAAI3Y,OAItCrK,EAAAC,EAAAC,cAAA,aAECF,EAAAC,EAAAC,cAAA,YAGbF,EAAAC,EAAAC,cAAC2C,GAAA,EAAD,MAEA7C,EAAAC,EAAAC,cAACmyB,GAAD,CAAO9c,MAAO,EAAG/H,MAAO,CAACgI,UAAW,WAApC,uBAEC7M,KAAKyC,MAAM5N,KAAKnF,gBAAgBM,cAAc+H,IAAI,SAACuO,EAAEuI,GAClD,OAAOxX,EAAAC,EAAAC,cAACoyB,GAAD,CAAGzxB,IAAK2W,EAAE,EAAGhH,IAAKvB,EAAG8gB,GAAIvY,EAAE,MAEtCxX,EAAAC,EAAAC,cAAA,OAAKsN,MAAO,CAACvC,MAAM,OAAOjM,QAAQ,SAC9BgB,EAAAC,EAAAC,cAACyN,GAAA,QAAD,CAAQH,MAAO,CAAC8jB,MAAM,SAAUh4B,KAAK,UAAUka,QAAS7K,KAAKqpB,YAA7D,wBA5GQlkB,IAAMC,WAuHhC6e,GAAkB,SAAA5wB,GAAK,MAAK,CAC9BwB,KAAOxB,EAAMwB,OAGF2Q,eAAQye,GAAgB,KAAxBze,CAA8B4jB,IA0C7C,IAAIO,GAAInkB,YAAQye,GAAgB,KAAxBze,CAxCR,SAAsB/C,GAClB,IAAIoF,EAAMpF,EAAMoF,IACZuf,EAAK3kB,EAAM2kB,GACXwC,EAAMnnB,EAAM5N,KAAKhE,iCAAiCg5B,OAAO,SAACC,GAC1D,OAAOA,EAAKjiB,KAAOA,IAKnBkiB,EAAK,CAAC,IAAK,IAAK,IAAK,IAAK,KAE9B,OACI1yB,EAAAC,EAAAC,cAAA,OAAKsN,MAAO,CAAE9K,aAAc,SACxB1C,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKsN,MAAO,CAAEvC,MAAO,SACjBjL,EAAAC,EAAAC,cAAA,KAAGsN,MAAO,CAAE8jB,MAAO,SAAnB,gBAA2CvB,EAA3C,KACA/vB,EAAAC,EAAAC,cAAA,KAAGsN,MAAO,CAAE8jB,MAAO,UAAnB,UAAsCiB,EAAI,GAAG/Z,YAEjDxY,EAAAC,EAAAC,cAAA,OAAKsN,MAAO,CAAExO,QAAS,aACnBgB,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAC8b,GAAD,KACKuW,EAAI,GAAGn1B,MAEXm1B,EAAI,GAAGla,QAAUrY,EAAAC,EAAAC,cAAA,OAAKuD,IAAI,WAAWF,IAAKgvB,EAAI,GAAGla,UAAc,OAGxErY,EAAAC,EAAAC,cAACyY,GAAA,QAAD,KACK4Z,EAAI,GAAGv1B,QAAQ0D,IAAI,SAACuO,EAAGuI,GACpB,OACIxX,EAAAC,EAAAC,cAAC0Y,GAAA,QAAD,CAAK/X,IAAK2W,EAAGqB,KAAM,GAAIrL,MAAO,CAAExO,QAAS,aACrCgB,EAAAC,EAAAC,cAAA,SAAIwyB,EAAGlb,GAAP,OADJ,IACsBxX,EAAAC,EAAAC,cAAC8b,GAAD,KAAW/M,EAAEgJ,SAC9BhJ,EAAEiJ,OAASlY,EAAAC,EAAAC,cAAA,OAAKuD,IAAI,SAASF,IAAK0L,EAAEiJ,SAAa,YCzJtEya,GAASC,KAATD,KACA3d,GAAU7T,KAAV6T,MAED6d,kMAEClqB,KAAKyC,MAAM4D,0DAGX,IAAI8jB,EAAW,GAkBf,OAfIA,EADgC,IAAhCnqB,KAAKyC,MAAM5N,KAAKrF,YACP6H,EAAAC,EAAAC,cAAC6yB,GAAD,MAE4B,IAAhCpqB,KAAKyC,MAAM5N,KAAKrF,YACZ6H,EAAAC,EAAAC,cAAC8yB,GAAD,MAE4B,IAAhCrqB,KAAKyC,MAAM5N,KAAKrF,YACV6H,EAAAC,EAAAC,cAAC+yB,GAAD,MAE0B,IAAhCtqB,KAAKyC,MAAM5N,KAAKrF,YACZ6H,EAAAC,EAAAC,cAACgzB,GAAD,MAGAlzB,EAAAC,EAAAC,cAACizB,GAAD,MAITnzB,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKsN,MAAO,CAACxO,QAAQ,oBAAoBiM,MAAM,OAAOuK,UAAU,WAC5DxV,EAAAC,EAAAC,cAACkzB,GAAD,CAAO7d,MAAO,GAAd,0BAEJvV,EAAAC,EAAAC,cAAC2sB,GAAA,EAAD,CAAOvsB,UAAU,uBAAuBkd,QAAS7U,KAAKyC,MAAM5N,KAAKrF,aAC5D00B,GAAMnsB,IAAI,SAAAE,GAAI,OACXZ,EAAAC,EAAAC,cAACyyB,GAAD,CAAM9xB,IAAKD,EAAK5H,MAAOA,MAAO4H,EAAK5H,WAG3CgH,EAAAC,EAAAC,cAAA,OAAKI,UAAU,wBACVwyB,WAlCE/kB,aA6CRI,eAJS,SAAAnS,GAAK,MAAK,CAC9BwB,KAAOxB,EAAMwB,OAGsB,CACnCusB,cACA/a,2BAFWb,CAGZ0kB,qBCAYxvB,OAjEf,SAAiB+H,GACf,IAAMioB,EAAW,CACfr0B,QAAS,WACTqe,SAAU,OACViW,WAAY,OACZtxB,OAAQ,OAGV,OACEhC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,oBAAkBqzB,IAAI,kBAEpBvzB,EAAAC,EAAAC,cAAA,aAAWqV,MAAM,KACfvV,EAAAC,EAAAC,cAACyN,GAAA,QAAD,CAAQH,MAAO6lB,EAAU/5B,KAAK,WAC5B0G,EAAAC,EAAAC,cAAA,KAAGI,UAAU,qBAIjBN,EAAAC,EAAAC,cAAA,eACEF,EAAAC,EAAAC,cAACyN,GAAA,QAAD,CAAQH,MAAO6lB,EAAU/5B,KAAK,WAC5B0G,EAAAC,EAAAC,cAAA,KAAGI,UAAU,kBAIjBN,EAAAC,EAAAC,cAAA,iBACEF,EAAAC,EAAAC,cAACyN,GAAA,QAAD,CAAQH,MAAO6lB,EAAU/5B,KAAK,WAC5B0G,EAAAC,EAAAC,cAAA,KAAGI,UAAU,oBAIjBN,EAAAC,EAAAC,cAAA,gBACEF,EAAAC,EAAAC,cAACyN,GAAA,QAAD,CAAQH,MAAO6lB,EAAU/5B,KAAK,WAC5B0G,EAAAC,EAAAC,cAAA,KAAGI,UAAU,yBAIjBN,EAAAC,EAAAC,cAAA,eACEF,EAAAC,EAAAC,cAACyN,GAAA,QAAD,CAAQH,MAAO6lB,EAAU/5B,KAAK,WAC5B0G,EAAAC,EAAAC,cAAA,KAAGI,UAAU,kBAIjBN,EAAAC,EAAAC,cAAA,gBACEF,EAAAC,EAAAC,cAACyN,GAAA,QAAD,CAAQH,MAAO6lB,EAAU/5B,KAAK,WAC5B0G,EAAAC,EAAAC,cAAA,KAAGI,UAAU,mBAIjBN,EAAAC,EAAAC,cAAA,yBACEF,EAAAC,EAAAC,cAACyN,GAAA,QAAD,CAAQH,MAAO6lB,EAAU/5B,KAAK,WAC5B0G,EAAAC,EAAAC,cAAA,KAAGI,UAAU,qBAIjBN,EAAAC,EAAAC,cAAA,uBACEF,EAAAC,EAAAC,cAACyN,GAAA,QAAD,CAAQH,MAAO6lB,EAAU/5B,KAAK,WAC5B0G,EAAAC,EAAAC,cAAA,KAAGI,UAAU,wBChCnBkzB,eACF,SAAAA,EAAYpoB,GAAM,IAAAO,EAAA,OAAAvP,OAAAsM,EAAA,EAAAtM,CAAAuM,KAAA6qB,IACd7nB,EAAAvP,OAAAwP,GAAA,EAAAxP,CAAAuM,KAAAvM,OAAAyP,GAAA,EAAAzP,CAAAo3B,GAAA1nB,KAAAnD,KAAMyC,KAeVW,aAAe,SAAAC,GACXA,EAAEC,iBACFN,EAAKP,MAAMJ,KAAKuF,wBAAwB,SAACpE,EAAKC,GAErCD,GACD7D,GAAW,CACPe,IAAItF,GAAK+C,uBACTwC,KAAK,CACDtQ,MAAMoT,EAAOpT,MACbipB,UAAW7V,EAAO6V,UAClBwR,SAASrnB,EAAOqnB,SAChBjY,WAAWpP,EAAOoP,WAClBkY,UAAUtnB,EAAOsnB,UACjBC,YAAavnB,EAAOunB,eAG3BrnB,KAAK,SAACC,GAKH,GAJAZ,EAAKc,SAAS,CACV0L,QAAO,KAGR5L,EAASjD,KAAKa,QAQb,OAFAwB,EAAKP,MAAMmmB,gCAA+B,GAC1C5lB,EAAKP,MAAMJ,KAAK0N,cACT5O,GAAM,UAAU,WAAWyC,EAASjD,KAAKkD,SAPhDb,EAAKP,MAAMmmB,gCAA+B,GAC1CznB,GAAM,UAAU,UAAWyC,EAASjD,KAAKkD,SACzCb,EAAKP,MAAMomB,6BAQlB9kB,MAAM,SAACrC,GAIJ,OAFAsB,EAAKP,MAAMJ,KAAK0N,cAET5O,GAAM,QAAQ,SAAS,qBAlD1C6B,EAAK3P,MAAQ,CACTyT,gBAAgB,EAChB0I,QAAQ,EACRlf,YAAa,IAEjB0S,EAAK4kB,aAAe5kB,EAAK4kB,aAAaqD,KAAlBx3B,OAAAy3B,GAAA,EAAAz3B,CAAAuP,IAPNA,6EAWLuW,GACTvZ,KAAK8D,SAAS,CAACxT,YAAaipB,EAAM7O,OAAOxD,yCA8CpC,IACGlD,EAAsBhE,KAAKyC,MAAMJ,KAAjC2B,kBACAuC,EAAWC,WAAXD,OACAE,EAAaC,WAAbD,SAER,OACIpP,EAAAC,EAAAC,cAACuhB,EAAA,SAAD,KACIzhB,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAC4M,GAAA,QAAD,CAAMC,SAAUpE,KAAKoD,cACjB/L,EAAAC,EAAAC,cAACyY,GAAA,QAAD,KACI3Y,EAAAC,EAAAC,cAAC0Y,GAAA,QAAD,CAAKC,KAAM,IACP7Y,EAAAC,EAAAC,cAAC4M,GAAA,QAAKG,KAAN,CAAWC,MAAM,gBAAgBC,aAAW,GACvCR,EAAkB,QAAS,CACpBS,MAAO,CAAC,CAAEC,UAAU,EAAMb,QAAS,gCAD1CG,CAGG3M,EAAAC,EAAAC,cAACoN,GAAA,QAAD,UAMhBtN,EAAAC,EAAAC,cAACyY,GAAA,QAAD,KACI3Y,EAAAC,EAAAC,cAAC0Y,GAAA,QAAD,CAAKC,KAAM,IACP7Y,EAAAC,EAAAC,cAAC4M,GAAA,QAAKG,KAAN,CAAWC,MAAM,oBAAoBC,aAAW,GAC3CR,EAAkB,YAAa,CAC5BS,MAAO,CAAC,CAAEC,UAAU,EAAMb,QAAS,2BADtCG,CAGG3M,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAC4zB,GAAD,MACA9zB,EAAAC,EAAAC,cAACkP,EAAD,CACIxV,GAAG,iBACHkY,KAAM,EACNF,SAAUjJ,KAAK4nB,oBAQvCvwB,EAAAC,EAAAC,cAACyY,GAAA,QAAD,KACI3Y,EAAAC,EAAAC,cAAC0Y,GAAA,QAAD,CAAKC,KAAM,IACP7Y,EAAAC,EAAAC,cAAC8b,GAAD,KAAWrT,KAAK3M,MAAM/C,eAI9B+G,EAAAC,EAAAC,cAACyY,GAAA,QAAD,KACI3Y,EAAAC,EAAAC,cAAC0Y,GAAA,QAAD,CAAKC,KAAM,IACP7Y,EAAAC,EAAAC,cAAC4M,GAAA,QAAKG,KAAN,CAAWC,MAAM,eAAeC,aAAW,GACtCR,EAAkB,cAAe,CAC9BS,MAAO,CAAC,CAAEC,UAAU,EAAMb,QAAS,gCADtCG,CAGG3M,EAAAC,EAAAC,cAACgZ,GAAA,EAAD,CAAa9H,IAAK,EAAG5D,MAAO,CAAEvC,MAAO,cAMrDjL,EAAAC,EAAAC,cAACyY,GAAA,QAAD,KACI3Y,EAAAC,EAAAC,cAAC0Y,GAAA,QAAD,CAAKC,KAAM,IACP7Y,EAAAC,EAAAC,cAAC4M,GAAA,QAAKG,KAAN,CAAWC,MAAM,aAAaC,aAAW,GACpCR,EAAkB,YAAa,CAC5BS,MAAO,CAAC,CAAEC,UAAU,EAAMb,QAAS,8BADtCG,CAGG3M,EAAAC,EAAAC,cAACgZ,GAAA,EAAD,CAAa9H,IAAK,EAAG5D,MAAO,CAAEvC,MAAO,cAMrDjL,EAAAC,EAAAC,cAACyY,GAAA,QAAD,KACI3Y,EAAAC,EAAAC,cAAC0Y,GAAA,QAAD,CAAKC,KAAM,IACP7Y,EAAAC,EAAAC,cAAC4M,GAAA,QAAKG,KAAN,CAAWC,MAAM,aAAaC,aAAW,GACpCR,EAAkB,aAAc,CAC7BS,MAAO,CAAC,CAAEC,UAAU,EAAMb,QAAS,8BADtCG,CAGG3M,EAAAC,EAAAC,cAAC2Q,GAAA,QAAD,CACIrD,MAAO,CAAEvC,MAAM,QACfwC,YAAY,qBAEZzN,EAAAC,EAAAC,cAACgP,EAAD,CAAQW,MAAM,QAAd,QACA7P,EAAAC,EAAAC,cAACgP,EAAD,CAAQW,MAAM,UAAd,UACA7P,EAAAC,EAAAC,cAACgP,EAAD,CAAQW,MAAM,QAAd,aAOpB7P,EAAAC,EAAAC,cAACyY,GAAA,QAAD,KACI3Y,EAAAC,EAAAC,cAAC0Y,GAAA,QAAD,CAAKC,KAAM,IACP7Y,EAAAC,EAAAC,cAAC4M,GAAA,QAAKG,KAAN,CAAWC,MAAM,WAAWC,aAAW,GAClCR,EAAkB,WAAY,CACvBS,MAAO,CAAC,CAAEC,UAAU,EAAMb,QAAS,oBAD1CG,CAGG3M,EAAAC,EAAAC,cAACoN,GAAA,QAAD,UAMhBtN,EAAAC,EAAAC,cAACyY,GAAA,QAAD,KACI3Y,EAAAC,EAAAC,cAAC0Y,GAAA,QAAD,CAAKC,KAAM,IACP7Y,EAAAC,EAAAC,cAAC4M,GAAA,QAAKG,KAAN,KACIjN,EAAAC,EAAAC,cAACyN,GAAA,QAAD,CACIrU,KAAK,UACLsU,SAAS,SACTyL,SAAU1Q,KAAK3M,MAAMyT,eACrBqG,QAASnN,KAAK3M,MAAMmc,OACpBtK,OAAK,GALT,gCAnKVE,aA6LpBuL,GAAkBrL,WAAKC,OAAO,CAAEhT,KAAM,eAApB+S,CAAqCulB,IAE9CrlB,eARS,SAAAnS,GAAK,MAAK,CAC9Be,QAASf,EAAMe,QACfT,MAAON,EAAMM,MACbwB,OAAQ9B,EAAM8B,SAKsB,CACpCyzB,kCACAC,6BAFWrjB,CAGZmL,IC9MKe,GAAYC,KAAZD,QACArF,GAAgB7T,KAAhB6T,MACA5F,IADgBjO,KAATwf,KACMtR,WAAbD,UAqOOmL,GAnOS,SAACnP,GAAU,IAAAyV,EACLC,mBAAS,CAC/BlnB,GAAIwR,EAAMxR,GACVkc,SAAS,EACTnM,QAAS,KAJkBwX,EAAA/kB,OAAAglB,GAAA,EAAAhlB,CAAAykB,EAAA,GACxB7kB,EADwBmlB,EAAA,GACjByG,EADiBzG,EAAA,GAAAG,EAOCR,mBAAS,IAPVS,EAAAnlB,OAAAglB,GAAA,EAAAhlB,CAAAklB,EAAA,GAOxBN,EAPwBO,EAAA,GAOdwS,EAPcxS,EAAA,GAUzByS,EAAa5oB,EAAMxR,GAVMq6B,EAYCnT,mBAAS,CACrChL,SAAS,EACTzL,MAAO,GACP2W,SAAU,GACVkT,UAAW,GACX5mB,MAAO,GACP6mB,OAAQ,KAlBmBC,EAAAh4B,OAAAglB,GAAA,EAAAhlB,CAAA63B,EAAA,GAYxBI,EAZwBD,EAAA,GAYdE,EAZcF,EAAA,GAqD/BtM,oBAAU,WA/BNxf,GAAW,CACPe,IAAItF,GAAKiD,4BACTsC,KAAK,CACD0qB,WAAYh4B,EAAMpC,MAGzB0S,KAAK,SAACC,GACH,IAAGA,EAASjD,KAAKa,QAgBb,OAAOL,GAAM,UAAU,WAAWyC,EAASjD,KAAKkD,SAfhDunB,EAAYxnB,EAASjD,KAAK0X,UAC1BsT,EAAYl4B,OAAAC,EAAA,EAAAD,CAAA,GACLJ,EADI,CAEPk4B,UAAW3nB,EAASjD,KAAK4qB,aAG7B9f,WAAW,WACPwT,EAASxrB,OAAAC,EAAA,EAAAD,CAAA,GACFJ,EADC,CAEJ8Z,SAAS,MAEd,OAOVpJ,MAAM,SAACrC,GACJ,OAAOP,GAAM,QAAQ,SAAS,mBAMnC,IAEH,IAoFMyqB,EAAmB,SAAAr5B,GAAI,OAAI,SAAAgnB,GAC7BoS,EAAYl4B,OAAAC,EAAA,EAAAD,CAAA,GAAKi4B,EAANj4B,OAAAuG,EAAA,EAAAvG,CAAA,GAAiBlB,EAAOgnB,EAAM7O,OAAOxD,WAGpD,OACI7P,EAAAC,EAAAC,cAACuhB,EAAA,SAAD,KACIzhB,EAAAC,EAAAC,cAACya,GAAA,EAAD,CAAU7E,QAAS9Z,EAAM8Z,QAAS8E,QAAM,EAAC/P,QAAM,GAC3C7K,EAAAC,EAAAC,cAAC2a,GAAA,EAAD,CAAMC,iBAAiB,IAAIlJ,SAAU,SAAC5F,MAIlChM,EAAAC,EAAAC,cAACs0B,GAAD,CAASzZ,IAAK/a,EAAAC,EAAAC,cAAA,YAAMF,EAAAC,EAAAC,cAACrJ,EAAA,QAAD,CAAMyC,KAAK,SAAjB,cAA6CuH,IAAI,KAC3Db,EAAAC,EAAAC,cAACgb,GAAA,EAAD,CACIxF,UAAQ,EACR1c,MAAM,GACNmiB,QAAM,EACN1H,KAAK,QACL2H,OAAQ,CAAEC,IAAK,EAAGC,GAAI,EAAGC,GAAI,EAAGva,GAAI,EAAGD,GAAI,EAAGD,GAAI,IAElDd,EAAAC,EAAAC,cAACgb,GAAA,EAAajO,KAAd,CAAmBC,MAAM,eAAelR,EAAMpC,IAE9CoG,EAAAC,EAAAC,cAACgb,GAAA,EAAajO,KAAd,CAAmBC,MAAM,qBACrBlN,EAAAC,EAAAC,cAAC8b,GAAD,KACKgF,EAASiB,cAS1BjiB,EAAAC,EAAAC,cAACs0B,GAAD,CAASzZ,IAAK/a,EAAAC,EAAAC,cAAA,YAAMF,EAAAC,EAAAC,cAACrJ,EAAA,QAAD,CAAMyC,KAAK,SAAjB,aAA4CuH,IAAI,KAC9Db,EAAAC,EAAAC,cAAA,OAAKI,UAAU,8DACXN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,YACXN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,cACXN,EAAAC,EAAAC,cAAA,QAAMI,UAAU,eAAhB,SACAN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,eACXN,EAAAC,EAAAC,cAACu0B,GAAD,CACI3iB,KAAM,EACNF,SAAU2iB,EAAiB,cAM3Cv0B,EAAAC,EAAAC,cAAA,OAAKI,UAAU,YACXN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,cACXN,EAAAC,EAAAC,cAAA,QAAMI,UAAU,eAAhB,UACAN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,eACXN,EAAAC,EAAAC,cAACu0B,GAAD,CACI3iB,KAAM,EACNF,SAAU2iB,EAAiB,eAM3Cv0B,EAAAC,EAAAC,cAAA,OAAKI,UAAU,YACXN,EAAAC,EAAAC,cAACyN,GAAA,QAAD,CACIrU,KAAK,UACLka,QAxFX,SAAC0O,GAGd,IAAIwS,EAFJxS,EAAMjW,iBAINyoB,EAAW,CACPC,aAAcN,EAAS/mB,MACvBsnB,cAAeP,EAASF,QAG5B7rB,GAAW,CACPe,IAAG,GAAApM,OAAI8G,GAAKkD,uBAAT,KAAAhK,OAAmC+2B,GACtC1qB,KAAMorB,IAETpoB,KAAK,SAACC,GACH,IAAGA,EAASjD,KAAKa,QAIb,OAAOL,GAAM,UAAU,WAAWyC,EAASjD,KAAKkD,SAHhD1C,GAAM,UAAU,UAAWyC,EAASjD,KAAKkD,WAMhDE,MAAM,SAACrC,GACJ,OAAOP,GAAM,QAAQ,SAAS,8BA+Dd,SASR9J,EAAAC,EAAAC,cAAC2C,GAAA,EAAD,MACA7C,EAAAC,EAAAC,cAAA,WAEAF,EAAAC,EAAAC,cAAA,OAAKI,UAAU,aACXN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,aACXN,EAAAC,EAAAC,cAAA,MAAII,UAAU,mCAvJb,WACrB,GAAI+zB,EAASH,UAAUh4B,OAAQ,CAC3B,IAAIsb,EAAI,EACR,OAAO6c,EAASH,UAAUxzB,IAAI,SAAC2zB,GAE3B,OAAOr0B,EAAAC,EAAAC,cAAA,MACCI,UAAU,YACVkN,MAAO,CAACqnB,WAAY,OAAQvD,MAAO,QAASrvB,UAAW,QACvDpB,IAAKwzB,EAASz6B,IAElBoG,EAAAC,EAAAC,cAAA,OAAKI,UAAU,OAEXN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,YACXN,EAAAC,EAAAC,cAAA,QAAMI,UAAU,eAAhB,aAAyCkX,MAG7CxX,EAAAC,EAAAC,cAAA,OAAKI,UAAU,YACXN,EAAAC,EAAAC,cAAA,kBADJ,IACiBF,EAAAC,EAAAC,cAAA,WACbF,EAAAC,EAAAC,cAACu0B,GAAD,CACI5kB,MAAOwkB,EAAS/mB,MAChB+L,SAAS,UAIjBrZ,EAAAC,EAAAC,cAAA,OAAKI,UAAU,YACXN,EAAAC,EAAAC,cAAA,mBADJ,IACkBF,EAAAC,EAAAC,cAAA,WACdF,EAAAC,EAAAC,cAACu0B,GAAD,CACI5kB,MAAOwkB,EAASF,OAChB9a,SAAS,UAIjBrZ,EAAAC,EAAAC,cAAA,OAAKI,UAAU,YACXN,EAAAC,EAAAC,cAAA,mBADJ,IACkBF,EAAAC,EAAAC,cAAA,WACdF,EAAAC,EAAAC,cAACyN,GAAA,QAAD,CACIrU,KAAK,UACL4b,MAAM,SACNre,KAAK,gBAQzB,OAAOmJ,EAAAC,EAAAC,cAAA,WACHF,EAAAC,EAAAC,cAAC40B,GAAD,CAAOvf,MAAO,EAAG/H,MAAO,CAAEqnB,WAAY,SAAtC,4BA0GiBE,WCxElB5mB,eANS,SAAAnS,GAAK,MAAK,CAC9Be,QAASf,EAAMe,QACfT,MAAON,EAAMM,MACbwB,OAAQ9B,EAAM8B,SAGqB,CACnCyzB,kCACAC,6BAFWrjB,CAtJM,SAAC/C,GAAU,IAAAyV,EAEFC,mBAAS,CAC/B3E,kBAAoB,KACpBC,6BAA4B,IAJJ+E,EAAA/kB,OAAAglB,GAAA,EAAAhlB,CAAAykB,EAAA,GAErB7kB,EAFqBmlB,EAAA,GAEdyG,EAFczG,EAAA,GA0B5B2G,oBAAU,WACN1c,EAAMomB,4BACP,IAEH,IAIMtb,EAAW,SAAAlK,GACbZ,EAAMmmB,gCAA+B,IAQnCtc,EAAU,CACZ,CACIjc,MAAO,gBACP2Z,UAAW,QACX9R,IAAK,QACLoK,MAAO,OAEX,CACIjS,MAAO,WACP2Z,UAAW,WACX9R,IAAK,WACLoK,MAAO,OAEX,CACIjS,MAAO,aACP2Z,UAAW,aACX9R,IAAK,aACLoK,MAAO,OAEX,CACIjS,MAAO,SACP6H,IAAK,MACL8R,UAAW,MACX1H,MAAO,MACPqJ,OAAQ,SAACzT,GAAD,OACJb,EAAAC,EAAAC,cAACyN,GAAA,QAAD,CACIrU,KAAK,UACL4b,MAAM,SACN1B,QAAS,kBA/DC5Z,EA+DoBiH,OA9D1C+mB,EAAS,SAACzQ,EAAcC,GACtB,MAAM,CACJ+E,kBAAkBviB,EAClBwiB,6BAA4B,KAJX,IAACxiB,GAgEV/C,KAAK,mBAMrB,OACImJ,EAAAC,EAAAC,cAACuhB,EAAA,SAAD,KACIzhB,EAAAC,EAAAC,cAAA,OAAKI,UAAU,aACXN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,OACXN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,YACXN,EAAAC,EAAAC,cAACyN,GAAA,QAAD,CACIrU,KAAK,UACLzC,KAAK,OACL2W,MAAO,CAAC9K,aAAa,QACrB8Q,QAzDN,SAACpb,GACfgT,EAAMmmB,gCAA+B,KAoDrB,4BAUJvxB,EAAAC,EAAAC,cAAA,OAAKI,UAAU,eAIvBN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,aACXN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,OACXN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,aACXN,EAAAC,EAAAC,cAACuV,GAAA,EAAD,CACIC,UAAU,EACVT,QAASA,EACTU,WAAYvK,EAAMtN,OAAOtG,kBACzBic,KAAK,SACLmC,WAAY,CAAEC,SAAU,GACxBC,QAAS1K,EAAMtN,OAAOvG,qBACtBwe,OAAO,WAOvB/V,EAAAC,EAAAC,cAAC8V,GAAA,EAAD,CACIhd,MAAM,sBACNwU,MAAO,CAAC4I,IAAK,OAAOpX,QAAQ,MAAMJ,gBAAgB,oBAClDqM,MAAM,MACNkJ,QAAS/I,EAAMtN,OAAOjC,sBACtBoa,KAAM,kBAAMC,GACZC,SAlFS,SAAAnK,GACjBZ,EAAMmmB,gCAA+B,IAkF7B3xB,OAAQ,GACRyW,gBAAgB,GAEhBrW,EAAAC,EAAAC,cAAC80B,GAAD,OAIJh1B,EAAAC,EAAAC,cAAC8V,GAAA,EAAD,CACI7B,QAASnY,EAAMogB,4BACfpjB,MAAM,mBACNmd,SAlHc,WACtByR,EAAS,SAACzQ,EAAcC,GACtB,MAAM,CACJ+E,kBAAkB,KAClBC,6BAA4B,MA+GxB5O,MAAO,CAAC4I,IAAK,OAAOpX,QAAQ,MAAMJ,gBAAgB,oBAClDqM,MAAM,MACNoL,gBAAgB,EAChBzW,OAAQ,IAERI,EAAAC,EAAAC,cAAC+0B,GAAD,CAAiBr7B,GAAIoC,EAAMmgB,wDC1G5BhO,eAJS,SAAAnS,GAAK,MAAK,CAC9Be,QAAUf,EAAMe,UAGmB,CACnCia,qBADW7I,CAnCD,SAAC/C,GAMX,OAJA0c,oBAAU,WACN1c,EAAM4L,oBACP,IAGChX,EAAAC,EAAAC,cAACuhB,EAAA,SAAD,KACIzhB,EAAAC,EAAAC,cAAC6nB,GAAA9nB,EAAD,CACIjH,MAAM,gBACNic,QAAS,CACL,CAAEjc,MAAO,gBAAiBgvB,MAAO,OACjC,CAAEhvB,MAAO,OAAQgvB,MAAO,QACxB,CAAEhvB,MAAO,QAASgvB,MAAO,UAG7B1e,KAAM8B,EAAMrO,QAAQ9E,WAEpB+E,QAAS,CACLirB,WAAW,EACXC,cAAc,EACdC,YAAa,CACTvpB,gBAAiB,UACjB4C,MAAO,cCvBzB0zB,GAAuBjnB,WAAKC,OAAO,CAAEhT,KAAM,iBAApB+S,CAAA,SAAAknB,GAAA,SAAAC,IAAA,OAAAh5B,OAAAsM,EAAA,EAAAtM,CAAAuM,KAAAysB,GAAAh5B,OAAAwP,GAAA,EAAAxP,CAAAuM,KAAAvM,OAAAyP,GAAA,EAAAzP,CAAAg5B,GAAA/2B,MAAAsK,KAAA1M,YAAA,OAAAG,OAAAi5B,GAAA,EAAAj5B,CAAAg5B,EAAAD,GAAA/4B,OAAAk5B,EAAA,EAAAl5B,CAAAg5B,EAAA,EAAAv0B,IAAA,SAAAgP,MAAA,WAGhB,IAAA0lB,EACuC5sB,KAAKyC,MAA3C+I,EADDohB,EACCphB,QAASgC,EADVof,EACUpf,SAAUqf,EADpBD,EACoBC,SACnB7oB,EAFD4oB,EAC8BvqB,KAC7B2B,kBACR,OACE3M,EAAAC,EAAAC,cAAC8V,GAAA,EAAD,CACE7B,QAASA,EACTnb,MAAM,qBACNqc,OAAO,MACPc,SAAUA,EACVF,KAAMuf,GAENx1B,EAAAC,EAAAC,cAAC4M,GAAA,QAAD,CAAM0d,OAAO,YACXxqB,EAAAC,EAAAC,cAAC4M,GAAA,QAAKG,KAAN,CAAWC,MAAM,OAAOC,aAAW,GAChCR,EAAkB,OAAQ,CACzBS,MAAO,CAAC,CAAEC,UAAU,EAAMb,QAAS,4BADpCG,CAEE3M,EAAAC,EAAAC,cAACoN,GAAA,QAAD,QAGLtN,EAAAC,EAAAC,cAAC4M,GAAA,QAAKG,KAAN,CAAWC,MAAM,QAAQC,aAAW,GACjCR,EAAkB,QAAS,CAC1BS,MAAO,CACH,CACIC,UAAU,EACVb,QAAS,2BAEb,CACIlT,KAAM,QACNkT,QAAS,oCARlBG,CAWE3M,EAAAC,EAAAC,cAACoN,GAAA,QAAD,cAjCY8nB,EAAA,CAEbtnB,IAAMC,YAyChB0nB,eACJ,SAAAA,EAAYrqB,GAAM,IAAAO,EAAA,OAAAvP,OAAAsM,EAAA,EAAAtM,CAAAuM,KAAA8sB,IAChB9pB,EAAAvP,OAAAwP,GAAA,EAAAxP,CAAAuM,KAAAvM,OAAAyP,GAAA,EAAAzP,CAAAq5B,GAAA3pB,KAAAnD,KAAMyC,KAMRid,UAAY,WACV1c,EAAKc,SAAS,CAAE0H,SAAS,KARTxI,EAWlBma,aAAe,WACbna,EAAKc,SAAS,CAAE0H,SAAS,KAZTxI,EAgBlB+pB,aAAe,WAAM,IACX1qB,EAASW,EAAKgqB,QAAQvqB,MAAtBJ,KAERA,EAAKkB,eAAe,SAACC,EAAKC,GACnBD,GACH7D,GAAW,CACPe,IAAKtF,GAAK2D,UACV4B,KAAM,CACFpO,KAAMkR,EAAOlR,KACbmR,MAAOD,EAAOC,SAGrBC,KAAK,SAACC,GACAA,EAASjD,KAAKa,UACfL,GAAM,UAAW,UAAWyC,EAASjD,KAAKkD,SAC1CxB,EAAK0N,cACL/M,EAAKP,MAAM4L,mBACXrL,EAAKc,SAAS,CAAE0H,SAAS,OAG9BzH,MAAM,SAACrC,GACJ,OAAOP,GAAM,QAAQ,SAAS,qBArCtB6B,EA2ClBiqB,YAAc,SAAAD,GACZhqB,EAAKgqB,QAAUA,GA1CfhqB,EAAK3P,MAAM,CACTmY,SAAS,GAHKxI,yEAgDhB,OACE3L,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACyN,GAAA,QAAD,CAAQrU,KAAK,UAAUka,QAAS7K,KAAK0f,WAArC,oBAIAroB,EAAAC,EAAAC,cAACg1B,GAAD,CACEW,oBAAqBltB,KAAKitB,YAC1BzhB,QAASxL,KAAK3M,MAAMmY,QACpBgC,SAAUxN,KAAKmd,aACf0P,SAAU7sB,KAAK+sB,uBA3DK5nB,IAAMC,WAmErBI,eAAQ,KAAK,CAC1B6I,qBADa7I,CAEZsnB,ICvGKzgB,YAAgB7T,KAAhB6T,OA+LO7G,IA/LShN,KAATwf,KA+LAxS,YAJS,SAAAnS,GAAK,MAAK,CAChCa,KAAOb,EAAMa,OAGyB,KAAzBsR,CA7LC,SAAC/C,GAAU,IAAAyV,EACCC,mBAAS,CACjCgV,QAAS,GACThgB,SAAS,IAHcqL,EAAA/kB,OAAAglB,GAAA,EAAAhlB,CAAAykB,EAAA,GAClB7kB,EADkBmlB,EAAA,GACXyG,EADWzG,EAAA,GAAAG,EAMOR,mBAAS,IANhBS,EAAAnlB,OAAAglB,GAAA,EAAAhlB,CAAAklB,EAAA,GAMlByU,EANkBxU,EAAA,GAMRyU,EANQzU,EAAA,GAAA0S,EAOOnT,mBAAS,GAPhBsT,EAAAh4B,OAAAglB,GAAA,EAAAhlB,CAAA63B,EAAA,GAOlBgC,EAPkB7B,EAAA,GAOR8B,EAPQ9B,EAAA,GA0DzB,OANAtM,oBAAW,WAzCTF,EAAS,CACP9R,SAAS,IAGXxN,GAAW,CACTe,IAAG,GAAApM,OAAK8G,GAAKyD,qBAEd8E,KAAK,SAACC,GACH,IAAIA,EAASjD,KAAKa,QAOhB,OAAOL,GAAM,UAAW,WAAYyC,EAASjD,KAAKkD,SANlDob,EAAS,CACPkO,QAASvpB,EAASjD,KAAKA,KACvBwM,SAAS,MAOhBpJ,MAAM,SAACrC,GACJ,OAAOP,GAAM,QAAS,SAAU,kBAKpCxB,GAAW,CACTe,IAAG,GAAApM,OAAK8G,GAAK0D,iBAEd6E,KAAK,SAACC,GACH,IAAIA,EAASjD,KAAKa,QAKhB,OAAOL,GAAM,UAAW,WAAYyC,EAASjD,KAAKkD,SAJlDwpB,EAAYzpB,EAASjD,KAAKA,MAC1B4sB,EAAY3pB,EAASjD,KAAK6T,SAM/BzQ,MAAM,SAACrC,GACN,OAAOP,GAAM,QAAS,SAAU,mBAOjC,IAID9J,EAAAC,EAAAC,cAACuhB,EAAA,SAAD,KAEEzhB,EAAAC,EAAAC,cAACi2B,GAAD,CAAO5gB,MAAO,GAAd,WACWnK,EAAMvO,KAAK5F,YAAYiE,MAGlC8E,EAAAC,EAAAC,cAAC2C,GAAA,EAAD,MAEA7C,EAAAC,EAAAC,cAAA,OAAKI,UAAU,aACbN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,OACbN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,YACbN,EAAAC,EAAAC,cAACwf,GAAA,QAAD,KACE1f,EAAAC,EAAAC,cAACk2B,GAAA,EAAD,CACEp9B,MAAM,4BACN6W,MAAOkmB,EAAS75B,WAKtB8D,EAAAC,EAAAC,cAAA,OAAKI,UAAU,YACXN,EAAAC,EAAAC,cAACwf,GAAA,QAAD,KACE1f,EAAAC,EAAAC,cAACk2B,GAAA,EAAD,CACEp9B,MAAM,2BACN6W,MAAOomB,MAKfj2B,EAAAC,EAAAC,cAAA,OAAKI,UAAU,YACXN,EAAAC,EAAAC,cAACwf,GAAA,QAAD,KACE1f,EAAAC,EAAAC,cAACk2B,GAAA,EAAD,CACEp9B,MAAM,yBACN6W,MAAO,SAOnB7P,EAAAC,EAAAC,cAAC2C,GAAA,EAAD,MAGA7C,EAAAC,EAAAC,cAAA,OAAKI,UAAU,aACbN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,OACbN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,YAAYkN,MAAO,CAAEuU,UAAW,QAASC,UAAW,WACjEhiB,EAAAC,EAAAC,cAACi2B,GAAD,CAAO5gB,MAAO,GAAd,sCACCvZ,EAAM8Z,QAAU9V,EAAAC,EAAAC,cAACm2B,GAAA,EAAD,MAEfr2B,EAAAC,EAAAC,cAACiuB,GAAA,QAAD,CACEmI,WAAW,aACX3gB,WAAYogB,EACZzF,WAAY,SAAA1vB,GAAI,OACdZ,EAAAC,EAAAC,cAACiuB,GAAA,QAAKlhB,KAAN,KACEjN,EAAAC,EAAAC,cAACiuB,GAAA,QAAKlhB,KAAKspB,KAAX,CACEv9B,MAAO4H,EAAK5H,MACZC,YAAa+G,EAAAC,EAAAC,cAAA,qCAA4BF,EAAAC,EAAAC,cAAA,cAASU,EAAK41B,eAUvEx2B,EAAAC,EAAAC,cAAC2C,GAAA,EAAD,MAEA7C,EAAAC,EAAAC,cAAA,OAAKI,UAAU,aACbN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,OACbN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,YACbN,EAAAC,EAAAC,cAACu2B,GAAD,OAEFz2B,EAAAC,EAAAC,cAAA,OAAKI,UAAU,eAMnBN,EAAAC,EAAAC,cAAA,WAEAF,EAAAC,EAAAC,cAAA,OAAKI,UAAU,aACbN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,OACbN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,aACbN,EAAAC,EAAAC,cAACw2B,GAAD,SAKN12B,EAAAC,EAAAC,cAAC2C,GAAA,EAAD,MAEA7C,EAAAC,EAAAC,cAACi2B,GAAD,CAAO5gB,MAAO,GAAd,yBAEAvV,EAAAC,EAAAC,cAAA,OAAKI,UAAU,aACbN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,OACbN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,YAAYkN,MAAO,CAAEuU,UAAW,QAASC,UAAW,WACjEhiB,EAAAC,EAAAC,cAACi2B,GAAD,CAAO5gB,MAAO,GAAd,mCAECvZ,EAAM8Z,QAAU9V,EAAAC,EAAAC,cAACm2B,GAAA,EAAD,MAEfr2B,EAAAC,EAAAC,cAACiuB,GAAA,QAAD,CACAmI,WAAW,aACX3gB,WAAY3Z,EAAM85B,QAClBxF,WAAY,SAAA1vB,GAAI,OACdZ,EAAAC,EAAAC,cAACiuB,GAAA,QAAKlhB,KAAN,KACEjN,EAAAC,EAAAC,cAACiuB,GAAA,QAAKlhB,KAAKspB,KAAX,CACE1rB,OACA7K,EAAAC,EAAAC,cAAC2K,GAAA,EAAD,CAAQtH,IAAK3C,EAAK4P,IAAImmB,MACtB39B,MAAO4H,EAAK4P,IAAIzB,MAChB9V,YAAa+G,EAAAC,EAAAC,cAAA,oCAA2BF,EAAAC,EAAAC,cAAA,cAASU,EAAK41B,mBCxL3D,SAASI,KACpB,OACI52B,EAAAC,EAAAC,cAACuhB,EAAA,SAAD,KACIzhB,EAAAC,EAAAC,cAACymB,GAAA,EAAD,CACInX,OAAO,MACPxW,MAAM,MACNkuB,SAAS,iDCcD/lB,KAAhB6T,UAAO2L,GAASxf,KAATwf,KAETkW,eACF,SAAAA,EAAYzrB,GAAM,IAAAO,EAAA,OAAAvP,OAAAsM,EAAA,EAAAtM,CAAAuM,KAAAkuB,IACdlrB,EAAAvP,OAAAwP,GAAA,EAAAxP,CAAAuM,KAAAvM,OAAAyP,GAAA,EAAAzP,CAAAy6B,GAAA/qB,KAAAnD,KAAMyC,KAQVW,aAAe,SAAAC,GACXA,EAAEC,iBAEFN,EAAKP,MAAMJ,KAAKuF,wBAAwB,SAACpE,EAAKC,GACrCD,GACD7D,GAAW,CACPe,IAAG,GAAApM,OAAK8G,GAAKK,aACbkF,KAAM,CACFkH,IAAK7E,EAAKP,MAAMvO,KAAK5F,YAAYuZ,IACjCC,aAAcrE,EAAOqE,aACrB5F,OAAQc,EAAK3P,MAAMwH,KACnBkN,IAAKtE,EAAO0qB,SAGnBxqB,KAAK,SAACC,GACH,IAAIA,EAASjD,KAAKa,QAId,OAAOL,GAAM,UAAW,WAAYyC,EAASjD,KAAKkD,SAHlD1C,GAAM,UAAW,UAAWyC,EAASjD,KAAKkD,WAMjDE,MAAM,SAACrC,GACJ,OAAOP,GAAM,QAAS,SAAU,qBAhC9B6B,EAuClBuE,aAAe,SAACC,GACZxE,EAAKc,SAAS,SAAC2D,EAAGC,GACd,MAAO,CACH7M,KAAO2M,EAAErZ,KAAF,GAAAmG,OAAWkT,EAAErZ,MAAO,KAC3B2Y,gBAAe,MA3CT9D,EAgDlB2E,IAAM,WACF3E,EAAKc,SAAS,CACVgD,gBAAe,KAhDnB9D,EAAK3P,MAAM,CACPwH,KAAMmI,EAAKP,MAAMvO,KAAK5F,YAAY4T,OAClCsN,QAAO,EACP1I,gBAAe,GALL9D,yEAsDT,IACGgB,EAAsBhE,KAAKyC,MAAMJ,KAAjC2B,kBAGAyC,GADWD,WAAXD,OACaG,WAAbD,UAEJ2B,EAAqB,CACrB7V,KAAM,OACNqB,OAAM,GAAAU,OAAK8G,GAAKE,MAAVhH,OAAiB8G,GAAKiB,YAAtB,WAAA/H,OAA2CmL,GAAKC,gBACtD2I,SAAU,WAGd,OACIhR,EAAAC,EAAAC,cAACuhB,EAAA,SAAD,KACIzhB,EAAAC,EAAAC,cAAC62B,GAAD,yBACA/2B,EAAAC,EAAAC,cAAC2C,GAAA,EAAD,MAEA7C,EAAAC,EAAAC,cAAA,OAAKqD,IAAKoF,KAAKyC,MAAMvO,KAAK5F,YAAY4T,OAAQpH,IAAI,SAElDzD,EAAAC,EAAAC,cAAC2C,GAAA,EAAD,MACI7C,EAAAC,EAAAC,cAAC4M,GAAA,QAAD,CAAOC,SAAUpE,KAAKoD,cAClB/L,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACyY,GAAA,QAAD,KACI3Y,EAAAC,EAAAC,cAAC0Y,GAAA,QAAD,CAAKC,KAAM,IACP7Y,EAAAC,EAAAC,cAAC4M,GAAA,QAAKG,KAAN,CAAWC,MAAM,oBAAqBC,aAAW,GAC5CR,EAAkB,eAAgB,CAC/BiE,aAAejI,KAAKyC,MAAMvO,KAAK5F,YAAYwZ,aAC3CrD,MAAO,CAAC,CAAE6D,YAAY,KAFzBtE,CAGE3M,EAAAC,EAAAC,cAACoN,GAAA,QAAD,UAKftN,EAAAC,EAAAC,cAACyY,GAAA,QAAD,KACI3Y,EAAAC,EAAAC,cAAC0Y,GAAA,QAAD,CAAKC,KAAM,IACP7Y,EAAAC,EAAAC,cAAC4M,GAAA,QAAKG,KAAN,CAAWC,MAAM,gCAAgCC,aAAW,GACvDR,EAAkB,QAAS,CACxBiE,aAAejI,KAAKyC,MAAMvO,KAAK5F,YAAYyZ,KAD9C/D,CAGG3M,EAAAC,EAAAC,cAACkP,EAAD,CAAU0C,KAAM,QAMhC9R,EAAAC,EAAAC,cAACyY,GAAA,QAAD,KACI3Y,EAAAC,EAAAC,cAAC0Y,GAAA,QAAD,CAAKC,KAAM,GAAIrL,MAAO,CAACxO,QAAU,aAC7BgB,EAAAC,EAAAC,cAAC4M,GAAA,QAAKG,KAAN,CAAWC,MAAM,qBAChBP,EAAkB,SAAlBA,CACG3M,EAAAC,EAAAC,cAAC6R,GAAA,EAAD3V,OAAA4V,OAAA,GACQjB,EADR,CAEIkB,aAActJ,KAAK2H,IACnB4B,SAAUvJ,KAAKuH,aACfiC,UAAWxJ,KAAKuH,eAEhBlQ,EAAAC,EAAAC,cAACyN,GAAA,QAAD,KACI3N,EAAAC,EAAAC,cAACrJ,EAAA,QAAD,CAAMyC,KAAK,WADf,gBAShB0G,EAAAC,EAAAC,cAACyY,GAAA,QAAD,KACI3Y,EAAAC,EAAAC,cAAC0Y,GAAA,QAAD,CAAKC,KAAM,IACP7Y,EAAAC,EAAAC,cAAC4M,GAAA,QAAKG,KAAN,KACIjN,EAAAC,EAAAC,cAACyN,GAAA,QAAD,CACIrU,KAAK,UACLsU,SAAS,SACTyL,SAAU1Q,KAAK3M,MAAMyT,eACrBqG,QAASnN,KAAK3M,MAAMmc,OACpBtK,OAAK,GALT,eAepB7N,EAAAC,EAAAC,cAAC2C,GAAA,EAAD,cAzIEkL,aAqJhBipB,GAAU/oB,WAAKC,OAAO,CAAEhT,KAAM,eAApB+S,CAAqC4oB,IAEtC1oB,eAPS,SAAAnS,GAAK,MAAK,CAC9BM,MAAQN,EAAMM,MACdO,KAAMb,EAAMa,OAKwB,KAAzBsR,CAA+B6oB,IC/JxCC,gNACFj7B,MAAQ,CACNk7B,cAAc,KAGhBnrB,aAAe,SAAAC,GACbA,EAAEC,iBACFN,EAAKP,MAAMJ,KAAKuF,wBAAwB,SAACpE,EAAKC,GACvCD,GACH7D,GAAW,CACTe,IAAG,GAAApM,OAAK8G,GAAK6D,gBACb0B,KAAM,CACJ6tB,gBAAiB/qB,EAAOoR,QACxB4Z,YAAahrB,EAAO7C,YAGvB+C,KAAK,SAACC,GACH,IAAIA,EAASjD,KAAKa,QAKd,OAAOL,GAAM,UAAW,WAAYyC,EAASjD,KAAKkD,SAJlDb,EAAKP,MAAMJ,KAAK0N,cAChB5O,GAAM,UAAW,UAAWyC,EAASjD,KAAKkD,WAMjDE,MAAM,SAACrC,GACJ,OAAOP,GAAM,QAAS,SAAU,uBAM1C0H,kBAAoB,SAAAxF,GAAK,IACf6D,EAAU7D,EAAEqH,OAAZxD,MACRlE,EAAKc,SAAS,CAAEyqB,aAAcvrB,EAAK3P,MAAMk7B,gBAAkBrnB,OAG7DF,uBAAyB,SAACC,EAAMC,EAAOC,GAAa,IAC1C9E,EAASW,EAAKP,MAAdJ,KACJ6E,GAASA,IAAU7E,EAAK+E,cAAc,YACxCD,EAAS,iDAETA,OAIJE,uBAAyB,SAACJ,EAAMC,EAAOC,GAAa,IAC1C9E,EAASW,EAAKP,MAAdJ,KACJ6E,GAASlE,EAAK3P,MAAMk7B,cACtBlsB,EAAKkB,eAAe,CAAC,WAAY,CAAE+D,OAAO,IAE5CH,8EAGO,IACCnD,EAAsBhE,KAAKyC,MAAMJ,KAAjC2B,kBACAqI,EAAU7T,KAAV6T,MAER,OACEhV,EAAAC,EAAAC,cAACuhB,EAAA,SAAD,KACIzhB,EAAAC,EAAAC,cAAC8U,EAAD,CAAOO,MAAO,GAAd,oBACAvV,EAAAC,EAAAC,cAAC4M,GAAA,QAAD,CAAMC,SAAUpE,KAAKoD,cACjB/L,EAAAC,EAAAC,cAACyY,GAAA,QAAD,KACI3Y,EAAAC,EAAAC,cAAC0Y,GAAA,QAAD,CAAKC,KAAM,IACP7Y,EAAAC,EAAAC,cAAC4M,GAAA,QAAKG,KAAN,CAAWC,MAAM,yBAAyBC,aAAW,GAChDR,EAAkB,UAAW,CAC9BS,MAAO,CACH,CACAC,UAAU,EACVb,QAAS,uCAET,CACA8E,UAAW3I,KAAKqH,0BAPnBrD,CAUE3M,EAAAC,EAAAC,cAACoN,GAAA,QAAMI,SAAP,UAKf1N,EAAAC,EAAAC,cAACyY,GAAA,QAAD,KACI3Y,EAAAC,EAAAC,cAAC0Y,GAAA,QAAD,CAAKC,KAAM,IACP7Y,EAAAC,EAAAC,cAAC4M,GAAA,QAAKG,KAAN,CAAWC,MAAM,qBAAqBC,aAAW,GAC5CR,EAAkB,WAAY,CAC/BS,MAAO,CACH,CACAC,UAAU,EACVb,QAAS,+BAET,CACA8E,UAAW3I,KAAKqH,0BAPnBrD,CAUE3M,EAAAC,EAAAC,cAACoN,GAAA,QAAMI,SAAP,UAKf1N,EAAAC,EAAAC,cAACyY,GAAA,QAAD,KACI3Y,EAAAC,EAAAC,cAAC0Y,GAAA,QAAD,CAAKC,KAAM,IACP7Y,EAAAC,EAAAC,cAAC4M,GAAA,QAAKG,KAAN,CAAWC,MAAM,mBAAmBC,aAAW,GAC1CR,EAAkB,UAAW,CAC9BS,MAAO,CACH,CACAC,UAAU,EACVb,QAAS,iCAET,CACA8E,UAAW3I,KAAKgH,0BAPnBhD,CAUE3M,EAAAC,EAAAC,cAACoN,GAAA,QAAMI,SAAP,CAAgB6D,OAAQ5I,KAAK6I,wBAK5CxR,EAAAC,EAAAC,cAACyY,GAAA,QAAD,KACI3Y,EAAAC,EAAAC,cAAC0Y,GAAA,QAAD,CAAKC,KAAM,IACP7Y,EAAAC,EAAAC,cAAC4M,GAAA,QAAKG,KAAN,KACIjN,EAAAC,EAAAC,cAACyN,GAAA,QAAD,CAAQrU,KAAK,UAAUsU,SAAS,SAASC,OAAK,GAA9C,uBAShB7N,EAAAC,EAAAC,cAAC2C,GAAA,EAAD,cAhIgBiL,IAAMC,WAwIjBspB,GAFWppB,WAAKC,OAAO,CAAEhT,KAAM,YAApB+S,CAAkCgpB,ICzI/CK,GATE,WACb,OACIt3B,EAAAC,EAAAC,cAACuhB,EAAA,SAAD,KACIzhB,EAAAC,EAAAC,cAACq3B,GAAD,MACAv3B,EAAAC,EAAAC,cAACs3B,GAAD,iFCkBJC,GAAmCC,KAAnCD,OAAQE,GAA2BD,KAA3BC,MAAOC,GAAoBF,KAApBE,QAASC,GAAWH,KAAXG,OAE1BC,eACF,SAAAA,EAAY1sB,GAAM,IAAAO,EAAA,OAAAvP,OAAAsM,EAAA,EAAAtM,CAAAuM,KAAAmvB,IACdnsB,EAAAvP,OAAAwP,GAAA,EAAAxP,CAAAuM,KAAAvM,OAAAyP,GAAA,EAAAzP,CAAA07B,GAAAhsB,KAAAnD,KAAMyC,KAOVsE,OAAS,WACL/D,EAAKc,SAAS,CACZsrB,WAAYpsB,EAAK3P,MAAM+7B,aAVXpsB,EAclBqsB,OAAS,WACL5vB,GAAKa,cACLuf,OAAOnvB,SAASsI,KAAO,KAdvBgK,EAAK3P,MAAM,CACPi8B,gBAAiBtsB,EAAKP,MAAMvO,KAAK7F,WACjC+gC,WAAW,GAJDpsB,qFAmBE,IAAAoJ,EAAApM,KAEZI,EAAIX,GAAKC,eACVM,KAAK3M,MAAMi8B,kBAGNlvB,GAAS,cAAJA,EACTX,GAAKoB,UAAUT,GAAGuD,KAAK,SAACC,GAEpBwI,EAAK3J,MAAM1B,MAAM6C,EAASjD,KAAKzM,MAC/BkY,EAAKtI,SAAS,CACVwrB,iBAAiB,IAGrB,IAAIC,EAASnjB,EAAK3J,MAAM+sB,MAAMjwB,OAAOlL,QAEjCu1B,EAAMxd,EAAK3J,MAAMvO,KAAK1F,YAAYihC,KAAK,SAACC,EAAG7gB,GAC3C,GAAI6gB,EAAEvhC,OAAF,SAAAmG,OAAoBi7B,GACpB,OAAOG,IAIXC,EAAKvjB,EAAK3J,MAAMvO,KAAK1F,YAAYohC,QAAQhG,IAEjC,IAAR+F,EACA9P,OAAOnvB,SAASsI,KAAhB,GAAA1E,OAA0B8X,EAAK3J,MAAMvO,KAAK1F,YAAY,GAAGL,MAGzDie,EAAK3J,MAAMotB,kBAAkB/U,OAAO6U,MAEzC5rB,MAAM,SAACrC,GACNP,GAAM,UAAW,WAAY,iBAC7B1B,GAAKa,cACLuf,OAAOnvB,SAASsI,KAAO,MAI3B6mB,OAAOnvB,SAAS,sCAMpB,IAAIy5B,EAAW,KACf,GAAqC,iBAAlCnqB,KAAKyC,MAAM+sB,MAAMjwB,OAAOlL,QACvB81B,EAAW9yB,EAAAC,EAAAC,cAACu4B,GAAD,WAEV,GAAqC,iBAAlC9vB,KAAKyC,MAAM+sB,MAAMjwB,OAAOlL,QAC5B81B,EAAW9yB,EAAAC,EAAAC,cAACw4B,GAAD,WAEV,GAAqC,kBAAlC/vB,KAAKyC,MAAM+sB,MAAMjwB,OAAOlL,QAC5B81B,EAAW9yB,EAAAC,EAAAC,cAACy4B,GAAD,WAEV,GAAqC,cAAlChwB,KAAKyC,MAAM+sB,MAAMjwB,OAAOlL,QAC5B81B,EAAW9yB,EAAAC,EAAAC,cAAC04B,GAAD,WAEV,GAAqC,SAAlCjwB,KAAKyC,MAAM+sB,MAAMjwB,OAAOlL,QAC5B81B,EAAS9yB,EAAAC,EAAAC,cAAC24B,GAAD,WAER,GAAqC,YAAlClwB,KAAKyC,MAAM+sB,MAAMjwB,OAAOlL,QAC5B81B,EAAS9yB,EAAAC,EAAAC,cAAC44B,GAAD,WAER,GAAqC,aAAlCnwB,KAAKyC,MAAM+sB,MAAMjwB,OAAOlL,QAC5B81B,EAAS9yB,EAAAC,EAAAC,cAAC64B,GAAD,WAER,GAAqC,gBAAlCpwB,KAAKyC,MAAM+sB,MAAMjwB,OAAOlL,QAAwB,CACpD,IAAIkL,EAAS8wB,KAAYC,MAAMtwB,KAAKyC,MAAM/R,SAAS6/B,QAEnDpG,EAAS9yB,EAAAC,EAAAC,cAACi5B,GAAgBjxB,QAG1B4qB,EADsC,aAAlCnqB,KAAKyC,MAAM+sB,MAAMjwB,OAAOlL,QACnBgD,EAAAC,EAAAC,cAACk5B,GAAD,MAGAp5B,EAAAC,EAAAC,cAAC02B,GAAD,MAGb,OACI52B,EAAAC,EAAAC,cAACsqB,GAAA,EAAD,KACIxqB,EAAAC,EAAAC,cAACy3B,GAAD,CACI0B,QAAS,KACTC,aAAW,EACXvB,UAAWpvB,KAAK3M,MAAM+7B,WAGtB/3B,EAAAC,EAAAC,cAAA,OAAKI,UAAU,UACXN,EAAAC,EAAAC,cAAA,OAAKqD,IAAKwH,KAAMtH,IAAI,eAAenD,UAAU,YAGjDN,EAAAC,EAAAC,cAACq5B,GAAA,EAAD,CACIC,oBAAqB,CAAC7wB,KAAKyC,MAAMvO,KAAK3F,aACtCkB,KAAK,SACLoG,MAAM,QAGFmK,KAAKyC,MAAMvO,KAAK1F,YAAYuJ,IAAI,SAACuO,EAAEuI,GAC/B,OACIxX,EAAAC,EAAAC,cAACq5B,GAAA,EAAKtsB,KAAN,CAAWpM,IAAK2W,GACZxX,EAAAC,EAAAC,cAACrJ,EAAA,QAAD,CAAMyC,KAAM2V,EAAEpY,OACdmJ,EAAAC,EAAAC,cAAA,YAAO+O,EAAErY,SACToJ,EAAAC,EAAAC,cAACu5B,EAAA,EAAD,CAAM5sB,GAAIoC,EAAEnY,YAOpCkJ,EAAAC,EAAAC,cAACsqB,GAAA,EAAD,KACIxqB,EAAAC,EAAAC,cAACu3B,GAAD,CACIjqB,MAAO,CAAErK,SAAU,QAAS8H,MAAO,QAASyuB,YAAa,OAAQC,OAAQ,OAAQ76B,WAAY,SAE7FkB,EAAAC,EAAAC,cAACrJ,EAAA,QAAD,CACIyJ,UAAU,UACVhH,KAAMqP,KAAK3M,MAAM+7B,UAAY,eAAiB,cAC9CvkB,QAAS7K,KAAK+G,OACdlC,MAAO,CAAChM,MAAM,OAAO6b,SAAS,UAElCrd,EAAAC,EAAAC,cAAA,MAAII,UAAU,qBACVN,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAC05B,GAAA35B,EAAD,CAAY45B,MAAO,KAGvB75B,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAC2K,GAAA,EAAD,CACItH,IAAKoF,KAAKyC,MAAMvO,KAAK5F,YAAY4T,OACjCpH,IAAKkF,KAAKyC,MAAMvO,KAAK5F,YAAYwZ,gBAIzCzQ,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAC45B,GAAA,EAAD,CAASpY,UAAU,SAAS1oB,MAAM,WAC9BgH,EAAAC,EAAAC,cAACyN,GAAA,QAAD,CACIrU,KAAK,UACL4b,MAAM,SACN1B,QAAS7K,KAAKqvB,OACd13B,UAAU,iBAEVN,EAAAC,EAAAC,cAACrJ,EAAA,QAAD,CAAMyC,KAAK,gBAO/B0G,EAAAC,EAAAC,cAAC03B,GAAD,CACIpqB,MAAO,CACPxL,OAAQ,YACRhD,QAAS,GACTE,UAAU,OACVJ,WAAY,OACZi7B,UAAW,UAGX/5B,EAAAC,EAAAC,cAAA,OAAKsN,MAAO,CAAEvC,MAAM,SACf6nB,IAGT9yB,EAAAC,EAAAC,cAAC23B,GAAD,CAAQrqB,MAAO,CAAEgI,UAAW,SAAU1W,WAAY,SAAlD,+BAC6B,IAAI8C,MAAOC,wBAlLpCiM,IAAMC,WA8LfI,eAJS,SAAAnS,GAAK,MAAK,CAC9Ba,KAAOb,EAAMa,OAGsB,CACnC27B,kBC5N6B,SAACvpB,GAAD,OAAM,SAAArF,GACnCA,EAAS,CACNtQ,KAAO,sBACPsD,QAAUqS,MD0NbvF,SACAG,WAHWsE,CAIZ2pB,cErLK5oB,0CAAWC,WAAXD,QACA8F,GAAU7T,KAAV6T,MACAyiB,GAAmCC,KAAnCD,OAAQI,GAA2BH,KAA3BG,OAEVmC,IAFqCtC,KAAnBC,MAAmBD,KAAZE,oBAG3B,SAAAoC,EAAY5uB,GAAM,IAAAO,EAAA,OAAAvP,OAAAsM,EAAA,EAAAtM,CAAAuM,KAAAqxB,IACdruB,EAAAvP,OAAAwP,GAAA,EAAAxP,CAAAuM,KAAAvM,OAAAyP,GAAA,EAAAzP,CAAA49B,GAAAluB,KAAAnD,KAAMyC,KAcV6uB,cAAgB,WACZ,IAAI/xB,EAAS8wB,KAAYC,MAAMttB,EAAKP,MAAM/R,SAAS6/B,QAEnD3wB,GAAK,CACDc,IAAMtF,GAAK8C,gBACXyC,KAAM,CACF7O,OAAQyN,EAAOzN,UAGtB6R,KAAK,SAAChD,GACCA,EAAKA,KAAKa,SACVwB,EAAKc,SAAS,CACVytB,WAAW,EACXC,QAAS7wB,EAAKA,KAAK8wB,MAGnB9wB,EAAKA,KAAK8wB,IAAIlI,WACdvmB,EAAKc,SAAS,CACV4tB,WAAW,KAKnB1uB,EAAKc,SAAS,CACVytB,WAAW,MAItBxtB,MAAM,SAACrC,GACJ0Y,QAAQC,IAAI3Y,MA5CFsB,EA+DlBI,aAAe,SAAAC,GACXA,EAAEC,iBACFN,EAAKP,MAAMJ,KAAKkB,eAAe,SAACC,EAAKC,GAC5BD,GACD5D,GAAK,CACDc,IAAKtF,GAAKqB,0BACVkE,KAAM,CACFpO,KAAMkR,EAAOlR,KACbC,QAASiR,EAAOC,MAChBjR,QAAO,GAAA6B,OAAKmP,EAAOmB,QAAZtQ,OAAqBmP,EAAOhR,SACnCqV,aAAcrE,EAAOqE,aACrBhW,OAAQkR,EAAK3P,MAAMvB,OACnBpB,SAAU+S,EAAO/S,SACjBihC,OAAQ3uB,EAAK3P,MAAMs+B,OACnBC,OAAQ5uB,EAAK3P,MAAMzC,WACnBihC,MAAO7uB,EAAK3P,MAAMy+B,SAGzBnuB,KAAK,SAAChD,GACCA,EAAKA,KAAKa,QACVwB,EAAKc,SAAS,CACViuB,QAAQ,EACR79B,KAAMyM,EAAKA,KAAKzM,QAIpB8O,EAAKP,MAAMJ,KAAK0N,cAChB5O,GAAM,QAAS,SAAUR,EAAKA,KAAKkD,YAExCE,MAAM,SAACrC,GAENsB,EAAKP,MAAMJ,KAAK0N,cAChB5O,GAAM,QAAS,SAAU,qBA/FvB6B,EAqGlBgvB,WAAa,WACTpyB,GAAK,CACDc,IAAKtF,GAAKsB,iCACViE,KAAM,CACF1P,GAAI+R,EAAK3P,MAAMa,KAAK2T,OAG3BlE,KAAK,SAACC,GACCA,EAASjD,KAAKa,QACdL,GAAM,UAAW,WAAY,qCAG7BA,GAAM,QAAS,SAAUyC,EAASjD,KAAKkD,WAG9CE,MAAM,SAACrC,GAEJP,GAAM,QAAS,SAAU,mBAtHf6B,EA2HlBivB,UAAY,kBACR56B,EAAAC,EAAAC,cAACuhB,EAAA,SAAD,KACIzhB,EAAAC,EAAAC,cAAC26B,GAAA,EAAD,KACI76B,EAAAC,EAAAC,cAAA,QAAM46B,QAAQ,UACd96B,EAAAC,EAAAC,cAAA,aAAQyL,EAAK3P,MAAMm+B,QAAQY,SAAStqB,aAApC,MAAqD9E,EAAK3P,MAAMm+B,QAAQxL,SAAxE,2DAGJ3uB,EAAAC,EAAAC,cAAA,OAAKI,UAAU,kBAAkBkN,MAAO,CAACxO,QAAS,IAAKg8B,SAAU,WAC7Dh7B,EAAAC,EAAAC,cAAA,OAAKI,UAAU,OACXN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,aACXN,EAAAC,EAAAC,cAACsqB,GAAA,EAAD,KACIxqB,EAAAC,EAAAC,cAAC+6B,GAAD,CAAQztB,MAAO,CAAEjO,OAAQ,UACrBS,EAAAC,EAAAC,cAACg7B,GAAD,CAAO1tB,MAAO,CACVhM,MAAO,OACPtC,UAAW,QAEXqW,MAAO,GAEN5J,EAAK3P,MAAMm+B,QAAQY,SAAStqB,aANjC,MAMkD9E,EAAK3P,MAAMm+B,QAAQxL,eAQzF3uB,EAAAC,EAAAC,cAAA,OAAKI,UAAU,kBAAkBkN,MAAO,CAACxO,QAAS,IAAKg8B,SAAU,WAC7Dh7B,EAAAC,EAAAC,cAAA,OAAKI,UAAU,OACXN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,aACXN,EAAAC,EAAAC,cAAA,OAAKsN,MAAO,CAAEtO,UAAW,aAKvCc,EAAAC,EAAAC,cAAA,OAAKI,UAAU,aACbN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,OAEbN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,YACbN,EAAAC,EAAAC,cAAA,OACIsN,MAAO,CACLxL,OAAQ,MACRwT,UAAW,UACXxW,QAAS,MACTwD,eAAgB,SAChBC,WAAY,QACZ04B,WAAY,gCAGb/I,KAAWzmB,EAAK3P,MAAMm+B,QAAQlI,kBAOrCjyB,EAAAC,EAAAC,cAAA,OAAKI,UAAU,YACXN,EAAAC,EAAAC,cAAA,OACEsN,MAAO,CACLxL,OAAQ,MACRQ,eAAgB,SAChBC,WAAY,QACZ24B,QAAS,OACTD,WAAY,gCAGdn7B,EAAAC,EAAAC,cAAA,MAAIsN,MAAO,CAAEvL,UAAW,SACpBjC,EAAAC,EAAAC,cAAA,MAAIsN,MAAO,CAAExO,QAAS,QAClBgB,EAAAC,EAAAC,cAAA,+BACAF,EAAAC,EAAAC,cAAA,WAFJ,IAEYyL,EAAK3P,MAAMm+B,QAAQY,SAASrqB,KAGxC1Q,EAAAC,EAAAC,cAAA,MAAIsN,MAAO,CAAExO,QAAS,QAClBgB,EAAAC,EAAAC,cAAA,OACI+K,MAAO,IACP1H,IAAKoI,EAAK3P,MAAMm+B,QAAQY,SAASlwB,UAIzC7K,EAAAC,EAAAC,cAAA,MAAIsN,MAAO,CAAExO,QAAS,QAClBgB,EAAAC,EAAAC,cAAA,uBADJ,IACuByb,IAAOhQ,EAAK3P,MAAMm+B,QAAQkB,eAAexf,OAAO,gBADvE,MAC2FF,IAAOhQ,EAAK3P,MAAMm+B,QAAQkB,eAAeC,WAGpIt7B,EAAAC,EAAAC,cAAA,MAAIsN,MAAO,CAAExO,QAAS,QAClBgB,EAAAC,EAAAC,cAACrJ,EAAA,QAAD,CAAMyC,KAAK,gBADf,IACiCqS,EAAK3P,MAAMm+B,QAAQvL,aAGpD5uB,EAAAC,EAAAC,cAAA,MAAIsN,MAAO,CAAExO,QAAS,QAClBgB,EAAAC,EAAAC,cAACyN,GAAA,QAAD,CAAQhM,KAAK,SAASrI,KAAK,UAAU4b,MAAM,QAAQzB,KAAK,SAAxD,iBAlNN9H,EAmOlB4vB,aAAe,SAACprB,IACM,IAAdA,EAAEhG,SACFqC,KAAQrC,QAAR,qCAGJwB,EAAKc,SAAS,SAAC2D,EAAIC,GACf,MAAO,CACHiqB,OAAQnqB,EAAErZ,KAAF,GAAAmG,OAAWkT,EAAErZ,MAAO,SAxOpC6U,EAAK3P,MAAQ,CACT0+B,QAAO,EACPjgC,OAAO,KACPoC,KAAK,KACLq9B,WAAW,EACXC,QAAS,GACTG,OAAQ,KACR/gC,WAAY,GACZ8gC,WAAW,EACXI,MAAO,MAXG9uB,oFAiDd,IAAIzD,EAAS8wB,KAAYC,MAAMtwB,KAAKyC,MAAM/R,SAAS6/B,QAEnDnW,QAAQC,IAAI9a,GAEZS,KAAK8D,SAAS,CACVhS,OAAOyN,EAAOzN,OACdggC,MAAOvyB,EAAOgL,MAGlBvK,KAAKsxB,iDAqLA,IAAAllB,EAAApM,KACGgE,EAAsBhE,KAAKyC,MAAMJ,KAAjC2B,kBAEFgE,EAAiBhE,EAAkB,SAAU,CAC/CiE,aAAc,MACdxD,MAAO,CAAC,CAAEC,UAAU,EAAMb,QAAS,oCAFhBG,CAInB3M,EAAAC,EAAAC,cAAC2Q,GAAA,QAAD,CAAQrD,MAAO,CAAEvC,MAAO,KACtBjL,EAAAC,EAAAC,cAACs7B,GAAD,CAAQ3rB,MAAM,OAAd,SAIA4rB,EAAc,CAChBvgC,KAAM,OACNqB,OAAM,GAAAU,OAAK8G,GAAKE,MAAVhH,OAAiB8G,GAAKwD,eAC5ByJ,SAAU,WAGd,OACIhR,EAAAC,EAAAC,cAACuhB,EAAA,SAAD,KACIzhB,EAAAC,EAAAC,cAAA,OAAKI,UAAU,qBAGXqI,KAAK3M,MAAMk+B,UAAYvxB,KAAKiyB,YAAc,KAG9C56B,EAAAC,EAAAC,cAAA,OAAKtG,GAAG,UAERoG,EAAAC,EAAAC,cAAA,OAAKI,UAAU,aACXN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,OACXN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,UACXN,EAAAC,EAAAC,cAACg7B,GAAD,CAAO3lB,MAAO,EAAG/H,MAAO,CAAEgI,UAAW,WAArC,kBAOZxV,EAAAC,EAAAC,cAAA,OAAKI,UAAU,+BACdqI,KAAK3M,MAAM0+B,OACR16B,EAAAC,EAAAC,cAAA,OAAKI,UAAU,2BACXN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,aACXN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,OACXN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,UACXN,EAAAC,EAAAC,cAAC4M,GAAA,QAAD,CACIC,SAAUpE,KAAKoD,aACfiB,aAAa,MACb1M,UAAU,cAEVN,EAAAC,EAAAC,cAACyY,GAAA,QAAD,KACI3Y,EAAAC,EAAAC,cAAC0Y,GAAA,QAAD,CAAKC,KAAM,GAAIrL,MAAO,CAAExO,QAAS,QAC7BgB,EAAAC,EAAAC,cAAC4M,GAAA,QAAKG,KAAN,CAAWC,MAAM,OAAOC,aAAW,GAC9BR,EAAkB,OAAQ,CACvBS,MAAO,CAAC,CAAEC,UAAU,EAAMb,QAAS,4BADtCG,CAGG3M,EAAAC,EAAAC,cAACoN,GAAA,QAAD,CACIC,OAAQvN,EAAAC,EAAAC,cAACrJ,EAAA,QAAD,CAAMyC,KAAK,OAAOkU,MAAO,CAAEhM,MAAO,qBAC1CiM,YAAY,YAM5BzN,EAAAC,EAAAC,cAAC0Y,GAAA,QAAD,CAAKC,KAAM,GAAIrL,MAAO,CAAExO,QAAS,QAC7BgB,EAAAC,EAAAC,cAAC4M,GAAA,QAAKG,KAAN,CAAWC,MAAM,QAAQC,aAAW,GAC/BR,EAAkB,QAAS,CACxBS,MAAO,CAAC,CACJ9T,KAAM,QACNkT,QAAS,kCAEb,CACIa,UAAU,EACVb,QAAS,+BAPhBG,CAUG3M,EAAAC,EAAAC,cAACoN,GAAA,QAAD,CACIC,OAAQvN,EAAAC,EAAAC,cAACrJ,EAAA,QAAD,CAAMyC,KAAK,OAAOkU,MAAO,CAAEhM,MAAO,qBAC1CiM,YAAY,gBAM5BzN,EAAAC,EAAAC,cAAC0Y,GAAA,QAAD,CAAKC,KAAM,GAAIrL,MAAO,CAAExO,QAAS,QAC7BgB,EAAAC,EAAAC,cAAC4M,GAAA,QAAKG,KAAN,CAAWC,MAAM,eAAeC,aAAW,GACtCR,EAAkB,UAAW,CAC1BS,MAAO,CAAC,CACJC,UAAU,EACVb,QAAS,mCAEb,CACI0E,IAAK,GACL1E,QAAS,0CAPhBG,CASE3M,EAAAC,EAAAC,cAACoN,GAAA,QAAD,CAAO6D,YAAaR,EAAgBS,IAAK,GAAIC,IAAK,OAGzDrR,EAAAC,EAAAC,cAAC4M,GAAA,QAAKG,KAAN,CAAWC,MAAM,yCAAyCC,aAAW,GAChER,EAAkB,eAAgB,CAC/BS,MAAO,CAAC,CACJC,UAAU,EACVb,QAAS,yCAHhBG,CAMG3M,EAAAC,EAAAC,cAACoN,GAAA,QAAD,CACIC,OAAQvN,EAAAC,EAAAC,cAACrJ,EAAA,QAAD,CAAMyC,KAAK,SAASkU,MAAO,CAAEhM,MAAO,qBAC5CiM,YAAY,oBAM5BzN,EAAAC,EAAAC,cAAC0Y,GAAA,QAAD,CAAKC,KAAM,GAAIrL,MAAO,CAAExO,QAAS,QAC7BgB,EAAAC,EAAAC,cAAC4M,GAAA,QAAKG,KAAN,CAAWC,MAAM,UAAUC,aAAW,GACjCR,EAAkB,WAAY,CAC3BS,MAAO,CAAC,CAAEC,UAAU,EAAMb,QAAS,gCADtCG,CAGG3M,EAAAC,EAAAC,cAACoN,GAAA,QAAD,CACIC,OAAQvN,EAAAC,EAAAC,cAACrJ,EAAA,QAAD,CAAMyC,KAAK,OAAOkU,MAAO,CAAEhM,MAAO,qBAC1CiM,YAAY,eAO5BzN,EAAAC,EAAAC,cAAC0Y,GAAA,QAAD,CAAKC,KAAM,IACP7Y,EAAAC,EAAAC,cAAC4M,GAAA,QAAKG,KAAN,CAAWC,MAAM,iBACZP,EAAkB,SAAU,CACzBS,MAAO,CAAC,CAAEC,UAAU,EAAMb,QAAS,+BADtCG,CAGG3M,EAAAC,EAAAC,cAAC6R,GAAA,EAAD3V,OAAA4V,OAAA,GACQypB,EADR,CAEIvpB,SAAUvJ,KAAK4yB,aACfppB,UAAWxJ,KAAK4yB,eAEhBv7B,EAAAC,EAAAC,cAACyN,GAAA,QAAD,KACI3N,EAAAC,EAAAC,cAACrJ,EAAA,QAAD,CAAMyC,KAAK,WADf,eAQhB0G,EAAAC,EAAAC,cAAC0Y,GAAA,QAAD,CAAKC,KAAM,GAAIrL,MAAO,CAAEpO,WAAY,SAChCY,EAAAC,EAAAC,cAAC4M,GAAA,QAAKG,KAAN,KACIjN,EAAAC,EAAAC,cAACyN,GAAA,QAAD,CACIH,MAAO,CAAEvC,MAAO,QAChB3R,KAAK,UACLsU,SAAS,SACTtN,UAAU,MACV+Y,SAAU1Q,KAAK3M,MAAMq+B,WALzB,gBAchBr6B,EAAAC,EAAAC,cAAC2C,GAAA,EAAD,MAGI8F,KAAK3M,MAAMm+B,QAAQjI,UAAYlyB,EAAAC,EAAAC,cAAA,WAC3BF,EAAAC,EAAAC,cAACmvB,GAAA,aAAD,CACIK,YAAY,EACZJ,cAAe3mB,KAAK3M,MAAMm+B,QAAQjI,UAClC5oB,KAAMX,KAAK3M,MAAMzC,WACjBg2B,OAAQ,SAAAI,GAEJ5a,EAAKtI,SAAS,CACVlT,WAAYo2B,EACZ0K,WAAW,KAGnB5K,QAAS,SAAAplB,GAAK,OAAI0Y,QAAQC,IAAI3Y,MAGlCrK,EAAAC,EAAAC,cAAA,0DAEK,SAQ7BF,EAAAC,EAAAC,cAAA,OAAKI,UAAU,kCACXN,EAAAC,EAAAC,cAACg7B,GAAD,CAAO1tB,MAAO,CAAEhM,MAAO,QAAU+T,MAAO,GAAxC,4GAE8D5M,KAAK3M,MAAMa,KAAK1B,QAF9E,4DAUZ6E,EAAAC,EAAAC,cAAA,OACII,UAAU,kBACVkN,MAAO,CAACxO,QAAS,IAAKg8B,SAAU,SAAU97B,UAAW,SAErDc,EAAAC,EAAAC,cAAA,OAAKI,UAAU,OACXN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,aACXN,EAAAC,EAAAC,cAACsqB,GAAA,EAAD,KACIxqB,EAAAC,EAAAC,cAACw7B,GAAD,CAAQluB,MAAO,CAAEgI,UAAW,WAA5B,aACcxV,EAAAC,EAAAC,cAAA,OAAKqD,IAAKC,KAAMC,IAAI,QAAQnD,UAAU,SAChDN,EAAAC,EAAAC,cAAA,WAFJ,8BAG4B,IAAI0B,MAAOC,2BAjcjCkM,cA6cnB4tB,GADS1tB,WAAKC,OAAO,CAAEhT,KAAM,wBAApB+S,CAA8C+rB,WCrctE,IAIe7rB,eAJS,SAAAnS,GAAK,MAAK,CAC9B0B,QAAU1B,EAAM0B,UAGmB,CACnCk+B,ctC2CyB,SAACptB,EAAIC,EAAIC,GAAT,OAAgB,SAAA9E,GAEzCA,EAAS,CACLtQ,KAAM,qBACNsD,SAAS,IAGb2L,GAAK,CACDc,IAAG,GAAApM,OAAK8G,GAAK8B,iBACbyD,KAAM,CACF7O,OAAQ+T,EACR+R,OAAQ9R,KAEbnC,KAAK,SAACC,GAEAA,EAASjD,KAAKa,SACfL,GAAM,QAAS,SAAUyC,EAASjD,KAAKkD,SAG3CkC,IAEA9E,EAAS,CACLtQ,KAAM,qBACNsD,SAAS,MAEd8P,MAAM,SAACrC,GAENT,EAAS,CACLtQ,KAAM,qBACNsD,SAAS,IAEbkN,GAAM,QAAS,SAAU,oBsCzE7BqZ,kBAFWhV,CAlDf,SAAqB/C,GAAO,IAAAyV,EACEC,oBAAS,GADXK,EAAA/kB,OAAAglB,GAAA,EAAAhlB,CAAAykB,EAAA,GACjB7kB,EADiBmlB,EAAA,GACVyG,EADUzG,EAAA,GAQxB,OACInhB,EAAAC,EAAAC,cAACuhB,EAAA,SAAD,KACIzhB,EAAAC,EAAAC,cAAA,OAAKI,UAAU,oBACXN,EAAAC,EAAAC,cAAA,OAAKqD,IAAKC,KAAMC,IAAI,eAAenD,UAAU,UAGjDN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,6BACXN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,0BACXN,EAAAC,EAAAC,cAAA,2BACAF,EAAAC,EAAAC,cAAA,mDACAF,EAAAC,EAAAC,cAAA,8CACAF,EAAAC,EAAAC,cAAA,iFAEIF,EAAAC,EAAAC,cAAA,mBAFJ,uDAIAF,EAAAC,EAAAC,cAAA,iEACAF,EAAAC,EAAAC,cAAA,oEACAF,EAAAC,EAAAC,cAAA,6EACAF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAACkZ,GAAA,QAAD,CAAUxH,SAxB9B,SAAkB5F,GAEd4b,EAAS5b,EAAEqH,OAAO9D,WAsBF,oDAEJvP,EAAAC,EAAAC,cAAA,OAAKI,UAAU,0BACVtE,EACGgE,EAAAC,EAAAC,cAACyN,GAAA,QAAD,CACAH,MAAO,CAAE8jB,MAAO,SAChBh4B,KAAK,UAAUzC,KAAK,cACpB2c,QAAS,WAAQpI,EAAMwwB,cAAcxwB,EAAM1N,QAAQjD,OAAQ2Q,EAAM1N,QAAQhD,UAAW,WAAQ0Q,EAAM+X,cAAc/X,EAAM1N,QAAQjD,OAAQ2Q,EAAM1N,QAAQhD,cAAiBob,QAAS1K,EAAM1N,QAAQnD,kBAH5L,WAMQ,WCxC9BshC,GAAY,oFAelB,IAOe1tB,eAPS,SAAAnS,GAAK,MAAK,CAC9B0B,QAAU1B,EAAM0B,UAMmB,KAAxByQ,CApBf,SAAiB/C,GACb,OACIpL,EAAAC,EAAAC,cAAA,OAAKI,UAAU,8BACXN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,0BACXN,EAAAC,EAAAC,cAAA,OAAKuD,IAAI,YAAYF,IAAKs4B,GAAWv7B,UAAU,0BAC/CN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,sCACXN,EAAAC,EAAAC,cAAA,SAAIkL,EAAM1N,QAAQzC,eAAeC,sBCN/C4gC,uLAEE,OACI97B,EAAAC,EAAAC,cAAA,OAAKI,UAAU,yBACXN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,uBACXN,EAAAC,EAAAC,cAACyY,GAAA,QAAD,CAAKnL,MAAO,CAAExO,QAAS,QAClB2J,KAAKyC,MAAM1N,QAAQnC,QAAQmF,IAAI,SAACuO,EAAGuI,GAChC,OACIxX,EAAAC,EAAAC,cAAC0Y,GAAA,QAAD,CAAK/X,IAAK2W,EAAGqB,KAAM,EAAGrL,MAAO,CAAExO,QAAS,SACpCgB,EAAAC,EAAAC,cAAC67B,GAAD,CAAM9V,IAAKhX,EAAE+sB,WAAYpkB,IAAK3I,EAAEgtB,WAAYC,KAAMjtB,EAAEktB,SAAUpM,GAAIvY,iBAT7EzJ,aA4EzB,IAAM6e,GAAkB,SAAA5wB,GAAK,MAAK,CAC9B0B,QAAU1B,EAAM0B,UAGhBq+B,GAAO5tB,YAAQye,GAAiB,CAChClJ,mBADOvV,CA3DX,SAAc/C,GACV,OAAGA,EAAM8wB,KACF9wB,EAAMwM,IAED5X,EAAAC,EAAAC,cAACk8B,GAAA,EAAD,CAAO97B,UAAU,KAAKu5B,MAAO75B,EAAAC,EAAAC,cAACrJ,EAAA,QAAD,CAAMyC,KAAK,OAAQkF,MAAM,SAASgP,MAAO,CAAEhM,MAAO,cAC3ExB,EAAAC,EAAAC,cAACyN,GAAA,QAAD,CACI6F,QAAS,kBAAMpI,EAAMsY,eAAetY,EAAM2kB,KAC1CviB,MAAO,CAAE1O,WAAY,UAAW0C,MAAO,SAEtC4J,EAAM2kB,GAAK,IAOpB/vB,EAAAC,EAAAC,cAACk8B,GAAA,EAAD,CAAO97B,UAAU,KAAKu5B,MAAO75B,EAAAC,EAAAC,cAACrJ,EAAA,QAAD,CAAMyC,KAAK,OAAOkF,MAAM,SAASgP,MAAO,CAAEhM,MAAO,cAC1ExB,EAAAC,EAAAC,cAACyN,GAAA,QAAD,CACI6F,QAAS,kBAAMpI,EAAMsY,eAAetY,EAAM2kB,KAC1CviB,MAAO,CAAE1O,WAAY,UAAW0C,MAAO,SAEtC4J,EAAM2kB,GAAK,IAOzB3kB,EAAMwM,IAED5X,EAAAC,EAAAC,cAACyN,GAAA,QAAD,CACI6F,QAAS,kBAAMpI,EAAMsY,eAAetY,EAAM2kB,KAC1CzvB,UAAU,KACVkN,MAAO,CAAE1O,WAAY,UAAW0C,MAAO,SAEtC4J,EAAM2kB,GAAK,GAMhB/vB,EAAAC,EAAAC,cAACyN,GAAA,QAAD,CACI6F,QAAS,kBAAMpI,EAAMsY,eAAetY,EAAM2kB,KAC1CzvB,UAAU,KACVkN,MAAO,CAAE1O,WAAY,UAAW0C,MAAO,SAEtC4J,EAAM2kB,GAAK,KAiBjB5hB,eAAQye,GAAgB,KAAxBze,CAA8B2tB,IClFvCO,eAEF,SAAAA,EAAYjxB,GAAM,IAAAO,EAAA,OAAAvP,OAAAsM,EAAA,EAAAtM,CAAAuM,KAAA0zB,IACd1wB,EAAAvP,OAAAwP,GAAA,EAAAxP,CAAAuM,KAAAvM,OAAAyP,GAAA,EAAAzP,CAAAigC,GAAAvwB,KAAAnD,KAAMyC,KAUVkxB,QAAS,WACL/zB,GAAK,CACDc,IAAG,GAAApM,OAAI8G,GAAKkC,UACZqD,KAAK,CACD7O,OAAQkR,EAAKP,MAAM1N,QAAQjD,OAC3B8lB,OAAO5U,EAAKP,MAAM1N,QAAQhD,aAGjC4R,KAAK,SAACC,GACH,IAAGA,EAASjD,KAAKa,QAIb,OAAOL,GAAM,QAAQ,SAASyC,EAASjD,KAAKkD,SAH5Cb,EAAKP,MAAM+X,cAAcxX,EAAKP,MAAM1N,QAAQjD,OAAOkR,EAAKP,MAAM1N,QAAQhD,aAK3EgS,MAAM,SAACrC,GACN,OAAOP,GAAM,QAAQ,SAAS,YA3BpB6B,EAgClB4wB,OAAS,WACL,IAAIC,EAAIC,YAAY,WAEhB,IAAIvM,EAAIvkB,EAAK3P,MAAM0gC,aACf3yB,EAAI4B,EAAK3P,MAAM2gC,aAEV,GAALzM,GAAe,GAALnmB,GACV6yB,cAAcJ,GACd7wB,EAAK2wB,YAGI,GAALvyB,GACAA,EAAI,GACJmmB,GAAQ,GAGRnmB,GAAQ,EAEZ4B,EAAKc,SAAS,CACViwB,aAAcxM,EACdyM,aAAc5yB,MAGvB,MArDH4B,EAAK3P,MAAM,CACP0gC,aAAa/wB,EAAKP,MAAM1N,QAAQ3C,OAChC4hC,aAAahxB,EAAKP,MAAM1N,QAAQ1C,QAJtB2Q,oFAQdhD,KAAK4zB,0FAqDL,OACIv8B,EAAAC,EAAAC,cAAA,OAAKI,UAAU,iBACXN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,mBACVqI,KAAK3M,MAAM0gC,aADhB,MACiC/zB,KAAK3M,MAAM2gC,sBAlExC5uB,aA6ELI,eAJS,SAAAnS,GAAK,MAAK,CAC9B0B,QAAU1B,EAAM0B,UAGmB,CACnC5C,czC/DyB,SAACmU,GAAD,OAAO,SAAArF,GAChCA,EAAS,CACLtQ,KAAM,sByC6DI6pB,kBADHhV,CAEZkuB,IC3EGQ,gNAEFP,QAAS,WACL/zB,GAAK,CACDc,IAAG,GAAApM,OAAI8G,GAAKkC,UACZqD,KAAK,CACD7O,OAAQkR,EAAKP,MAAM1N,QAAQjD,OAC3B8lB,OAAO5U,EAAKP,MAAM1N,QAAQhD,aAE/B4R,KAAK,SAACC,GACL,IAAGA,EAASjD,KAAKa,QAKb,OAAOL,GAAM,QAAQ,SAASyC,EAASjD,KAAKkD,SAH5Cb,EAAKP,MAAM+X,cAAcxX,EAAKP,MAAM1N,QAAQjD,OAAOkR,EAAKP,MAAM1N,QAAQhD,aAK3EgS,MAAM,SAACrC,GACN,OAAOP,GAAM,QAAQ,SAAS,qFAKlC,OACI9J,EAAAC,EAAAC,cAAA,OAAKI,UAAW,iCAAmD,YAAlBqI,KAAKyC,MAAMhT,KAAiB,OAAO,UAChF4H,EAAAC,EAAAC,cAACrD,GAAD,MACAmD,EAAAC,EAAAC,cAAC48B,GAAD,MACA98B,EAAAC,EAAAC,cAAC68B,GAAD,MACA/8B,EAAAC,EAAAC,cAAA,OAAKI,UAAU,sBACXN,EAAAC,EAAAC,cAACiV,GAAA,EAAD,CACInc,MAAM,+BACNsc,UAAW3M,KAAK2zB,QAChBjnB,OAAO,MACPD,WAAW,MAEXpV,EAAAC,EAAAC,cAACyN,GAAA,QAAD,CAAQrU,KAAK,WAAb,oBAnCAwU,IAAMC,WAgDfI,eAJS,SAAAnS,GAAK,MAAK,CAC9B0B,QAAU1B,EAAM0B,UAGmB,CACnCylB,kBADWhV,CAEZ0uB,cCjDGG,eACF,SAAAA,EAAY5xB,GAAM,IAAAO,EAAA,OAAAvP,OAAAsM,EAAA,EAAAtM,CAAAuM,KAAAq0B,IACdrxB,EAAAvP,OAAAwP,GAAA,EAAAxP,CAAAuM,KAAAvM,OAAAyP,GAAA,EAAAzP,CAAA4gC,GAAAlxB,KAAAnD,KAAMyC,KA8CV6xB,YAAc,WACV10B,GAAK,CACDc,IAAG,GAAApM,OAAK8G,GAAKiC,gBACbsD,KAAM,CACF7O,OAAQkR,EAAKP,MAAM1N,QAAQjD,OAC3B8lB,OAAQ5U,EAAKP,MAAM1N,QAAQhD,UAC3BurB,IAAKta,EAAKP,MAAM1N,QAAQpC,UAAUqQ,EAAKP,MAAM1N,QAAQrC,qBAAqBmV,IAC1E0sB,UAAWvxB,EAAK3P,MAAMT,WAE3B+Q,KAAK,SAACC,GACL,IAAIA,EAASjD,KAAKa,QAYd,OADAwB,EAAKP,MAAM+X,cAAcxX,EAAKP,MAAM1N,QAAQjD,OAAQkR,EAAKP,MAAM1N,QAAQhD,WAChEoP,GAAM,QAAS,SAAUyC,EAASjD,KAAKkD,SAV9C,IAAIzD,EAAC3M,OAAAc,EAAA,EAAAd,CAAOuP,EAAKP,MAAM1N,QAAQnC,SAC/BwN,EAAE4C,EAAKP,MAAM1N,QAAQrC,qBAArBe,OAAAC,EAAA,EAAAD,CAAA,GACO2M,EAAE4C,EAAKP,MAAM1N,QAAQrC,qBAD5B,CAEI8hC,aAAcxxB,EAAK3P,MAAMT,QACzB0gC,YAAY,IAEhBtwB,EAAKP,MAAMgyB,eAAer0B,KAO/B2D,MAAM,SAACP,GACN,OAAOrC,GAAM,QAAS,SAAU,mBAzEtB6B,EA+ElB0xB,SAAW,WACH1xB,EAAKP,MAAM1N,QAAQrC,oBAAsB,GACzCsQ,EAAKP,MAAMsY,eAAe/X,EAAKP,MAAM1N,QAAQrC,oBAAsB,IAjFzDsQ,EAqFlB2xB,KAAO,WACC3xB,EAAK3P,MAAMuhC,gBACX5xB,EAAKsxB,cACDtxB,EAAKP,MAAM1N,QAAQrC,oBAAsBsQ,EAAKP,MAAM1N,QAAQpC,UAAUY,OAAS,GAC/EyP,EAAKP,MAAMsY,eAAe/X,EAAKP,MAAM1N,QAAQrC,oBAAsB,IAInEsQ,EAAKP,MAAM1N,QAAQrC,oBAAsBsQ,EAAKP,MAAM1N,QAAQpC,UAAUY,OAAS,GAC/EyP,EAAKP,MAAMsY,eAAe/X,EAAKP,MAAM1N,QAAQrC,oBAAsB,IA9F7DsQ,EAmGlBuwB,KAAO,WACH,IAAIsB,EAAEphC,OAAAc,EAAA,EAAAd,CAAOuP,EAAKP,MAAM1N,QAAQnC,SAC5BihC,EAAIgB,EAAG7xB,EAAKP,MAAM1N,QAAQrC,qBAC9BmhC,EAAEL,UAAYxwB,EAAKP,MAAM1N,QAAQnC,QAAQoQ,EAAKP,MAAM1N,QAAQrC,qBAAqB8gC,SACjFqB,EAAG7xB,EAAKP,MAAM1N,QAAQrC,qBAAuBmhC,EAC7C7wB,EAAKP,MAAMgyB,eAAeI,IAxGZ7xB,EA2GlB8xB,eAAe,SAACjvB,EAAGC,EAAGC,GAClB,IAAIgvB,EAAS/xB,EAAKP,MAAM1N,QAAQpC,UAAUqQ,EAAKP,MAAM1N,QAAQrC,qBAAqBogB,SAClF,GAAGhN,EAAG,CACF,GAAG9C,EAAK3P,MAAM2hC,SAASD,EACnB,OAAO5zB,GAAM,QAAQ,SAAS,iDAG9B,IAAI8zB,EAAGxhC,OAAAc,EAAA,EAAAd,CAAOuP,EAAK3P,MAAMgB,SACzB4gC,EAAIpvB,GAAJpS,OAAAC,EAAA,EAAAD,CAAA,GACOwhC,EAAIpvB,GADX,CAEIe,SAAQ,IAEZ,IAAIsuB,EAAGzhC,OAAAc,EAAA,EAAAd,CAAOuP,EAAK3P,MAAMT,SACzBsiC,EAAI7lB,KAAKtJ,GAEN/C,EAAK3P,MAAM2hC,SAASD,EAAS,EAC5B/xB,EAAKc,SAAS,SAACqxB,EAAQC,GACnB,MAAQ,CACJR,gBAAgB,EAChBI,OAAQG,EAAOH,OAAS,EACxB3gC,QAAS4gC,EACTriC,QAASsiC,KAKjBlyB,EAAKc,SAAS,SAACqxB,EAAQC,GACnB,MAAQ,CACJJ,OAAQG,EAAOH,OAAS,EACxB3gC,QAAS4gC,EACTriC,QAASsiC,SAOzB,EACAD,EAAGxhC,OAAAc,EAAA,EAAAd,CAAOuP,EAAK3P,MAAMgB,UAEjBwR,GAAJpS,OAAAC,EAAA,EAAAD,CAAA,GACOwhC,EAAIpvB,GADX,CAEIe,SAAQ,IAIZ,IAAI5O,GADJk9B,EAAGzhC,OAAAc,EAAA,EAAAd,CAAOuP,EAAK3P,MAAMT,UACPg9B,QAAQ7pB,GACtBmvB,EAAInV,OAAO/nB,EAAO,GAClBgL,EAAKc,SAAS,SAACqxB,EAAQC,GACnB,MAAQ,CACJR,gBAAgB,EAChBI,OAAQG,EAAOH,OAAS,EACxB3gC,QAAS4gC,EACTriC,QAASsiC,OA9JlBlyB,EAAKP,MAAM1N,QAAQnC,QAAQoQ,EAAKP,MAAM1N,QAAQrC,qBAAqB8hC,aAAajhC,SAASyP,EAAKP,MAAM1N,QAAQpC,UAAUqQ,EAAKP,MAAM1N,QAAQrC,qBAAqBogB,SAC7J9P,EAAK3P,MAAM,CACPuhC,gBAAe,EACfvgC,QAAQ2O,EAAKP,MAAM1N,QAAQpC,UAAUqQ,EAAKP,MAAM1N,QAAQrC,qBAAqB2B,QAC7EzB,QAAQoQ,EAAKP,MAAM1N,QAAQnC,QAAQoQ,EAAKP,MAAM1N,QAAQrC,qBAAqB8hC,aAC3EQ,OAAO,GAIXhyB,EAAK3P,MAAM,CACPuhC,gBAAe,EACfvgC,QAAQ2O,EAAKP,MAAM1N,QAAQpC,UAAUqQ,EAAKP,MAAM1N,QAAQrC,qBAAqB2B,QAC7EzB,QAAQoQ,EAAKP,MAAM1N,QAAQnC,QAAQoQ,EAAKP,MAAM1N,QAAQrC,qBAAqB8hC,aAC3EQ,OAAO,GAfDhyB,qFAqBdhD,KAAK8D,SAAS,SAACqxB,EAAOC,GAClB,IAAIh1B,EAAE,EAEFgB,EAAI+zB,EAAO9gC,QAAQ0D,IAAI,SAACuO,EAAEuI,GAC1B,IAAI,IAAIkG,EAAG,EAAEA,EAAGogB,EAAOviC,QAAQW,OAAOwhB,IAClC,GAAGogB,EAAOviC,QAAQmiB,KAAMzO,EAAEuB,IAGtB,OADAzH,GAAG,EACH3M,OAAAC,EAAA,EAAAD,CAAA,GACO6S,EADP,CAEIM,SAAQ,IAIpB,OAAAnT,OAAAC,EAAA,EAAAD,CAAA,GACO6S,EADP,CAEIM,SAAQ,MAGhB,MAAO,CACHouB,OAAO50B,EACP/L,QAAS+M,sCA4Hb,IAAAgL,EAAApM,KAEAkP,EAAO,CAAC,IAAK,IAAK,IAAK,IAAK,KAChC,OACI7X,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKI,UAAU,6BACXN,EAAAC,EAAAC,cAACyY,GAAA,QAAD,KACI3Y,EAAAC,EAAAC,cAAC0Y,GAAA,QAAD,CAAKC,KAAM,GACP7Y,EAAAC,EAAAC,cAACyN,GAAA,QAAD,CAAQH,MAAO,CAAE1O,WAAY,UAAW0C,MAAO,QAAU0T,MAAM,UAC1DvM,KAAKyC,MAAM1N,QAAQrC,oBAAsB,IAIlD2E,EAAAC,EAAAC,cAAC0Y,GAAA,QAAD,CAAKC,KAAM,IACP7Y,EAAAC,EAAAC,cAAC89B,GAAA,QAAMC,MAAP,CAAazwB,MAAO,CAAC8jB,MAAM,UACvBtxB,EAAAC,EAAAC,cAAC89B,GAAA,QAAMt6B,OAAP,CACI8J,MAAO,CAAE1O,WAAY,UAAW0C,MAAO,SAE4C,IAAlFmH,KAAKyC,MAAM1N,QAAQpC,UAAUqN,KAAKyC,MAAM1N,QAAQrC,qBAAqBogB,SAAiB,qBAAuB,wBAGlHzb,EAAAC,EAAAC,cAAC89B,GAAA,QAAMt6B,OAAP,CACI8J,MAAO,CAAE1O,WAAY,UAAW0C,MAAO,SAD3C,WAGamH,KAAKyC,MAAM1N,QAAQpC,UAAUqN,KAAKyC,MAAM1N,QAAQrC,qBAAqBmd,cAOxE,WAAlB7P,KAAKyC,MAAMhT,KACP4H,EAAAC,EAAAC,cAACyN,GAAA,QAAD,CAAQ6F,QAAS7K,KAAKyC,MAAM8yB,eAAgB1wB,MAAO,CAAE1O,WAAY,UAAW0C,MAAO,OAAQ8vB,MAAO,UAAlG,QAGH,KAELtxB,EAAAC,EAAAC,cAAA,OAAKI,UAAU,+BACXN,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,MAAIsN,MAAO,CAAE2tB,WAAY,6BACrBn7B,EAAAC,EAAAC,cAAC8b,GAAD,KACKrT,KAAKyC,MAAM1N,QAAQpC,UAAUqN,KAAKyC,MAAM1N,QAAQrC,qBAAqB+B,QAKjFuL,KAAKyC,MAAM1N,QAAQpC,UAAUqN,KAAKyC,MAAM1N,QAAQrC,qBAAqBgd,QAClErY,EAAAC,EAAAC,cAAA,OAAKI,UAAU,wCACXN,EAAAC,EAAAC,cAAA,OAAKuD,IAAI,iBAAiBF,IAAKoF,KAAKyC,MAAM1N,QAAQpC,UAAUqN,KAAKyC,MAAM1N,QAAQrC,qBAAqBgd,QAAS/X,UAAU,gCACpH,MAIfN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,gCACXN,EAAAC,EAAAC,cAACyY,GAAA,QAAD,KACKhQ,KAAK3M,MAAMgB,QAAQ0D,IAAI,SAACuO,EAAEuI,GACvB,OACIxX,EAAAC,EAAAC,cAAC0Y,GAAA,QAAD,CAAKC,KAAM,GAAIhY,IAAK2W,EAAGlX,UAAU,iBAC7BN,EAAAC,EAAAC,cAAC0Y,GAAA,QAAD,CAAKC,KAAM,GAAIrL,MAAO,CAAEgI,UAAW,SAC/BxV,EAAAC,EAAAC,cAAA,MACIsN,MAAO,CACHvL,UAAW,OACXjD,QAAS,IAGbgB,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAC0Y,GAAA,QAAD,CAAKC,KAAM,GACNhB,EAAKL,GAAI,MAEdxX,EAAAC,EAAAC,cAAC0Y,GAAA,QAAD,CAAKC,KAAM,GAAIrL,MAAO,CAAE1O,WAAY,OAAQ0C,MAAO,SAC/CxB,EAAAC,EAAAC,cAACkZ,GAAA,QAAD,CACI7J,QAASN,EAAEM,QACXqC,SAAU,SAAC5F,GAAQ+I,EAAK0oB,eAAejmB,EAAGxL,EAAEqH,OAAO9D,QAASN,EAAEuB,OAE9DxQ,EAAAC,EAAAC,cAAA,MAAIsN,MAAO,CAAE2tB,WAAY,6BACpBlsB,EAAEgJ,WAKfjY,EAAAC,EAAAC,cAAC0Y,GAAA,QAAD,CAAKC,KAAM,GACP7Y,EAAAC,EAAAC,cAAA,OAAKI,UAAU,qCACV2O,EAAEiJ,OAASlY,EAAAC,EAAAC,cAAA,OAAKuD,IAAI,iBAAiBnD,UAAU,6BAA6BiD,IAAK0L,EAAEiJ,SAAa,gBAa7IlY,EAAAC,EAAAC,cAAA,OAAKI,UAAU,iCACXN,EAAAC,EAAAC,cAACyN,GAAA,QAAOswB,MAAR,KAC8C,IAAzCt1B,KAAKyC,MAAM1N,QAAQrC,oBAChB,KAEA2E,EAAAC,EAAAC,cAACyN,GAAA,QAAD,CAAQH,MAAO,CAAC1O,WAAW,UAAU0C,MAAM,QAASgS,QAAS7K,KAAK00B,UAC9Dr9B,EAAAC,EAAAC,cAACrJ,EAAA,QAAD,CAAMyC,KAAK,SADf,YAKJ0G,EAAAC,EAAAC,cAACyN,GAAA,QAAD,CAAQrU,KAAK,UAAUka,QAAS7K,KAAKuzB,MAC7Bl8B,EAAAC,EAAAC,cAACrJ,EAAA,QAAD,CAAMyC,KAAK,SACTqP,KAAKyC,MAAM1N,QAAQnC,QAAQoN,KAAKyC,MAAM1N,QAAQrC,qBAAqB8gC,SAAyB,kBAAhB,iBAErFxzB,KAAKyC,MAAM1N,QAAQrC,sBAAsBsN,KAAKyC,MAAM1N,QAAQpC,UAAUY,OAAO,EAC1E,KAEA8D,EAAAC,EAAAC,cAACyN,GAAA,QAAD,CAAQH,MAAO,CAAC1O,WAAW,UAAU0C,MAAM,QAASgS,QAAS7K,KAAK20B,MAC7D30B,KAAK3M,MAAMuhC,eAAe,cAAe,OAC1Cv9B,EAAAC,EAAAC,cAACrJ,EAAA,QAAD,CAAMyC,KAAK,WAGlBqP,KAAKyC,MAAM1N,QAAQrC,sBAAsBsN,KAAKyC,MAAM1N,QAAQpC,UAAUY,OAAO,GAAKyM,KAAK3M,MAAMuhC,eAC1Fv9B,EAAAC,EAAAC,cAACyN,GAAA,QAAD,CAAQH,MAAO,CAAC1O,WAAW,UAAU0C,MAAM,QAASgS,QAAS,WAAKuB,EAAKkoB,gBAAvE,OAEIj9B,EAAAC,EAAAC,cAACrJ,EAAA,QAAD,CAAMyC,KAAK,WACL,eAhSTwU,IAAMC,WA8SpBI,eAJS,SAAAnS,GAAK,MAAK,CAC9B0B,QAAU1B,EAAM0B,UAGmB,CACnCgmB,kBACA0Z,e3C5G0B,SAAC5uB,GAC3B,MAAO,CACHlV,KAAM,kCACNsD,QAAS4R,I2C0Gb2U,kBAHWhV,CAIZ6uB,ICzTGmB,mMAGEx1B,KAAKyC,MAAMgzB,0BAA0Bz1B,KAAKyC,MAAM1N,QAAQjD,QACxDkO,KAAKyC,MAAMizB,4BAA4B11B,KAAKyC,MAAM1N,QAAQjD,OAAOkO,KAAKyC,MAAM1N,QAAQhD,4CAIpF,OACIsF,EAAAC,EAAAC,cAAA,OAAKI,UAAU,mBACXN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,6BACVqI,KAAKyC,MAAM1N,QAAQnC,QAAQW,OAAO,GAAKyM,KAAKyC,MAAM1N,QAAQpC,UAAUY,OAAO,EACxE8D,EAAAC,EAAAC,cAACo+B,GAAD,CACIlmC,KAAMuQ,KAAKyC,MAAMhT,KACjB8lC,eAAgBv1B,KAAKyC,MAAM8yB,eAC3Br9B,IAAK8H,KAAKyC,MAAM1N,QAAQrC,sBACvB,cAhBN0S,aA6BRI,eAJS,SAAAnS,GAAK,MAAK,CAC9B0B,QAAU1B,EAAM0B,UAGmB,CACnC0gC,0B5CqGqC,SAACtZ,GAAD,OAAS,SAAAlb,GAC9CrB,GAAK,CACDc,IAAG,GAAApM,OAAK8G,GAAK+B,6BACbwD,KAAM,CACF1P,GAAIkrB,KAETxY,KAAK,SAACC,GAEDA,EAASjD,KAAKa,QACdP,EAAS,CACLtQ,KAAM,gCACNsD,QAAS2P,EAASjD,KAAKA,OAI3BQ,GAAM,QAAS,SAAUyC,EAASjD,KAAKkD,WAE5CE,MAAM,SAACrC,GAENP,GAAM,QAAS,SAAU,oB4CvH7Bu0B,4B5C4HuC,SAACvZ,EAAKC,GAAN,OAAc,SAAAnb,GACrDrB,GAAK,CACDc,IAAG,GAAApM,OAAK8G,GAAKgC,gCACbuD,KAAM,CACF7O,OAAQqqB,EACRvE,OAAQwE,KAEbzY,KAAK,SAACC,GACL,GAAIA,EAASjD,KAAKa,QAAS,CAEvB,IAAI8E,EAAI1C,EAASjD,KAAKA,KAAK/N,QAAQmF,IAAI,SAACuO,EAAGuI,GACvC,OAA8B,IAA1BvI,EAAEkuB,aAAajhC,OACRE,OAAAC,EAAA,EAAAD,CAAA,GACA6S,EADP,CAEIktB,UAAU,EACVF,YAAY,IAIT7/B,OAAAC,EAAA,EAAAD,CAAA,GACA6S,EADP,CAEIktB,UAAU,EACVF,YAAY,MAKxBryB,EAAS,CACLtQ,KAAM,kCACNsD,QAASqS,SAIbnF,GAAM,QAAS,SAAUyC,EAASjD,KAAKkD,WAE5CE,MAAM,SAACrC,GAENP,GAAM,QAAS,SAAU,qB4CnKlBqE,CAGZgwB,eC/BH,SAASI,KAAsB,IAAAC,EACwBhW,OACnD,MAAO,CACHvd,MAHuBuzB,EACnBC,WAGJl/B,OAJuBi/B,EACAE,aAqBhB,SAASC,GAAUvzB,GAAO,IAAAwzB,EAdzC,WAA+B,IAAA/d,EACqBC,mBAASyd,MAD9Bpd,EAAA/kB,OAAAglB,GAAA,EAAAhlB,CAAAykB,EAAA,GACpBge,EADoB1d,EAAA,GACF2d,EADE3d,EAAA,GAW3B,OARA2G,oBAAU,WACN,SAASiX,IACLD,EAAoBP,MAGxB,OADA/V,OAAOwW,iBAAiB,SAAUD,GAC3B,kBAAMvW,OAAOyW,oBAAoB,SAAUF,KACnD,IAEIF,EAImBK,GAAVj0B,GADqB2zB,EAC7Br/B,OAD6Bq/B,EACrB3zB,OADqBqW,EAEVR,oBAAS,GAFCS,EAAAnlB,OAAAglB,GAAA,EAAAhlB,CAAAklB,EAAA,GAE9BnN,EAF8BoN,EAAA,GAEtB4d,EAFsB5d,EAAA,GAKjC6d,EAAO,kBAAID,GAAW,IAE1B,OAAGl0B,EAAM,IAEDjL,EAAAC,EAAAC,cAAA,OAAKI,UAAU,0BACXN,EAAAC,EAAAC,cAACm/B,GAAD,CAAUjnC,KAAM6S,EAAM,IAAI,UAAU,SAAUizB,eAAgBkB,IAC9Dp/B,EAAAC,EAAAC,cAACo/B,GAAD,CAAWlnC,KAAM6S,EAAM,IAAI,UAAU,YAOzCjL,EAAAC,EAAAC,cAAA,OAAKI,UAAU,0BACXN,EAAAC,EAAAC,cAACm/B,GAAD,CAAUjnC,KAAM6S,EAAM,IAAI,UAAU,SAAUizB,eAAgBkB,IAE9Dp/B,EAAAC,EAAAC,cAACnE,GAAA,EAAD,CACI/C,MAAM,OACN0oB,UAAU,QACV6d,UAAU,EACVC,QArBJ,kBAAIL,GAAW,IAsBXhrB,QAASA,EACTlJ,MAAM,QAENjL,EAAAC,EAAAC,cAACo/B,GAAD,CAAWlnC,KAAM6S,EAAM,IAAI,UAAU,iBCvCjD+J,GAAU7T,KAAV6T,MAEFyqB,eACF,SAAAA,EAAYr0B,GAAM,IAAAO,EAAAvP,OAAAsM,EAAA,EAAAtM,CAAAuM,KAAA82B,GACd9zB,EAAAvP,OAAAwP,GAAA,EAAAxP,CAAAuM,KAAAvM,OAAAyP,GAAA,EAAAzP,CAAAqjC,GAAA3zB,KAAAnD,KAAMyC,IACN,IAAIlD,EAAS8wB,KAAYC,MAAMttB,EAAKP,MAAM/R,SAAS6/B,QAFrC,OAIdvtB,EAAK3P,MAAQ,CACT+nB,YAAY7b,GAEhByD,EAAKP,MAAMs0B,eAAex3B,EAAOzN,OAAOyN,EAAOxN,WAPjCiR,oFAYdhD,KAAKyC,MAAMu0B,iBAAiBh3B,KAAK3M,MAAM+nB,YAAYrpB,WACnDiO,KAAKyC,MAAM+X,cAAcxa,KAAK3M,MAAM+nB,YAAYtpB,OAAOkO,KAAK3M,MAAM+nB,YAAYrpB,4CAK9E,OAAGiO,KAAKyC,MAAM1N,QAAQ9C,iBAAmB+N,KAAKyC,MAAM1N,QAAQ/C,gBAEpDqF,EAAAC,EAAAC,cAAA,OAAKI,UAAU,oBACXN,EAAAC,EAAAC,cAACya,GAAA,EAAD,CAAUC,QAAM,IAChB5a,EAAAC,EAAAC,cAACya,GAAA,EAAD,CAAUC,QAAM,KAMrBjS,KAAKyC,MAAM1N,QAAQlD,WACXguB,OAAOnvB,SAASsI,KAAhB,GAKJgH,KAAKyC,MAAM1N,QAAQ5C,cAEdkF,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACwnB,GAAD,OAML/e,KAAKyC,MAAM1N,QAAQzD,cAEd+F,EAAAC,EAAAC,cAACuhB,EAAA,SAAD,KACIzhB,EAAAC,EAAAC,cAAA,OAAKI,UAAU,oBACXN,EAAAC,EAAAC,cAAA,OAAKqD,IAAKC,KAAMC,IAAI,eAAenD,UAAU,UAGjDN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,uCACXN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,qCACXN,EAAAC,EAAAC,cAAC0/B,GAAD,CAAOt/B,UAAU,4CAA4CkN,MAAO,CAAEhM,MAAO,QAAU+T,MAAO,GAA9F,0BAC2BvV,EAAAC,EAAAC,cAAA,eAQvCyI,KAAKyC,MAAM1N,QAAQ1D,WAgBhB2O,KAAKyC,MAAM1N,QAAQ7C,eAEdmF,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACy+B,GAAD,OAMJ3+B,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAC2/B,GAAD,OAxBR7/B,EAAAC,EAAAC,cAACuhB,EAAA,SAAD,KACKzhB,EAAAC,EAAAC,cAAA,OAAKI,UAAU,oBACZN,EAAAC,EAAAC,cAAA,OAAKqD,IAAKC,KAAMC,IAAI,eAAenD,UAAU,UAGjDN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,uCACXN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,qCACXN,EAAAC,EAAAC,cAAC0/B,GAAD,CAAOt/B,UAAU,4CAA4CkN,MAAO,CAAChM,MAAM,QAAS+T,MAAO,GAA3F,wGAvEnBxH,aAyGVI,eAJS,SAAAnS,GAAK,MAAK,CAC9B0B,QAAU1B,EAAM0B,UAGmB,CACnCiiC,iB9ClG4B,SAAC1wB,GAAD,OAAO,SAAArF,GACnCrB,GAAK,CACDc,IAAKtF,GAAK4B,sBACV2D,KAAM,CACFkH,IAAKvB,KAEV3C,KAAK,SAACC,GAEDA,EAASjD,KAAKa,QACdP,EAAS,CACLtQ,KAAM,0BACNsD,QAAS2P,EAASjD,KAAKA,OAI3BQ,GAAM,QAAS,SAAUyC,EAASjD,KAAKkD,a8CoF/CkzB,e9CjH0B,SAAClxB,EAAIC,GAC/B,MAAQ,CACJnV,KAAM,2BACNkD,SAAUgS,EACV/R,SAAUgS,I8C8Gd0U,iBACAQ,mBAJWxV,CAKZsxB,IChGYK,OApBf,WACE,OACE9/B,EAAAC,EAAAC,cAAC6/B,EAAA,EAAD,CAAU9hC,MAAOA,GACf+B,EAAAC,EAAAC,cAACu5B,EAAA,EAAD,KACEz5B,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC0M,EAAA,EAAD,CAAOozB,OAAK,EAACC,KAAK,IAAI3+B,UAAW4+B,IACjClgC,EAAAC,EAAAC,cAAC0M,EAAA,EAAD,CAAOozB,OAAK,EAACC,KAAK,cAAc3+B,UAAW6+B,KAC3CngC,EAAAC,EAAAC,cAAC0M,EAAA,EAAD,CAAOozB,OAAK,EAACC,KAAK,QAAQ3+B,UAAW6+B,KACrCngC,EAAAC,EAAAC,cAAC0M,EAAA,EAAD,CAAOozB,OAAK,EAACC,KAAK,QAAQ3+B,UAAWw2B,KACrC93B,EAAAC,EAAAC,cAAC0M,EAAA,EAAD,CAAOqzB,KAAK,iBAAiB3+B,UAAWw2B,KACxC93B,EAAAC,EAAAC,cAAC0M,EAAA,EAAD,CAAOozB,OAAK,EAACC,KAAK,sBAAsB3+B,UAAWq6B,KACnD37B,EAAAC,EAAAC,cAAC0M,EAAA,EAAD,CAAOozB,OAAK,EAACC,KAAK,sBAAsB3+B,UAAWm+B,SCdzCW,QACW,cAA7B5X,OAAOnvB,SAASgnC,UAEe,UAA7B7X,OAAOnvB,SAASgnC,UAEhB7X,OAAOnvB,SAASgnC,SAASlI,MACvB,2DCZNxc,MAASmR,UAAU,UAEnBwT,IAAShsB,OAAOtU,EAAAC,EAAAC,cAACqgC,GAAD,MAASC,SAASC,eAAe,SDyH3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMt0B,KAAK,SAAAu0B,GACjCA,EAAaC,mGELnB1rC,EAAOC,QAAQ,CAAC4pB,QA9HF,CACE,0BACA,0BACA,0BACA,0BACA,2BACA,0BACA,0BACA,0BACA,0BACA,0BACA,2BACA,0BACA,0BACA,0BACA,0BACA,0BACA,2BACA,0BACA,0BACA,0BACA,0BACA,0BACA,2BACA,0BACA,0BACA,0BACA,0BACA,0BACA,2BACA,0BACA,0BACA,0BACA,0BACA,0BACA,2BACA,0BACA,0BACA,0BACA,0BACA,0BACA,2BACA,0BACA,0BACA,0BACA,0BACA,0BACA,2BACA,0BACA,0BACA,0BACA,0BACA,0BACA,2BACA,0BACA,0BACA,0BACA,0BACA,0BACA,2BACA,2BAkEQC,YA/DL,CACH,wBACA,wBACA,wBACA,wBACA,yBACA,wBACA,wBACA,wBACA,wBACA,wBACA,yBACA,wBACA,wBACA,wBACA,wBACA,wBACA,yBACA,wBACA,wBACA,wBACA,wBACA,wBACA,yBACA,wBACA,wBACA,wBACA,wBACA,wBACA,yBACA,wBACA,wBACA,wBACA,wBACA,wBACA,yBACA,wBACA,wBACA,wBACA,wBACA,wBACA,yBACA,wBACA,wBACA,wBACA,wBACA,wBACA,yBACA,wBACA,wBACA,wBACA,wBACA,wBACA,yBACA,wBACA,wBACA,wBACA,wBACA,wBACA,yBACA,qEC3HhB9pB,EAAAC,QAAiBC,EAAAC,EAAuB,uDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB","file":"static/js/main.6b3d8696.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.cc171c63.png\";","import { TOOGLE_NAVIGATION } from '../actions/types';\r\n\r\n\r\nconst initialState = {\r\n    navigationCollapsed : true\r\n}\r\n\r\nexport default (state = initialState, action )=>{\r\n    switch(action.type){\r\n        case TOOGLE_NAVIGATION:\r\n            return {\r\n                ...state,\r\n                navigationCollapsed : !state.navigationCollapsed\r\n            }  \r\n        default:\r\n            return state;\r\n    }\r\n}","const initialState = {\r\n    TrainermodalOpened : false,\r\n    TrainerconfirmDirty: false,\r\n    Trainermode : 'Register',\r\n    trainerId : null,\r\n    TrainersearchText : '',\r\n    trainerTableLoadingStatus:false,\r\n    trainerEditFormLoadingStatus:false,\r\n    trainerTableData:[],\r\n    trainerdetails:{},\r\n    subjectTableData : [] ,\r\n    SubjectmodalOpened : false,\r\n    SubjectconfirmDirty: false,\r\n    Subjectmode : 'New Topic',\r\n    SubjectId : null,\r\n    SubjectsearchText : '',\r\n    SubjectTableLoading : false, \r\n    subjectDetails :{}    \r\n}\r\n\r\nexport default (state = initialState, action )=>{\r\n    switch(action.type){\r\n        case 'CHANGE_TRAINER_MODAL_STATE':\r\n            return {\r\n                ...state,\r\n                TrainermodalOpened : action.payload1,\r\n                trainerId : action.payload2,\r\n                Trainermode : action.payload3,\r\n                trainerdetails : action.payload4\r\n\r\n            }\r\n        case 'CHANGE_TRAINER_FORM_CONFIRMDIRTY':\r\n            return {\r\n                ...state,\r\n                TrainerconfirmDirty : action.payload\r\n            }\r\n        case 'CHANGE_TRAINER_SEARCH_TEXT':\r\n                return {\r\n                    ...state,\r\n                    TrainersearchText : action.payload\r\n                }\r\n        case 'CHANGE_TRAINER_TABLE_LOADING_STATUS':\r\n                return {\r\n                    ...state,\r\n                    trainerTableLoadingStatus : action.payload1,\r\n                    trainerTableData : action.payload2,\r\n\r\n                }\r\n        case 'CHANGE_SUBJECT_MODAL_STATE':\r\n            return {\r\n                ...state,\r\n                SubjectmodalOpened : action.payload1,\r\n                SubjectId : action.payload2,\r\n                Subjectmode : action.payload3,\r\n                subjectDetails : action.payload4\r\n            }\r\n        case 'CHANGE_SUBJECT_FORM_CONFIRMDIRTY':\r\n            return {\r\n                ...state,\r\n                SubjectconfirmDirty : action.payload\r\n            }\r\n        case 'CHANGE_SUBJECT_SEARCH_TEXT':\r\n                return {\r\n                    ...state,\r\n                    SubjectsearchText : action.payload\r\n                }\r\n        case 'CHANGE_SUBJECT_TABLE_LOADING_STATUS':\r\n                return {\r\n                    ...state,\r\n                    SubjectTableLoading : action.payload1,\r\n                    subjectTableData :action.payload2\r\n                }\r\n        default:\r\n            return state;\r\n    }\r\n}","export const ADMIN_PERMISSIONS = [\r\n    {\r\n        display: 'Welcome',\r\n        icon: 'home',\r\n        link: '/user/home'\r\n    },\r\n    {\r\n        display: 'All Trainers',\r\n        icon: 'user',\r\n        link: '/user/listtrainers'\r\n    },\r\n    {\r\n        display: 'All Categories',\r\n        icon: 'book',\r\n        link: '/user/listsubjects'\r\n    },\r\n    {\r\n        display: 'All Questions',\r\n        icon: 'question',\r\n        link: '/user/listquestions'\r\n    },\r\n    {\r\n        display: 'Settings',\r\n        icon: 'setting',\r\n        link: '/user/settings'\r\n    },\r\n];\r\n\r\nexport const TRAINER_PERMISSIONS = [\r\n    {\r\n        display: 'Welcome',\r\n        icon: 'home',\r\n        link: '/user/home'\r\n    },\r\n    {\r\n        display: 'All MCQ Questions',\r\n        icon: 'question',\r\n        link: '/user/listquestions'\r\n    },\r\n    {\r\n        display: 'All Programming Questions',\r\n        icon: 'code',\r\n        link: '/user/listcode'\r\n    },\r\n    {\r\n        display: 'All Assessments',\r\n        icon: 'bars',\r\n        link: '/user/listtests'\r\n    },\r\n    {\r\n        display: 'New Assessments',\r\n        icon: 'plus-circle',\r\n        link: '/user/newtest'\r\n    },\r\n    {\r\n        display: 'Conduct Assessments',\r\n        icon: 'appstore',\r\n        link: '/user/conducttest'\r\n    },\r\n    {\r\n        display: 'Settings',\r\n        icon: 'setting',\r\n        link: '/user/settings'\r\n    },\r\n];","import { ADMIN_PERMISSIONS, TRAINER_PERMISSIONS} from '../services/userOption';\r\n\r\nconst initialState = {\r\n    isLoggedIn : false,\r\n    userDetails : {},\r\n    activeRoute:'0',\r\n    userOptions:[]\r\n}\r\n\r\nexport default (state = initialState, action )=>{\r\n    switch(action.type){\r\n        case 'CHANGE_ACTIVE_URL':\r\n            return {\r\n                ...state,\r\n                activeurl : action.payload\r\n            }\r\n        case 'CHANGE_ACTIVE_ROUTE':\r\n            return {\r\n                ...state,\r\n                activeRoute : action.payload\r\n            }\r\n        case 'LOGIN':\r\n            if(action.payload.type==='ADMIN'){\r\n                return {\r\n                    ...state,\r\n                    isLoggedIn : true,\r\n                    userDetails:{\r\n                        ...action.payload\r\n                    },\r\n                    userOptions : ADMIN_PERMISSIONS                    \r\n                }\r\n            }\r\n            else{\r\n                return {\r\n                    ...state,\r\n                    isLoggedIn : true,\r\n                    userDetails:{\r\n                        ...action.payload\r\n                    },\r\n                    userOptions : TRAINER_PERMISSIONS\r\n                }\r\n            }\r\n            \r\n        case 'LOGOUT':\r\n            return {\r\n                ...state,\r\n                isLoggedIn : false,\r\n                userDetails :{\r\n\r\n                }\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","const initialState = {\r\n    NewQuestionmodalOpened : false,\r\n    AllQuestionconfirmDirty: false,\r\n    QuestionsearchText : '',\r\n    QuestionTableLoading : false, \r\n    QuestionTableData : [],\r\n    selectedSubjects:[],\r\n    QuestionFormData:{},\r\n    fifthoptioAddButtonVisible:true,\r\n    TestTableLoading:false,\r\n    TestTableData:[],\r\n    DataActiveTestDetails : {\r\n        testDetailsId : null,\r\n        testquestions :[]\r\n    },\r\n    referTable: [],\r\n};\r\n\r\n\r\nexport default (state = initialState, action )=>{\r\n    switch(action.type){\r\n        case 'CHANGE_QUESTION_MODAL_STATE':\r\n            return {\r\n                ...state,\r\n                NewQuestionmodalOpened : action.payload1,\r\n            }\r\n        case 'CHANGE_QUESTION_FORM_CONFIRMDIRTY':\r\n            return {\r\n                ...state,\r\n                AllQuestionconfirmDirty : action.payload\r\n            }\r\n        case 'CHANGE_QUESTION_SEARCH_TEXT':\r\n            return {\r\n                ...state,\r\n                QuestionsearchText : action.payload\r\n            }\r\n        case 'CHANGE_QUESTION_TABLE_LOADING_STATUS':\r\n            return {\r\n                ...state,\r\n                QuestionTableLoading : action.payload1,\r\n                QuestionTableData : action.payload2\r\n            }\r\n        case 'ADD_FIFTH_OPTION':\r\n            return {\r\n                ...state,\r\n                QuestionFormData:{\r\n                    ...state.QuestionFormData,\r\n                    options:[\r\n                        ...state.QuestionFormData.options,\r\n                        {\r\n                            image :null,\r\n                            body : null,\r\n                            isAnswer :false\r\n                        }\r\n                    ]\r\n                },\r\n                fifthoptioAddButtonVisible:false\r\n            }\r\n        case 'CHANGE_SELECTED_SUBJECT':\r\n            return {\r\n                ...state,\r\n                selectedSubjects : action.payload\r\n            }\r\n        case 'CHANGE_QUESTION_FORM_DATA':\r\n            return{\r\n                ...state,\r\n                QuestionFormData : action.payload\r\n            }\r\n        case 'CHANGE_TEST_DETAILS_MODAL_STATE':\r\n            return {\r\n                ...state,\r\n                TestDetailsmodalOpened : action.payload1,\r\n                DataActiveTestDetails :{\r\n                    ...state.DataActiveTestDetails,\r\n                    testDetailsId : action.payload2\r\n                }\r\n            }\r\n        case 'CHANGE_TEST_SEARCH_TEXT':\r\n            return {\r\n                ...state,\r\n                TestsearchText : action.payload\r\n            }\r\n        case 'CHANGE_TEST_TABLE_LOADING_STATUS':\r\n            return {\r\n                ...state,\r\n                TestTableLoading : action.payload1,\r\n                TestTableData :action.payload2\r\n            }\r\n        case 'CHANGE_CURRENT_ACTIVE_TEST_QUESTION':\r\n            return{\r\n                ...state,\r\n                DataActiveTestDetails:{\r\n                    ...state.DataActiveTestDetails,\r\n                    testquestions:action.payload\r\n                }\r\n            }\r\n        case 'UPDATE_REFER_TABLE':\r\n            return {\r\n                ...state,\r\n                referTable: action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","const initialState = {\r\n    greet: 'Hi',\r\n    currentStep: 0,\r\n    mode: \"random\",\r\n    newtestFormData: {\r\n        testType: null,\r\n        testTitle: '',\r\n        testDuration: 60,\r\n        OrganisationName: null,\r\n        testSubject: [],\r\n        testQuestions: [],\r\n        startTime: null,\r\n        endTime: null\r\n    },\r\n    addjobpost: false,\r\n    jobPostData: {\r\n        title: '',\r\n        description: null,\r\n        maxApplicants: 100,\r\n        maxPositions: 30,\r\n        skillsets: [],\r\n        location: null,\r\n        type: \"Full Time\",\r\n        customdata: {},\r\n    },\r\n    questionsAvailablebasedonSubject: [],\r\n    addcoding: false,\r\n    codingtData: {\r\n        testQuestions: [],\r\n    },\r\n    codingquestionsAvailablebasedonSubject: [],\r\n};\r\n\r\n\r\nexport default (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'CHANGE_ACTIVE_STEP':\r\n            return {\r\n                ...state,\r\n                currentStep: action.payload\r\n            }\r\n        case 'CHANGE_BASIC_NEW_TEST_DETAILS':\r\n            return {\r\n                ...state,\r\n                newtestFormData: {\r\n                    ...state.newtestFormData,\r\n                    ...action.payload\r\n                }\r\n            }\r\n        case 'FETCH_QUESTIONS_BASED_ON_SUBJECT':\r\n            return {\r\n                ...state,\r\n                questionsAvailablebasedonSubject: action.payload\r\n            }\r\n        case 'ADD_QUESTION_TO_QUESTION_QUEUSE':\r\n            return {\r\n                ...state,\r\n                newtestFormData: {\r\n                    ...state.newtestFormData,\r\n                    testQuestions: action.payload\r\n                }\r\n            }\r\n        case 'REMOVE_QUESTION_FROM_MAIN_QUEUE':\r\n            return {\r\n                ...state,\r\n                questionsAvailablebasedonSubject: action.payload\r\n            }\r\n        case 'CHANGE_MODE_QUESTION_SELECT':\r\n            return {\r\n                ...state,\r\n                mode: action.payload\r\n            }\r\n        case 'ADD_JOB_DATA':\r\n            return{\r\n                ...state,\r\n                addjobpost:  action.payload1,\r\n                jobPostData: action.payload2,\r\n            }\r\n        case 'ADD_CODING_QUESTION_CHECKER':\r\n            return{\r\n                ...state,\r\n                addcoding:  action.payload\r\n            }\r\n        case 'ADD_CODING_QUESTION_TO_QUESTION_QUEUE':\r\n            return {\r\n                ...state,\r\n                codingtData: {\r\n                    ...state.codingtData,\r\n                    testQuestions: action.payload\r\n                },\r\n            }\r\n        case 'REMOVE_CODING_QUESTION_FROM_MAIN_QUEUE':\r\n            return {\r\n                ...state,\r\n                codingquestionsAvailablebasedonSubject: action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    };\r\n};","const initialState = { \r\n    id : null,\r\n    testRegisterLink:'',\r\n    basictestdetails:{\r\n        isRegistrationavailable:false,\r\n        testbegins:false,\r\n        testconducted:false,\r\n        isResultgenerated: false,\r\n        start: null,\r\n        end: null,\r\n    },\r\n    registeredCandidates:[],\r\n    questionsOfTest:[]\r\n}\r\n\r\nexport default (state = initialState, action )=>{\r\n    switch(action.type){\r\n        case 'SET_CONDUCT_TEST_ID':\r\n            return {\r\n                ...state ,\r\n                id:action.payload\r\n            }\r\n        case 'SET_TEST_REGISTER_LINK':\r\n            return {\r\n                ...state ,\r\n                testRegisterLink:action.payload\r\n            }\r\n        case 'UPDATE_TEST_BASIC_DETAILS':\r\n            return{\r\n                ...state,\r\n                basictestdetails:action.payload\r\n            }\r\n        case 'CHANGE_TEST_ISREGISTRATION_AVAILABLE':\r\n            return{\r\n                ...state,\r\n                basictestdetails:{\r\n                    ...state.basictestdetails,\r\n                    isRegistrationavailable:action.payload\r\n                }\r\n            }\r\n        case 'CHANGE_BEGIN_TEST_STATUS':\r\n            return{\r\n                ...state,\r\n                basictestdetails:action.payload\r\n            }\r\n        case 'CHANGE_CANDIDATES_OF_TEST':\r\n            return{\r\n                ...state,\r\n                registeredCandidates:action.payload\r\n            }\r\n        case 'CHANGE_QUESTIONS_OF_TEST':\r\n            return{\r\n                ...state,\r\n                questionsOfTest :action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","const initialState = {\r\n    proceedingToTest:false,\r\n    invalidUrl:false,\r\n    testid:null,\r\n    traineeid:null,\r\n    initialloading1:true,\r\n    initialloading2:true,\r\n    testbegins : true,\r\n    startedWriting:true,\r\n    testconducted:false,\r\n    LocaltestDone:true,\r\n    m_left:0,\r\n    s_left:0,\r\n    traineeDetails:{\r\n        name:\"\",\r\n        emailid:\"\",\r\n        contact:\"\"\r\n    },\r\n    activeQuestionIndex:0,\r\n    questions:[],\r\n    answers:[],\r\n    hasGivenFeedBack:false,\r\n    loadcoding: true,\r\n    codingData: [],\r\n    Iscoding: false,\r\n    codingsubmitted: null\r\n}\r\n\r\n\r\nexport default (state = initialState, action )=>{\r\n    switch(action.type){\r\n        case 'SET_HAS_GIVEN_FEEDBACK':\r\n            return{\r\n                ...state,\r\n                hasGivenFeedBack:action.payload\r\n            }\r\n        case 'SET_TRAINEE_TEST_DETAILS':\r\n            return{\r\n                ...state,\r\n                testid:action.payload1,\r\n                traineeid:action.payload2,\r\n            }\r\n        case 'FETCH_TEST_FLAG':\r\n            return{\r\n                ...state,\r\n                testbegins: action.payload1,\r\n                startedWriting: action.payload2,\r\n                testconducted: action.payload3,\r\n                LocaltestDone: action.payload4,\r\n                m_left: action.payload5,\r\n                s_left: action.payload6,\r\n                Iscoding: action.payload7,\r\n                codingsubmitted: false,\r\n                initialloading1:false\r\n            }\r\n        case 'INVALID_TEST_URL':\r\n            return{\r\n                ...state,\r\n                invalidUrl:true\r\n            }\r\n        case 'TEST_DONE_LOCAL':\r\n            return {\r\n                ...state,\r\n                LocaltestDone : true\r\n            }\r\n        case 'PROCEEDING_TO_TEST':\r\n            return{\r\n                ...state,\r\n                proceedingToTest:action.payload\r\n            }\r\n        case 'SWITCH_QUESTION':\r\n            return {\r\n                ...state,\r\n                activeQuestionIndex:action.payload\r\n            }\r\n        case 'FETCH_LOGGED_IN_TRAINEE':\r\n            return{\r\n                ...state,\r\n                initialloading2:false,\r\n                traineeDetails:action.payload\r\n            }\r\n        case 'UPDATE_TRAINEE_TEST_QUESTIONS':\r\n            return{\r\n                ...state,\r\n                questions:action.payload\r\n            }\r\n        case 'UPDATE_TRAINEE_TEST_ANSWERSHEET':\r\n            return{\r\n                ...state,\r\n                answers:action.payload\r\n            }\r\n        case 'CODING_DATA':\r\n            return{\r\n                ...state,\r\n                loadcoding: action.payload1,\r\n                codingData: action.payload2\r\n            }\r\n        case 'SUBMIT_CODING':\r\n            return{\r\n                ...state,\r\n                codingsubmitted: action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};","const initialState = {\n    NewQuestionModalState: false,\n    QuestionTableLoading : false, \n    QuestionTableData : []\n};\n\nexport default (state = initialState, action) => {\n    switch(action.type){\n        case 'CHANGE_CODING_QUESTION_MODAL_STATE':\n            return {\n                ...state,\n                NewQuestionModalState : action.payload,\n            }\n        case 'CHANGE_CODING_QUESTION_TABLE_LOADING_STATUS':\n            return {\n                ...state,\n                QuestionTableLoading : action.payload1,\n                QuestionTableData : action.payload2\n            }\n        default:\n            return state;\n    }\n};","import { combineReducers } from 'redux';\r\n\r\nimport openDrawer from './opendrawer';\r\nimport adminAction from './admin';\r\nimport userAction from './loggedinuser'\r\nimport trainerAction from './trainer';\r\nimport testAction from './test';\r\nimport conductTest from './conductTest';\r\nimport trainee from './trainee';\r\nimport coding from './coding';\r\n\r\nexport default combineReducers({\r\n    drawer: openDrawer,\r\n    admin: adminAction,\r\n    user: userAction,\r\n    trainer: trainerAction,\r\n    test: testAction,\r\n    conduct: conductTest,\r\n    trainee: trainee,\r\n    coding: coding\r\n});","export const TOOGLE_NAVIGATION = 'TOOGLE_NAVIGATION';\r\n\r\n","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport rootReducer from './reducers/index';\r\n\r\nconst initialState = {};\r\nconst middleware = [thunk];\r\n\r\n// Development\r\n// const store = createStore(\r\n//     rootReducer, \r\n//     initialState,\r\n//     compose(\r\n//         applyMiddleware(...middleware),\r\n//         (window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__()) || compose\r\n//     )\r\n// );\r\n\r\n// Production\r\nconst store = createStore(\r\n    rootReducer, \r\n    initialState, \r\n    applyMiddleware(...middleware)\r\n);\r\n\r\nexport default store;","import React from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Button from '@material-ui/core/Button';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport { Icon } from 'antd';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    icon: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    heroContent: {\r\n        backgroundColor: theme.palette.background.paper,\r\n        padding: theme.spacing(8, 0, 6),\r\n    },\r\n    heroButtons: {\r\n        marginTop: theme.spacing(4),\r\n    },\r\n    cardGrid: {\r\n        paddingTop: theme.spacing(8),\r\n        paddingBottom: theme.spacing(8),\r\n    },\r\n    card: {\r\n        height: '100%',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n    },\r\n    cardMedia: {\r\n        paddingTop: '56.25%', // 16:9\r\n    },\r\n    cardContent: {\r\n        flexGrow: 1,\r\n    },\r\n    footer: {\r\n        backgroundColor: theme.palette.background.paper,\r\n        padding: theme.spacing(6),\r\n    },\r\n}));\r\n\r\nconst cards = [\r\n    {\r\n        title: 'MCQ / MSQ',\r\n        icon: 'file-done',\r\n        description: 'Create assessments automatically and manually with our huge question library',\r\n    },\r\n    {\r\n        title: 'Codeplayer',\r\n        icon: 'code',\r\n        description: 'Coding Platform and Online Judge Platform',\r\n    },\r\n    {\r\n        title: 'Auto Proctored',\r\n        icon: 'desktop',\r\n        description: 'Remote based hiring using AI and ML',\r\n    },\r\n    {\r\n        title: 'Invite Candidates',\r\n        icon: 'cloud-download',\r\n        description: 'Import and Export Candidates. Invite candidates',\r\n    },\r\n    {\r\n        title: 'Analysis',\r\n        icon: 'area-chart',\r\n        description: 'View detailed reports and in-depth analysis of each candidates performance',\r\n    },\r\n    {\r\n        title: 'Support',\r\n        icon: 'phone',\r\n        description: 'Support via phone and email and much more.',\r\n    },\r\n];\r\n\r\nexport default function Album() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <CssBaseline />\r\n      \r\n      <main>\r\n        <Container className={classes.cardGrid} maxWidth=\"md\">\r\n          {/* End hero unit */}\r\n          <Grid container spacing={4}>\r\n            {cards.map((card, index) => (\r\n              <Grid item key={index} xs={12} sm={6} md={4}>\r\n                <Card className={classes.card}>\r\n                  <CardContent className={classes.cardContent}>\r\n                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                        <Icon type={card.icon} />{'  '} {card.title}\r\n                    </Typography>\r\n                    <Typography>\r\n                      {card.description}\r\n                    </Typography>\r\n                  </CardContent>\r\n                </Card>\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n        </Container>\r\n      </main>\r\n    </React.Fragment>\r\n  );\r\n};","import React, { Fragment } from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Button from '@material-ui/core/Button';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Grid from '@material-ui/core/Grid';\r\n// import StarIcon from '@material-ui/icons/StarBorder';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Link from '@material-ui/core/Link';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport Box from '@material-ui/core/Box';\r\nimport { Col, Row, Icon } from 'antd';\r\n\r\nimport './home.css';\r\nimport logo from '../../../assets/gnius.png';\r\nimport Features from './Features';\r\n\r\nfunction Copyright() {\r\n    return (\r\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n            {'Copyright © '}\r\n            <Link color=\"inherit\" href=\"/\">\r\n                <b>gnius Talent Solution</b>\r\n            </Link>{' '}\r\n            {new Date().getFullYear()}\r\n            {'.'}\r\n        </Typography>\r\n    );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    '@global': {\r\n        ul: {\r\n            margin: 0,\r\n            padding: 0,\r\n            listStyle: 'none',\r\n        },\r\n    },\r\n    appBar: {\r\n        backgroundColor: '#ffe3fe',\r\n    },\r\n    toolbar: {\r\n        flexWrap: 'wrap',\r\n    },\r\n    toolbarTitle: {\r\n        flexGrow: 1,\r\n    },\r\n    link: {\r\n        margin: theme.spacing(1, 1.5),\r\n    },\r\n    heroContent: {\r\n        padding: theme.spacing(8, 0, 6),\r\n    },\r\n    cardHeader: {\r\n        backgroundColor: '#fdbaf8'\r\n    },\r\n    cardPricing: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'baseline',\r\n        marginBottom: theme.spacing(2),\r\n    },\r\n    footer: {\r\n        borderTop: `1px solid ${theme.palette.divider}`,\r\n        marginTop: theme.spacing(8),\r\n        paddingTop: theme.spacing(3),\r\n        paddingBottom: theme.spacing(3),\r\n        [theme.breakpoints.up('sm')]: {\r\n            paddingTop: theme.spacing(6),\r\n            paddingBottom: theme.spacing(6),\r\n        },\r\n    },\r\n}));\r\n\r\n\r\nconst footers = [\r\n    {\r\n        title: 'Company',\r\n        description: ['Team', 'Contact us', 'Location'],\r\n    },\r\n    {\r\n        title: 'Features',\r\n        description: ['Blog', 'Developer stuff'],\r\n    },\r\n    {\r\n        title: 'Resources',\r\n        description: ['Guide', 'Handbook', 'Knowledge Base'],\r\n    },\r\n    {\r\n        title: 'Legal',\r\n        description: ['Privacy policy', 'Terms of use', 'Refund Policy'],\r\n    },\r\n];\r\n\r\nexport default function Pricing() {\r\n  const classes = useStyles();\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <CssBaseline />\r\n            <AppBar position=\"static\" color=\"default\" elevation={0} className={classes.appBar}>\r\n                <Toolbar className={classes.toolbar}>\r\n                    <Typography variant=\"h6\" color=\"inherit\" noWrap className={classes.toolbarTitle}>\r\n                        <img src={logo} alt=\"company logo\" className=\"logo\" />\r\n                    </Typography>\r\n                    <Button href=\"/auth/login\" color=\"primary\" variant=\"outlined\" className={classes.link}>\r\n                        <Icon type=\"lock\" /> {'   '}Recruiter Login\r\n                    </Button>\r\n                </Toolbar>\r\n            </AppBar>\r\n\r\n            <Container maxWidth=\"sm\" component=\"main\" className={classes.heroContent}>\r\n                <Typography component=\"h1\" variant=\"h2\" align=\"center\" color=\"textPrimary\" gutterBottom>\r\n                    Features\r\n                </Typography>\r\n                \r\n                <Typography variant=\"h5\" align=\"center\" color=\"textSecondary\" component=\"p\">\r\n                An Online Pre Employment Assessment Software to help organizations in their end to end recruitment and to select the right candidate based on their skill.\r\n                </Typography>\r\n            </Container>\r\n\r\n            <Features />\r\n\r\n            {/* Hero unit */}\r\n            <Container maxWidth=\"sm\" component=\"main\" className={classes.heroContent}>\r\n                <Typography component=\"h1\" variant=\"h2\" align=\"center\" color=\"textPrimary\" gutterBottom>\r\n                    Pricing\r\n                </Typography>\r\n            </Container>\r\n\r\n            <Container maxWidth=\"sm\" component=\"main\" className={classes.heroContent}>\r\n                <Typography component=\"h5\" variant=\"h5\" align=\"center\" color=\"textPrimary\" gutterBottom>\r\n                    Contact us at contact@gnius.in for pricing\r\n                </Typography>\r\n            </Container>\r\n            {/* End hero unit */}\r\n\r\n            \r\n            \r\n            \r\n            {/* Footer */}\r\n            <Container maxWidth=\"md\" component=\"footer\" className={classes.footer}>\r\n                <Grid container spacing={4} justify=\"space-evenly\">\r\n                    {footers.map((footer) => (\r\n                        <Grid item xs={6} sm={3} key={footer.title}>\r\n                            <Typography variant=\"h6\" color=\"textPrimary\" gutterBottom>\r\n                                {footer.title}\r\n                            </Typography>\r\n                            <ul>\r\n                                {footer.description.map((item) => (\r\n                                    <li key={item}>\r\n                                        <Link href=\"#\" variant=\"subtitle1\" color=\"textSecondary\">\r\n                                            {item}\r\n                                        </Link>\r\n                                    </li>\r\n                                ))}\r\n                            </ul>\r\n                        </Grid>\r\n                    ))}\r\n                </Grid>\r\n                <Box mt={5}>\r\n                    <Copyright />\r\n                </Box>\r\n            </Container>\r\n            {/* End footer */}\r\n        </React.Fragment>\r\n    );\r\n};","const envoirnment = process.env.NODE_ENV;\r\n\r\nconst apis = {\r\n    BASE_LOCAL_URL:envoirnment==='development'?'http://localhost:3000':'',\r\n    BASE : envoirnment==='development'?'http://localhost:5000':'',\r\n    LOGIN : \"/api/v1/login/\",\r\n    GETDETAILSUSER : \"/api/v1/user/details\",\r\n    UPDATE_USER: '/api/v1/user/update/details',\r\n    GET_ALL_TRAINER :'/api/v1/admin/trainer/details/all',\r\n    GET_SINGLE_TRAINER_DETAILS : '/api/v1/admin/trainer/details',\r\n    CREATE_TRAINER : '/api/v1/admin/trainer/create',\r\n    DELETE_TRAINER : '/api/v1/admin/trainer/remove',\r\n    \r\n    GET_ALL_SUBJECTS : '/api/v1/subject/details/all',\r\n    GET_SINGLE_SUBJECT_DETAILS : '/api/v1/subject/details',\r\n    CREATE_SUBJECT : '/api/v1/subject/create',\r\n    GET_ALL_QUESTIONS : '/api/v1/questions/details/all',\r\n    DELETE_QUESTION:'/api/v1/questions/delete',\r\n    FETCH_SINGLE_QUESTION:'/api/v1/questions/details',\r\n    CREATE_QUESTIONS :'/api/v1/questions/create',\r\n    FILE_UPLOAD:'/api/v1/upload',\r\n    \r\n    CREATE_TEST : '/api/v1/test/create',\r\n    GET_ALL_TESTS:'/api/v1/test/details/all',\r\n    GET_SINGLE_TEST:'/api/v1/test/trainer/details',\r\n    REGISTER_TRAINEE_FOR_TEST:'/api/v1/trainee/enter',\r\n    RESEND_TRAINER_REGISTRATION_LINK: '/api/v1/trainee/resend/testlink',\r\n    GET_SINGLE_TEST_DETAILS_BASIC:'/api/v1/test/basic/details',\r\n    \r\n    STOP_REGISTRATION :'/api/v1/trainer/registration/stop',\r\n    START_TEST_BY_TRAINER:'/api/v1/test/begin',\r\n    GET_TEST_CANDIDATES :'/api/v1/test/candidates',\r\n    GET_TEST_QUESTIONS :'/api/v1/test/questions',\r\n    FETCH_TRAINEE_DETAILS:'/api/v1/trainee/details',    \r\n    FETCH_TRAINEE_TEST_DETAILS:'/api/v1/trainee/flags',\r\n    \r\n    PROCEED_TO_TEST:'/api/v1/trainee/answersheet',\r\n    FETCH_TRAINEE_TEST_QUESTION:'/api/v1/trainee/paper/questions',\r\n    FETCH_TRAINEE_TEST_ANSWERSHEET:'/api/v1/trainee/chosen/options',\r\n    UPDATE_ANSWERS:'/api/v1/trainee/update/answer',\r\n    END_TEST : '/api/v1/trainee/end/test',\r\n    FETCH_OWN_RESULT:'/api/v1/final/results',\r\n    FETCH_SINGLE_QUESTION_BY_TRAINEE:'/api/v1/trainee/get/question',\r\n    END_TEST_BY_TRAINER:'/api/v1/test/end',\r\n    FEEDBACK_STATUS_CHECK:'/api/v1/trainee/feedback/status',\r\n    GIVE_FEEDBACK:'/api/v1/trainee/feedback',\r\n    \r\n    GET_STATS:'/api/v1/test/candidates/details',\r\n    GET_EXCEL:'/api/v1/trainer/result/download',\r\n    MAX_MARKS_FETCH:'/api/v1/test/max/marks',\r\n    GET_FEEDBACKS:'/api/v1/trainer/get/feedbacks',\r\n    CHECK_TEST_NAME: '/api/v1/test/new/name/check',\r\n\r\n    IMPORT_CANDIDATES: '/api/v1/test/candidates/import',\r\n    GET_JOB_DETAILS:'/api/v1/trainee/jobpost/details',\r\n    \r\n    CREATE_CODING_QUESTION: '/api/v1/coding/create/question',\r\n    LIST_CODING_QUESTION: '/api/v1/coding/list/question',\r\n    GET_CODING_QUESTION_DETAILS: '/api/v1/coding/list/testcase',\r\n    CREATE_CODING_TESTCASE: '/api/v1/coding/create/testcase',\r\n    GET_CODING_QUESTION_DATA: '/api/v1/trainee/coding/contest/question',\r\n    POST_SUBMISSION: '/api/v1/trainee/coding/contest/submission',\r\n    CODING_SECTION_SUBMIT: '/api/v1/trainee/coding/submit/section',\r\n    CODING_SECTION_GET: '/api/v1/trainee/coding/section/details',\r\n    CODING_SUBMISSION_GET: '/api/v1/test/leaderboard',\r\n    UPLOAD_RESUME: '/api/v1/upload/resume',\r\n    GET_QUESTION_STAT: '/api/v1/stats/sub',\r\n    GET_TEST_STAT: '/api/v1/stats/test',\r\n    ADD_REFER: '/api/v1/refer/add',\r\n    LIST_REFER: '/api/v1/refer/list',\r\n    RESET_PASSWORD: '/api/v1/user/update/password'\r\n};\r\n\r\nexport default apis;\r\n\r\n/*\r\nconst apis={\r\n    BASE_LOCAL_URL:'http://localhost:3000',\r\n    BASE : \"http://localhost:5000\",\r\n    LOGIN : \"/api/v1/login/\",\r\n    GETDETAILSUSER : \"/api/v1/user/details\",\r\n    GET_ALL_TRAINER :'/api/v1/admin/trainer/details/all',\r\n    GET_SINGLE_TRAINER_DETAILS : '/api/v1/admin/trainer/details',\r\n    CREATE_TRAINER : '/api/v1/admin/trainer/create',\r\n    DELETE_TRAINER : '/api/v1/admin/trainer/remove',\r\n    GET_ALL_SUBJECTS : '/api/v1/subject/details/all',\r\n    GET_SINGLE_SUBJECT_DETAILS : '/api/v1/subject/details',\r\n    CREATE_SUBJECT : '/api/v1/subject/create',\r\n    GET_ALL_QUESTIONS : '/api/v1/questions/details/all',\r\n    DELETE_QUESTION:'/api/v1/questions/delete',\r\n    FETCH_SINGLE_QUESTION:'/api/v1/questions/details',\r\n    CREATE_QUESTIONS :'/api/v1/questions/create',\r\n    FILE_UPLOAD:'/api/v1/upload',\r\n    CREATE_TEST : '/api/v1/test/create',\r\n    GET_ALL_TESTS:'/api/v1/test/details/all',\r\n    GET_SINGLE_TEST:'/api/v1/test/trainer/details',\r\n    REGISTER_TRAINEE_FOR_TEST:'/api/v1/trainee/enter',\r\n    RESEND_TRAINER_REGISTRATION_LINK: '/api/v1/trainee/resend/testlink',\r\n    GET_SINGLE_TEST_DETAILS_BASIC:'/api/v1/test/basic/details',\r\n    STOP_REGISTRATION :'/api/v1/trainer/registration/stop',\r\n    START_TEST_BY_TRAINER:'/api/v1/test/begin',\r\n    GET_TEST_CANDIDATES :'/api/v1/test/candidates',\r\n    GET_TEST_QUESTIONS :'/api/v1/test/questions',\r\n    FETCH_TRAINEE_DETAILS:'/api/v1/trainee/details',\r\n    FETCH_TRAINEE_TEST_DETAILS:'/api/v1/trainee/flags',\r\n    PROCEED_TO_TEST:'/api/v1/trainee/answersheet',\r\n    FETCH_TRAINEE_TEST_QUESTION:'/api/v1/trainee/paper/questions',\r\n    FETCH_TRAINEE_TEST_ANSWERSHEET:'/api/v1/trainee/chosen/options',\r\n    UPDATE_ANSWERS:'/api/v1/trainee/update/answer',\r\n    END_TEST : '/api/v1/trainee/end/test',\r\n    FETCH_OWN_RESULT:'/api/v1/final/results',\r\n    FETCH_SINGLE_QUESTION_BY_TRAINEE:'/api/v1/trainee/get/question',\r\n    END_TEST_BY_TRAINER:'/api/v1/test/end',\r\n    FEEDBACK_STATUS_CHECK:'/api/v1/trainee/feedback/status',\r\n    GIVE_FEEDBACK:'/api/v1/trainee/feedback',\r\n    GET_STATS:'/api/v1/test/candidates/details',\r\n    GET_EXCEL:'/api/v1/trainer/result/download',\r\n    MAX_MARKS_FETCH:'/api/v1/test/max/marks'\r\n}*/","import auth from './AuthServices';\r\nimport apis from './Apis';\r\nconst axios = require('axios');\r\n\r\nexport const SecureGet = (p)=>{\r\n    return axios({\r\n        method:'get',\r\n        baseURL : apis.BASE,\r\n        ...p,\r\n        params: {\r\n            ...p.params,\r\n            Token : auth.retriveToken()\r\n        }\r\n    })\r\n}\r\n\r\nexport const Get =(p)=>{\r\n    return axios({\r\n        method:'get',\r\n        baseURL : apis.BASE,\r\n        ...p,\r\n    })\r\n}\r\n\r\n\r\nexport const SecurePost =(p)=>{\r\n    return axios({\r\n        method:'post',\r\n        baseURL : apis.BASE,\r\n        ...p,\r\n        params: {\r\n            ...p.params,\r\n            Token : auth.retriveToken()\r\n        }\r\n    })\r\n}\r\n\r\nexport const Post =(p)=>{\r\n    return axios({\r\n        baseURL : apis.BASE,\r\n        method:'post',\r\n        ...p,\r\n    })\r\n}\r\n\r\n\r\n\r\n","import apis from \"./Apis\";\r\nimport { Get, Post} from './axiosCall';\r\n\r\n\r\nclass AuthService{\r\n    constructor(){\r\n        this.token=null;\r\n        // console.log(apis.BASE);\r\n        // console.log(apis.BASE_LOCAL_URL);\r\n    }\r\n    \r\n    retriveToken = ()=>{\r\n        return localStorage.getItem('Token')\r\n    }\r\n\r\n    storeToken = (t)=>{\r\n        localStorage.setItem('Token', t);\r\n    }\r\n\r\n    deleteToken = ()=>{\r\n        localStorage.removeItem('Token');\r\n    }\r\n\r\n    LoginAuth = (u,p)=>{\r\n        return Post({\r\n            url:apis.LOGIN,\r\n            data:{\r\n                emailid : u,\r\n                password : p\r\n            }\r\n        })    \r\n    }\r\n\r\n    FetchAuth = (t)=>{\r\n        return Get({\r\n            url : apis.GETDETAILSUSER,\r\n            params : {\r\n                Token : t\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default new AuthService();\r\n","import auth from '../services/AuthServices';\r\n\r\nexport const login = (details)=> dispatch =>{\r\n    dispatch({\r\n       type : 'LOGIN',\r\n       payload : details\r\n    });\r\n};\r\n\r\n\r\nexport const logout = () => dispatch => {\r\n    dispatch({\r\n        type: 'LOGOUT',\r\n        payload1: 'Manual Logout'\r\n    });\r\n};\r\n\r\n\r\nexport const wakeUp = ()=> dispatch =>{\r\n    var t = auth.retriveToken() || null;\r\n    if(t && t!=='undefined'){\r\n        auth.wakeUp(t).then((res) => {\r\n            // console.log(`Wakeup success ${res}`)\r\n            dispatch({\r\n                type: 'LOGIN',\r\n                payload1: t,\r\n                payload2: res.data.user\r\n            });\r\n        })\r\n        .catch((err) => {\r\n            // console.log(`Wakeup error ${err}`)\r\n            if (err) {\r\n                dispatch({\r\n                    type: 'LOGOUT',\r\n                    payload1: 'Token Expired'\r\n                });\r\n            }\r\n        });\r\n    }\r\n    else{\r\n        dispatch({\r\n            type: 'LOGOUT',\r\n            payload1: 'No Token'\r\n        });\r\n    }\r\n}","import { Modal } from 'antd';\r\n\r\nexport default function Alert(s='warning',h,b) {\r\n    if(s==='success'){\r\n        return (\r\n            Modal.success({\r\n                title: h,\r\n                content:b,\r\n            })\r\n        )\r\n    }\r\n    else if(s==='error'){\r\n        return (\r\n            Modal.error({\r\n                title: h,\r\n                content:b,\r\n            })\r\n        )\r\n    }\r\n    else{\r\n        return (\r\n            Modal.warning({\r\n                title: h,\r\n                content:b,\r\n            })\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Paper from '@material-ui/core/Paper';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst Copyright = () => {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        Your Website\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: '100vh',\n  },\n  image: {\n    backgroundImage: 'url(https://res.cloudinary.com/gniusedu/image/upload/v1624111142/Untitled_design_lkndto.gif)',\n    backgroundRepeat: 'no-repeat',\n    backgroundColor:\n      theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\n    backgroundSize: 'cover',\n    backgroundPosition: 'center',\n  },\n  paper: {\n    margin: theme.spacing(8, 4),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center'\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nexport default function SignInSide(props) {\n  const classes = useStyles();\n\n  return (\n    <Grid container component=\"main\" className={classes.root}>\n      <CssBaseline />\n      <Grid item xs={false} sm={4} md={7} className={classes.image} />\n      <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\n        <div className={classes.paper}>\n          \n          <Avatar className={classes.avatar}>\n            <LockOutlinedIcon />\n          </Avatar>\n\n          <Typography component=\"h1\" variant=\"h5\">\n            Recruiter Login\n          </Typography>\n          \n          {props.children}\n          \n        </div>\n      </Grid>\n    </Grid>\n  );\n};\n","import React from \"react\";\r\nimport { Form, Input, Icon, Button } from 'antd';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { login, logout } from '../../../actions/loginAction';\r\nimport auth from '../../../services/AuthServices';\r\nimport Alert from '../../common/alert';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nimport SignIn from './SignInSide';\r\n\r\nimport './login.css';\r\n\r\nclass Login extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            isLoggedIn :false\r\n        }\r\n    }\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        this.props.form.validateFields((err, values) => {\r\n            if (!err) {\r\n                // console.log('Received values of form: ', values);\r\n                auth\r\n                .LoginAuth(values.email,values.password)\r\n                .then((response)=>{\r\n                    // console.log(response);\r\n                    if(response.data.success){\r\n                        this.props.login(response.data.user)\r\n                        auth.storeToken(response.data.token);\r\n                        this.setState({\r\n                            isLoggedIn : true\r\n                        })\r\n                    }\r\n                    else{\r\n                        return Alert('error','Error!', response.data.message);\r\n                    }\r\n                })\r\n                .catch((error)=>{\r\n                    // console.log(error);\r\n                    return Alert('error','Error!','Server Error');\r\n                })              \r\n            }\r\n        });\r\n    };\r\n\r\n    render(){\r\n        const { getFieldDecorator } = this.props.form;\r\n        if(this.state.isLoggedIn){\r\n            return <Redirect to={this.props.user.userOptions[0].link} />\r\n        }\r\n        else{\r\n            return(\r\n                <SignIn>\r\n                        <Form\r\n                            onSubmit={this.handleSubmit}\r\n                            autoComplete=\"off\"\r\n                        >\r\n                            <Form.Item label=\"Email\" hasFeedback>\r\n                                {getFieldDecorator('email', {\r\n                                    rules: [\r\n                                        {\r\n                                            type: 'email',\r\n                                            message: 'The input is not valid E-mail!',\r\n                                        },\r\n                                        {\r\n                                            required: true,\r\n                                            message: 'Please input your E-mail!',\r\n                                        },\r\n                                    ],\r\n                                })(<Input \r\n                                    prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                                    placeholder=\"Email\"/>)}\r\n                            </Form.Item>\r\n                            \r\n                            <Form.Item label=\"Password\" hasFeedback>\r\n                                {getFieldDecorator('password', {\r\n                                    rules: [\r\n                                        { \r\n                                            required: true, message: 'Please input your Password!' \r\n                                        }\r\n                                    ],\r\n                                })(\r\n                                    <Input.Password\r\n                                    prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                                    placeholder=\"Password\"\r\n                                    />,\r\n                                )}\r\n                            </Form.Item>\r\n\r\n                            <Form.Item>\r\n                                <Button type=\"primary\" htmlType=\"submit\" block>\r\n                                    Login\r\n                                </Button>\r\n                            </Form.Item>\r\n                        </Form>\r\n                </SignIn>\r\n            );\r\n        };\r\n    };\r\n};\r\n\r\nconst LoginForm = Form.create({ name: 'login' })(Login);\r\n\r\nconst mapStateToProps = state => ({\r\n    user : state.user\r\n});\r\n\r\nexport default connect(mapStateToProps,{\r\n    login, \r\n    logout\r\n})(LoginForm);","import React from 'react';\r\nimport './header.css'; \r\nimport main from './logo.png';\r\n\r\nfunction HomepageHeader(props) {\r\n    return (\r\n        <div>\r\n            <div className=\"header-container-2\">\r\n                <img src={main} alt=\"company logo\" className=\"logo\" />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HomepageHeader;","import React from 'react';\r\nimport './homepage.css';\r\nimport { connect } from 'react-redux';\r\nimport Login from '../login/login';\r\nimport HomepageHeader from '../header/header'; \r\nimport auth from '../../../services/AuthServices';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\n\r\nfunction Homepage(props) {\r\n  if(auth.retriveToken() && auth.retriveToken()!=='undefined'){\r\n    // console.log('Logged In');\r\n    return <Redirect to='/user/home' />\r\n  }\r\n  else{\r\n    // console.log('Not Logged In');\r\n    return (\r\n      <div>\r\n          <div className=\"parallax\">\r\n            <HomepageHeader/>\r\n            <Login />\r\n          </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  user : state.user\r\n});\r\n\r\nexport default connect(mapStateToProps,{\r\n  \r\n})(Homepage);\r\n","import apis from '../services/Apis';\r\nimport Alert from '../components/common/alert';\r\nimport { SecureGet } from '../services/axiosCall';\r\n\r\nexport const ChangeTrainerModalState = (d1,d2,d3)=> dispatch =>{\r\n    if(d3==='Save Changes'){\r\n        SecureGet({\r\n            url : `${apis.GET_SINGLE_TRAINER_DETAILS}/${d2}`\r\n        }).then((response)=>{\r\n            // console.log(response);\r\n            if(response.data.success){\r\n                dispatch({\r\n                    type : 'CHANGE_TRAINER_MODAL_STATE',\r\n                    payload1 : true,\r\n                    payload2 : d2,\r\n                    payload3 : 'Save Changes',\r\n                    payload4: {\r\n                        ...response.data.data[0],\r\n                        contact :response.data.data[0].contact.slice(3),\r\n                        prefix:response.data.data[0].contact.slice(0,3),\r\n                    }\r\n                })\r\n            }\r\n            else{\r\n                return Alert('warning','Warning!',response.data.message);\r\n            }\r\n        }).catch((error)=>{\r\n            return Alert('error','Error!','Server Error');\r\n        })\r\n    }\r\n    else{\r\n        dispatch({\r\n            type : 'CHANGE_TRAINER_MODAL_STATE',\r\n            payload1 : d1,\r\n            payload2 : d2,\r\n            payload3 : d3,\r\n            payload4: {\r\n                name : null,\r\n                emailid:null,\r\n                contact :null,\r\n                prefix:null,\r\n                password:null,\r\n                confirmpassword : null\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const ChangeTrainerConfirmDirty = (d)=> dispatch =>{\r\n    dispatch({\r\n       type : 'CHANGE_TRAINER_FORM_CONFIRMDIRTY',\r\n       payload : d\r\n    })\r\n}\r\n\r\n\r\nexport const ChangeTrainerSearchText = (d)=> dispatch =>{\r\n    dispatch({\r\n       type : 'CHANGE_TRAINER_SEARCH_TEXT',\r\n       payload : d\r\n    })\r\n}\r\n\r\nexport const ChangeTrainerTableData = ()=> dispatch =>{\r\n    dispatch({\r\n        type : 'CHANGE_TRAINER_TABLE_LOADING_STATUS',\r\n        payload1 : true,\r\n        payload2 : []\r\n    })\r\n    SecureGet({\r\n        url:  `${apis.GET_ALL_TRAINER}`\r\n    }).then((response)=>{\r\n        // console.log(response);\r\n        if(response.data.success){\r\n            dispatch({\r\n                type : 'CHANGE_TRAINER_TABLE_LOADING_STATUS',\r\n                payload1 : false,\r\n                payload2 : response.data.data\r\n            })\r\n        }\r\n        else{\r\n            Alert('error','Error!',response.data.message);\r\n            dispatch({\r\n                type : 'CHANGE_TRAINER_TABLE_LOADING_STATUS',\r\n                payload1 : false,\r\n                payload2 : []\r\n            })\r\n        }\r\n      }).catch((error)=>{\r\n        Alert('error','Error!','Server Error');\r\n        dispatch({\r\n            type : 'CHANGE_TRAINER_TABLE_LOADING_STATUS',\r\n            payload1 : false,\r\n            payload2 : []\r\n        })\r\n    })\r\n}\r\n\r\nexport const ChangeSubjectModalState = (d1,d2,d3)=> dispatch =>{\r\n    if(d3==='Save Changes'){\r\n        SecureGet({\r\n            url : `${apis.GET_SINGLE_SUBJECT_DETAILS}/${d2}`\r\n        }).then((response)=>{\r\n            if(response.data.success){\r\n                dispatch({\r\n                    type : 'CHANGE_SUBJECT_MODAL_STATE',\r\n                    payload1 : true,\r\n                    payload2 : d2,\r\n                    payload3 : 'Save Changes',\r\n                    payload4: response.data.data[0]\r\n                })\r\n            }\r\n            else{\r\n                return Alert('warning','Warning!',response.data.message);\r\n            }\r\n        }).catch((error)=>{\r\n            return Alert('error','Error!','Server Error');\r\n        })\r\n    }\r\n    else{\r\n        dispatch({\r\n            type : 'CHANGE_SUBJECT_MODAL_STATE',\r\n            payload1 : d1,\r\n            payload2 : d2,\r\n            payload3 : d3,\r\n            payload4: {\r\n                topic : null\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const ChangeSubjectConfirmDirty = (d)=> dispatch =>{\r\n    dispatch({\r\n       type : 'CHANGE_SUBJECT_FORM_CONFIRMDIRTY',\r\n       payload : d\r\n    })\r\n}\r\n\r\n\r\nexport const ChangeSubjectSearchText = (d)=> dispatch =>{\r\n    dispatch({\r\n       type : 'CHANGE_SUBJECT_SEARCH_TEXT',\r\n       payload : d\r\n    })\r\n}\r\n\r\nexport const ChangeSubjectTableData = (d)=> dispatch =>{\r\n    // console.log('fetchng subjects');\r\n    dispatch({\r\n       type : 'CHANGE_SUBJECT_TABLE_LOADING_STATUS',\r\n       payload1 : true,\r\n       payload2 :[]\r\n    })\r\n    SecureGet({\r\n        url:  `${apis.GET_ALL_SUBJECTS}`\r\n    }).then((response)=>{\r\n        // console.log(response);\r\n        if(response.data.success){\r\n            dispatch({\r\n                type : 'CHANGE_SUBJECT_TABLE_LOADING_STATUS',\r\n                payload1 : false,\r\n                payload2 : response.data.data\r\n            })\r\n        }\r\n        else{\r\n            Alert('error','Error!',response.data.message);\r\n            dispatch({\r\n                type : 'CHANGE_SUBJECT_TABLE_LOADING_STATUS',\r\n                payload1 : false,\r\n                payload2 : []\r\n            })\r\n        }\r\n      }).catch((error)=>{\r\n        Alert('error','Error!','Server Error');\r\n        dispatch({\r\n            type : 'CHANGE_SUBJECT_TABLE_LOADING_STATUS',\r\n            payload1 : false,\r\n            payload2 : []\r\n        })\r\n    })\r\n\r\n}\r\n","import React, { Component } from 'react'\r\nimport './newtrainer.css';\r\nimport {\r\n    Form,\r\n    Input,\r\n    Button,\r\n    Select,\r\n    Switch,\r\n    Icon,\r\n    Upload\r\n} from 'antd';\r\n\r\nimport { SecurePost } from '../../../services/axiosCall';\r\nimport apis from '../../../services/Apis';\r\nimport auth from '../../../services/AuthServices';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n    ChangeTrainerConfirmDirty,\r\n    ChangeTrainerModalState,\r\n    ChangeTrainerTableData\r\n} from '../../../actions/adminAction';\r\nimport Alert from '../../../components/common/alert';\r\n\r\nconst { Option } = Select;\r\nconst { TextArea } = Input;\r\n\r\nclass NewTrainer extends Component {\r\n    state = {\r\n        checked: this.props.admin.trainerdetails.status,\r\n        logo: null,\r\n        submitDisabled:false\r\n    };\r\n\r\n    toggle = () => {\r\n        this.setState({\r\n            checked: !this.state.checked,\r\n        });\r\n    };\r\n    \r\n    compareToFirstPassword = (rule, value, callback) => {\r\n        const form = this.props.form;\r\n        if (value && value !== form.getFieldValue('password')) {\r\n            callback('passwords are not same !');\r\n        } else {\r\n            callback();\r\n        }\r\n    };\r\n\r\n    validateToNextPassword = (rule, value, callback) => {\r\n        const form = this.props.form;\r\n        if (value && this.props.admin.TrainerconfirmDirty) {\r\n            form.validateFields(['confirm'], { force: true });\r\n        }\r\n        callback();\r\n    };\r\n\r\n    changeqImage = (f)=>{\r\n        this.setState((ps,pp)=>{\r\n            return({\r\n                logo:(f.link ?`${f.link}`:null),\r\n                submitDisabled:false\r\n            });\r\n        });\r\n    };\r\n\r\n    upl=()=>{\r\n        this.setState({\r\n            submitDisabled:true\r\n        });\r\n    };\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        this.props.form.validateFieldsAndScroll((err, values) => {\r\n            if (!err) {\r\n                // console.log('Received values of form: ', values);\r\n                SecurePost({\r\n                    url: `${apis.CREATE_TRAINER}`,\r\n                    data: {\r\n                        _id: this.props.admin.trainerId,\r\n                        name: values.name,\r\n                        password: values.password,\r\n                        emailid: values.emailid,\r\n                        contact: values.prefix + values.contact,\r\n                        status: this.state.checked,\r\n                        organisation: values.organisation,\r\n                        avatar: this.state.logo,\r\n                        bio: values.bio\r\n                    }\r\n                })\r\n                .then((response) => {\r\n                    if (response.data.success) {\r\n                        this.props.ChangeTrainerModalState(false, null, 'Register');\r\n                        Alert('success', 'Success', response.data.message);\r\n                        this.props.ChangeTrainerTableData();\r\n                    }\r\n                    else {\r\n                        // console.log(response.data);\r\n                        this.props.ChangeTrainerModalState(false, null, 'Register');\r\n                        return Alert('warning', 'Warning!', response.data.message);\r\n                    }\r\n                }).catch((error) => {\r\n                    this.props.ChangeTrainerModalState(false, null, 'Register');\r\n                    return Alert('error', 'Error!', 'Server Error');\r\n                });\r\n            }\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { getFieldDecorator } = this.props.form;\r\n\r\n        const prefixSelector = getFieldDecorator('prefix', {\r\n            initialValue: this.props.admin.trainerdetails.prefix || '+91',\r\n            rules: [{ required: true, message: 'Please enter contact no prefix' }],\r\n          })(\r\n            <Select style={{ width: 70 }}>\r\n              <Option value=\"+91\">+91</Option>\r\n            </Select>,\r\n        );\r\n\r\n        var QuestionImageprops = {\r\n            name: 'file',\r\n            action: `${apis.BASE}${apis.FILE_UPLOAD}?Token=${auth.retriveToken()}`,\r\n            listType: 'picture',\r\n        };\r\n\r\n        return (\r\n            <div className=\"register-trainer-form\">\r\n                <div className=\"register-trainer-form-body\">\r\n                    <Form  onSubmit={this.handleSubmit} autoComplete=\"off\">\r\n                        <Form.Item label=\"Name\" hasFeedback className=\"input-admin-trainer\">\r\n                            {getFieldDecorator('name', {\r\n                                initialValue : this.props.admin.trainerdetails.name,\r\n                                rules: [{ required: true, message: 'Please input your name!', whitespace: true }],\r\n                            })(<Input />)}\r\n                        </Form.Item>\r\n                    \r\n                        { !this.props.admin.trainerId ? <Form.Item label=\"E-mail\" hasFeedback className=\"input-admin-trainer\">\r\n                            {getFieldDecorator('emailid', {\r\n                                initialValue : this.props.admin.trainerdetails.emailid,\r\n                                rules: [\r\n                                    {\r\n                                        type: 'email',\r\n                                        message: 'The input is not valid E-mail!',\r\n                                    },\r\n                                    {\r\n                                        required: true,\r\n                                        message: 'Please input your E-mail!',\r\n                                    },\r\n                                ],\r\n                            })(<Input />)}\r\n                        </Form.Item> : null }\r\n\r\n                        <Form.Item label=\"Phone Number\" className=\"input-admin-trainer\">\r\n                            {getFieldDecorator('contact', {\r\n                                initialValue : this.props.admin.trainerdetails.contact,\r\n                                rules: [\r\n                                    { \r\n                                        required: true, \r\n                                        message: 'Please input your phone number!' \r\n                                    },\r\n                                    {\r\n                                        len:10,\r\n                                        message:'Contact number must be 10 digit long'\r\n                                    }],\r\n                            })(<Input addonBefore={prefixSelector} min={10} max={10} />)}\r\n                        </Form.Item>\r\n\r\n                        { !this.props.admin.trainerId ? <div><Form.Item label=\"Password\" hasFeedback className=\"input-admin-trainer\">\r\n                                {getFieldDecorator('password', {\r\n                                    initialValue : this.props.admin.trainerdetails.password,\r\n                                    rules: [\r\n                                        {\r\n                                            required: true,\r\n                                            message: 'Please input your password!',\r\n                                        },\r\n                                        {\r\n                                            validator: this.validateToNextPassword,\r\n                                        },\r\n                                    ],\r\n                                })(<Input.Password />)}\r\n                            </Form.Item>\r\n                        \r\n                            <Form.Item label=\"Confirm Password\" hasFeedback className=\"input-admin-trainer\">\r\n                                {getFieldDecorator('confirm', {\r\n                                    initialValue : this.props.admin.trainerdetails.confirmpassword,\r\n                                    rules: [\r\n                                    {\r\n                                        required: true,\r\n                                        message: 'Please confirm your password!',\r\n                                    },\r\n                                    {\r\n                                        validator: this.compareToFirstPassword,\r\n                                    },\r\n                                    ],\r\n                                })(<Input.Password onBlur={this.handleConfirmBlur} />)}\r\n                            </Form.Item>\r\n                        </div> : null}\r\n                        \r\n                        <Form.Item label=\"status\" className=\"input-admin-trainer\">\r\n                            {getFieldDecorator('status')(\r\n                                <Switch\r\n                                    checkedChildren={<Icon type=\"check\" />}\r\n                                    unCheckedChildren={<Icon type=\"close\" />}\r\n                                    checked={this.state.checked}\r\n                                    onChange={this.toggle}\r\n                                />\r\n                            )}\r\n                        </Form.Item>\r\n                        \r\n                        {/* Organisation Details */}\r\n                        <Form.Item label=\"Organisation Name\" hasFeedback className=\"input-admin-trainer\">\r\n                            {getFieldDecorator('organisation', {\r\n                                initialValue : this.props.admin.trainerdetails.organisation,\r\n                                rules: [{ required: true, message: 'Please input organisation name!', whitespace: true }],\r\n                            })(<Input />)}\r\n                        </Form.Item>\r\n\r\n                        <Form.Item label=\"Write About Your Organisation\" className=\"input-admin-trainer\" hasFeedback>\r\n                            {getFieldDecorator('bio', {\r\n                                initialValue : this.props.admin.trainerdetails.bio,\r\n                                rules: [{ required: true, message: 'Please Enter Company Details or About!' }],\r\n                            })(\r\n                                <TextArea rows={5} />\r\n                            )}\r\n                        </Form.Item>\r\n\r\n                        <Form.Item label=\"Organisation Logo\" className=\"input-admin-trainer\">\r\n                            <Upload \r\n                                {...QuestionImageprops}\r\n                                beforeUpload={this.upl}\r\n                                onRemove={this.changeqImage}\r\n                                onSuccess={this.changeqImage}\r\n                            >\r\n                                <Button>\r\n                                    <Icon type=\"upload\" /> Upload\r\n                                </Button>\r\n                            </Upload>\r\n                        </Form.Item>\r\n\r\n                        <Form.Item>\r\n                            <Button type=\"primary\" htmlType=\"submit\" block>\r\n                                {this.props.admin.Trainermode}\r\n                            </Button>\r\n                        </Form.Item>\r\n                    </Form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    admin : state.admin\r\n});\r\n\r\nconst NewTrainerForm = Form.create({ name: 'register' })(NewTrainer);\r\n\r\nexport default connect(mapStateToProps,{\r\n    ChangeTrainerConfirmDirty,\r\n    ChangeTrainerModalState,\r\n    ChangeTrainerTableData\r\n})(NewTrainerForm);\r\n\r\n","import React, { Component } from 'react';\r\nimport { Table, Input, Button, Icon, Typography, Divider, Modal, Popconfirm } from 'antd';\r\nimport Highlighter from 'react-highlight-words';\r\nimport { connect } from 'react-redux';\r\nimport { \r\n    ChangeTrainerSearchText,\r\n    ChangeTrainerTableData,\r\n    ChangeTrainerModalState\r\n} from '../../../actions/adminAction';\r\nimport './alltrainer.css'\r\nimport Alert from '../../../components/common/alert';\r\nimport {SecurePost} from '../../../services/axiosCall';\r\nimport apis from '../../../services/Apis';\r\nimport NewTrainerForm from '../newTrainer/newtrainer';\r\n\r\n\r\nclass AllTrainer extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state={\r\n      TrainertableLoading : false\r\n    }\r\n  }\r\n\r\n  openModal = (id,mode)=>{\r\n    this.props.ChangeTrainerModalState(true,id,mode);\r\n  }\r\n\r\n  closeModal = ()=>{\r\n    this.props.ChangeTrainerModalState(false,null,'Register');\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.props.ChangeTrainerTableData();\r\n  }\r\n\r\n  deleteTrainer = (id)=>{\r\n    SecurePost({\r\n      url : `${apis.DELETE_TRAINER}`,\r\n      data : {\r\n          _id : id\r\n      }\r\n    }).then((response)=>{\r\n      if(response.data.success){\r\n        Alert('success','Success',response.data.message);\r\n        this.props.ChangeTrainerTableData();\r\n      }\r\n      else{\r\n        return Alert('warning','Warning!',response.data.message);\r\n      }\r\n    }).catch((error)=>{\r\n      return Alert('error','Error!','Server Error');\r\n    })\r\n  }\r\n\r\n    getColumnSearchProps = dataIndex => ({\r\n        filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => (\r\n          <div style={{ padding: 8 }}>\r\n            <Input\r\n              ref={node => {\r\n                this.searchInput = node;\r\n              }}\r\n              placeholder={`Search ${dataIndex}`}\r\n              value={selectedKeys[0]}\r\n              onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\r\n              onPressEnter={() => this.handleSearch(selectedKeys, confirm)}\r\n              style={{ width: 188, marginBottom: 8, display: 'block' }}\r\n            />\r\n            <Button\r\n              type=\"primary\"\r\n              onClick={() => this.handleSearch(selectedKeys, confirm)}\r\n              icon=\"search\"\r\n              size=\"small\"\r\n              style={{ width: 90, marginRight: 8 }}\r\n            >\r\n              Search\r\n            </Button>\r\n            <Button onClick={() => this.handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>\r\n              Reset\r\n            </Button>\r\n          </div>\r\n        ),\r\n        filterIcon: filtered => (\r\n          <Icon type=\"search\" style={{ color: filtered ? '#1890ff' : undefined }} />\r\n        ),\r\n        onFilter: (value, record) =>\r\n          record[dataIndex]\r\n            .toString()\r\n            .toLowerCase()\r\n            .includes(value.toLowerCase()),\r\n        onFilterDropdownVisibleChange: visible => {\r\n          if (visible) {\r\n            setTimeout(() => this.searchInput.select());\r\n          }\r\n        },\r\n        render: text => (\r\n          <Highlighter\r\n            highlightStyle={{ backgroundColor: '#ffc069', padding: 0 }}\r\n            searchWords={[this.props.admin.TrainersearchText]}\r\n            autoEscape\r\n            textToHighlight={text.toString()}\r\n          />\r\n        ),\r\n      });\r\n    \r\n      handleSearch = (selectedKeys, confirm) => {\r\n        confirm();\r\n        this.props.ChangeTrainerSearchText(selectedKeys[0])\r\n      };\r\n    \r\n      handleReset = clearFilters => {\r\n        clearFilters();\r\n        this.props.ChangeTrainerSearchText('')\r\n      };\r\n\r\n    render() {\r\n      const { Title } = Typography;\r\n      const columns = [\r\n        {\r\n          title: 'Name',\r\n          dataIndex: 'name',\r\n          key: 'name',\r\n          width: '25%',\r\n          ...this.getColumnSearchProps('name'),\r\n        },\r\n        {\r\n          title: 'Email Id',\r\n          dataIndex: 'emailid',\r\n          key: 'emailid',\r\n          width: '25%',\r\n          ...this.getColumnSearchProps('emailid'),\r\n        },\r\n        {\r\n          title: 'Contact Number',\r\n          dataIndex: 'contact',\r\n          key: 'contact',\r\n          ...this.getColumnSearchProps('contact'),\r\n        },\r\n        {\r\n          title: 'Action',\r\n          key: '_id',\r\n          dataIndex: '_id',\r\n          render: (key) => (\r\n            <span>\r\n              <Button type=\"primary\" shape=\"circle\" icon=\"edit\" onClick={()=>this.openModal(key,'Save Changes')}/>\r\n                <Divider type=\"vertical\" />\r\n                <Popconfirm\r\n                  title=\"Are you sure？\"\r\n                  cancelText=\"No\"\r\n                  okText=\"Yes\"\r\n                  onConfirm={()=>{this.deleteTrainer(key)}}\r\n                  icon={<Icon type=\"delete\" style={{ color: 'red' }} />}\r\n                >\r\n                  <Button type=\"danger\" shape=\"circle\" icon=\"delete\" />\r\n                </Popconfirm>\r\n              \r\n            </span>\r\n          ),\r\n        },\r\n      ];\r\n        return (\r\n            <div className=\"admin-table-container\">\r\n              <Button type=\"primary\" icon=\"user-add\" style={{marginBottom:'10px'}} onClick={()=>this.openModal(null,'Register')}>\r\n                Add New\r\n              </Button> \r\n              <div className=\"register-trainer-form-header\">\r\n                <Title level={4} style={{color:'#fff',textAlign:'center'}}>List of Trainer</Title>\r\n              </div>\r\n              <Table \r\n                bordered={true} \r\n                columns={columns} \r\n                dataSource={this.props.admin.trainerTableData} \r\n                size=\"medium\" \r\n                pagination={{ pageSize: 5 }}\r\n                loading={this.props.admin.trainerTableLoadingStatus}\r\n                rowKey=\"_id\" \r\n              />;\r\n              <Modal\r\n                visible={this.props.admin.TrainermodalOpened}\r\n                title={false}\r\n                onOk={this.handleOk}\r\n                onCancel={this.closeModal}\r\n                style={{top :'20px',padding:'0px',backgroundColor:'rgb(155,175,190)'}}\r\n                width=\"40%\"\r\n                destroyOnClose={true}\r\n                footer={[\r\n                  \r\n                ]}\r\n              >\r\n                <NewTrainerForm />\r\n              </Modal>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    admin : state.admin\r\n});\r\n\r\nexport default connect(mapStateToProps,{\r\n    ChangeTrainerSearchText,\r\n    ChangeTrainerTableData,\r\n    ChangeTrainerModalState\r\n})(AllTrainer);","import React, { Component } from 'react'\r\nimport './newtopic.css';\r\nimport {\r\n    Form,\r\n    Input,\r\n    Button\r\n} from 'antd';\r\nimport { connect } from 'react-redux';\r\nimport {SecurePost} from '../../../services/axiosCall';\r\nimport apis from '../../../services/Apis';\r\nimport Alert from '../../../components/common/alert';\r\nimport { \r\n    ChangeSubjectConfirmDirty,\r\n    ChangeSubjectTableData,\r\n    ChangeSubjectModalState\r\n} from '../../../actions/adminAction';\r\n\r\nclass NewTopics extends Component {\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        this.props.form.validateFieldsAndScroll((err, values) => {\r\n            if (!err) {\r\n                // console.log('Received values of form: ', values);\r\n                SecurePost({\r\n                    url: `${apis.CREATE_SUBJECT}`,\r\n                    data: {\r\n                        _id: this.props.admin.SubjectId,\r\n                        topic: values.topic\r\n                    }\r\n                }).then((response) => {\r\n                    if (response.data.success) {\r\n                        this.props.ChangeSubjectModalState(false, null, 'New Topic');\r\n                        Alert('success', 'Success', response.data.message);\r\n                        this.props.ChangeSubjectTableData();\r\n                    }\r\n                    else {\r\n                        this.props.ChangeSubjectModalState(false, null, 'New Topic');\r\n                        return Alert('warning', 'Warning!', response.data.message);\r\n                    }\r\n                }).catch((error) => {\r\n                    this.props.ChangeSubjectModalState(false, null, 'New Topic');\r\n                    return Alert('error', 'Error!', 'Server Error');\r\n                });\r\n            }\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { getFieldDecorator } = this.props.form;\r\n        return (\r\n            <div className=\"register-subject-form\" >\r\n                <div className=\"register-trainer-form-body\">\r\n                    <Form  onSubmit={this.handleSubmit}>\r\n                        <Form.Item label=\"Topic Name\" hasFeedback className=\"input-admin-trainer\">\r\n                            {getFieldDecorator('topic', {\r\n                                initialValue : this.props.admin.subjectDetails.topic,\r\n                                rules: [{ required: true, message: 'Please input topic name!', whitespace: true }],\r\n                            })(<Input />)}\r\n                        </Form.Item>\r\n                        <Form.Item>\r\n                            <Button type=\"primary\" htmlType=\"submit\" block>\r\n                                {this.props.admin.Subjectmode}\r\n                            </Button>\r\n                        </Form.Item>\r\n                    </Form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    admin : state.admin\r\n});\r\n\r\nconst NewSubjectForm = Form.create({ name: 'register' })(NewTopics);\r\n\r\nexport default connect(mapStateToProps,{\r\n    ChangeSubjectConfirmDirty,\r\n    ChangeSubjectTableData,\r\n    ChangeSubjectModalState\r\n})(NewSubjectForm);\r\n\r\n","import React, { Component } from 'react';\r\nimport { Table, Input, Button, Icon, Typography,  Modal } from 'antd';\r\nimport Highlighter from 'react-highlight-words';\r\nimport { connect } from 'react-redux';\r\nimport { \r\n    ChangeSubjectSearchText,\r\n    ChangeSubjectTableData,\r\n    ChangeSubjectModalState\r\n} from '../../../actions/adminAction';\r\nimport './alltopics.css'\r\nimport NewSubjectForm from '../newTopics/newtopics';\r\n\r\n\r\n\r\nclass AllTopics extends Component {\r\n\r\n  openModal = (id,mode)=>{\r\n    this.props.ChangeSubjectModalState(true,id,mode);\r\n  }\r\n  \r\n  closeModal = ()=>{\r\n    this.props.ChangeSubjectModalState(false,null,'New Topic');\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.props.ChangeSubjectTableData();\r\n  }\r\n\r\n    getColumnSearchProps = dataIndex => ({\r\n        filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => (\r\n          <div style={{ padding: 8 }}>\r\n            <Input\r\n              ref={node => {\r\n                this.searchInput = node;\r\n              }}\r\n              placeholder={`Search ${dataIndex}`}\r\n              value={selectedKeys[0]}\r\n              onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\r\n              onPressEnter={() => this.handleSearch(selectedKeys, confirm)}\r\n              style={{ width: 188, marginBottom: 8, display: 'block' }}\r\n            />\r\n            <Button\r\n              type=\"primary\"\r\n              onClick={() => this.handleSearch(selectedKeys, confirm)}\r\n              icon=\"search\"\r\n              size=\"small\"\r\n              style={{ width: 90, marginRight: 8 }}\r\n            >\r\n              Search\r\n            </Button>\r\n            <Button onClick={() => this.handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>\r\n              Reset\r\n            </Button>\r\n          </div>\r\n        ),\r\n        filterIcon: filtered => (\r\n          <Icon type=\"search\" style={{ color: filtered ? '#1890ff' : undefined }} />\r\n        ),\r\n        onFilter: (value, record) =>\r\n          record[dataIndex]\r\n            .toString()\r\n            .toLowerCase()\r\n            .includes(value.toLowerCase()),\r\n        onFilterDropdownVisibleChange: visible => {\r\n          if (visible) {\r\n            setTimeout(() => this.searchInput.select());\r\n          }\r\n        },\r\n        render: text => (\r\n          <Highlighter\r\n            highlightStyle={{ backgroundColor: '#ffc069', padding: 0 }}\r\n            searchWords={[this.props.admin.SubjectsearchText]}\r\n            autoEscape\r\n            textToHighlight={text.toString()}\r\n          />\r\n        ),\r\n      });\r\n    \r\n      handleSearch = (selectedKeys, confirm) => {\r\n        confirm();\r\n        this.props.ChangeSubjectSearchText(selectedKeys[0])\r\n      };\r\n    \r\n      handleReset = clearFilters => {\r\n        clearFilters();\r\n        this.props.ChangeSubjectSearchText('')\r\n      };\r\n\r\n    render() {\r\n      const { Title } = Typography;\r\n      const columns = [\r\n        {\r\n          title: 'Name',\r\n          dataIndex: 'topic',\r\n          key: 'topic',\r\n          width: '70%',\r\n          ...this.getColumnSearchProps('topic'),\r\n        },\r\n        {\r\n          title: 'Action',\r\n          key: '_id',\r\n          dataIndex: '_id',\r\n          render: (key) => (\r\n            <span>\r\n              <Button type=\"primary\" shape=\"circle\" icon=\"edit\" onClick={()=>this.openModal(key,'Save Changes')}/>\r\n            </span>\r\n          ),\r\n        },\r\n      ];\r\n        return (\r\n            <div className=\"admin-table-container\">\r\n              <Button type=\"primary\" icon=\"file-text\" style={{marginBottom:'10px'}} onClick={()=>this.openModal(null,'New Topic')}>\r\n                Add New\r\n              </Button> \r\n              <div className=\"register-trainer-form-header\">\r\n                <Title level={4} style={{color:'#fff',textAlign:'center'}}>List of Topics</Title>\r\n              </div>\r\n              <Table \r\n                bordered={true} \r\n                columns={columns} \r\n                dataSource={this.props.admin.subjectTableData} \r\n                size=\"medium\" \r\n                pagination={{ pageSize: 5 }}\r\n                loading={this.props.admin.SubjectTableLoading}\r\n                rowKey=\"_id\"\r\n              />;\r\n              <Modal\r\n                visible={this.props.admin.SubjectmodalOpened}\r\n                title={false}\r\n                onOk={this.handleOk}\r\n                onCancel={this.closeModal}\r\n                style={{top :'20px',padding:'0px',backgroundColor:'rgb(155,175,190)'}}\r\n                destroyOnClose={true}\r\n                footer={[\r\n                  \r\n                ]}\r\n              >\r\n                <NewSubjectForm />\r\n              </Modal>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    admin : state.admin\r\n});\r\n\r\nexport default connect(mapStateToProps,{\r\n    ChangeSubjectSearchText,\r\n    ChangeSubjectTableData,\r\n    ChangeSubjectModalState\r\n})(AllTopics);","import apis from '../services/Apis';\r\nimport Alert from '../components/common/alert';\r\nimport { SecurePost } from '../services/axiosCall';\r\n\r\nexport const ChangeQuestionModalState = (d1) => dispatch => {\r\n    dispatch({\r\n        type : 'CHANGE_QUESTION_MODAL_STATE',\r\n        payload1 : d1,\r\n    });\r\n};\r\n\r\nexport const ChangeQuestionConfirmDirty = (d) => dispatch =>{\r\n    dispatch({\r\n       type : 'CHANGE_QUESTION_FORM_CONFIRMDIRTY',\r\n       payload : d\r\n    });\r\n};\r\n\r\n\r\nexport const ChangeQuestionSearchText = (d)=> dispatch =>{\r\n    dispatch({\r\n       type : 'CHANGE_QUESTION_SEARCH_TEXT',\r\n       payload : d\r\n    })\r\n}\r\n\r\nexport const ChangeQuestionTableData = (d) => dispatch => {\r\n    dispatch({\r\n        type: 'CHANGE_QUESTION_TABLE_LOADING_STATUS',\r\n        payload1: true,\r\n        payload2: []\r\n    });\r\n\r\n    SecurePost({\r\n        url: `${apis.GET_ALL_QUESTIONS}`,\r\n        data: {\r\n            subject: d\r\n        }\r\n    })\r\n    .then((response) => {\r\n        if (response.data.success) {\r\n            dispatch({\r\n                type: 'CHANGE_QUESTION_TABLE_LOADING_STATUS',\r\n                payload1: false,\r\n                payload2: response.data.data\r\n            });\r\n        }\r\n        else {\r\n            Alert('error', 'Error!', response.data.message);\r\n            dispatch({\r\n                type: 'CHANGE_QUESTION_TABLE_LOADING_STATUS',\r\n                payload1: false,\r\n                payload2: []\r\n            });\r\n        }\r\n    })\r\n    .catch((error) => {\r\n        Alert('error', 'Error!', 'Server Error');\r\n        dispatch({\r\n            type: 'CHANGE_QUESTION_TABLE_LOADING_STATUS',\r\n            payload1: false,\r\n            payload2: []\r\n        });\r\n    });\r\n};\r\n\r\nexport const ChangeSelectedSubjects = (d) => dispatch => {\r\n    dispatch({\r\n        type: 'CHANGE_SELECTED_SUBJECT',\r\n        payload: d\r\n    });\r\n};\r\n\r\nexport const ChangeQuestionFormData = (d) => dispatch => {\r\n    dispatch({\r\n        type: 'CHANGE_QUESTION_FORM_DATA',\r\n        payload: d\r\n    });\r\n};\r\n\r\nexport const AddFifthOptionInQuestion = () => dispatch => {\r\n    dispatch({\r\n        type: 'ADD_FIFTH_OPTION'\r\n    });\r\n};\r\n\r\nexport const ChangeTestDetailsModalState = (d1, d2) => dispatch => {\r\n    dispatch({\r\n        type: 'CHANGE_TEST_DETAILS_MODAL_STATE',\r\n        payload1: d1,\r\n        payload2: d2\r\n    });\r\n};\r\n\r\nexport const ChangeTestSearchText = (d) => dispatch => {\r\n    dispatch({\r\n        type: 'CHANGE_TEST_SEARCH_TEXT',\r\n        payload: d\r\n    });\r\n};\r\n\r\nexport const ChangeTestTableData = () => dispatch => {\r\n    dispatch({\r\n        type: 'CHANGE_TEST_TABLE_LOADING_STATUS',\r\n        payload1: true,\r\n        payload2: []\r\n    });\r\n\r\n    SecurePost({\r\n        url: `${apis.GET_ALL_TESTS}`,\r\n    }).then((response) => {\r\n        // console.log(response.data);\r\n        if (response.data.success) {\r\n            dispatch({\r\n                type: 'CHANGE_TEST_TABLE_LOADING_STATUS',\r\n                payload1: false,\r\n                payload2: response.data.data\r\n            });\r\n        }\r\n        else {\r\n            Alert('error', 'Error!', response.data.message);\r\n            dispatch({\r\n                type: 'CHANGE_TEST_TABLE_LOADING_STATUS',\r\n                payload1: false,\r\n                payload2: []\r\n            });\r\n        }\r\n    }).catch((error) => {\r\n        // console.log(error);\r\n        Alert('error', 'Error!', 'Server Error');\r\n        dispatch({\r\n            type: 'CHANGE_TEST_TABLE_LOADING_STATUS',\r\n            payload1: false,\r\n            payload2: []\r\n        });\r\n    });\r\n};\r\n\r\nexport const updateQuestiosnActiveTest = (d) => {\r\n    return {\r\n        type: 'CHANGE_CURRENT_ACTIVE_TEST_QUESTION',\r\n        payload: d\r\n    };\r\n};\r\n\r\n// Update Refer Table\r\nexport const UpdateReferTable = () => dispatch => {\r\n    SecurePost({\r\n        url: apis.LIST_REFER\r\n    })\r\n    .then((response) => {\r\n        if(response.data.success){\r\n            dispatch({\r\n                type: 'UPDATE_REFER_TABLE',\r\n                payload: response.data.data\r\n            });\r\n        }\r\n    })\r\n    .catch((error) => {\r\n        return Alert('error','Error!','Server Error');\r\n    });\r\n};","import React, { Component } from 'react'\r\nimport './newquestion.css';\r\nimport {\r\n    Form,\r\n    Input,\r\n    Button,\r\n    Select,\r\n    Row,\r\n    Col,\r\n    Checkbox,\r\n    Modal,\r\n    Upload,\r\n    Icon,\r\n    InputNumber \r\n} from 'antd';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { \r\n    ChangeQuestionConfirmDirty,\r\n    ChangeQuestionTableData,\r\n    ChangeQuestionModalState\r\n} from '../../../actions/trainerAction';\r\n\r\nimport { SecurePost } from '../../../services/axiosCall';\r\nimport apis from '../../../services/Apis';\r\nimport Alert from '../../../components/common/alert';\r\nimport auth from '../../../services/AuthServices';\r\n\r\nclass NewQuestion extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            questionDetails:{\r\n                questionimage:null,\r\n                options :[\r\n                    {\r\n                        image :null,\r\n                        body : null,\r\n                        isAnswer :false\r\n                    },\r\n                    {\r\n                        image :null,\r\n                        body : null,\r\n                        isAnswer :false\r\n                    },\r\n                    {\r\n                        image :null,\r\n                        body : null,\r\n                        isAnswer :false\r\n                    },\r\n                    {\r\n                        image :null,\r\n                        body : null,\r\n                        isAnswer :false\r\n                    }\r\n                ] ,  \r\n            },\r\n            adding:false,\r\n            submitDisabled:false,\r\n            fifthoptioAddButtonVisible:true\r\n        }\r\n        \r\n    }\r\n\r\n    addfifthOption = (e)=>{\r\n        this.setState((previousState,previousProps)=>{\r\n            return({\r\n                fifthoptioAddButtonVisible:false,\r\n                questionDetails:{\r\n                    ...previousState.questionDetails,\r\n                    options:[\r\n                        ...previousState.questionDetails.options,\r\n                        {\r\n                            image :null,\r\n                            body : null,\r\n                            isAnswer :false\r\n                        }\r\n                    ]\r\n                }\r\n            })\r\n        })\r\n    }\r\n\r\n    Customalert = ()=>{\r\n        Modal.confirm({\r\n            title: 'Confirm',\r\n            content: 'empty option can not be set as answer',\r\n            okText: 'I understand',\r\n            cancelText: null,\r\n        });\r\n    }\r\n    \r\n\r\n\r\n\r\n    OptionTextChange =(e,i)=>{\r\n        var newOptions = [...this.state.questionDetails.options]\r\n        newOptions[i]={\r\n            ...this.state.questionDetails.options[i],\r\n            body : e.target.value\r\n        }\r\n        if((newOptions[i].image==='undefined' || newOptions[i].image===undefined || newOptions[i].image===null || newOptions[i].image==='null') && \r\n            (newOptions[i].body==='undefined' || newOptions[i].body===undefined || newOptions[i].body==='null' || newOptions[i].body==='' || newOptions[i].body===null)){\r\n                newOptions[i]={\r\n                    ...this.state.questionDetails.options[i],\r\n                    isAnswer : false\r\n                }\r\n                this.setState((ps,pp)=>{\r\n                    return({\r\n                        questionDetails:{\r\n                            ...ps.questionDetails,\r\n                            options:newOptions\r\n                        }\r\n                    })\r\n                })\r\n        }\r\n        this.setState((ps,pp)=>{\r\n            return({\r\n                questionDetails:{\r\n                    ...ps.questionDetails,\r\n                    options:newOptions\r\n                }\r\n            })\r\n        })     \r\n    }\r\n\r\n    AnswerOptionSwitch = (e,i)=>{\r\n        if((this.state.questionDetails.options[i].body!=='' && this.state.questionDetails.options[i].body!==null)\r\n            || (this.state.questionDetails.options[i].image!==null && this.state.questionDetails.options[i].image!=='undefined' && this.state.questionDetails.options[i].image!==undefined)\r\n        ){\r\n            var newOptions = [...this.state.questionDetails.options]\r\n            newOptions[i]={\r\n                ...this.state.questionDetails.options[i],\r\n                isAnswer : e.target.checked\r\n            }\r\n            this.setState((ps,pp)=>{\r\n                return({\r\n                    questionDetails:{\r\n                        ...ps.questionDetails,\r\n                        options:newOptions\r\n                    }\r\n                })\r\n            })\r\n            \r\n        }\r\n        else{   \r\n            this.Customalert()\r\n            return;\r\n        }\r\n        \r\n    }\r\n\r\n    OptionImageonChange = (f,i)=>{\r\n        var newOptions = [...this.state.questionDetails.options]\r\n        if(!f){\r\n            delete newOptions[i].image\r\n            newOptions[i].image=null\r\n        }\r\n        else{\r\n            newOptions[i]={\r\n                ...this.state.questionDetails.options[i],\r\n                image :`${apis.BASE}/${f.link}`\r\n            }\r\n        }\r\n        this.setState({\r\n            submitDisabled:false\r\n        })\r\n        if((newOptions[i].image==='undefined' || newOptions[i].image===undefined || newOptions[i].image===null || newOptions[i].image==='null') && \r\n            (newOptions[i].body==='undefined' || newOptions[i].body===undefined || newOptions[i].body==='null' || newOptions[i].body==='' || newOptions[i].body===null)){\r\n                newOptions[i]={\r\n                    ...this.state.questionDetails.options[i],\r\n                    isAnswer : false\r\n                }\r\n        }\r\n        this.setState((ps,pp)=>{\r\n            return({\r\n                questionDetails:{\r\n                    ...ps.questionDetails,\r\n                    options:newOptions\r\n                }\r\n            })\r\n        })\r\n    }\r\n\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        this.props.form.validateFieldsAndScroll((err, values) => {\r\n            // console.log(values);\r\n            if (!err) {\r\n                var f=1;\r\n                var ans=0;\r\n                var opts=[]\r\n                // console.log('Received values of form: ', values);\r\n                this.state.questionDetails.options.forEach((element,i) => {\r\n                    opts.push({\r\n                        optbody:element.body,\r\n                        optimg:element.image,\r\n                        isAnswer:element.isAnswer\r\n                    });\r\n                    if((element.image==='undefined' || element.image===undefined || element.image===null || element.image==='null')&&(element.body==='' ||element.body===null || element.body==='null' || element.body==='undefined' || element.body===undefined )){\r\n                        f=0;\r\n                    }\r\n                    if(element.isAnswer){\r\n                        ans=ans+1\r\n                    }\r\n                })\r\n                if(f){\r\n                    if(!ans){\r\n                        Alert('warning','Warning!','There must be atleast one right answer');\r\n                    }\r\n                    else{\r\n                        this.setState({\r\n                            adding:true\r\n                        });\r\n                        SecurePost({\r\n                            url:apis.CREATE_QUESTIONS,\r\n                            data:{\r\n                                body:values.questionbody,\r\n                                options:opts,\r\n                                quesimg:this.state.questionDetails.questionimage,\r\n                                subject:values.subject,\r\n                                explanation:values.explanation,\r\n                                weightage:values.waitage,\r\n                            }\r\n                        }).then((response)=>{\r\n                            // console.log(response);\r\n                            this.setState({\r\n                                adding:false\r\n                            });\r\n                            if(response.data.success){\r\n                                this.props.ChangeQuestionModalState(false);\r\n                                Alert('success','Success',response.data.message);\r\n                                this.props.ChangeQuestionTableData(this.props.trainer.selectedSubjects);\r\n                            }\r\n                            else{\r\n                                this.props.ChangeQuestionModalState(false);\r\n                                this.props.form.resetFields();\r\n                                return Alert('warning','Warning!',response.data.message);\r\n                            }\r\n\r\n                        }).catch((error)=>{\r\n                            // console.log(error);\r\n                            this.props.form.resetFields();\r\n                            this.setState({\r\n                                adding:false,\r\n                                questionDetails:{\r\n                                    questionimage:null,\r\n                                    options :[\r\n                                        {\r\n                                            image :null,\r\n                                            body : null,\r\n                                            isAnswer :false\r\n                                        },\r\n                                        {\r\n                                            image :null,\r\n                                            body : null,\r\n                                            isAnswer :false\r\n                                        },\r\n                                        {\r\n                                            image :null,\r\n                                            body : null,\r\n                                            isAnswer :false\r\n                                        },\r\n                                        {\r\n                                            image :null,\r\n                                            body : null,\r\n                                            isAnswer :false\r\n                                        }\r\n                                    ] ,  \r\n                                }\r\n                            });\r\n                            this.props.ChangeQuestionModalState(false);\r\n                            return Alert('error','Error!','Server Error');\r\n                        })\r\n                        \r\n                    }\r\n                }\r\n                else{\r\n                    Alert('warning','Warning!','Please fill all the options');\r\n                }\r\n            }\r\n        });\r\n    };\r\n\r\n    changeqImage = (f)=>{\r\n        this.setState((ps,pp)=>{\r\n            return({\r\n                questionDetails:{\r\n                    ...ps.questionDetails,\r\n                    questionimage:(f.link ?`${apis.BASE}/${f.link}`:null)\r\n                },\r\n                submitDisabled:false\r\n            })\r\n        })\r\n    }\r\n\r\n    upl=()=>{\r\n        this.setState({\r\n            submitDisabled:true\r\n        })\r\n    }\r\n\r\n    render() {\r\n        // console.log(this.state)\r\n        const { getFieldDecorator } = this.props.form;\r\n        const { Option } = Select;\r\n        const { TextArea } = Input;\r\n        var QuestionImageprops = {\r\n            name: 'file',\r\n            action: `${apis.BASE}${apis.FILE_UPLOAD}?Token=${auth.retriveToken()}`,\r\n            listType: 'picture',\r\n        };\r\n        \r\n        return (\r\n            <div className=\"register-subject-form\" >\r\n                <div className=\"register-trainer-form-body\">\r\n                    <Form  onSubmit={this.handleSubmit}>\r\n                        <div>\r\n                            <Row>\r\n                                <Col span={8}>\r\n                                    <Form.Item label=\"Subject\" hasFeedback>\r\n                                        {getFieldDecorator('subject', {\r\n                                            rules: [{ required: true, message: 'Please select any subject!' }],\r\n                                        })(\r\n                                            <Select\r\n                                                showSearch\r\n                                                style={{ width:'100%'}}\r\n                                                placeholder=\"Select a subject\"\r\n                                                optionFilterProp=\"s\"\r\n                                            >\r\n                                                {\r\n                                                    this.props.admin.subjectTableData.map((d,i)=><Option key={d._id} s={d.topic} value={d._id}>{d.topic}</Option>)\r\n                                                }\r\n                                            </Select>\r\n                                        )}\r\n                                    </Form.Item>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row>\r\n                                <Col span={18}>\r\n                                    <Form.Item label=\"Question\" hasFeedback>\r\n                                        {getFieldDecorator('questionbody', {\r\n                                            rules: [{ required: true, message: 'Please type question!' }],\r\n                                        })(\r\n                                            <TextArea rows={5} />\r\n                                        )}\r\n                                    </Form.Item>\r\n                                </Col>\r\n                                <Col span={6} style={{padding : '0px 20px'}}>\r\n                                    <Form.Item label=\"Question Image\">\r\n                                        <Upload {...QuestionImageprops} beforeUpload={this.upl} onRemove={this.changeqImage} onSuccess={this.changeqImage}>\r\n                                            <Button>\r\n                                                <Icon type=\"upload\" /> Upload\r\n                                            </Button>\r\n                                        </Upload>\r\n                                    </Form.Item>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row>\r\n                                <Col span={18}>\r\n                                    <Form.Item label=\"Explanation\" hasFeedback>\r\n                                        {getFieldDecorator('explanation', {\r\n                                            rules: [{ required: true, message: 'Please type Explanation for the answers!' }],\r\n                                        })(\r\n                                            <TextArea onChange={this.ExplanationChange} rows={3} />\r\n                                        )}\r\n                                    </Form.Item>\r\n                                </Col>\r\n                                <Col offset={2} span={4}>\r\n                                    <Form.Item label=\"Weightage\" hasFeedback>\r\n                                        {getFieldDecorator('waitage', {\r\n                                            rules: [{ required: true, message: 'Please enter the marks' }],\r\n                                        })(\r\n                                            <InputNumber min={1} max={2}  />\r\n                                        )}\r\n                                    </Form.Item>\r\n                                </Col>\r\n                            </Row>\r\n                            <div style={{paddingTop:'20px'}}>\r\n                                {\r\n                                    this.state.questionDetails.options.map((option,i)=>{\r\n                                        return(\r\n                                            <Row key={i} className=\"\">\r\n                                                <Col offset={1} span={13}>\r\n                                                    <Form.Item label={`option${i+1}`}>\r\n                                                        <TextArea value={this.state.questionDetails.options[i].body} onChange={ (e)=>this.OptionTextChange(e,i)} rows={3} />\r\n                                                    </Form.Item>\r\n                                                </Col>\r\n                                                <Col offset={2} span={6} style={{textAlign:'center'}}>\r\n                                                    <Form.Item label={`Option${i+1} Image`}>\r\n                                                        <Upload {...QuestionImageprops} beforeUpload={this.upl} onRemove={(f)=>this.OptionImageonChange(null,i)} onSuccess={(f)=>this.OptionImageonChange(f,i)}>\r\n                                                            <Button>\r\n                                                                <Icon type=\"upload\" /> Upload\r\n                                                            </Button>\r\n                                                        </Upload>\r\n                                                    </Form.Item>\r\n                                                </Col>\r\n                                                <Col span={2} style={{padding : '55px 10px'}}>\r\n                                                    <Form.Item>\r\n                                                        <Checkbox checked={this.state.questionDetails.options[i].isAnswer} onChange={(e)=>this.AnswerOptionSwitch(e,i)} ></Checkbox>\r\n                                                    </Form.Item>\r\n                                                </Col>\r\n                                            </Row>                                                \r\n                                        )\r\n                                    })\r\n                                }\r\n                            </div>\r\n                            <Row>\r\n                                <Col span={12}>\r\n                                    { this.state.fifthoptioAddButtonVisible ? <Button type=\"primary\" onClick={(e)=>this.addfifthOption(e)}>Add 5th option</Button> : null}\r\n                                </Col>\r\n                            </Row>\r\n                            <Row>\r\n                                <Col offset={20}  span={4}>\r\n                                    <Form.Item>\r\n                                        <Button type=\"primary\" htmlType=\"submit\" disabled={this.state.submitDisabled} loading={this.state.adding} block>\r\n                                            Create Question\r\n                                        </Button>\r\n                                    </Form.Item>\r\n                                </Col>\r\n                            </Row>\r\n                            \r\n                        </div>\r\n                    </Form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    trainer : state.trainer,\r\n    admin : state.admin\r\n});\r\n\r\n\r\n\r\nconst NewQuestionForm = Form.create({ name: 'newQuestion' })(NewQuestion);\r\n\r\nexport default connect(mapStateToProps,{\r\n    ChangeQuestionConfirmDirty,\r\n    ChangeQuestionModalState,\r\n    ChangeQuestionTableData\r\n})(NewQuestionForm);\r\n\r\n","import React from 'react';\r\nimport ReactMarkdown from 'react-markdown';\r\nimport gfm from 'remark-gfm';\r\nimport {Prism as SyntaxHighlighter} from 'react-syntax-highlighter';\r\nimport {InlineMath, BlockMath} from 'react-katex';\r\nimport math from 'remark-math';\r\nimport 'katex/dist/katex.min.css';\r\n\r\nconst renderers = {\r\n  inlineMath: ({value}) => <InlineMath math={value} />,\r\n  math: ({value}) => <BlockMath math={value} />,\r\n  code: ({language, value}) => {\r\n    return <SyntaxHighlighter language={language} children={value} />\r\n  }\r\n};\r\n\r\nconst Markdown = (props) => {\r\n  return (\r\n    <ReactMarkdown renderers={renderers} plugins={[gfm,math]} {...props} />\r\n  )\r\n};\r\n\r\nexport default Markdown;","import React, { Component } from 'react';\r\nimport { Skeleton,Row, Col, Icon, Tabs,Descriptions,Button    } from 'antd';\r\nimport './questiondetails.css';\r\nimport apis from '../../../services/Apis';\r\nimport { SecureGet } from '../../../services/axiosCall';\r\nimport moment from 'moment';\r\nimport Markdown from '../../../utils/Markdown';\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nexport default class QuestionDetails extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            loading : true,\r\n            details:null\r\n        }\r\n    }\r\n\r\n    tabChange = (key)=>{\r\n        // console.log(key)\r\n    }\r\n\r\n    componentDidMount(){\r\n        var ID = this.props.id;\r\n\r\n        SecureGet({\r\n            url: `${apis.FETCH_SINGLE_QUESTION}/${ID}`,\r\n        }).then((response) => {\r\n            // console.log(response.data.data[0]);\r\n            this.setState({\r\n                details: response.data.data[0],\r\n                loading: false\r\n            })\r\n        }).catch((error) => {\r\n            // console.log(error);\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Skeleton loading={this.state.loading} active avatar>\r\n                    <Tabs defaultActiveKey=\"1\" onChange={(e) => this.tabChange(e)}>\r\n                        <TabPane tab={<span><Icon type=\"home\" />Basic Info</span>} key=\"1\">\r\n                            <Tab1 id={this.props.id} details={this.state.details} />\r\n                        </TabPane>\r\n                        <TabPane tab={<span><Icon type=\"question-circle\" />Question</span>} key=\"2\">\r\n                            <Tab2 details={this.state.details} />\r\n                        </TabPane>\r\n                    </Tabs>\r\n                </Skeleton>\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\n\r\nfunction Tab1(props) {\r\n    return (\r\n        <div>\r\n            <Descriptions bordered title=\"\" border size=\"small\" column={{ xxl: 1, xl: 1, lg: 1, md: 1, sm: 1, xs: 1 }}>\r\n                <Descriptions.Item label=\"Question Id\">{props.id}</Descriptions.Item>\r\n                <Descriptions.Item label=\"Subject\">{props.details.subject.topic}</Descriptions.Item>\r\n                <Descriptions.Item label=\"Difficulty\">{props.details.difficulty}</Descriptions.Item>\r\n                <Descriptions.Item label=\"No of Right Answers\">{props.details.anscount}</Descriptions.Item>\r\n                <Descriptions.Item label=\"Weightage\">{props.details.weightage}</Descriptions.Item>\r\n                <Descriptions.Item label=\"Created By\">{props.details.createdBy.name}</Descriptions.Item>\r\n                <Descriptions.Item label=\"Created on\">{moment(props.details.createdAt).format(\"DD/ MM/YYYY , hh:mm:ss\")}</Descriptions.Item>\r\n            </Descriptions>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nfunction Tab2(props){\r\n    const optn = ['A', 'B', 'C', 'D', 'E'];\r\n    const Optiondata = props.details;\r\n    // console.log(`details : ${Optiondata}`);\r\n\r\n    return (\r\n        <div className=\"mainQuestionDetailsContaine\">\r\n            <div className=\"questionDetailsBody\">\r\n                <Markdown>\r\n                    {Optiondata.body}\r\n                </Markdown>\r\n            </div>\r\n            \r\n            {Optiondata.quesimg ?\r\n                <div className=\"questionDetailsImageContainer\">\r\n                    <img alt=\"unable to load\" className=\"questionDetailsImage\" src={Optiondata.quesimg} />\r\n                </div>\r\n                : null\r\n            }\r\n            <div>\r\n                {Optiondata.options.map((d, i) => {\r\n                    return (\r\n                        <div key={i}>\r\n                            <Row type=\"flex\" justify=\"center\" className=\"QuestionDetailsOptions\">\r\n                                <Col span={2}>\r\n                                    {\r\n                                        d.isAnswer ? <Button className=\"green\" shape=\"circle\">{optn[i]}</Button> : <Button type=\"primary\" shape=\"circle\">{optn[i]}</Button>\r\n                                    }\r\n                                    \r\n                                </Col>\r\n                                {d.optimg ?\r\n                                    <Col span={6} style={{ padding: '5px' }}>\r\n                                        <img alt=\"unable to load\" className=\"questionDetailsImage\" src={d.optimg} />\r\n                                    </Col>\r\n                                    :\r\n                                    null\r\n                                }\r\n                                {d.optimg ?\r\n                                    <Col span={14}>{d.optbody}</Col>\r\n                                    :\r\n                                    <Col span={20}>{d.optbody}</Col>\r\n                                }\r\n                            </Row>\r\n                           \r\n                        </div>\r\n                    )\r\n                })}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n","import React, { Component } from 'react';\r\nimport { Table, Input, Button, Icon, Typography,Popconfirm,Divider, Modal, Select, Row, Col  } from 'antd';\r\nimport Highlighter from 'react-highlight-words';\r\nimport { connect } from 'react-redux';\r\nimport { \r\n  ChangeQuestionModalState,\r\n  ChangeQuestionTableData,\r\n  ChangeQuestionSearchText,\r\n  ChangeSelectedSubjects\r\n} from '../../../actions/trainerAction';\r\nimport { \r\n  ChangeSubjectTableData\r\n} from '../../../actions/adminAction';\r\nimport './allquestion.css'\r\nimport Alert from '../../../components/common/alert';\r\nimport {SecurePost} from '../../../services/axiosCall';\r\nimport apis from '../../../services/Apis';\r\nimport NewQuestionForm from '../newquestion/newquestion';\r\nimport QuestionDetails from '../questionDetails/questiondetails';\r\n\r\nclass AllQuestions extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state={\r\n      questiondetailsId : null,\r\n      questiondetailsModelVisible:false\r\n    }\r\n  }\r\n  \r\n  OpendetailsModal = (id)=>{\r\n    this.setState((previousState,previousProps)=>{\r\n      return{\r\n        questiondetailsId:id,\r\n        questiondetailsModelVisible:true\r\n      }\r\n    })\r\n  }\r\n  ClosedetailsModal = ()=>{\r\n    this.setState((previousState,previousProps)=>{\r\n      return{\r\n        questiondetailsId:null,\r\n        questiondetailsModelVisible:false\r\n      }\r\n    })\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.props.ChangeSubjectTableData();\r\n    this.props.ChangeQuestionTableData(this.props.trainer.selectedSubjects);\r\n  }\r\n\r\n  openNewModal = (mode)=>{\r\n    this.props.ChangeQuestionModalState(true);\r\n  }\r\n\r\n  closeNewModal = ()=>{\r\n    this.props.ChangeQuestionModalState(false);\r\n  }\r\n\r\n  handleSubjectChange =(s)=>{\r\n    this.props.ChangeSelectedSubjects(s);\r\n    this.props.ChangeQuestionTableData(s);\r\n  }\r\n\r\n  deleteQuestion = (id)=>{\r\n    SecurePost({\r\n      url : `${apis.DELETE_QUESTION}`,\r\n      data : {\r\n          _id : id\r\n      }\r\n    }).then((response)=>{\r\n      if(response.data.success){\r\n        Alert('success','Success',response.data.message);\r\n        this.props.ChangeQuestionTableData(this.props.trainer.selectedSubjects);\r\n      }\r\n      else{\r\n        return Alert('warning','Warning!',response.data.message);\r\n      }\r\n    }).catch((error)=>{\r\n      return Alert('error','Error!','Server Error');\r\n    })\r\n  }\r\n\r\n    getColumnSearchProps = dataIndex => ({\r\n        filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => (\r\n          <div style={{ padding: 8 }}>\r\n            <Input\r\n              ref={node => {\r\n                this.searchInput = node;\r\n              }}\r\n              placeholder={`Search ${dataIndex}`}\r\n              value={selectedKeys[0]}\r\n              onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\r\n              onPressEnter={() => this.handleSearch(selectedKeys, confirm)}\r\n              style={{ width: 188, marginBottom: 8, display: 'block' }}\r\n            />\r\n            <Button\r\n              type=\"primary\"\r\n              onClick={() => this.handleSearch(selectedKeys, confirm)}\r\n              icon=\"search\"\r\n              size=\"small\"\r\n              style={{ width: 90, marginRight: 8 }}\r\n            >\r\n              Search\r\n            </Button>\r\n            <Button onClick={() => this.handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>\r\n              Reset\r\n            </Button>\r\n          </div>\r\n        ),\r\n        filterIcon: filtered => (\r\n          <Icon type=\"search\" style={{ color: filtered ? '#1890ff' : undefined }} />\r\n        ),\r\n        onFilter: (value, record) =>\r\n          record[dataIndex]\r\n            .toString()\r\n            .toLowerCase()\r\n            .includes(value.toLowerCase()),\r\n        onFilterDropdownVisibleChange: visible => {\r\n          if (visible) {\r\n            setTimeout(() => this.searchInput.select());\r\n          }\r\n        },\r\n        render: text => (\r\n          <Highlighter\r\n            highlightStyle={{ backgroundColor: '#ffc069', padding: 0 }}\r\n            searchWords={[this.props.trainer.QuestionsearchText]}\r\n            autoEscape\r\n            textToHighlight={text.toString()}\r\n          />\r\n        ),\r\n      });\r\n    \r\n      handleSearch = (selectedKeys, confirm) => {\r\n        confirm();\r\n        this.props.ChangeQuestionSearchText(selectedKeys[0])\r\n      };\r\n    \r\n      handleReset = clearFilters => {\r\n        clearFilters();\r\n        this.props.ChangeQuestionSearchText('')\r\n      };\r\n\r\n    render() {\r\n      const { Title } = Typography;\r\n\r\n      const columns = [\r\n        {\r\n          title: 'Subject',\r\n          dataIndex: 'subject.topic',\r\n          key: 'subject.topic',\r\n          width: '15%',\r\n        },\r\n        {\r\n          title: 'Question',\r\n          dataIndex: 'body',\r\n          key: 'body',\r\n          width: '50%',\r\n          ...this.getColumnSearchProps('body'),\r\n        },\r\n        {\r\n          title: 'Created By',\r\n          dataIndex: 'createdBy.name',\r\n          key: 'createdBy.name',\r\n          width: '15%'\r\n        },\r\n        {\r\n          title: 'Action',\r\n          key: '_id',\r\n          dataIndex: '_id',\r\n          width: '15%',\r\n          render: (key) => (\r\n            <span>\r\n              <Button \r\n                type=\"primary\" \r\n                shape=\"circle\" \r\n                onClick={()=>this.OpendetailsModal(key)} \r\n                icon=\"info-circle\" \r\n              />\r\n            </span>\r\n          ),\r\n        },\r\n      ];\r\n        return (\r\n            <div className=\"admin-table-container\">\r\n              <div>\r\n                <Row>\r\n\r\n                  <Col span={12}>\r\n                    <Button \r\n                      type=\"primary\" \r\n                      icon=\"question-circle\" \r\n                      style={{marginBottom:'10px'}} \r\n                      onClick={()=>this.openNewModal('Add New Question')}\r\n                    >\r\n                      Add New MCQ/MSQ Question\r\n                    </Button>\r\n                  </Col>\r\n\r\n                  <Col span={12}>\r\n                    <Select\r\n                      mode=\"multiple\"\r\n                      placeholder=\"Select one or more subjects\"\r\n                      defaultValue={this.props.trainer.selectedSubjects}\r\n                      onChange={this.handleSubjectChange}\r\n                      style={{ width: '100%' }}\r\n                      allowClear={true}\r\n                      optionFilterProp=\"s\"\r\n                    >\r\n                      {this.props.admin.subjectTableData.map(item => (\r\n                        <Select.Option key={item._id} value={item._id} s={item.topic}>\r\n                          {item.topic}\r\n                        </Select.Option>\r\n                      ))}\r\n                    </Select>\r\n                  </Col>\r\n                </Row>\r\n              </div>\r\n              \r\n              <div className=\"register-trainer-form-header\">\r\n                <Title level={4} style={{color:'#fff',textAlign:'center'}}>\r\n                  List of MCQ/MSQ Questions\r\n                </Title>\r\n              </div>\r\n              \r\n              <Table \r\n                bordered={true} \r\n                columns={columns} \r\n                dataSource={this.props.trainer.QuestionTableData} \r\n                size=\"medium\" \r\n                pagination={{ pageSize: 5 }}\r\n                loading={this.props.trainer.QuestionTableLoading}\r\n                rowKey=\"_id\" \r\n              />\r\n\r\n              <Modal\r\n                visible={this.props.trainer.NewQuestionmodalOpened}\r\n                title=\"New Question\"\r\n                onCancel={this.closeNewModal}\r\n                style={{top :'20px',padding:'0px',backgroundColor:'rgb(155,175,190)'}}\r\n                width=\"90%\"\r\n                destroyOnClose={true}\r\n                footer={[]}\r\n              >\r\n                <NewQuestionForm />\r\n              </Modal>\r\n\r\n              <Modal\r\n                visible={this.state.questiondetailsModelVisible}\r\n                title=\"Question Details\"\r\n                onCancel={this.ClosedetailsModal}\r\n                style={{top :'20px',padding:'0px',backgroundColor:'rgb(155,175,190)'}}\r\n                width=\"70%\"\r\n                destroyOnClose={true}\r\n                footer={[]}\r\n              >\r\n                <QuestionDetails id={this.state.questiondetailsId} / >\r\n              </Modal>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    trainer : state.trainer,\r\n    admin : state.admin\r\n});\r\n\r\nexport default connect(mapStateToProps,{\r\n  ChangeQuestionModalState,\r\n  ChangeQuestionTableData,\r\n  ChangeQuestionSearchText,\r\n  ChangeSelectedSubjects,\r\n  ChangeSubjectTableData\r\n})(AllQuestions);","import React, { Component } from 'react'\r\nimport apis from '../../../services/Apis';\r\nimport { SecurePost } from '../../../services/axiosCall';\r\nimport Alert from '../../common/alert';\r\nimport { Button, Row, Col, Typography } from 'antd';\r\nimport Markdown from '../../../utils/Markdown';\r\nimport './conducttes.css';\r\n\r\nconst { Title } = Typography;\r\n\r\nexport default class Questions extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            loading: false,\r\n            total: 0\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.refreshquestionList();\r\n    }   \r\n\r\n    refreshquestionList = ()=>{\r\n        this.setState({\r\n            loading: true\r\n        });\r\n        \r\n        SecurePost({\r\n            url: `${apis.GET_TEST_QUESTIONS}`,\r\n            data: {\r\n                id: this.props.id\r\n            }\r\n        }).then((response) => {\r\n            // console.log(response);\r\n            if (response.data.success) {\r\n                this.props.updateQuestiosnTest(response.data.data);\r\n            }\r\n            else {\r\n                Alert('error', 'Error!', response.data.message)\r\n            }\r\n            this.setState({\r\n                loading: false\r\n            })\r\n        }).catch((error) => {\r\n            // console.log(error);\r\n            Alert('error', 'Error!', 'Server Error')\r\n            this.setState({\r\n                loading: false\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const aMap = ['A', 'B', 'C', 'D', 'E'];\r\n        var sum = 0;\r\n\r\n        return (\r\n            <div>\r\n                <Row>\r\n                    <Col span={24}>\r\n                        <h6 style={{fontSize: '14px'}}>\r\n                            Total Marks: {'  '}\r\n                            {\r\n                                this.props.questionsOfTest.reduce((accumulator, current) => accumulator + current.weightage, 0)\r\n                            }\r\n                        </h6>\r\n                    </Col>\r\n                </Row>\r\n                \r\n                {\r\n                    this.props.questionsOfTest.map((d, i) => {\r\n                        \r\n                        return(\r\n                            <div key={i} style={{ paddingBottom: '50px' }}>\r\n                                \r\n                                <Row>\r\n                                    <Col span={1}>\r\n                                        <Button type=\"primary\" shape=\"circle\" >{i+1}</Button>\r\n                                    </Col>\r\n                                    <Col span={d.quesimg?6:0}>\r\n                                        <img alt=\"unable to load\" src={d.quesimg} style={{width:'100%'}}/>\r\n                                    </Col>\r\n                                    <Col span={d.quesimg?16:22} style={{padding:'10px'}}>\r\n                                        <Markdown>{d.body}</Markdown>\r\n                                    </Col>\r\n                                    <Col span={1}>\r\n                                        Marks:{d.weightage}\r\n                                    </Col>\r\n                                    <Col offset={1} span={23}>\r\n                                        <Row>\r\n                                            {d.options.map((dd,ii)=>{\r\n                                                return(\r\n                                                    <Col key={ii} span={12} style={{paddingBottom:'30px'}}>\r\n                                                        <Row>\r\n                                                            <Col span={1}>\r\n                                                            {\r\n                                                                dd.isAnswer?<Button className=\"green\" shape=\"circle\">{aMap[ii]}</Button>:<Button type=\"primary\" shape=\"circle\">{aMap[ii]}</Button>\r\n                                                            }\r\n                                                            </Col>\r\n                                                            <Col offset={1} span={dd.optimg?8:0}>\r\n                                                                <img alt=\"unable to load\" src={dd.optimg} style={{width:'100%'}} />\r\n                                                            </Col>\r\n                                                            <Col offset={1} span={dd.optimg?12:21}>\r\n                                                                <p>{dd.optbody}</p>\r\n                                                            </Col>\r\n                                                        </Row>\r\n                                                    </Col>\r\n                                                )\r\n                                            })}\r\n                                        </Row>\r\n                                    </Col>\r\n                                </Row>\r\n\r\n                            </div> \r\n                        )\r\n                    })\r\n                }\r\n                \r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport './testdetails.css';\r\nimport { Card,Row,Col  } from 'antd';\r\nimport { Bar, Doughnut } from 'react-chartjs-2';\r\nimport {bgcolor,bordercolor} from '../../../services/bgcolor';\r\n\r\nexport default class Stats extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            id:this.props.id,\r\n            stats:this.props.stats,\r\n            Scorelable:[],\r\n            Scoredata:[],\r\n            bgColor1:[],\r\n            borcolor1:[],\r\n            maxmMarks:this.props.maxmMarks,\r\n            passData:[0,0],\r\n            passLable:['Fail','Pass'],\r\n            stat:['91% to 100%','81% to 90%','71% to 80%','61% to 70%','50% to 60%','Below 50%'],\r\n            statdata:[0,0,0,0,0,0]\r\n        } \r\n    }\r\n    \r\n    componentWillMount(){\r\n        let {bgColor1,borcolor1}=this.state;\r\n        var maxi=-1;\r\n        let p=0;\r\n        let f=0;\r\n        let p90_100=0;\r\n        let p80_90=0;\r\n        let p70_80=0;\r\n        let p60_70=0;\r\n        let p50_60=0;\r\n        let below50=0;\r\n        var pc=0;\r\n        this.state.stats.map((d, i) => {\r\n            pc = (d.score / this.state.maxmMarks) * 100;\r\n            if (pc >= 91) {\r\n                p90_100++;\r\n            }\r\n            else if (pc >= 81) {\r\n                p80_90++;\r\n            }\r\n            else if (pc >= 71) {\r\n                p70_80++;\r\n            }\r\n            else if (pc >= 61) {\r\n                p60_70++;\r\n            }\r\n            else if (pc >= 50) {\r\n                p50_60++;\r\n            }\r\n            else {\r\n                below50++;\r\n            }\r\n\r\n            if (d.score >= this.state.maxmMarks / 2) {\r\n                p++;\r\n            }\r\n            else {\r\n                f++;\r\n            }\r\n            if (d.score > maxi) {\r\n                maxi = d.score\r\n            }\r\n        });\r\n        var dp =[];\r\n        var label = [];\r\n        \r\n        for(let i=0;i<=maxi;i++){\r\n            dp.push(0);\r\n            label.push(i);\r\n            bgColor1.push(bgcolor[i]);\r\n            borcolor1.push(bordercolor[i]);\r\n\r\n        };\r\n        \r\n        this.state.stats.map((d, i) => {\r\n            dp[d.score]++;\r\n        });\r\n\r\n        this.setState({\r\n            Scorelable: label,\r\n            Scoredata: dp,\r\n            bgColor1: bgColor1,\r\n            borcolor1: borcolor1,\r\n            passData: [f, p],\r\n            statdata: [p90_100, p80_90, p70_80, p60_70, p50_60, below50]\r\n        });\r\n    }\r\n\r\n    render() {\r\n        let barData={\r\n            labels:this.state.Scorelable,\r\n            datasets:[{\r\n                label: 'Scores',\r\n                data: this.state.Scoredata,\r\n                backgroundColor:this.state.bgColor1,\r\n                borderColor:this.state.borcolor1,\r\n                borderWidth: 1\r\n            }]\r\n        }\r\n        let DoughNutData1={\r\n            labels:this.state.passLable,\r\n            datasets:[{\r\n                label: 'Pass/Fail',\r\n                data: this.state.passData,\r\n                backgroundColor:[bgcolor[0],bgcolor[1]],\r\n                borderColor:[bordercolor[0],bordercolor[1]],\r\n                borderWidth: 1\r\n            }]\r\n        }\r\n        let DoughNutData2={\r\n            labels:this.state.stat,\r\n            datasets:[{\r\n                label: 'Percentage wise category',\r\n                data: this.state.statdata,\r\n                backgroundColor:[bgcolor[0],bgcolor[1],bgcolor[2],bgcolor[3],bgcolor[4],bgcolor[5]],\r\n                borderColor:[bordercolor[0],bordercolor[1],bordercolor[2],bordercolor[3],bordercolor[4],bordercolor[5]],\r\n                borderWidth: 1\r\n            }]\r\n        }\r\n        return (\r\n            <div>\r\n                <div>\r\n                    <Card >\r\n                        <div className=\"download-section\">\r\n                            <b>Download the test result excel sheet.</b>\r\n                            <a href={this.props.file} target=\"_blank\" className=\"download-xlsx\">Download</a>\r\n                        </div>\r\n                    </Card>\r\n                </div> \r\n                <div style={{marginTop:'10px'}}>\r\n                    <Card >\r\n                        <div style={{padding:'10px 10px 0px 10px'}}>\r\n                            <b>Score vs No of students.</b>\r\n                        </div>\r\n                        <div style={{padding:'0px 10px 10px 10px'}}>\r\n                            <Bar\r\n                                data={barData}\r\n                                options={{ maintainAspectRatio: false }}\r\n                            />\r\n                        </div>\r\n                    </Card>\r\n                </div>\r\n                <div style={{marginTop:'10px'}}>\r\n                    <Card >\r\n                        <Row>\r\n                            <Col span={12}>\r\n                                <div style={{padding:'10px 10px 0px 10px'}}>\r\n                                    <b>Pass/Fail.</b>\r\n                                </div>\r\n                                <div style={{padding:'0px 10px 10px 10px'}}>\r\n                                    <Doughnut data={DoughNutData1} />\r\n                                </div>\r\n                            </Col>\r\n                            <Col span={12}>\r\n                                <div style={{padding:'10px 10px 0px 10px'}}>\r\n                                    <b>Percentage wise category.</b>\r\n                                </div>\r\n                                <div style={{padding:'0px 10px 10px 10px'}}>\r\n                                    <Doughnut data={DoughNutData2} />\r\n                                </div>\r\n                            </Col>\r\n                        </Row>\r\n                        \r\n                    </Card>\r\n                </div>                \r\n            </div>\r\n        )\r\n    };\r\n};\r\n","import React from 'react';\r\nimport { Table, Tag, Card, Typography } from 'antd';\r\n\r\nconst { Title } = Typography;\r\n\r\nexport default function Trainee(props) {\r\n    let maxMarks = props.maxmMarks || 2;\r\n\r\n    const columns = [\r\n        {\r\n            title: 'Name',\r\n            dataIndex: 'userid.name',\r\n            key: 'userid.name'\r\n        },\r\n        {\r\n            title: 'Email Id',\r\n            dataIndex: 'userid.emailid',\r\n            key: 'userid.emailid',\r\n        },\r\n        {\r\n            title: 'Contact No',\r\n            dataIndex: 'userid.contact',\r\n            key: 'userid.contact',\r\n        },\r\n        {\r\n            title: 'Organisation',\r\n            dataIndex: 'userid.organisation',\r\n            key: 'userid.organisation',\r\n        },\r\n        {\r\n            title:'Score',\r\n            dataIndex: 'score',\r\n            key: 'score',\r\n        },\r\n        {\r\n            title:'Status',\r\n            dataIndex:'score',\r\n            key: '_id',\r\n            render: tag => (\r\n                <span>\r\n                    <Tag color={tag >= maxMarks/2 ? 'green' : 'red'} key={tag}>\r\n                        {tag >= maxMarks/2 ? 'Pass' : 'Fail'}\r\n                    </Tag>\r\n                </span>\r\n            )\r\n        }\r\n    ];\r\n    return (\r\n        <div>\r\n            <Card>\r\n                <div className=\"download-section\">\r\n                    <Title level={4}>\r\n                        MCQ Assessment Result\r\n                    </Title>\r\n\r\n                    <Table \r\n                        pagination={false} \r\n                        rowKey=\"_id\" \r\n                        columns={columns} \r\n                        dataSource={props.stats}\r\n                    />\r\n                </div>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Card, Rate, Comment, Avatar } from 'antd';\r\n\r\nexport default function FeedBacks(props) {\r\n    // console.log(props.feedbacks);\r\n    return (\r\n        <div>\r\n            <Card>\r\n                <div className=\"download-section\">\r\n                    <h3>\r\n                        <b>Feedbacks</b>\r\n                    </h3>\r\n\r\n                    <div>\r\n                        {props.feedbacks.map((d,i)=>{\r\n                            return(\r\n                                <Card key={i} style={{marginBottom:'10px'}}>\r\n                                    <Comment\r\n                                        author={`${d.userid.name} - ${d.userid.organisation} `}\r\n                                        avatar={\r\n                                            <Avatar\r\n                                                src=\"https://res.cloudinary.com/gniusedu/image/upload/v1616994666/gnius-jpg_aspibu.jpg\"\r\n                                                alt={d.userid.name}\r\n                                            />\r\n                                        }\r\n                                        content={\r\n                                            <span>\r\n                                                <Rate size=\"small\" disabled defaultValue={d.rating} />\r\n                                                <p>\r\n                                                    {d.feedback}\r\n                                                </p>\r\n                                            </span>\r\n                                        }\r\n                                    />\r\n                                </Card>\r\n                            ) \r\n                        })}\r\n                    </div>\r\n                </div>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, Fragment, useEffect } from \"react\";\nimport AceEditor from \"react-ace\";\nimport { Typography, Button, notification, Icon } from 'antd';\nimport axios from 'axios';\n\nimport \"ace-builds/src-noconflict/mode-java\";\nimport \"ace-builds/src-noconflict/mode-c_cpp\";\nimport \"ace-builds/src-noconflict/mode-python\";\nimport \"ace-builds/src-noconflict/mode-javascript\";\n\nimport \"ace-builds/src-noconflict/theme-github\";\nimport \"ace-builds/src-noconflict/theme-monokai\";\n\nimport { SecurePost } from '../../../../services/axiosCall';\nimport apis from '../../../../services/Apis';\nimport Markdown from '../../../../utils/Markdown';\n\nconst { Title, Text } = Typography;\nconst key = 'updatable';\n\nconst CodeEditor = (props) => {\n  const [question, setQuestion] = useState({\n    loading: false,\n    error: \"\",\n    evaluating: false,\n    question: \"\",\n    name: \"\",\n    language: \"\",\n    code: \"\",\n    editorMode: \"c_cpp\",\n    fontSize: 16,\n    testcaseshow: false \n  });\n\n  const [score, setscore] = useState([]);\n\n  // useEffect(() => {}, []);\n\n  const handleCodeChange = (ncode) => {\n    setQuestion({ ...question, code: ncode });\n    // console.log(ncode);\n  };\n  \n  const handleMode = (event) => {\n    let lang = event.target.value;\n  \n    let req_mode = \"c_cpp\";\n    \n    if (lang === '48') {\n      req_mode = \"c_cpp\"\n    }\n\n    if (lang === '52') {\n        req_mode = \"c_cpp\"\n    }\n\n    else if (lang ==='62') {\n      req_mode = \"java\"\n    }\n\n    else if (lang === '70') {\n      req_mode = \"python\"\n    }\n\n    else if (lang ==='71') {\n      req_mode = \"python\"\n    }\n\n    setQuestion({ ...question, editorMode: req_mode, language: lang })\n  };\n\n    // Submit Code For Evaluation\n    const submitCode = (event) => {\n        event.preventDefault();\n        setQuestion({ ...question, \n            error: \"\", \n            evaluating: true, \n            testcaseshow: false \n        });\n\n        // Submit\n        SecurePost({\n            url:apis.POST_SUBMISSION,\n            data:{\n                testId: props.test.testid,\n                traineeId: props.test.traineeid,\n                que_id: props.data._id,\n                source_code: question.code, \n                language_id: question.language,\n            }\n        })\n        .then((response) => {\n            setQuestion({ \n                ...question, \n                error: \"\", \n                evaluating: false, \n                testcaseshow: true \n            });\n\n            setscore(response.data.score);\n\n            console.log(response.data.score);\n        })\n        .catch((error) => {\n            setQuestion({ \n                ...question, \n                error: \"\", \n                evaluating: false, \n                testcaseshow: true \n            });\n        });\n    };\n\n    const isEvaluating = (placement) => {\n        if(question.evaluating) {\n            return notification.info({\n                message: `Evaluating`,\n                description: 'We are evaluating your solution. Please Wait',\n                placement\n            });\n        }\n    };\n\n    const showResult = () => {\n        let i = 1;\n        return score.map((data) => {\n            return <div className=\"container\">\n            <div className=\"row\">\n                <div className=\"col-lg-6\">\n                    <b>Test Case - #</b>{i++}\n                </div>\n                \n                <div className=\"col-lg-6\">\n                    <b>Status - </b>{data} {'   '}\n                    {data === 'Passed' ? \n                        <Icon type=\"check-circle\" theme=\"twoTone\" twoToneColor=\"#52c41a\" />\n                        : <Icon type=\"close-circle\" theme=\"twoTone\" twoToneColor=\"#ff0000\" />\n                    }\n                </div>\n            </div>\n        </div>    \n        });\n    };\n\n  return (\n    <Fragment>\n\n        <div className=\"container\">\n            <div className=\"row\">\n                <div className=\"col-lg-12\">\n                    <div style={{marginTop: '10px'}} ></div>\n                </div>\n            </div>\n        </div>\n\n        {isEvaluating('bottomRight')}\n\n        <div className=\"container\">\n            <div className=\"row\">\n                {/* Left */}\n                <div className=\"col-lg-6\">\n                    \n                    <Text>\n                        Problem Id - {props.data._id}\n                    </Text>\n\n                    <Title level={4}>Problem Statement</Title>\n\n                    <div style={{ maxHeight: '500px', overflowY: 'scroll' }} >\n                        <Markdown>\n                            {props.data.statement}\n                        </Markdown>\n                    </div>\n\n                </div>\n                \n                {/* Right */}\n                <div className=\"col-lg-6\">\n\n                <select \n                    className=\"custom-select\" \n                    style={{marginTop: '10px', marginBottom: '10px', width: '50%'}}  \n                    onChange={handleMode}\n                >\n                    <option value=\"\" selected>Select Language</option>\n\n                    <option value=\"48\">C (GCC 7.4.0)</option>\n                    <option value=\"52\">C++ (GCC 7.4.0)</option>\n                    <option value=\"62\">Java (OpenJDK 13.0.1)</option>\n                    <option value=\"70\">Python (2.7.17)</option>\n                    <option value=\"71\">Python (3.8.1)</option>\n                </select>\n\n                <AceEditor\n                    mode={question.editorMode}\n                    theme=\"monokai\"\n                    name=\"editor\"\n                    fontSize={question.fontSize}\n                    editorProps={{ $blockScrolling: true }}\n                    onChange={handleCodeChange}\n                    value={question.code}\n                />\n\n                <div style={{marginTop: '10px', marginBottom: '10px'}}></div>\n\n                <Button \n                    type=\"primary\"\n                    onClick={submitCode}\n                    disabled={question.evaluating}\n                >\n                    Submit\n                </Button>\n\n                </div>\n            </div>\n        </div>\n\n        {question.testcaseshow ? \n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-lg-12\">\n                        <div style={{marginTop: '20px', textAlign: 'center'}}>\n                            <Title level={4}>Results</Title>\n\n                            <div style={{height: '100px', marginBottom:'30px', border: '2px solid #77acf1', width: '100%'}} >\n                                {score.length > 0 ? showResult() : null}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div> \n            :\n            null\n        }\n    </Fragment>\n  );\n};\n\n\nexport default CodeEditor;","import apis from '../services/Apis';\r\nimport Alert from '../components/common/alert';\r\nimport { Post } from '../services/axiosCall';\r\n\r\nlet parse_time = (d) => {\r\n    // console.log(`${d}I am called`)\r\n    var m_left = Math.floor(d / 60);\r\n    var s_left = Number(String(d % 60).slice(0, 2));\r\n    return {\r\n        m_left: m_left,\r\n        s_left: s_left\r\n    }\r\n};\r\n\r\n\r\nexport const setTestDetsils = (d1, d2) => {\r\n    return ({\r\n        type: 'SET_TRAINEE_TEST_DETAILS',\r\n        payload1: d1,\r\n        payload2: d2\r\n    })\r\n};\r\n\r\nexport const LocaltestDone = (d) => dispatch => {\r\n    dispatch({\r\n        type: 'TEST_DONE_LOCAL'\r\n    });\r\n};\r\n\r\nexport const fetchTraineedata = (d) => dispatch => {\r\n    Post({\r\n        url: apis.FETCH_TRAINEE_DETAILS,\r\n        data: {\r\n            _id: d\r\n        }\r\n    }).then((response) => {\r\n        // console.log(response);\r\n        if (response.data.success) {\r\n            dispatch({\r\n                type: 'FETCH_LOGGED_IN_TRAINEE',\r\n                payload: response.data.data\r\n            });\r\n        }\r\n        else {\r\n            Alert('error', 'Error!', response.data.message);\r\n        }\r\n    });\r\n};\r\n\r\n\r\nexport const fetchTestdata =(d1,d2)=>dispatch=>{\r\n    Post({\r\n        url:apis.FETCH_TRAINEE_TEST_DETAILS,\r\n        data:{\r\n            testid:d1,\r\n            traineeid:d2\r\n        }\r\n    }).then((response)=>{\r\n        // console.log(response.data);\r\n        if(response.data.success){\r\n            if(response.data.data.completed || !response.data.data.startedWriting){\r\n                dispatch({\r\n                    type:'FETCH_TEST_FLAG',\r\n                    payload1: response.data.data.testbegins,\r\n                    payload2: response.data.data.startedWriting,\r\n                    payload3: response.data.data.testconducted,\r\n                    payload4: response.data.data.completed,\r\n                    payload5: 0,\r\n                    payload6: 0,\r\n                    payload7: response.data.data.addcoding\r\n                })\r\n            }\r\n            else{\r\n                let t = parse_time(response.data.data.pending);\r\n                dispatch({\r\n                    type: 'FETCH_TEST_FLAG',\r\n                    payload1: response.data.data.testbegins,\r\n                    payload2: response.data.data.startedWriting,\r\n                    payload3: response.data.data.testconducted,\r\n                    payload4: response.data.data.completed,\r\n                    payload5: t.m_left,\r\n                    payload6: t.s_left,\r\n                    payload7: response.data.data.addcoding\r\n                });\r\n            }\r\n            \r\n        }\r\n        else{\r\n            dispatch({\r\n                type: 'invalidUrl',\r\n            });\r\n        }\r\n    })\r\n    .catch((err) => {\r\n        dispatch({\r\n            type: 'invalidUrl',\r\n        });\r\n    });\r\n}\r\n\r\n\r\nexport const ProceedtoTest = (d1, d2, d3) => dispatch => {\r\n    // console.log(`Hello from ins${d1},${d2}`)\r\n    dispatch({\r\n        type: 'PROCEEDING_TO_TEST',\r\n        payload: true\r\n    });\r\n\r\n    Post({\r\n        url: `${apis.PROCEED_TO_TEST}`,\r\n        data: {\r\n            testid: d1,\r\n            userid: d2\r\n        }\r\n    }).then((response) => {\r\n        // console.log(response);\r\n        if (!response.data.success) {\r\n            Alert('error', 'Error!', response.data.message);\r\n        }\r\n\r\n        d3();\r\n\r\n        dispatch({\r\n            type: 'PROCEEDING_TO_TEST',\r\n            payload: false\r\n        });\r\n    }).catch((error) => {\r\n        // console.log(error)\r\n        dispatch({\r\n            type: 'PROCEEDING_TO_TEST',\r\n            payload: false\r\n        })\r\n        Alert('error', 'Error!', \"Server error\");\r\n    });\r\n};\r\n\r\n\r\nexport const fetchTraineeTestQuestions = (tid) => dispatch => {\r\n    Post({\r\n        url: `${apis.FETCH_TRAINEE_TEST_QUESTION}`,\r\n        data: {\r\n            id: tid\r\n        }\r\n    }).then((response) => {\r\n        // console.log(response.data);\r\n        if (response.data.success) {\r\n            dispatch({\r\n                type: 'UPDATE_TRAINEE_TEST_QUESTIONS',\r\n                payload: response.data.data\r\n            })\r\n        }\r\n        else {\r\n            Alert('error', 'Error!', response.data.message);\r\n        }\r\n    }).catch((error) => {\r\n        // console.log(error);\r\n        Alert('error', 'Error!', \"Server error\");\r\n    });\r\n};\r\n\r\n\r\nexport const fetchTraineeTestAnswerSheet = (tid, uid) => dispatch => {\r\n    Post({\r\n        url: `${apis.FETCH_TRAINEE_TEST_ANSWERSHEET}`,\r\n        data: {\r\n            testid: tid,\r\n            userid: uid\r\n        }\r\n    }).then((response) => {\r\n        if (response.data.success) {\r\n            // console.log(response.data.data);\r\n            var d = response.data.data.answers.map((d, i) => {\r\n                if (d.chosenOption.length === 0) {\r\n                    return ({\r\n                        ...d,\r\n                        isMarked: false,\r\n                        isAnswered: false\r\n                    })\r\n                }\r\n                else {\r\n                    return ({\r\n                        ...d,\r\n                        isMarked: false,\r\n                        isAnswered: true\r\n                    });\r\n                }\r\n            });\r\n\r\n            dispatch({\r\n                type: 'UPDATE_TRAINEE_TEST_ANSWERSHEET',\r\n                payload: d\r\n            });\r\n        }\r\n        else {\r\n            Alert('error', 'Error!', response.data.message);\r\n        }\r\n    }).catch((error) => {\r\n        // console.log(error);\r\n        Alert('error', 'Error!', \"Server error\");\r\n    });\r\n};\r\n\r\nexport const switchQuestion = (d1) => {\r\n    return {\r\n        type: 'SWITCH_QUESTION',\r\n        payload: d1\r\n    };\r\n};\r\n\r\nexport const updateIsMarked = (d1) => {\r\n    return {\r\n        type: 'UPDATE_TRAINEE_TEST_ANSWERSHEET',\r\n        payload: d1\r\n    };\r\n};\r\n\r\nexport const FeedbackStatus = (s) => {\r\n    return {\r\n        type: 'SET_HAS_GIVEN_FEEDBACK',\r\n        payload: s\r\n    };\r\n};\r\n\r\nexport const LoadCodingQuestion = (load, data) => {\r\n    return {\r\n        type: 'CODING_DATA',\r\n        payload1: load,\r\n        payload2: data\r\n    };\r\n};\r\n\r\n// Post Coding Section Submit Data\r\nexport const submitCoding = (tid, uid) => dispatch => {\r\n    Post({\r\n        url: `${apis.CODING_SECTION_SUBMIT}`,\r\n        data: {\r\n            testId: tid,\r\n            traineeId: uid\r\n        }\r\n    })\r\n    .then((response) => {\r\n        if (response.data.success) {\r\n            dispatch({\r\n                type: 'SUBMIT_CODING',\r\n                payload: true\r\n            });\r\n        }\r\n        else {\r\n            Alert('error', 'Error!', response.data.message);\r\n        }\r\n    })\r\n    .catch((error) => {\r\n        Alert('error', 'Error!', \"Server error\");\r\n    });\r\n};\r\n\r\n// Get Coding Section Submit Data\r\nexport const getsubmitCoding = (tid, uid) => dispatch => {\r\n    Post({\r\n        url: `${apis.CODING_SECTION_GET}`,\r\n        data: {\r\n            testId: tid,\r\n            traineeId: uid\r\n        }\r\n    })\r\n    .then((response) => {\r\n        if (response.data.success) {\r\n            dispatch({\r\n                type: 'SUBMIT_CODING',\r\n                payload: response.data.message\r\n            });\r\n        }\r\n        else {\r\n            dispatch({\r\n                type: 'SUBMIT_CODING',\r\n                payload: response.data.message\r\n            });\r\n        }\r\n    })\r\n    .catch((error) => {\r\n        console.log(error);\r\n    });\r\n};\r\n","import React, { Fragment } from 'react';\nimport { Tabs, Skeleton, Button, Popconfirm, Icon } from 'antd';\nimport CountDown from 'ant-design-pro/lib/CountDown';\nimport queryString from 'query-string';\nimport { connect } from 'react-redux';\n\nimport CodeEditor from './CodeEditor';\nimport { SecurePost } from '../../../../services/axiosCall';\nimport apis from '../../../../services/Apis';\nimport Alert from '../../../../components/common/alert';\nimport {\n    LoadCodingQuestion,\n    submitCoding\n} from '../../../../actions/traineeAction';\nimport './code.css';\n\nconst { TabPane } = Tabs;\nvar time = 0;\n\nclass Index extends React.Component {\n    constructor(props) {\n      super(props);\n\n      let params = {\n        testid: this.props.trainee.testid,\n        traineeid: this.props.trainee.traineeid\n      }\n      \n      this.state = {\n        mode: 'left',\n        testDetails: params,\n        testTime: 0,\n      };\n    }\n\n    // On Page Load\n    componentDidMount(){\n        const testId = this.props.trainee.testid;\n        const traineeId = this.props.trainee.traineeid;\n\n        this.setState({loading: true});\n\n        if(localStorage.getItem('time') === null){\n            localStorage.setItem('time', new Date());\n        }\n        else {\n            time = localStorage.getItem('time');\n            \n        }\n\n        SecurePost({\n            url:apis.GET_CODING_QUESTION_DATA,\n            data:{\n                testId: testId,\n            }\n        })\n        .then((response) => {\n            if(response.data.success){\n                this.props.LoadCodingQuestion(false,response.data.questions);\n                this.setState({testTime: response.data.time});\n            }\n            else{\n                return Alert('warning','Warning!',response.data.message);\n            }\n        })\n        .catch((error) => {\n            return Alert('error','Error!','Server Error');\n        });\n    };\n\n    handleModeChange = e => {\n        const mode = e.target.value;\n        this.setState({ mode });\n    };\n  \n    render() {\n      const { mode, testTime } = this.state;\n\n      let targetTime = 0;\n\n      time = localStorage.getItem('time');\n      \n      if (time === 0) targetTime = new Date().getTime() + testTime*60000;\n      else targetTime = new Date(time).getTime()+ testTime*60000;\n\n      return (\n        <Fragment>\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-lg-12\">\n                        <div style={{marginTop: '20px'}}></div>\n                    </div>\n                </div>\n            </div>\n\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-lg-12\">\n                        <Skeleton loading={this.props.trainee.loadcoding} active avatar>\n                            \n                        <div style={{height: '80px'}} >\n                            <div className=\"container\">\n                                <div className=\"row\">\n                                    <div className=\"col-lg-6\">\n                                        <ul id=\"menu\">\n                                            <li>\n                                                <Icon style={{fontSize: '40px'}} type=\"code\" />\n                                            </li>\n\n                                            <li>\n                                                \n                                            </li>\n                                                \n                                            <li>\n                                                Timer :\n                                            </li>\n\n                                            <li>\n                                                <CountDown \n                                                    style={{ fontSize: 30 }} \n                                                    target={targetTime}\n                                                    onEnd={() => this.props.submitCoding(this.props.trainee.testid,this.props.trainee.traineeid)}\n                                                />\n                                            </li>\n                                        </ul>\n                                    </div>\n\n                                    <div className=\"col-lg-6\">\n                                        <Popconfirm\n                                            title=\"Are you sure to end the test\"\n                                            onConfirm={() => {\n                                                this.props.submitCoding(this.props.trainee.testid,this.props.trainee.traineeid);\n                                                localStorage.removeItem('time');\n                                            }}\n                                            okText=\"Yes\"\n                                            cancelText=\"No\"\n                                        >\n                                            <Button type=\"primary\">\n                                                Submit Section\n                                            </Button>\n                                        </Popconfirm>\n                                    </div>\n\n                                </div>\n                            </div>\n                        </div>\n\n                            <div style={{marginBottom: '50px'}} ></div>\n                            \n                            <Tabs defaultActiveKey=\"0\" tabPosition={mode} style={{ height: '100%' }}>\n                                {[...Array.from({ length: this.props.trainee.codingData.length }, (v, i) => i)].map(i => (\n                                    <TabPane tab={`Problem-${i+1}`} key={i}>\n\n                                        Problem {i+1}\n                                        \n                                        <br />\n\n                                        <CodeEditor \n                                            key={i} \n                                            data={this.props.trainee.codingData[i]} \n                                            test={this.state.testDetails} \n                                        />\n                                    </TabPane>\n                                ))}\n                            </Tabs>\n                        </Skeleton>\n                    </div>\n                </div>\n            </div>\n\n        </Fragment>\n      );\n    }\n};\n\nconst mapStateToProps = state => ({\n    trainee: state.trainee\n});\n\nexport default connect(mapStateToProps, {\n    LoadCodingQuestion,\n    submitCoding\n})(Index);\n\n\n\n","import React, { Component } from 'react';\r\nimport { Rate, Input, Button, Col, Row, Typography, Divider } from 'antd';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { Post } from '../../../services/axiosCall';\r\nimport apis from '../../../services/Apis';\r\nimport Alert from '../../common/alert';\r\nimport { FeedbackStatus } from '../../../actions/traineeAction';\r\nimport './answer.css';\r\n\r\nconst { TextArea } = Input;\r\nconst { Title, Text } = Typography;\r\n\r\nclass Feedback extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            star: 0,\r\n            comment: \"excellent\",\r\n            loading: false\r\n        }\r\n    }\r\n\r\n    handleStarChange=(star)=>{\r\n        // console.log(star);\r\n        this.setState({ star:star });\r\n    } \r\n    onCommentChange=(comment)=>{\r\n        this.setState({ comment:comment.target.value });\r\n    }\r\n\r\n    submitFeedback=()=>{\r\n        this.setState({ loading: true });\r\n        let { star, comment } = this.state;\r\n        \r\n        if(star!==0 && comment.length>0){\r\n            Post({\r\n                url: apis.GIVE_FEEDBACK,\r\n                data: {\r\n                    testid: this.props.trainee.testid,\r\n                    userid: this.props.trainee.traineeid,\r\n                    rating: star,\r\n                    feedback: comment\r\n                }\r\n            })\r\n            .then((response) => {\r\n                if (response.data.success) {\r\n                    this.setState({ loading: false })\r\n                    Alert('success', 'Success', 'Thanks for your feedback');\r\n                    this.props.FeedbackStatus(true)\r\n                }\r\n                else {\r\n                    this.setState({ loading: false })\r\n                    Alert('error', 'Failed', response.data.message);\r\n                }\r\n            }).catch((error) => {\r\n                // console.log(error);\r\n                Alert('error', 'Failed', 'Server Error');\r\n                this.setState({ loading: false })\r\n            });\r\n        }\r\n        else {\r\n            // ...\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const desc = ['terrible', 'bad', 'normal', 'good', 'wonderful'];\r\n        return (\r\n            <Row>\r\n                <Col span={24}>\r\n                    <div\r\n                        style={{ width: '40%', margin: '25px', textAlign: 'left', padding: '10px' }}\r\n                    >\r\n                        <Title level={3}>Feedback Form</Title>\r\n                        <div className=\"pp\">\r\n                            <span>\r\n                                <Text>Please rate your experience</Text> <br />\r\n                                <Rate tooltips={desc} onChange={this.handleStarChange} value={this.state.star} />\r\n                                {this.state.star ? <span className=\"ant-rate-text\">{desc[this.state.star - 1]}</span> : ''}\r\n                            </span>\r\n                        </div>\r\n                        \r\n                        <Divider />\r\n\r\n                        <div className=\"pp\">\r\n                            <TextArea rows={2} onChange={this.onCommentChange} value={this.state.comment} />\r\n                        </div>\r\n                        \r\n                        <Divider />\r\n\r\n                        <div className=\"pp\">\r\n                            <Button type=\"primary\" onClick={this.submitFeedback} loading={this.state.loading}>Submit</Button>\r\n                        </div>\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n    trainee : state.trainee\r\n});\r\n\r\nexport default connect(mapStateToProps,{\r\n    FeedbackStatus\r\n})(Feedback);","import React from 'react';\r\nimport { Table, Icon, Tag, Skeleton, Descriptions, Modal, Button, Row, Col, Collapse } from 'antd';\r\nimport { Typography } from 'antd';\r\nimport { Result } from 'antd';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Coding from '../examPortal/coding/index';\r\n\r\nimport { Post, SecurePost } from '../../../services/axiosCall';\r\nimport apis from '../../../services/Apis';\r\nimport Alert from '../../common/alert';\r\nimport Feedback from '../answersheet/feedback';\r\n\r\nimport { \r\n    FeedbackStatus,\r\n    getsubmitCoding\r\n} from '../../../actions/traineeAction';\r\nimport Markdown from '../../../utils/Markdown';\r\n\r\nimport './answer.css';\r\nimport './answermobileview.css';\r\nimport './individualquestion_mobileview.css';\r\n\r\nconst { Title } = Typography;\r\nconst { Panel } = Collapse;\r\n\r\nclass Answer extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            loading:false,\r\n            data:[],\r\n            TotalScore:null,\r\n            Mvisible:false,\r\n            ActiveQuestionId:null\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        let traineeid = this.props.trainee.traineeid || this.props.user.userid._id;\r\n        let testid = this.props.trainee.testid || this.props.user.userid.testid;\r\n\r\n        // Get Submitted Coding Section Data\r\n        this.props.getsubmitCoding(this.props.trainee.testid, this.props.trainee.testid);\r\n\r\n        this.setState({\r\n            loading:true\r\n        });\r\n        \r\n        let p1 = Post({\r\n            url: apis.FETCH_OWN_RESULT,\r\n            data: {\r\n                userid: traineeid,\r\n                testid: testid\r\n            }\r\n        });\r\n        \r\n        let p2 = Post({\r\n            url:`${apis.FETCH_TRAINEE_TEST_QUESTION}`,\r\n            data:{\r\n                id:testid\r\n            }\r\n        });\r\n\r\n        let p3 = Post({\r\n            url: `${apis.FEEDBACK_STATUS_CHECK}`,\r\n            data: {\r\n                userid: traineeid,\r\n                testid: testid\r\n            }\r\n        });\r\n        \r\n        Promise.all([p1, p2, p3])\r\n            .then(d => {\r\n            \r\n            //console.log(d);\r\n            \r\n            this.setState({\r\n                loading:false\r\n            });\r\n\r\n            if(d[0].data.success && d[1].data.success){\r\n                let v = d[1].data.data;\r\n                let r = d[0].data.result.result.map((dd, i) => {\r\n                    return ({\r\n                        ...dd,\r\n                        ...v[i]\r\n                    });\r\n                });\r\n\r\n                // console.log(r);\r\n                \r\n                this.setState({\r\n                    data: r,\r\n                    TotalScore: d[0].data.result.score\r\n                });\r\n\r\n                if(d[2].data.success){\r\n                    this.props.FeedbackStatus(d[2].data.status);\r\n                }\r\n            }\r\n            else{\r\n                Alert('error','Error!',`${d[0].data.success ? \"\":d[0].data.message} and ${d[1].data.success ? \"\":d[1].data.message}`)\r\n            }\r\n        })\r\n        .catch((err) => {\r\n            // console.log(err)\r\n            this.setState({\r\n                loading:false\r\n            });\r\n            Alert('error','Error!',\"Server Error\")\r\n        })\r\n    }\r\n\r\n    handleCancel=()=>{\r\n        this.setState({\r\n            Mvisible: false\r\n        });\r\n    }\r\n\r\n    OpenModel = (qid) => {\r\n        this.setState({\r\n            ActiveQuestionId: qid,\r\n            Mvisible: true\r\n        })\r\n    };\r\n\r\n    callback = (key) => {\r\n        // console.log(key);\r\n    }\r\n\r\n    render(){\r\n        const columns = [\r\n            {\r\n                title: 'View Question',\r\n                key: 'action',\r\n                render: (text, record) => (\r\n                    <Button \r\n                        shape=\"circle\" \r\n                        icon=\"info\" \r\n                        type=\"primary\" \r\n                        size=\"small\" \r\n                        onClick={() => { this.OpenModel(text.qid) }}\r\n                    ></Button>\r\n                )\r\n            },\r\n            {\r\n                title: \"Question\",\r\n                dataIndex: 'body',\r\n                key: 'body'\r\n            },\r\n            {\r\n                title: 'Correct Answers',\r\n                key: 'correctAnswer',\r\n                dataIndex: 'correctAnswer',\r\n                render: tags => (\r\n                    <span>\r\n                        {tags.map(tag => {\r\n                            return (\r\n                                <Tag color=\"green\" key={tag}>\r\n                                    {tag.toUpperCase()}\r\n                                </Tag>\r\n                            );\r\n                        })}\r\n                    </span>\r\n                ),\r\n            },\r\n            {\r\n                title: 'Given Answers',\r\n                key: 'givenAnswer',\r\n                dataIndex: 'givenAnswer',\r\n                render: tags => (\r\n                    <span>\r\n                        {tags.map(tag => {\r\n                            return (\r\n                                <Tag color=\"blue\" key={tag}>\r\n                                    {tag.toUpperCase()}\r\n                                </Tag>\r\n                            );\r\n                        })}\r\n                    </span>\r\n                ),\r\n            },\r\n            {\r\n                title: 'Weightage',\r\n                dataIndex: 'weightage',\r\n                key: 'weightage',\r\n            },\r\n            {\r\n                title: \"Explanation\",\r\n                dataIndex: 'explanation',\r\n                key: 'explanation',\r\n            },\r\n            {\r\n                title: \"Status\",\r\n                dataIndex: 'iscorrect',\r\n                key: 'iscorrect',\r\n                render: tags => (\r\n                    <span>\r\n                        {\r\n                            tags ?\r\n                            \r\n                                <Icon type=\"check-circle\" theme=\"twoTone\" twoToneColor=\"#52c41a\" />\r\n                                :\r\n                                <Icon type=\"close-circle\" theme=\"twoTone\" twoToneColor=\"red\" />\r\n                        }\r\n                    </span>\r\n                    \r\n                )\r\n            }\r\n        ];\r\n\r\n        // let td = this.props.user.userid;\r\n        \r\n        return (\r\n            <div className=\"answer-table-outer\">\r\n                <div className=\"answer-table-wrapper\">\r\n                    {this.props.userData.isLoggedIn ?\r\n                        <div>\r\n                            <Title className=\"answer-table-heading\" level={4}>Result</Title>\r\n                            <Descriptions bordered title={null} border size=\"small\">\r\n                                <Descriptions.Item label=\"Name\">\r\n                                    {this.props.user.userid.name}\r\n                                </Descriptions.Item>\r\n                                \r\n                                <Descriptions.Item label=\"Email Id\">\r\n                                    {this.props.user.userid.emailid}\r\n                                </Descriptions.Item>\r\n\r\n                                <Descriptions.Item label=\"Contact\">\r\n                                    {this.props.user.userid.contact}\r\n                                </Descriptions.Item>\r\n                                \r\n                                <Descriptions.Item label=\"Score\">\r\n                                    {this.state.TotalScore}\r\n                                </Descriptions.Item>\r\n                            </Descriptions>\r\n                                        \r\n                            <br />\r\n\r\n                            <Collapse onChange={this.callback}>\r\n                                <Panel header=\"Candidate Response\" key=\"1\">\r\n                                    <Table\r\n                                        size=\"small\"\r\n                                        rowKey=\"qid\"\r\n                                        loading={this.state.loading}\r\n                                        columns={columns}\r\n                                        dataSource={this.state.data}\r\n                                        pagination={false}\r\n                                    />\r\n                                </Panel>\r\n                            </Collapse>\r\n                        </div> : null\r\n                    }\r\n                \r\n                    {\r\n                        this.props.userData.isLoggedIn ? null\r\n                            : this.props.trainee.hasGivenFeedBack ?\r\n                            <Row justify=\"space-around\" align=\"middle\">\r\n                                <Col xs={12} sm={12} md={12} lg={24} xl={24}>\r\n                                    <Result\r\n                                        status=\"success\"\r\n                                        title=\"Successfully You Have completed the assessment!\"\r\n                                        subTitle=\"Please Close the Window Now\"\r\n                                    />\r\n                                </Col>\r\n                            </Row> : \r\n                            <div>\r\n                                {/* Coding Section */}\r\n                                {\r\n                                    this.props.trainee.Iscoding ? \r\n                                    <div>\r\n                                        {\r\n                                            this.props.trainee.codingsubmitted ? <Feedback /> : <Coding /> \r\n                                        }\r\n                                    </div>\r\n                                    : <Feedback />\r\n                                }\r\n                            </div>\r\n                    }\r\n\r\n                    <Modal\r\n                        destroyOnClose={true}\r\n                        width=\"70%\"\r\n                        style={{top:'30px'}}\r\n                        title=\"Question details\"\r\n                        visible={this.state.Mvisible}\r\n                        onOk={this.handleCancel}\r\n                        onCancel={this.handleCancel}\r\n                        footer={null}\r\n                    >\r\n                        <SingleQuestionDetails qid={this.state.ActiveQuestionId} />\r\n                    </Modal>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n};\r\n\r\n// Single Question Details \r\nclass SingleQuestionDetails extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            fetching:false,\r\n            qdetails:null\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.setState({\r\n            fetching:true\r\n        })\r\n        Post({\r\n            url:apis.FETCH_SINGLE_QUESTION_BY_TRAINEE,\r\n            data:{\r\n                qid:this.props.qid\r\n            }\r\n        })\r\n        .then((response) => {\r\n            // console.log(response)\r\n            if(response.data.success){\r\n                this.setState({\r\n                    qdetails:response.data.data[0]\r\n                })\r\n            }\r\n            else{\r\n                Alert('error','Error !',response.data.message);\r\n            }\r\n            this.setState({\r\n                fetching:false\r\n            })\r\n        })\r\n        .catch((error) => {\r\n            this.setState({\r\n                fetching: false\r\n            });\r\n            // console.log(error)\r\n            Alert('error','Error !',\"Server Error\");\r\n        });\r\n    }\r\n    \r\n    render(){\r\n        const optn = ['A', 'B', 'C', 'D', 'E'];\r\n        let Optiondata = this.state.qdetails;\r\n        \r\n        if(Optiondata!==null){\r\n            return (\r\n                <div>\r\n                    <div className=\"mainQuestionDetailsContaine\">\r\n                        <div className=\"questionDetailsBody\">\r\n                            {Optiondata.body}\r\n                        </div>\r\n                        {Optiondata.quesimg?\r\n                            <div className=\"questionDetailsImageContainer\">\r\n                                <img alt=\"Unable to load\" className=\"questionDetailsImage\" src={Optiondata.quesimg} />  \r\n                            </div>\r\n                            : null\r\n                        }\r\n                        <div>\r\n                            {Optiondata.options.map((d,i)=>{\r\n                                return(\r\n                                    <div key={i}>\r\n                                        <Row type=\"flex\" justify=\"center\" className=\"QuestionDetailsOptions\">\r\n                                            <Col span={2}>\r\n                                                {\r\n                                                    d.isAnswer?<Button className=\"green\" shape=\"circle\">{optn[i]}</Button>:<Button type=\"primary\" shape=\"circle\">{optn[i]}</Button>\r\n                                                }\r\n                                                \r\n                                            </Col>\r\n                                            {d.optimg?\r\n                                                <Col span={6} style={{padding:'5px'}}>\r\n                                                    <img alt=\"Unable to load\" className=\"questionDetailsImage\" src={d.optimg} />\r\n                                                </Col>\r\n                                            :\r\n                                                null\r\n                                            }\r\n                                            {d.optimg?\r\n                                                <Col span={14}>\r\n                                                    <Markdown>{d.optbody}</Markdown>\r\n                                                </Col>\r\n                                            :\r\n                                                <Col span={20}>\r\n                                                    <Markdown>{d.optbody}</Markdown>\r\n                                                </Col>\r\n                                            }\r\n                                        </Row>\r\n                                    \r\n                                    </div>\r\n                                )\r\n                            })}\r\n                        </div>\r\n                    </div>\r\n    \r\n                </div>\r\n            )\r\n        }\r\n        else{\r\n            return(\r\n                <div className=\"skeletor-wrapper\">\r\n                    <Skeleton active />\r\n                    <Skeleton active />\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    userData: state.user,\r\n    trainee : state.trainee\r\n});\r\n\r\nexport default connect(mapStateToProps,{\r\n    FeedbackStatus,\r\n    getsubmitCoding\r\n})(Answer);","import React, { useState} from 'react';\r\nimport { Table, Tag, Card, Modal, Button } from 'antd';\r\nimport AnswerSheet from '../../trainee/answersheet/answer';\r\n\r\nexport default function Trainee (props){\r\n    return (\r\n        <div>\r\n            <Card>\r\n                <div className=\"download-section\">\r\n                    {props.stats.map(data => (\r\n                        <AnswerSheet user={data} key={data} />\r\n                    ))}\r\n                </div>\r\n            </Card>\r\n        </div>\r\n    )\r\n};\r\n","import React, { Fragment, useState, useEffect } from 'react';\nimport MaterialTable from 'material-table';\nimport { connect } from 'react-redux';\nimport { Input, Button, Typography, Tabs, Icon } from 'antd';\n\nimport { SecurePost } from '../../../services/axiosCall';\nimport apis from '../../../services/Apis';\nimport  Alert  from '../../common/alert';\n\nconst CodingResult = (props) => {\n  const [state, setstate] = useState([]);\n  const [loading, setloading] = useState(false);\n\n  useEffect(() => {\n    setloading(true);\n\n    SecurePost({\n      url: apis.CODING_SUBMISSION_GET,\n      data: {\n        testId: props.id\n      }\n    })\n    .then((response) => {\n      if(response.data.success){\n        setstate(response.data.result);\n        setloading(false);\n      }\n    })\n    .catch((error)=>{\n      console.log(error);\n      return Alert('error','Error!','Server Error');\n    });\n  }, []);\n\n\n  return (\n    <Fragment>\n      <MaterialTable\n        title=\"Coding Assessment Result\"\n        columns={[\n          { title: 'Id', field: 'user._id' },\n          { title: 'Name', field: 'user.name' },\n          { title: 'Email', field: 'user.emailid' },\n          { title: 'Question Id', field: 'question' },\n          { title: 'Score', field: 'score' },\n          { \n            title: 'Result', \n            field: 'result.str'\n          },\n          { title: 'Time', field: 'result.time' },\n          { title: 'Memory', field: 'result.memory' },\n        ]}\n\n        data={state}\n\n        options={{\n          filtering: true,\n          exportButton: true,\n          headerStyle: {\n            backgroundColor: '#01579b',\n            color: '#FFF'\n          }\n        }}\n      />\n    </Fragment>\n  );\n};\n\nexport default CodingResult;\n","import React, { Component } from 'react'\r\nimport { Tabs, Icon, Descriptions,Skeleton, Tag, Input ,message, Modal, Button} from 'antd';\r\nimport { connect } from 'react-redux';\r\nimport moment from 'moment';\r\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\r\n\r\n\r\nimport Questions from '../conducttest/questions'\r\nimport {updateQuestiosnActiveTest } from '../../../actions/trainerAction';\r\nimport { SecurePost } from '../../../services/axiosCall';\r\nimport apis from '../../../services/Apis';\r\nimport  Alert  from '../../common/alert';\r\n\r\nimport './testdetails.css';\r\nimport Stats from './stats';\r\nimport Trainee from './trainee';\r\nimport FeedBacks from './feedbacks';\r\nimport Analysis from './Analysis';\r\nimport Coding from './CodingResult';\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nclass TestDetails extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            id:this.props.trainer.DataActiveTestDetails.testDetailsId,\r\n            testdetails:null,\r\n            stats:null,\r\n            file:null,\r\n            loading:true,\r\n            maxMarks:0,\r\n            mainlink:'',\r\n            feedbacks: [],\r\n            visible: false\r\n        }\r\n    }\r\n\r\n    showModal = () => {\r\n      this.setState({\r\n        visible: true,\r\n      });\r\n    };\r\n  \r\n    handleOk = e => {\r\n      // console.log(e);\r\n      this.setState({\r\n        visible: false,\r\n      });\r\n    };\r\n  \r\n    handleCancel = e => {\r\n      // console.log(e);\r\n      this.setState({\r\n        visible: false,\r\n      });\r\n    };\r\n\r\n    tabChange = (key) => {\r\n        // console.log(key)\r\n    };\r\n\r\n    componentDidMount(){\r\n        var link = window.location.href.split('/').splice(0,3);\r\n        var mainlink=\"\";\r\n        link.forEach((d,i)=>{\r\n            mainlink=mainlink+d+\"/\"\r\n        });\r\n        this.setState({mainlink});\r\n        var p1 = SecurePost({\r\n            url: `${apis.GET_SINGLE_TEST}`,\r\n            data: {\r\n                id: this.state.id\r\n            }\r\n        });\r\n\r\n        var p2 = SecurePost({\r\n            url: apis.GET_STATS,\r\n            data: {\r\n                testid: this.state.id\r\n            }\r\n        });\r\n\r\n        var p3 = SecurePost({\r\n            url: apis.GET_EXCEL,\r\n            data: {\r\n                id: this.state.id\r\n            }\r\n        });\r\n\r\n        var p4 = SecurePost({\r\n            url: apis.MAX_MARKS_FETCH,\r\n            data: {\r\n                testid: this.state.id\r\n            }\r\n        });\r\n\r\n        var p5 = SecurePost({\r\n            url: apis.GET_FEEDBACKS,\r\n            data: {\r\n                testid: this.state.id\r\n            }\r\n        });\r\n        \r\n        Promise.all([p1, p2, p3, p4, p5]).then((response) => {\r\n            // console.log(response);\r\n\r\n            if (response[0].data.success && response[1].data.success && response[2].data.success && response[3].data.success && response[4].data.success) {\r\n                this.setState({\r\n                    testdetails: response[0].data.data,\r\n                    stats: response[1].data.data,\r\n                    file: response[2].data.file,\r\n                    maxMarks: response[3].data.data,\r\n                    loading: false,\r\n                    feedbacks: response[4].data.data\r\n                });\r\n            }\r\n            else {\r\n                Alert('error', 'Error !', response[0].data.message + response[1].data.message + response[2].data.message)\r\n            }\r\n        }).catch((error) => {\r\n            // console.log(error);\r\n            Alert('error', 'Error !', 'Server Error.')\r\n        });\r\n    }\r\n    \r\n\r\n    render() {\r\n        if(this.state.loading){\r\n            return(\r\n                <div className=\"skeletor-wrapper\">\r\n                    <Skeleton active />\r\n                    <Skeleton active />\r\n                </div>\r\n            )\r\n        }\r\n        else{\r\n            let { testdetails, id } = this.state;\r\n\r\n            return (\r\n                <div>\r\n                    <Tabs defaultActiveKey=\"1\" onChange={ (e)=>this.tabChange(e)}>\r\n                        <TabPane tab={ <span><Icon type=\"home\" />Details</span> } key=\"1\">\r\n                            <Descriptions bordered title=\"\" border size=\"small\" column={{ xxl: 1, xl: 1, lg: 1, md: 1, sm: 1, xs: 1 }}>\r\n\r\n                                <Descriptions.Item label=\"Assessment Id\">\r\n                                    {this.props.trainer.DataActiveTestDetails.testDetailsId}\r\n                                </Descriptions.Item>\r\n\r\n                                <Descriptions.Item label=\"Assessment Link\">\r\n                                    <Input disabled={true} value={`${this.state.mainlink}user/conducttest?testid=${id}`} addonAfter={<CopyToClipboard text={`${this.state.mainlink}user/conducttest?testid=${id}`} onCopy={()=>message.success('Link Copied to clipboard')}>\r\n                                        <Icon type=\"copy\"/></CopyToClipboard>}/>\r\n                                </Descriptions.Item>\r\n\r\n                                <Descriptions.Item label=\"Assessment Name\">\r\n                                    {testdetails.title}\r\n                                </Descriptions.Item>\r\n\r\n                                <Descriptions.Item label=\"Assessment Type\">\r\n                                    {testdetails.type}\r\n                                </Descriptions.Item>\r\n\r\n                                <Descriptions.Item label=\"Subject\">\r\n                                    <span>\r\n                                    {testdetails.subjects.map((tag,i) => {\r\n                                        let color ='geekblue';\r\n                                        return (\r\n                                        <Tag color={color} key={tag._id}>\r\n                                            {tag.topic.toUpperCase()}\r\n                                        </Tag>\r\n                                        );\r\n                                    })}\r\n                                    </span>\r\n                                </Descriptions.Item>\r\n\r\n                                <Descriptions.Item label=\"Created on\">\r\n                                    {moment(testdetails.createdAt).format(\"DD/ MM/YYYY\")}\r\n                                </Descriptions.Item>\r\n                                \r\n                            </Descriptions>\r\n                        </TabPane>\r\n\r\n                        {testdetails.testconducted?\r\n                            <TabPane tab={ <span><Icon type=\"question-circle\" />Questions</span> } key=\"2\">\r\n                                <Questions id={this.props.trainer.DataActiveTestDetails.testDetailsId} questionsOfTest={this.props.trainer.DataActiveTestDetails.testquestions} updateQuestiosnTest={this.props.updateQuestiosnActiveTest}/>\r\n                            </TabPane>\r\n                        : null}\r\n                        \r\n                        {testdetails.testconducted?\r\n                            <TabPane tab={ <span><Icon type=\"user\" />Candidates</span> } key=\"3\">\r\n                                <Trainee maxmMarks={this.state.maxMarks} id={this.state.id} stats={this.state.stats}/>\r\n                            </TabPane>\r\n                        : null}\r\n                        \r\n                        \r\n                        {testdetails.testconducted?\r\n                            <TabPane tab={ <span><Icon type=\"pie-chart\" />Statistics</span> } key=\"4\">\r\n                                <Stats id={this.state.id} stats={this.state.stats} file={this.state.file} maxmMarks={this.state.maxMarks}/>\r\n                            </TabPane>\r\n                        : null}\r\n                        \r\n                        {testdetails.testconducted?\r\n                            <TabPane tab={ <span><Icon type=\"message\" />Feedbacks</span> } key=\"5\">\r\n                               <FeedBacks feedbacks={this.state.feedbacks}/>\r\n                            </TabPane>\r\n                        : null}\r\n                        \r\n                        {testdetails.testconducted?\r\n                            <TabPane tab={ <span><Icon type=\"bar-chart\" />Analysis</span> } key=\"6\">\r\n                               <Analysis maxmMarks={this.state.maxMarks} id={this.state.id} stats={this.state.stats} />\r\n                            </TabPane>\r\n                        :null}\r\n\r\n\r\n                        {testdetails.testconducted && testdetails.addcoding?\r\n                            <TabPane tab={ <span><Icon type=\"code\" />Coding</span> } key=\"7\">\r\n                               <Coding id={this.state.id} />\r\n                            </TabPane>\r\n                        : null}\r\n                    </Tabs>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    trainer : state.trainer\r\n});\r\n\r\nexport default connect(mapStateToProps,{\r\n    updateQuestiosnActiveTest\r\n})(TestDetails);\r\n","import React, { Component } from 'react';\r\nimport { Table, Input, Button, Icon, Typography, Modal,Tag   } from 'antd';\r\nimport Highlighter from 'react-highlight-words';\r\nimport { connect } from 'react-redux';\r\nimport { \r\n    ChangeTestSearchText,\r\n    ChangeTestTableData,\r\n    ChangeTestDetailsModalState\r\n} from '../../../actions/trainerAction';\r\nimport './alltest.css';\r\nimport moment from 'moment';\r\n\r\nimport TestDetails from '../testdetails/testdetails';\r\n\r\nclass AllTests extends Component {\r\n\r\n    openModal = (id)=>{\r\n        this.props.ChangeTestDetailsModalState(true,id);\r\n    }\r\n    \r\n    closeModal = ()=>{\r\n        this.props.ChangeTestDetailsModalState(false,null);\r\n    }\r\n    componentDidMount(){\r\n      this.props.ChangeTestTableData();\r\n    }\r\n\r\n    getColumnSearchProps = dataIndex => ({\r\n        filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => (\r\n          <div style={{ padding: 8 }}>\r\n            <Input\r\n              ref={node => {\r\n                this.searchInput = node;\r\n              }}\r\n              placeholder={`Search ${dataIndex}`}\r\n              value={selectedKeys[0]}\r\n              onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\r\n              onPressEnter={() => this.handleSearch(selectedKeys, confirm)}\r\n              style={{ width: 188, marginBottom: 8, display: 'block' }}\r\n            />\r\n            <Button\r\n              type=\"primary\"\r\n              onClick={() => this.handleSearch(selectedKeys, confirm)}\r\n              icon=\"search\"\r\n              size=\"small\"\r\n              style={{ width: 90, marginRight: 8 }}\r\n            >\r\n              Search\r\n            </Button>\r\n            <Button onClick={() => this.handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>\r\n              Reset\r\n            </Button>\r\n          </div>\r\n        ),\r\n        filterIcon: filtered => (\r\n          <Icon type=\"search\" style={{ color: filtered ? '#1890ff' : undefined }} />\r\n        ),\r\n        onFilter: (value, record) =>\r\n          record[dataIndex]\r\n            .toString()\r\n            .toLowerCase()\r\n            .includes(value.toLowerCase()),\r\n        onFilterDropdownVisibleChange: visible => {\r\n          if (visible) {\r\n            setTimeout(() => this.searchInput.select());\r\n          }\r\n        },\r\n        render: text => (\r\n          <Highlighter\r\n            highlightStyle={{ backgroundColor: '#ffc069', padding: 0 }}\r\n            searchWords={[this.props.trainer.TestsearchText]}\r\n            autoEscape\r\n            textToHighlight={text.toString()}\r\n          />\r\n        ),\r\n      });\r\n    \r\n      handleSearch = (selectedKeys, confirm) => {\r\n        confirm();\r\n        this.props.ChangeTestSearchText(selectedKeys[0])\r\n      };\r\n    \r\n      handleReset = clearFilters => {\r\n        clearFilters();\r\n        this.props.ChangeTestSearchText('')\r\n      };\r\n\r\n    render() {\r\n      const { Title } = Typography;\r\n      const columns = [\r\n        {\r\n          title: 'Name',\r\n          dataIndex: 'title',\r\n          key: 'title',\r\n          ...this.getColumnSearchProps('title'),\r\n        },\r\n        {\r\n          title: 'Type',\r\n          dataIndex: 'type',\r\n          key: 'type',\r\n          ...this.getColumnSearchProps('type'),\r\n        },\r\n        {\r\n          title: 'Subjects',\r\n          dataIndex: 'subjects',\r\n          key: 'subjects._id',\r\n          render: tags => (\r\n            <span>\r\n              {tags.map((tag,i) => {\r\n                let color ='geekblue';\r\n                return (\r\n                  <Tag color={color} key={tag._id}>\r\n                    {tag.topic.toUpperCase()}\r\n                  </Tag>\r\n                );\r\n              })}\r\n            </span>\r\n          )\r\n        },\r\n        {\r\n          title: 'Created on',\r\n          dataIndex: 'createdAt',\r\n          key: 'createdAt',\r\n          ...this.getColumnSearchProps('createdAt'),\r\n          render: tags => (\r\n            <span>\r\n              {moment(tags).format(\"DD/ MM/YYYY\")}\r\n            </span>\r\n          )\r\n        },\r\n        {\r\n          title: 'Action',\r\n          key: '_id',\r\n          dataIndex: '_id',\r\n          render: (key) => (\r\n            <span>\r\n              <Button type=\"primary\" shape=\"circle\" icon=\"info-circle\" onClick={()=>this.openModal(key)}/>\r\n            </span>\r\n          ),\r\n        },\r\n      ];\r\n        return (\r\n            <div className=\"admin-table-container\">\r\n\r\n              <div className=\"register-trainer-form-header\">\r\n                <Title level={4} style={{color:'#fff',textAlign:'center'}}>List of Assessments</Title>\r\n              </div>\r\n\r\n              <Table \r\n                bordered={true} \r\n                columns={columns} \r\n                dataSource={this.props.trainer.TestTableData} \r\n                size=\"medium\" \r\n                pagination={{ pageSize: 5 }}\r\n                loading={this.props.trainer.TestTableLoading}\r\n                rowKey=\"_id\" \r\n              />\r\n\r\n              <Modal\r\n                visible={this.props.trainer.TestDetailsmodalOpened}\r\n                title=\"Assessment details\"\r\n                onOk={this.handleOk}\r\n                onCancel={this.closeModal}\r\n                afterClose={this.closeModal}\r\n                style={{top :'20px',padding:'0px',backgroundColor:'rgb(155,175,190)'}}\r\n                width=\"90%\"\r\n                destroyOnClose={true}\r\n                footer={[\r\n                  \r\n                ]}\r\n              >\r\n                <TestDetails />\r\n              </Modal>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  trainer : state.trainer\r\n});\r\n\r\nexport default connect(mapStateToProps,{\r\n    ChangeTestSearchText,\r\n    ChangeTestTableData,\r\n    ChangeTestDetailsModalState\r\n})(AllTests);","import { SecurePost } from '../services/axiosCall';\r\nimport apis from '../services/Apis';\r\nimport Alert from '../components/common/alert';\r\nexport const changeConducttestId = (d)=> dispatch =>{\r\n    dispatch({\r\n       type : 'SET_CONDUCT_TEST_ID',\r\n       payload : d\r\n    })\r\n}\r\n\r\nexport const changeTestRegisterLink = (d)=> dispatch =>{\r\n    dispatch({\r\n       type : 'SET_TEST_REGISTER_LINK',\r\n       payload : d\r\n    })\r\n}\r\n\r\nexport const changeTestRegisterStatus = (d)=> dispatch =>{\r\n    dispatch({\r\n       type : 'CHANGE_TEST_ISREGISTRATION_AVAILABLE',\r\n       payload : d\r\n    })\r\n}\r\n\r\nexport const changeTestStatus = (d) => dispatch => {\r\n    dispatch({\r\n        type: 'CHANGE_BEGIN_TEST_STATUS',\r\n        payload: d\r\n    });\r\n};\r\n\r\n\r\nexport const updateCurrentTestBasicDetails = (d) => dispatch => {\r\n    SecurePost({\r\n        url: `${apis.GET_SINGLE_TEST_DETAILS_BASIC}`,\r\n        data: {\r\n            id: d\r\n        }\r\n    }).then((response) => {\r\n        if (response.data.success) {\r\n            // console.log(response.data.data);\r\n            dispatch({\r\n                type: 'UPDATE_TEST_BASIC_DETAILS',\r\n                payload: response.data.data\r\n            });\r\n        }\r\n        else {\r\n            return Alert('error', 'Error!', response.data.message);\r\n        }\r\n    })\r\n    .catch((error) => {\r\n        // console.log(error);\r\n        return Alert('error', 'Error!', 'Unable to refresh test status');\r\n    });\r\n};\r\n\r\n\r\n\r\nexport const updateCandidatesTest = (d) => dispatch => {\r\n    dispatch({\r\n        type: 'CHANGE_CANDIDATES_OF_TEST',\r\n        payload: d\r\n    });\r\n};\r\n\r\n\r\nexport const updateQuestiosnTest = (d) => {\r\n    return {\r\n        type: 'CHANGE_QUESTIONS_OF_TEST',\r\n        payload: d\r\n    };\r\n};","import apis from '../services/Apis';\r\nimport Alert from '../components/common/alert';\r\nimport { SecurePost } from '../services/axiosCall';\r\nexport const changeStep = (d)=> dispatch =>{\r\n    dispatch({\r\n       type : 'CHANGE_ACTIVE_STEP',\r\n       payload : d\r\n    })\r\n}\r\n\r\nexport const changeBasicNewTestDetails = (d) => dispatch => {\r\n    dispatch({\r\n        type: 'CHANGE_BASIC_NEW_TEST_DETAILS',\r\n        payload: d\r\n    });\r\n};\r\n\r\nexport const pushQuestionToQueue = (d) => dispatch => {\r\n    dispatch({\r\n        type: 'ADD_QUESTION_TO_QUESTION_QUEUSE',\r\n        payload: d\r\n    });\r\n};\r\n\r\nexport const removeQuestionFromMainQueue = (d)=> dispatch =>{\r\n    dispatch({\r\n        type: 'REMOVE_QUESTION_FROM_MAIN_QUEUE',\r\n        payload:d\r\n    })\r\n}\r\n\r\nexport const changeMode = (d)=> dispatch =>{\r\n    dispatch({\r\n        type : 'CHANGE_MODE_QUESTION_SELECT',\r\n        payload:d\r\n    })\r\n}\r\n\r\n\r\n\r\nexport const fetchSubjectWiseQuestion = (d) => dispatch =>{\r\n    SecurePost({\r\n        url : `${apis.GET_ALL_QUESTIONS}`,\r\n        data:{\r\n            subject : d\r\n        }\r\n    })\r\n    .then((response) => {\r\n        // console.log(response);\r\n        if(response.data.success){\r\n            dispatch({\r\n                type: 'FETCH_QUESTIONS_BASED_ON_SUBJECT',\r\n                payload: response.data.data\r\n            });\r\n        }\r\n        else{\r\n            Alert('error','Error!',response.data.message);\r\n            dispatch({\r\n                type: 'FETCH_QUESTIONS_BASED_ON_SUBJECT',\r\n                payload: []\r\n            });\r\n        }\r\n    })\r\n    .catch((error) => {\r\n        Alert('error','Error!','Server Error');\r\n        dispatch({\r\n            type: 'FETCH_QUESTIONS_BASED_ON_SUBJECT',\r\n            payload: []\r\n        });\r\n    });\r\n}\r\n\r\n// Add Job Data\r\nexport const addJobData = (check, data)=> dispatch =>{\r\n    dispatch({\r\n        type : 'ADD_JOB_DATA',\r\n        payload1: check,\r\n        payload2: data\r\n    });\r\n};\r\n\r\n// Add Coding Question Validator\r\nexport const checkcode = (data)=> dispatch =>{\r\n    dispatch({\r\n        type : 'ADD_CODING_QUESTION_CHECKER',\r\n        payload: data\r\n    });\r\n};\r\n\r\n// Add Coding Question From Queue\r\nexport const pushCodingQuestionToQueue = (data) => dispatch => {\r\n    dispatch({\r\n        type: 'ADD_CODING_QUESTION_TO_QUESTION_QUEUE',\r\n        payload: data\r\n    });\r\n};\r\n\r\n// Remove Coding Question From Queue\r\nexport const removeCodingQuestionFromMainQueue = (data)=> dispatch =>{\r\n    dispatch({\r\n        type: 'REMOVE_CODING_QUESTION_FROM_MAIN_QUEUE',\r\n        payload:data\r\n    });\r\n};","import React from 'react';\r\nimport {CopyToClipboard} from 'react-copy-to-clipboard';\r\nimport { Input, Button, Descriptions, Icon, message, Typography } from 'antd';\r\nimport { connect } from 'react-redux';\r\nimport moment from 'moment';\r\n\r\nimport {\r\n    changeTestRegisterLink,\r\n    updateCurrentTestBasicDetails,\r\n    changeTestRegisterStatus,\r\n    changeTestStatus,\r\n    updateCandidatesTest\r\n} from '../../../actions/conductTest';\r\nimport { SecurePost } from '../../../services/axiosCall';\r\nimport apis from '../../../services/Apis';\r\nimport Alert from '../../common/alert';\r\n\r\nconst { Title } = Typography;\r\n\r\nclass TestDetails extends React.Component {\r\n\r\n    componentDidMount(){\r\n        var link = window.location.href.split('/').splice(0,3);\r\n        var mainlink=\"\";\r\n        link.forEach((d, i) => {\r\n            mainlink = mainlink + d + \"/\"\r\n        });\r\n        \r\n        mainlink=mainlink+`candidate/register?testid=${this.props.conduct.id}`\r\n        this.props.changeTestRegisterLink(mainlink);\r\n        this.props.updateCurrentTestBasicDetails(this.props.conduct.id);\r\n        this.props.updateCandidatesTest();\r\n    };\r\n\r\n    changeRegistrationStatus = (d) => {\r\n        SecurePost({\r\n            url: `${apis.STOP_REGISTRATION}`,\r\n            data: {\r\n                id: this.props.conduct.id,\r\n                status: d\r\n            }\r\n        }).then((response) => {\r\n            if (response.data.success) {\r\n                this.props.changeTestRegisterStatus(d)\r\n                Alert('success', 'Success!', 'Registration status changed');\r\n            }\r\n            else {\r\n                Alert('error', 'Error!', response.data.message)\r\n            }\r\n        }).catch((error) => {\r\n            // console.log(error);\r\n            Alert('error', 'Error!', 'Server Error')\r\n        });\r\n    };\r\n\r\n    changeTestStatus = () => {\r\n        SecurePost({\r\n            url: `${apis.START_TEST_BY_TRAINER}`,\r\n            data: {\r\n                id: this.props.conduct.id\r\n            }\r\n        }).then((response) => {\r\n            // console.log(response);\r\n            if (response.data.success) {\r\n                this.props.changeTestStatus(response.data.data);\r\n                Alert('success', 'Success!', 'Test has begin');\r\n            }\r\n            else {\r\n                Alert('error', 'Error!', response.data.message)\r\n            }\r\n        }).catch((error) => {\r\n            // console.log(error);\r\n            Alert('error', 'Error!', 'Server Error')\r\n        });\r\n    };\r\n\r\n    endTestByTrainee = () => {\r\n        SecurePost({\r\n            url: `${apis.END_TEST_BY_TRAINER}`,\r\n            data: {\r\n                id: this.props.conduct.id\r\n            }\r\n        })\r\n        .then((response) => {\r\n            // console.log(response);\r\n            if (response.data.success) {\r\n                this.props.changeTestStatus(response.data.data);\r\n                Alert('success', 'Success!', 'Test has ended');\r\n            }\r\n            else {\r\n                Alert('error', 'Error!', response.data.message)\r\n            }\r\n        })\r\n        .catch((error) => {\r\n            // console.log(error);\r\n            Alert('error', 'Error!', 'Server Error')\r\n        });\r\n    };\r\n\r\n    getCandidates = () => {\r\n        SecurePost({\r\n            url: `${apis.GET_TEST_CANDIDATES}`,\r\n            data: {\r\n                id: this.props.conduct.id\r\n            }\r\n        }).then((response) => {\r\n            // console.log(response);\r\n        }).catch((error) => {\r\n            console.log(error)\r\n        });\r\n    };\r\n    \r\n    render(){\r\n        return (\r\n            <div>\r\n                <Descriptions \r\n                    size=\"small\" \r\n                    column={4} \r\n                    title=\"Basic Assessment Info\" \r\n                    layout=\"vertical\" \r\n                    bordered={true}\r\n                >\r\n                    <Descriptions.Item span={1} label=\"Assessment Id\">\r\n                        {this.props.conduct.id}\r\n                    </Descriptions.Item>\r\n\r\n                    <Descriptions.Item span={3} label=\"Registration Link\"><Input disabled={true} value={this.props.conduct.testRegisterLink} addonAfter={<CopyToClipboard text={this.props.conduct.testRegisterLink} onCopy={() => message.success('Link Copied to clipboard')}><Icon type=\"copy\" /></CopyToClipboard>} /></Descriptions.Item>\r\n\r\n                    {\r\n                        this.props.conduct.basictestdetails.testconducted ? \r\n                        <Descriptions.Item \r\n                         span={1} \r\n                         label=\"Registration Details\"\r\n                        >\r\n                            The Assessment has ended! Go to all Assessments to check the results\r\n                        </Descriptions.Item>\r\n                        : \r\n                        <Descriptions.Item \r\n                         span={1} \r\n                         label={this.props.conduct.basictestdetails.isRegistrationavailable ? \"Registration Open\" : \"Registration Closed\"}\r\n                        >\r\n                            <Button \r\n                                disabled={this.props.conduct.basictestdetails.testbegins} onClick={() => { this.changeRegistrationStatus(!this.props.conduct.basictestdetails.isRegistrationavailable) }} \r\n                                type={this.props.conduct.basictestdetails.isRegistrationavailable ? \"danger\" : \"primary\"}\r\n                            >{this.props.conduct.basictestdetails.isRegistrationavailable ? \"Stop Registration\" : \"Open Registration\"}\r\n                            </Button>\r\n                        </Descriptions.Item>\r\n                    }\r\n                    \r\n                    {\r\n                        this.props.conduct.basictestdetails.testconducted ? \r\n                        <Descriptions.Item \r\n                         span={1} \r\n                         label=\"Assessment Details\"\r\n                        >\r\n                            The Assessment has ended! Go to all Assessments to check the results\r\n                        </Descriptions.Item>\r\n                        : \r\n                        <Descriptions.Item \r\n                            span={3} \r\n                            label={this.props.conduct.basictestdetails.testbegins ? \"Test on Progress\" : \"Test has not started yet\"}\r\n                        >\r\n                            <Button \r\n                                disabled={this.props.conduct.basictestdetails.testbegins} \r\n                                onClick={() => { this.changeTestStatus() }} \r\n                                type={\"primary\"}\r\n                            >\r\n                                Start Test\r\n                            </Button>\r\n                            \r\n                            <Button \r\n                                disabled={!this.props.conduct.basictestdetails.testbegins} \r\n                                onClick={() => { this.endTestByTrainee() }} type={\"danger\"}\r\n                            >\r\n                                End Test\r\n                            </Button>\r\n                        </Descriptions.Item>\r\n                    }\r\n\r\n                    <Descriptions.Item \r\n                        span={1} \r\n                        label=\"Assessment Start Time\"\r\n                    >\r\n                        {moment(this.props.conduct.basictestdetails.start).format('MMMM Do YYYY, h:mm:ss a')}\r\n                    </Descriptions.Item>\r\n\r\n                    <Descriptions.Item \r\n                        span={1} \r\n                        label=\"Assessment End Time\"\r\n                    >\r\n                        {moment(this.props.conduct.basictestdetails.end).format('MMMM Do YYYY, h:mm:ss a')}\r\n                    </Descriptions.Item>\r\n                </Descriptions>\r\n            </div>\r\n        );\r\n    };\r\n};\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n    trainer: state.trainer,\r\n    conduct: state.conduct\r\n});\r\n\r\nexport default connect(mapStateToProps,{\r\n    changeTestRegisterLink,\r\n    updateCurrentTestBasicDetails,\r\n    changeTestRegisterStatus,\r\n    changeTestStatus,\r\n    updateCandidatesTest\r\n})(TestDetails);","import React, { Component } from 'react'\r\nimport { changeConducttestId, updateCandidatesTest } from '../../../actions/conductTest';\r\nimport { connect } from 'react-redux';\r\nimport apis from '../../../services/Apis';\r\nimport { SecurePost } from '../../../services/axiosCall';\r\nimport Alert from '../../common/alert';\r\nimport { Table, Input, Button, Icon, message, Typography, Modal, Progress } from 'antd';\r\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\r\nimport Highlighter from 'react-highlight-words';\r\nimport CSVReader from \"react-csv-reader\";\r\nimport './conducttes.css';\r\n\r\nconst { Title } = Typography;\r\n\r\n// csv papaparse\r\nconst papaparseOptions = {\r\n  header: true,\r\n  dynamicTyping: true,\r\n  skipEmptyLines: true,\r\n  transformHeader: header => header.toLowerCase().replace(/\\W/g, \"_\")\r\n};\r\n\r\nclass Candidates extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            loading:false,\r\n            searchText: '',\r\n            mainlink: '',\r\n            visible: false,\r\n            progress: 0,\r\n        }\r\n    }\r\n\r\n    getColumnSearchProps = dataIndex => ({\r\n        filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => (\r\n          <div style={{ padding: 8 }}>\r\n            <Input\r\n              ref={node => {\r\n                this.searchInput = node;\r\n              }}\r\n              placeholder={`Search ${dataIndex}`}\r\n              value={selectedKeys[0]}\r\n              onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\r\n              onPressEnter={() => this.handleSearch(selectedKeys, confirm)}\r\n              style={{ width: 188, marginBottom: 8, display: 'block' }}\r\n            />\r\n            <Button\r\n              type=\"primary\"\r\n              onClick={() => this.handleSearch(selectedKeys, confirm)}\r\n              icon=\"search\"\r\n              size=\"small\"\r\n              style={{ width: 90, marginRight: 8 }}\r\n            >\r\n              Search\r\n            </Button>\r\n            <Button onClick={() => this.handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>\r\n              Reset\r\n            </Button>\r\n          </div>\r\n        ),\r\n        filterIcon: filtered => (\r\n          <Icon type=\"search\" style={{ color: filtered ? '#1890ff' : undefined }} />\r\n        ),\r\n        onFilter: (value, record) =>\r\n          record[dataIndex]\r\n            .toString()\r\n            .toLowerCase()\r\n            .includes(value.toLowerCase()),\r\n        onFilterDropdownVisibleChange: visible => {\r\n          if (visible) {\r\n            setTimeout(() => this.searchInput.select());\r\n          }\r\n        },\r\n        render: text => (\r\n          <Highlighter\r\n            highlightStyle={{ backgroundColor: '#ffc069', padding: 0 }}\r\n            searchWords={[this.state.searchText]}\r\n            autoEscape\r\n            textToHighlight={text.toString()}\r\n          />\r\n        ),\r\n    });\r\n\r\n\r\n    handleSearch = (selectedKeys, confirm) => {\r\n        confirm();\r\n        this.setState({ searchText: selectedKeys[0] });\r\n    };\r\n    \r\n    handleReset = clearFilters => {\r\n        clearFilters();\r\n        this.setState({ searchText: '' });\r\n    };\r\n\r\n    componentDidMount(){\r\n      var link = window.location.href.split('/').splice(0,3);\r\n      var mainlink=\"\";\r\n      link.forEach((d,i)=>{\r\n          mainlink=mainlink+d+\"/\"\r\n      });\r\n      this.setState({mainlink});\r\n      this.refreshUserList(); \r\n  }\r\n  \r\n  // Modal\r\n  showModal = () => {\r\n      this.setState({\r\n        visible: true,\r\n      });\r\n  };\r\n\r\n  handleOk = e => {\r\n      // console.log(e);\r\n      this.setState({\r\n        visible: false,\r\n      });\r\n  };\r\n\r\n  handleCancel = e => {\r\n      // console.log(e);\r\n      this.setState({\r\n        visible: false,\r\n      });\r\n  };\r\n\r\n  // csv parser\r\n  handleForce = (data, fileInfo) => {\r\n\r\n    // console.log(data);\r\n    \r\n  SecurePost({\r\n      url: `${apis.IMPORT_CANDIDATES}`,\r\n      data: {\r\n        testid: this.props.conduct.id,\r\n        data: data,\r\n      }\r\n    })\r\n    .then((response) => {\r\n      if (response.data.success) {\r\n          this.setState({progress: 100});\r\n          this.props.updateCandidatesTest(response.data.data);\r\n      }\r\n      else {\r\n          Alert('error', 'Error!', response.data.message)\r\n      }\r\n        this.setState({\r\n          loading: false\r\n        });\r\n    })\r\n    .catch((error) => {\r\n      Alert('error', 'Error!', 'Server Error')\r\n        this.setState({loading: false});\r\n  });\r\n};\r\n\r\n\r\n  refreshUserList = () => {\r\n    this.setState({\r\n      loading: true\r\n    });\r\n        \r\n    SecurePost({\r\n      url: `${apis.GET_TEST_CANDIDATES}`,\r\n      data: {\r\n        id: this.props.conduct.id\r\n      }\r\n    })\r\n      .then((response) => {\r\n        //console.log(response);\r\n        if (response.data.success) {\r\n          this.props.updateCandidatesTest(response.data.data);\r\n        }\r\n        else {\r\n          Alert('error', 'Error!', response.data.message)\r\n        }\r\n        this.setState({\r\n          loading: false\r\n        });\r\n      }).catch((error) => {\r\n        //console.log(error);\r\n        Alert('error', 'Error!', 'Server Error')\r\n        this.setState({\r\n          loading: false\r\n        });\r\n      });\r\n  };\r\n\r\n  getResume = (file) => {\r\n    window.open(file);\r\n  };\r\n\r\n    render() {\r\n        const columns = [\r\n            {\r\n              title: 'Name',\r\n              dataIndex: 'name',\r\n              key: 'name',\r\n              ...this.getColumnSearchProps('name'),\r\n            },\r\n            {\r\n              title: 'Email Id',\r\n              dataIndex: 'emailid',\r\n              key: 'emailid',\r\n              ...this.getColumnSearchProps('emailid'),\r\n            },\r\n            {\r\n                title: 'Contact No',\r\n                dataIndex: 'contact',\r\n                key: 'contact',\r\n                ...this.getColumnSearchProps('contact'),\r\n            },\r\n            {\r\n              title: 'Resume',\r\n              dataIndex: 'resume',\r\n              key: 'resume',\r\n              render: id => (\r\n                <Button\r\n                  color=\"primary\"\r\n                  onClick={() => this.getResume(id)}\r\n                >\r\n                  Download Resume\r\n                </Button>\r\n              ),\r\n            },\r\n            {\r\n                title: 'Links',\r\n                key: '_id',\r\n                dataIndex: '_id',\r\n                render: id => (\r\n                  <Input disabled={true} value={`${this.state.mainlink}candidate/taketest?testid=${this.props.conduct.id}&traineeid=${id}`} addonAfter={<CopyToClipboard text={`${this.state.mainlink}candidate/taketest?testid=${this.props.conduct.id}&traineeid=${id}`} onCopy={()=>message.success('Link Copied to clipboard')}><Icon type=\"copy\"/></CopyToClipboard>}/>\r\n                ),\r\n            }\r\n        ];\r\n\r\n      return (\r\n        <div className=\"candidate-list-header-container\">\r\n          <Button \r\n            className=\"reload-button\" \r\n            type=\"primary\" \r\n            icon=\"reload\" \r\n            loading={this.state.loading} \r\n            onClick={this.refreshUserList}\r\n          >\r\n            Reload\r\n          </Button>\r\n\r\n          <div className=\"register-trainer-form-header\">\r\n            <Title level={4} style={{ color: '#fff', textAlign: 'center' }}>List of Registered Candidates</Title>\r\n          </div>\r\n          <Table\r\n            columns={columns}\r\n            bordered={true}\r\n            dataSource={this.props.conduct.registeredCandidates}\r\n            rowKey=\"_id\"\r\n            loading={this.state.loading}\r\n          />\r\n\r\n        <Modal\r\n          title=\"Import Candidates\"\r\n          visible={this.state.visible}\r\n          onOk={this.handleOk}\r\n          onCancel={this.handleCancel}\r\n          footer={[ ]}\r\n        >\r\n          <p><b>Note :</b> Upload csv file to import candidates data-</p>\r\n          <p>CSV file header should contain - name, emailid, contact</p>\r\n          <CSVReader\r\n            cssClass=\"react-csv-input\"\r\n            label=\"\"\r\n            onFileLoaded={this.handleForce}\r\n            parserOptions={papaparseOptions}\r\n          />\r\n          <Progress percent={this.state.progress} />\r\n        </Modal>\r\n        </div>\r\n      );\r\n  };\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    conduct : state.conduct\r\n});\r\n\r\nexport default connect(mapStateToProps,{\r\n    changeConducttestId,\r\n    updateCandidatesTest\r\n})(Candidates);","import React, { Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport { JsonToTable } from \"react-json-to-table\";\nimport exportFromJSON from 'export-from-json';\n\nconst JobApplications = (props) => {\n  const data = props.conduct.registeredCandidates; \n  const fileName = 'download';\n  const exportType = 'csv';\n\n  const ExportToExcel = () => {  \n    exportFromJSON({ data, fileName, exportType })  \n  };\n\n  return (\n        <Fragment>\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-lg-6\"></div>\n\n              <div className=\"col-lg-6\">\n                <button type=\"button\" onClick={ExportToExcel}>Export To CSV</button>  \n              </div>\n            </div>\n          </div>\n\n          <br />\n\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-lg-12\"  style={{ maxHeight: '500px', overflowY: 'scroll' }}>\n                <JsonToTable json={props.conduct.registeredCandidates} />\n              </div>\n            </div>\n          </div>\n        </Fragment>\n  );\n\n};\n\nconst mapStateToProps = state => ({\n  conduct: state.conduct\n});\n\nexport default connect(mapStateToProps, null)(JobApplications);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Input,Button, Typography,Tabs, Icon } from 'antd';\r\nimport './conducttes.css';\r\n\r\nimport { \r\n    changeConducttestId, \r\n    updateCandidatesTest, \r\n    updateQuestiosnTest \r\n} from '../../../actions/conductTest';\r\nimport { changeStep } from '../../../actions/testAction';\r\n\r\nimport TestDetails from './details';\r\nimport Candidates from './candidates';\r\nimport Questions from './questions';\r\nimport JobApplications from './JobApplications';\r\n\r\nconst { Title } = Typography;\r\nconst { TabPane } = Tabs;\r\n\r\nclass ConductTestS extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.props.changeConducttestId(this.props.testid);\r\n        this.state={\r\n            localTestId:null,\r\n            needRedirect:false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.changeStep(0);\r\n    };\r\n\r\n    ChangeLocalTestId = (d) => {\r\n        this.setState({\r\n            localTestId: d.target.value\r\n        })\r\n    };\r\n\r\n    ChangetestId = (d) => {\r\n        this.setState({\r\n            needRedirect: true\r\n        })\r\n    };\r\n\r\n    render() {\r\n        if(this.state.needRedirect){\r\n            return window.location.href=`/user/conducttest?testid=${this.state.localTestId}`\r\n        }\r\n        else{\r\n            return (\r\n                <div className=\"conduct-test-main-wrapper\">\r\n                    {!this.props.conduct.id ? \r\n                        <div>\r\n                            <Title \r\n                                style={{ width:'100%', textAlign:'center'}} \r\n                                level={4}\r\n                            >\r\n                                Enter Assessment Id\r\n                            </Title>\r\n\r\n                            <div className=\"test-conduct-testid-form\">\r\n                                <Input \r\n                                    placeholder=\"Enter Assessment Id\" \r\n                                    onChange={this.ChangeLocalTestId} \r\n                                    value={this.state.localTestId}\r\n                                />\r\n                                <Button \r\n                                    onClick={this.ChangetestId}  \r\n                                    type=\"primary\" \r\n                                    style={{marginTop:'30px'}}\r\n                                >\r\n                                    Proceed\r\n                                </Button>\r\n                            </div>\r\n                        </div>:\r\n                        <div>\r\n                            <CC key={this.props.conduct.basictestdetails.testconducted} />\r\n                        </div>\r\n                    }\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n};\r\n\r\n// ...\r\nclass C extends Component {\r\n    render() {\r\n        return (\r\n                <div>\r\n                    <TestDetails/>\r\n\r\n                    {/* Bottom Tabs */}\r\n                    <Tabs defaultActiveKey=\"1\" style={{marginTop:'20px'}}>\r\n                        \r\n                        <TabPane tab={<span><Icon type=\"user\" />Registered Trainee</span>} key=\"1\">\r\n                            <Candidates />\r\n                        </TabPane>\r\n\r\n                        <TabPane tab={<span><Icon type=\"question-circle\" />Questions</span>} key=\"2\">\r\n                            <Questions id={this.props.conduct.id} questionsOfTest={this.props.conduct.questionsOfTest} updateQuestiosnTest={this.props.updateQuestiosnTest}  />\r\n                        </TabPane>\r\n\r\n                        <TabPane tab={<span><Icon type=\"solution\" />Job Applications</span>} key=\"3\">\r\n                            <JobApplications />\r\n                        </TabPane>\r\n\r\n                    </Tabs>\r\n                </div>\r\n            )\r\n        }\r\n    };\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n    trainer : state.trainer,\r\n    conduct : state.conduct\r\n});\r\n\r\n\r\nlet CC=connect(mapStateToProps,{\r\n    changeConducttestId,\r\n    updateCandidatesTest,\r\n    updateQuestiosnTest\r\n})(C);\r\n\r\n\r\nexport default connect(mapStateToProps, {\r\n    changeStep,\r\n    changeConducttestId,\r\n    updateCandidatesTest,\r\n    updateQuestiosnTest\r\n})(ConductTestS);","export const steps = [\r\n    {\r\n      title: 'Basic details'\r\n    },\r\n    {\r\n      title: 'Add Job Post'\r\n    },\r\n    {\r\n      title: 'Select Questions'\r\n    },\r\n    {\r\n      title: 'Add Programming'\r\n    },\r\n    {\r\n      title: 'Finalize'\r\n    }\r\n];","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { Form, InputNumber, Input, Button, Select, DatePicker } from 'antd';\r\nimport moment from 'moment';\r\n\r\nimport { changeStep,changeBasicNewTestDetails } from '../../../actions/testAction';\r\nimport { SecurePost } from '../../../services/axiosCall';\r\nimport './newtest.css';\r\nimport apis from '../../../services/Apis';\r\n\r\nmoment().utcOffset(\"+05:30\");\r\n\r\nconst { Option } = Select;\r\nconst { RangePicker } = DatePicker;\r\n\r\nclass BasicTestFormO extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            checkingName: \"\"\r\n        };\r\n    };\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        this.props.form.validateFields((err, values) => {\r\n            if (!err) {\r\n                // console.log(values)\r\n                this.props.changeBasicNewTestDetails({\r\n                    testType: values.type,\r\n                    testTitle: values.title,\r\n                    testDuration: values.duration,\r\n                    OrganisationName: values.organisation,\r\n                    testSubject: values.subjects,\r\n                    startTime: values.start,\r\n                    endTime: values.end\r\n                });\r\n                this.props.changeStep(1);\r\n            }\r\n        });\r\n    };\r\n\r\n    validateTestName = (rule, value, callback) => {\r\n        if(value.length>=5){\r\n            this.setState({\r\n                checkingName:\"validating\"\r\n            })\r\n            SecurePost({\r\n                url: apis.CHECK_TEST_NAME,\r\n                data: {\r\n                    testname: value\r\n                }\r\n            }).then((data) => {\r\n                //console.log(data);\r\n                if (data.data.success) {\r\n                    if (data.data.can_use) {\r\n                        this.setState({\r\n                            checkingName: \"success\"\r\n                        });\r\n                        callback();\r\n                    }\r\n                    else {\r\n                        this.setState({\r\n                            checkingName: \"error\"\r\n                        });\r\n                        callback('Another test exist with same name.');\r\n                    }\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        checkingName: \"success\"\r\n                    })\r\n                    callback()\r\n                }\r\n            }).catch((ee) => {\r\n                //console.log(ee);\r\n                this.setState({\r\n                    checkingName: \"success\"\r\n                });\r\n                callback();\r\n            });\r\n        }\r\n        else{\r\n            callback();\r\n        }        \r\n    };\r\n\r\n    render() {\r\n        const { getFieldDecorator } = this.props.form;\r\n        return (\r\n            <div className=\"basic-test-form-outer\">\r\n                <div className=\"basic-test-form-inner\">\r\n                    <Form\r\n                        onSubmit={this.handleSubmit}\r\n                        autoComplete=\"off\"\r\n                    >\r\n                        <Form.Item label=\"Assessment Type\"  hasFeedback>\r\n                            {getFieldDecorator('type', {\r\n                                initialValue : this.props.test.newtestFormData.testType,\r\n                                rules: [{ required: true, message: 'Please select a assessment type' }],\r\n                            })(\r\n                                <Select placeholder=\"Test Type\">\r\n                                    <Option value=\"skill-test\">Skill Test</Option>\r\n                                    <Option value=\"university-hiring\">University Hiring</Option>\r\n                                    <Option value=\"organisation-hiring\">Organisation hiring</Option>\r\n                                </Select>\r\n                            )}\r\n                        </Form.Item>\r\n\r\n                        <Form.Item label=\"Assessment Title\"  hasFeedback validateStatus={this.state.checkingName}>\r\n                            {getFieldDecorator('title', {\r\n                                initialValue : this.props.test.newtestFormData.testTitle,\r\n                                rules: [\r\n                                    { required: true, message: 'Please give the assessment title' },\r\n                                    { min:5, message: 'Title should be atleast 5 character long' },\r\n                                    { validator: this.validateTestName }\r\n                                ],\r\n                                \r\n                            })(\r\n                                <Input placeholder=\"Assessment Title\" />\r\n                            )}\r\n                        </Form.Item>\r\n\r\n                        <Form.Item label=\"Subjects\"  hasFeedback>\r\n                            {getFieldDecorator('subjects', {\r\n                                initialValue : this.props.test.newtestFormData.testSubject,\r\n                                rules: [{ required: true, message: 'Please select a assessment subjects' }],\r\n                            })(\r\n                                <Select\r\n                                mode=\"multiple\"\r\n                                placeholder=\"Select one or more subjects\"\r\n                                style={{ width: '100%' }}\r\n                                allowClear={true}\r\n                                optionFilterProp=\"s\"\r\n                                >\r\n                                    {this.props.admin.subjectTableData.map(item => (\r\n                                        <Select.Option key={item._id} value={item._id} s={item.topic}>\r\n                                        {item.topic}\r\n                                        </Select.Option>\r\n                                    ))}\r\n                                </Select>\r\n                            )}\r\n                        </Form.Item>\r\n\r\n                        <Form.Item label=\"Assessment Duration ( Min. assessment duration - 60m )\" hasFeedback>\r\n                            {getFieldDecorator('duration', {\r\n                                initialValue : this.props.test.newtestFormData.testDuration,\r\n                                rules: [{ required: true, message: 'Please give assessment duration' }],\r\n                            })(\r\n                                <InputNumber style={{width:'100%'}}  placeholder=\"Test Duration\" min={10} max={180}/>\r\n                            )}\r\n                        </Form.Item>\r\n\r\n                        <Form.Item label=\"Organisation Name\"  hasFeedback>\r\n                            {getFieldDecorator('organisation', {\r\n                                initialValue : this.props.test.newtestFormData.OrganisationName\r\n                            })(\r\n                                <Input placeholder=\"Organisation Name\" />\r\n                            )}\r\n                        </Form.Item>\r\n\r\n                        <Form.Item label=\"Test Assessment Time\"  hasFeedback>\r\n                            {\r\n                                getFieldDecorator('start', {\r\n                                    rules: [{ required: true, message: 'Please give assessment start time' }],\r\n                                })(\r\n                                    <DatePicker\r\n                                        showTime\r\n                                        placeholder=\"Select Start Time\"\r\n                                        onChange={this.onChangeStart}\r\n                                        onOk={this.onOkStart}\r\n                                    />\r\n                                )\r\n                            }\r\n                        </Form.Item>\r\n\r\n                        <Form.Item label=\"Test Assessment Time\"  hasFeedback>\r\n                            {\r\n                                getFieldDecorator('end', {\r\n                                    rules: [{ required: true, message: 'Please give assessment end time' }],\r\n                                })(\r\n                                    <DatePicker\r\n                                        showTime\r\n                                        placeholder=\"Select End Time\"\r\n                                        onChange={this.onChangeEnd}\r\n                                        onOk={this.onOkEnd}\r\n                                    />\r\n                                )\r\n                            }\r\n                        </Form.Item>\r\n\r\n                        <Form.Item>\r\n                            <Button type=\"primary\" htmlType=\"submit\" block>\r\n                                Next\r\n                            </Button>\r\n                        </Form.Item>\r\n                    </Form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n};\r\n\r\nconst BasicTestForm = Form.create({ name: 'Basic Form' })(BasicTestFormO);\r\n\r\nconst mapStateToProps = state => ({\r\n    test : state.test,\r\n    admin:state.admin\r\n});\r\n\r\nexport default connect(mapStateToProps,{\r\n    changeStep,\r\n    changeBasicNewTestDetails\r\n})(BasicTestForm);","export const QuillModules = {\n    toolbar: [\n        [{ header: '1' }, { header: '2' }, { header: [3, 4, 5, 6] }, { font: [] }],\n        [{ size: [] }],\n        ['bold', 'italic', 'underline', 'strike', 'blockquote'],\n        [{ list: 'ordered' }, { list: 'bullet' }],\n        ['link', 'image', 'video'],\n        ['clean'],\n        ['code-block']\n    ]\n};\n\nexport const QuillFormats = [\n    'header',\n    'font',\n    'size',\n    'bold',\n    'italic',\n    'underline',\n    'strike',\n    'blockquote',\n    'list',\n    'bullet',\n    'link',\n    'image',\n    'video',\n    'code-block'\n];","import React, { Fragment, Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { \r\n    Form, \r\n    InputNumber, \r\n    Input, \r\n    Button, \r\n    Select, \r\n    DatePicker, \r\n    Row, Col, \r\n    Typography, \r\n    Checkbox, \r\n    Modal,\r\n    Collapse,\r\n    Divider\r\n} from 'antd';\r\nimport moment from 'moment';\r\nimport ReactQuill from 'react-quill';\r\nimport { FormBuilder, FormRenderer } from 'react-ant-form-builder';\r\nimport { \r\n    changeStep,\r\n    addJobData \r\n} from '../../../actions/testAction';\r\n\r\nimport './newtest.css';\r\nimport 'react-quill/dist/quill.snow.css';\r\nimport { QuillModules, QuillFormats } from '../../../utils/Editor';\r\n\r\n\r\nconst { Title } = Typography;\r\nconst { Option } = Select;\r\nconst { RangePicker } = DatePicker;\r\nconst { Panel } = Collapse;\r\n\r\nclass AddJobPost extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            checked: false,\r\n            editor: null,\r\n            formSchema: {},\r\n            data: {},\r\n            visible: false\r\n        }\r\n    };\r\n\r\n    onCheck = (e) => {\r\n        this.setState({ checked: e.target.checked });\r\n    };\r\n\r\n    onChangeEditor = (value) => {\r\n        console.log(value);\r\n        this.setState({ editor: value });\r\n    };\r\n\r\n    // Handle Submit\r\n    handleFinal = e => {\r\n        e.preventDefault();\r\n        this.props.form.validateFields((err, values) => {\r\n            if (!err) {\r\n                console.log(values)\r\n                this.props.addJobData(this.state.checked,{\r\n                    title: values.jobtitle,\r\n                    description: this.state.editor,\r\n                    skillsets: [],\r\n                    location: values.joblocation,\r\n                    type: values.jobtype,\r\n                    customdata: this.state.formSchema\r\n                });\r\n                \r\n                this.props.changeStep(2);\r\n            }\r\n        });\r\n    };\r\n\r\n    // Modal\r\n    showModal = () => {\r\n        this.setState({ visible: true });\r\n    };\r\n    \r\n    handleOk = e => {\r\n        this.setState({ visible: false });\r\n    };\r\n\r\n    handleCancel = e => {\r\n        this.setState({ visible: false });\r\n    };\r\n\r\n    render() {\r\n        const { getFieldDecorator } = this.props.form;\r\n\r\n        return (\r\n            <Fragment>\r\n                <div style={{ padding: '0px auto 5px auto', width: '100%', textAlign: 'center' }}>\r\n                    <Title level={3}>Add Job Post</Title>\r\n                </div>\r\n\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-lg-12\">\r\n                            <Checkbox onChange={this.onCheck}>\r\n                                Do you want to add a job post with this assessment ?\r\n                            </Checkbox>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-lg-12\">\r\n                        {this.state.checked ?  \r\n                            <div>\r\n                                <Title style={{textAlign: 'center'}} level={3}>Add Job Post Details</Title>\r\n                                <Form\r\n                                    onSubmit={this.handleFinal}\r\n                                    autoComplete=\"off\"\r\n                                >\r\n                                    <Form.Item label=\"Job Title\"  hasFeedback>\r\n                                        {getFieldDecorator('jobtitle', {\r\n                                            initialValue : this.props.test.jobPostData.title,\r\n                                            rules: [{ required: true, message: 'Please select a Job title' }],\r\n                                        })(\r\n                                            <Input placeholder=\"Job Title\" />\r\n                                        )}\r\n                                    </Form.Item>\r\n                                    \r\n                                    {/* Description Form Editor */}\r\n                                    <Form.Item label=\"Job Description\"  hasFeedback>\r\n                                        <ReactQuill\r\n                                            modules={QuillModules}\r\n                                            formats={QuillFormats}\r\n                                            value={this.state.editor}\r\n                                            placeholder=\"Write job description ...\"\r\n                                            onChange={this.onChangeEditor}\r\n                                        />\r\n                                    </Form.Item>\r\n\r\n                                    <Form.Item label=\"Job Type\"  hasFeedback>\r\n                                        {getFieldDecorator('jobtype', {\r\n                                            initialValue : this.props.test.jobPostData.jobtype,\r\n                                            rules: [{ required: true, message: 'Please select a Job type' }],\r\n                                        })(\r\n                                            <Select placeholder=\"Job Type\">\r\n                                                <Option value=\"Full Time\">Full Time</Option>\r\n                                                <Option value=\"Part Time\">Part Time</Option>\r\n                                                <Option value=\"Internship\">Internship</Option>\r\n                                                <Option value=\"Work From Home\">Work From Home</Option>\r\n                                            </Select>\r\n                                        )}\r\n                                    </Form.Item>\r\n\r\n                                    <Form.Item label=\"Job Location\"  hasFeedback>\r\n                                        {getFieldDecorator('joblocation', {\r\n                                            initialValue : this.props.test.jobPostData.location,\r\n                                            rules: [{ required: true, message: 'Please select a Job Location' }],\r\n                                        })(\r\n                                            <Input placeholder=\"Job Location\" />\r\n                                        )}\r\n                                    </Form.Item>\r\n\r\n                                    <Form.Item>\r\n                                        <Button type=\"primary\" htmlType=\"submit\" block>\r\n                                            Next\r\n                                        </Button>\r\n                                    </Form.Item>\r\n                                </Form>\r\n\r\n                                <Collapse defaultActiveKey={['1']}>\r\n                                    <Panel header=\"Add Custom Questions\" key=\"1\">\r\n                                        <FormBuilder\r\n                                            formStructure={this.state.formSchema}\r\n                                            onSave={schema => {\r\n                                                this.setState({ formSchema: schema });\r\n                                                // props.setCustomJobDetails(schema);\r\n                                                console.log(schema);\r\n                                            }}\r\n                                            onError={error => console.log(error)}    \r\n                                        />\r\n                                        \r\n                                        <Divider />\r\n                                        \r\n                                        {'      '}\r\n                                        <p>* Save the form to see the changes everytime</p>\r\n                                        \r\n                                        <Button type=\"primary\" onClick={this.showModal}>\r\n                                            Preview\r\n                                        </Button>\r\n                                    </Panel>\r\n                                </Collapse>\r\n\r\n                                {/* Custom Form Modal */}\r\n                                <Modal\r\n                                    title=\"Preview\"\r\n                                    visible={this.state.visible}\r\n                                    onOk={this.handleOk}\r\n                                    onCancel={this.handleCancel}\r\n                                >\r\n                                    <h1>Preview</h1>\r\n                                    <FormRenderer\r\n                                        allowDraft={false}\r\n                                        formStructure={this.state.formSchema}\r\n                                        data={this.state.data}\r\n                                        onSave={changedData => {\r\n                                            // onSave for data received here.\r\n                                            this.setState({ data: changedData });\r\n                                        }}\r\n                                        onError={error => console.log(error)}\r\n                                    />\r\n                                </Modal>\r\n\r\n                            </div> : \r\n                            <div>\r\n                                <br />\r\n                                <br />\r\n                                <div className=\"container\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-lg-12\">\r\n                                            <Button \r\n                                                onClick={()=>this.props.changeStep(2)} \r\n                                                type=\"primary\" \r\n                                                htmlType=\"submit\" block\r\n                                            >\r\n                                                Next\r\n                                            </Button>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Fragment>\r\n        );\r\n    }\r\n};\r\n\r\nconst JobForm = Form.create({ name: 'Basic Form' })(AddJobPost);\r\n\r\nconst mapStateToProps = state => ({\r\n    test : state.test\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n    changeStep,\r\n    addJobData\r\n})(JobForm);\r\n","import React, { Component } from 'react';\r\nimport { Button, Skeleton,Modal,Form,InputNumber,Transfer,Row,Col } from 'antd';\r\nimport { connect } from 'react-redux';\r\nimport { \r\n    changeStep,\r\n    changeMode,\r\n    removeQuestionFromMainQueue,\r\n    changeBasicNewTestDetails,\r\n    fetchSubjectWiseQuestion,\r\n    pushQuestionToQueue \r\n} from '../../../actions/testAction';\r\nimport './newtest.css';\r\nimport Alert from '../../common/alert';\r\nimport apis from '../../../services/Apis';\r\nimport { Post } from '../../../services/axiosCall';\r\n\r\nclass GeneraterandomQuestionO extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            generating:false,\r\n            autogenerate:true,\r\n            ActiveQuestionId:null,\r\n            Mvisible:false\r\n        }\r\n        this.props.changeMode(this.props.mode);\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.props.fetchSubjectWiseQuestion(this.props.test.newtestFormData.testSubject);\r\n    }\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        this.props.form.validateFields((err, values) => {\r\n            if (!err) {\r\n                // console.log(values);\r\n                if(values.no<=this.props.test.questionsAvailablebasedonSubject.length){\r\n                    var qus=[];\r\n                    var allquestions=[...this.props.test.questionsAvailablebasedonSubject];\r\n                    var l=allquestions.length-1;\r\n                    for(var i=values.no;i>0;i--){\r\n                        l=l-1;\r\n                        var r = Math.floor(Math.random() * l);\r\n                        qus.push(allquestions[r]._id);\r\n                        allquestions.splice(r,1);\r\n                    }\r\n                    this.props.pushQuestionToQueue(qus);\r\n                    this.setState({\r\n                        autogenerate : false\r\n                    })\r\n                }\r\n                else{\r\n                    Alert('error','Error!',\"You don't have enough questions to select.\" );\r\n                } \r\n            }\r\n        });\r\n    };\r\n\r\n    renderItem = item => {\r\n        const customLabel = (\r\n          <span className=\"custom-item\">\r\n                <Button shape=\"circle\" onClick={()=>{this.OpenModel(item._id)}} icon=\"info\" style={{background:'linear-gradient(to right,rgb(80,190,189),rgb(0,153,153),rgb(0,153,203))',color:'greenblue'}} size=\"small\" ></Button>\r\n                {item.body}\r\n          </span>\r\n        )\r\n        return {\r\n            label: customLabel, \r\n            value: item._id, \r\n        }\r\n    }\r\n\r\n    OpenModel=(qid)=>{\r\n        this.setState({\r\n            ActiveQuestionId:qid,\r\n            Mvisible:true\r\n        })\r\n    }\r\n    handleCancel=()=>{\r\n        this.setState({\r\n            Mvisible:false\r\n        })\r\n    }\r\n\r\n    handleChange = (targetKeys, direction, moveKeys) => {\r\n        this.props.pushQuestionToQueue(targetKeys);\r\n    };\r\n\r\n\r\n    render() {\r\n        const { getFieldDecorator } = this.props.form;\r\n        return (\r\n            <div>\r\n                <Row>\r\n                    <Col span={5} style={{padding:'20px 0px'}}>\r\n                        <div className={`random-question-generation ${this.props.mode ===\"random\"? \"notblind\" : \"blind\"}`}>\r\n                            <Form onSubmit={this.handleSubmit} >\r\n                                <Form.Item label=\"Enter No. of questions\" hasFeedback>\r\n                                    {getFieldDecorator('no', {\r\n                                        rules: [{ required: true, message: 'Please enter no. of question' }],\r\n                                    })(\r\n                                        <InputNumber style={{width:'100%'}}  placeholder=\"No of question\" min={10} max={50}/>\r\n                                    )}\r\n                                </Form.Item> \r\n                                <Form.Item>\r\n                                    <Button type=\"default\" htmlType=\"submit\" block disabled={!this.state.autogenerate}>\r\n                                        Generate Test Paper\r\n                                    </Button>\r\n                                </Form.Item>\r\n                            </Form>\r\n                        </div>\r\n                    </Col>\r\n\r\n                    <Col span={19} style={{padding:'20px'}}>\r\n                        <Transfer\r\n                            disabled={this.props.mode ===\"random\"? true : false}\r\n                            rowKey={record => record._id}\r\n                            dataSource={this.props.test.questionsAvailablebasedonSubject}\r\n                            listStyle={{\r\n                                width: '45%',\r\n                                height: 500,\r\n                            }}\r\n                            targetKeys={this.props.test.newtestFormData.testQuestions}\r\n                            render={this.renderItem}\r\n                            onChange={this.handleChange}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n                \r\n                <Modal\r\n                    destroyOnClose={true}\r\n                    width=\"70%\"\r\n                    style={{top:'30px'}}\r\n                    title=\"Question details\"\r\n                    visible={this.state.Mvisible}\r\n                    onOk={this.handleCancel}\r\n                    onCancel={this.handleCancel}\r\n                    footer={null}\r\n                    >\r\n                    <SingleQuestionDetails qid={this.state.ActiveQuestionId}/>\r\n                </Modal>  \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst GeneraterandomQuestion = Form.create({ name: 'Basic Form' })(GeneraterandomQuestionO);\r\n\r\nconst mapStateToProps = state => ({\r\n    test : state.test\r\n});\r\n\r\nexport default connect(mapStateToProps,{\r\n    changeStep,\r\n    changeBasicNewTestDetails,\r\n    fetchSubjectWiseQuestion,\r\n    pushQuestionToQueue,\r\n    removeQuestionFromMainQueue,\r\n    changeMode\r\n})(GeneraterandomQuestion);\r\n\r\n\r\n\r\nclass SingleQuestionDetails extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            fetching:false,\r\n            qdetails:null\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.setState({\r\n            fetching:true\r\n        })\r\n        Post({\r\n            url: apis.FETCH_SINGLE_QUESTION_BY_TRAINEE,\r\n            data: {\r\n                qid: this.props.qid\r\n            }\r\n        }).then((response) => {\r\n\r\n            // console.log(response);\r\n\r\n            if (response.data.success) {\r\n                this.setState({\r\n                    qdetails: response.data.data[0]\r\n                })\r\n            }\r\n            else {\r\n                Alert('error', 'Error !', response.data.message);\r\n            }\r\n            this.setState({\r\n                fetching: false\r\n            })\r\n        }).catch((error) => {\r\n            this.setState({\r\n                fetching: false\r\n            });\r\n\r\n            // console.log(error);\r\n\r\n            Alert('error', 'Error !', \"Server Error\");\r\n        });\r\n    }\r\n    \r\n    render(){\r\n        const optn =['A','B','C','D','E'];\r\n        let Optiondata=this.state.qdetails;\r\n        if(Optiondata!==null){\r\n            return (\r\n                <div>\r\n                    <div className=\"mainQuestionDetailsContaine\">\r\n                        <div className=\"questionDetailsBody\">\r\n                            {Optiondata.body}\r\n                        </div>\r\n                        {Optiondata.quesimg?\r\n                            <div className=\"questionDetailsImageContainer\">\r\n                                <img alt=\"Question\" className=\"questionDetailsImage\" src={Optiondata.quesimg} />  \r\n                            </div>\r\n                            : null\r\n                        }\r\n                        <div>\r\n                            {Optiondata.options.map((d,i)=>{\r\n                                return(\r\n                                    <div key={i}>\r\n                                        <Row type=\"flex\" justify=\"center\" className=\"QuestionDetailsOptions\">\r\n                                            <Col span={2}>\r\n                                                {\r\n                                                    d.isAnswer?<Button className=\"green\" shape=\"circle\">{optn[i]}</Button>:<Button type=\"primary\" shape=\"circle\">{optn[i]}</Button>\r\n                                                }\r\n                                                \r\n                                            </Col>\r\n                                            {d.optimg?\r\n                                                <Col span={6} style={{padding:'5px'}}>\r\n                                                    <img alt=\"options\" className=\"questionDetailsImage\" src={d.optimg} />\r\n                                                </Col>\r\n                                            :\r\n                                                null\r\n                                            }\r\n                                            {d.optimg?\r\n                                                <Col span={14}>{d.optbody}</Col>\r\n                                            :\r\n                                                <Col span={20}>{d.optbody}</Col>\r\n                                            }\r\n                                        </Row>\r\n                                    \r\n                                    </div>\r\n                                )\r\n                            })}\r\n                        </div>\r\n                    </div>\r\n    \r\n                </div>\r\n            )\r\n        }\r\n        else{\r\n            return(\r\n                <div className=\"skeletor-wrapper\">\r\n                    <Skeleton active />\r\n                    <Skeleton active />\r\n                </div>\r\n            )\r\n        }\r\n        \r\n    }\r\n}","import React from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { Tabs,Button } from 'antd';\r\nimport { changeStep,changeBasicNewTestDetails } from '../../../actions/testAction';\r\nimport GeneraterandomQuestion from'./generaterandomquestion';\r\nimport './newtest.css';\r\nconst { TabPane } = Tabs;\r\n\r\nfunction SelectQuestion(props){\r\n    const questionCount = <Button>Question Selected : {props.test.newtestFormData.testQuestions.length}</Button>;\r\n    \r\n    return (\r\n        <div>\r\n            <Tabs defaultActiveKey=\"1\" tabBarExtraContent={questionCount}>\r\n                <TabPane tab=\"Questions-Random\" key=\"1\">\r\n                    <GeneraterandomQuestion mode=\"random\" />\r\n                </TabPane>\r\n                <TabPane tab=\"Questions-Manually\" key=\"2\">\r\n                    <GeneraterandomQuestion mode=\"manual\" />\r\n                </TabPane>\r\n            </Tabs>\r\n\r\n            <div style={{ width: '100%', padding: '10px' }}>\r\n                <Button style={{ float: 'right' }} type=\"primary\" onClick={() => props.changeStep(3)}>\r\n                    Next\r\n                </Button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n    test : state.test\r\n});\r\n\r\nexport default connect(mapStateToProps,{\r\n    changeStep,\r\n    changeBasicNewTestDetails\r\n})(SelectQuestion);","// Coding Redux Action\nimport apis from '../services/Apis';\nimport Alert from '../components/common/alert';\nimport { SecurePost } from '../services/axiosCall';\n\n// 1 - \nexport const ChangeCodingQuestionModalState = (data) => dispatch => {\n    dispatch({\n        type: 'CHANGE_CODING_QUESTION_MODAL_STATE',\n        payload: data\n    });\n};\n\n// 2 - \nexport const ChangeCodingQuestionData = () => dispatch => {\n    dispatch({\n        type: 'CHANGE_CODING_QUESTION_TABLE_LOADING_STATUS',\n        payload1: true,\n        payload2: []\n    });\n\n    SecurePost({\n        url: `${apis.LIST_CODING_QUESTION}`\n    })\n    .then((response) => {\n        if (response.data.success) {\n            dispatch({\n                type: 'CHANGE_CODING_QUESTION_TABLE_LOADING_STATUS',\n                payload1: false,\n                payload2: response.data.questions\n            });\n        }\n        else {\n            Alert('error', 'Error!', response.data.message);\n            dispatch({\n                type: 'CHANGE_CODING_QUESTION_TABLE_LOADING_STATUS',\n                payload1: false,\n                payload2: []\n            });\n        }\n    })\n    .catch((error) => {\n        Alert('error', 'Error!', 'Server Error');\n        dispatch({\n            type: 'CHANGE_CODING_QUESTION_TABLE_LOADING_STATUS',\n            payload1: false,\n            payload2: []\n        });\n    });\n};","import React, { Component, Fragment } from 'react';\nimport { \n    Button, \n    Skeleton, \n    Modal, \n    Form, \n    InputNumber, \n    Transfer, \n    Row, \n    Col,\n    Checkbox,\n    Typography, \n} from 'antd';\nimport { connect } from 'react-redux';\n\nimport { \n    changeStep,\n    pushCodingQuestionToQueue,\n    removeCodingQuestionFromMainQueue,\n    checkcode\n} from '../../../actions/testAction';\n\nimport {\n    ChangeCodingQuestionData\n} from '../../../actions/codingAction';\n\nimport Markdown from '../../../utils/Markdown';\n\nconst { Title } = Typography;\n\nclass AddCoding extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            checked: false,\n            generating:false,\n            autogenerate:true,\n            ActiveQuestionId:null,\n            Mvisible:false\n        }\n    };\n\n    componentDidMount(){\n        this.props.ChangeCodingQuestionData();\n    };\n\n    handleSubmit = e => {\n        e.preventDefault();\n    };\n\n    // Checked Handler\n    onCheck = (e) => {\n        this.props.checkcode(e.target.checked);\n        this.setState({ checked: e.target.checked });\n    };\n\n    // Push Questions\n    handleChange = (targetKeys, direction, moveKeys) => {\n        this.props.pushCodingQuestionToQueue(targetKeys);\n    };\n\n    // ...\n    renderItem = item => {\n        const customLabel = (\n          <span className=\"custom-item\">\n                <Button \n                    shape=\"circle\" \n                    onClick={()=>{this.OpenModel(item._id)}}\n                    style={{background:'linear-gradient(to right,rgb(80,190,189),rgb(0,153,153),rgb(0,153,203))',color:'greenblue'}}\n                    icon=\"info\"\n                    size=\"small\" \n                ></Button>\n                {item.title}\n          </span>\n        )\n\n        return {\n            label: customLabel, \n            value: item._id, \n        }\n    };\n\n    OpenModel = (qid) => {\n        this.setState({\n            ActiveQuestionId:qid,\n            Mvisible:true\n        });\n    };\n\n    handleCancel=()=>{\n        this.setState({\n            Mvisible:false\n        })\n    };\n\n    render() {\n        return (\n            <Fragment>\n                <div style={{ padding: '0px auto 5px auto', width: '100%', textAlign: 'center' }}>\n                    <Title level={3}>Add Programming Questions</Title>\n                </div>\n\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-lg-12\">\n                            <Checkbox onChange={this.onCheck}>\n                                Do you want to add Programming Questions with this assessment ?\n                            </Checkbox>\n                        </div>\n                    </div>\n                </div>\n\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-lg-12\">\n                        {this.state.checked ?  \n                            <div>\n                                <Transfer\n                                    rowKey={record => record._id}\n                                    dataSource={this.props.coding.QuestionTableData}\n                                    listStyle={{\n                                        width: '45%',\n                                        height: 500,\n                                    }}\n                                    targetKeys={this.props.test.codingtData.testQuestions}\n                                    render={this.renderItem}\n                                    onChange={this.handleChange}  \n                                />\n\n                                <div style={{ width: '100%', padding: '10px' }}>\n                                    <Button \n                                        style={{ float: 'right' }} \n                                        type=\"primary\"\n                                        block\n                                        onClick={() => this.props.changeStep(4)}\n                                    >\n                                        Next\n                                    </Button>      \n                                </div>\n                            </div> :\n\n                            <div>\n                            {'      '}\n                            <br />\n\n                            <div className=\"container\">\n                                <div className=\"row\">\n                                    <div className=\"col-lg-12\">\n                                        <Button \n                                            onClick={() => this.props.changeStep(4)} \n                                            type=\"primary\" \n                                            htmlType=\"submit\" block\n                                        >\n                                            Next\n                                        </Button>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        }\n                        </div>\n                    </div>\n                </div>\n\n                <Modal\n                    destroyOnClose={true}\n                    width=\"70%\"\n                    style={{top:'30px'}}\n                    title=\"Question details\"\n                    visible={this.state.Mvisible}\n                    onOk={this.handleCancel}\n                    onCancel={this.handleCancel}\n                    footer={null}\n                >\n                    \n                </Modal>\n\n            </Fragment>\n        );\n    }\n};\n\nconst CodingForm = Form.create({ name: 'Basic Form' })(AddCoding);\n\nconst mapStateToProps = state => ({\n    test: state.test,\n    coding: state.coding\n});\n\nexport default connect(mapStateToProps, {\n    changeStep,\n    checkcode,\n    ChangeCodingQuestionData,\n    pushCodingQuestionToQueue,\n    removeCodingQuestionFromMainQueue\n})(CodingForm);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Row, Col, Button, Descriptions, Typography, Divider } from 'antd';\r\n\r\nimport {SecurePost} from '../../../services/axiosCall';\r\nimport apis from '../../../services/Apis';\r\nimport Alert from '../../common/alert';\r\n\r\nimport { Redirect } from 'react-router-dom';\r\nimport Markdown from '../../../utils/Markdown';\r\nimport renderHTML from 'react-render-html';\r\nimport { FormBuilder, FormRenderer } from 'react-ant-form-builder';\r\n\r\nconst { Title } = Typography;\r\n\r\nclass FinalQuestionView extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            testid: null\r\n        };\r\n    };\r\n\r\n    createtest = () => {\r\n        SecurePost({\r\n            url: apis.CREATE_TEST,\r\n            data: {\r\n                type: this.props.test.newtestFormData.testType,\r\n                title: this.props.test.newtestFormData.testTitle,\r\n                questions: this.props.test.newtestFormData.testQuestions,\r\n                duration: this.props.test.newtestFormData.testDuration,\r\n                subjects: this.props.test.newtestFormData.testSubject,\r\n                organisation: this.props.test.newtestFormData.OrganisationName,\r\n                startTime: this.props.test.newtestFormData.startTime,\r\n                endTime: this.props.test.newtestFormData.endTime,\r\n                \r\n                addjobpost: this.props.test.addjobpost,\r\n                jobtitle:this.props.test.jobPostData.title,\r\n                jobdescription: this.props.test.jobPostData.description,\r\n                joblocation: this.props.test.jobPostData.location,\r\n                jobtype: this.props.test.jobPostData.type,\r\n                jobcustom: this.props.test.jobPostData.customdata,\r\n\r\n                addcoding: this.props.test.addcoding,\r\n                codingquestions: this.props.test.codingtData.testQuestions,\r\n            }\r\n        })\r\n        .then((response) => {\r\n            // console.log(response.data);\r\n            if (response.data.success) {\r\n                Alert('success', 'Test paper Created Successfully!', 'Redirecting to Test Deatils Page.');\r\n                setTimeout(() => {\r\n                    this.setState({\r\n                        testid: response.data.testid\r\n                    })\r\n                }, 3000);\r\n            }\r\n            else {\r\n                Alert('error', 'Error!', response.data.message);\r\n            }\r\n        }).catch((err) => {\r\n            // console.log(err);\r\n            Alert('error', 'Error!', 'Server Error');\r\n        });\r\n    }\r\n\r\n    render(){\r\n        if(this.state.testid){\r\n            return <Redirect to={`/user/conducttest?testid=${this.state.testid}`} />\r\n        }\r\n        else{\r\n            return (\r\n                <div>\r\n                    {this.props.test.addjobpost ? \r\n                        <div style={{justifyContent: 'left'}} >\r\n                            <Descriptions \r\n                                size=\"small\" \r\n                                title=\"Job Post Info\"\r\n                                column={4} \r\n                                layout=\"vertical\" \r\n                                bordered={true}\r\n                            >\r\n                                <Descriptions.Item span={1} label=\"Job Title\">\r\n                                    {this.props.test.jobPostData.title}\r\n                                </Descriptions.Item>\r\n\r\n                                <Descriptions.Item \r\n                                    span={1} \r\n                                    label=\"Job Description\" \r\n                                    style={{justifyContent: 'left'}}\r\n                                >\r\n                                    {renderHTML(this.props.test.jobPostData.description)}\r\n                                </Descriptions.Item>\r\n\r\n                                <Descriptions.Item span={1} label=\"Job Location\" style={{justifyContent: 'left'}} >\r\n                                    {this.props.test.jobPostData.location}\r\n                                </Descriptions.Item>\r\n\r\n                                <Descriptions.Item span={1} label=\"Job Type\" style={{justifyContent: 'left'}} >\r\n                                    {this.props.test.jobPostData.type}\r\n                                </Descriptions.Item>\r\n\r\n                                <Descriptions.Item span={1} label=\"Custom Form\" style={{justifyContent: 'left'}} >\r\n                                    <FormRenderer\r\n                                        allowDraft={false}\r\n                                        formStructure={this.props.test.jobPostData.customdata}\r\n                                        onError={error => console.log(error)}\r\n                                    />\r\n                                </Descriptions.Item>\r\n\r\n                                <br />\r\n                            </Descriptions>\r\n                        </div> : <div></div>\r\n                    }\r\n                    \r\n                    <Divider />\r\n\r\n                    <Title level={3} style={{textAlign: 'center'}} >Assessment Question</Title>\r\n\r\n                    {this.props.test.newtestFormData.testQuestions.map((d,i)=>{\r\n                        return <Q key={i+1} _id={d} no={i+1}/>\r\n                    })}\r\n                    <div style={{width:'100%',padding:'10px'}}>\r\n                        <Button style={{float:'right'}} type=\"primary\" onClick={this.createtest}>\r\n                            Create Test\r\n                        </Button>\r\n                    </div>\r\n                    \r\n                </div>\r\n            )\r\n        }\r\n    };\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    test : state.test\r\n});\r\n\r\nexport default connect(mapStateToProps,null)(FinalQuestionView);\r\n\r\nfunction QuestionView(props) {\r\n    var _id = props._id;\r\n    var no = props.no;\r\n    var obj = props.test.questionsAvailablebasedonSubject.filter((hero) => {\r\n        return hero._id == _id;\r\n    });\r\n    \r\n    // console.log(obj[0].weightage);\r\n\r\n    var oo = ['A', 'B', 'C', 'D', 'E'];\r\n\r\n    return (\r\n        <div style={{ marginBottom: '20px' }}>\r\n            <div>\r\n                <div style={{ width: '100%' }}>\r\n                    <b style={{ float: 'left' }}>Question No. {no})</b>\r\n                    <b style={{ float: 'right' }}>Marks. {obj[0].weightage}</b>\r\n                </div>\r\n                <div style={{ padding: '5px 20px' }}>\r\n                    <br />\r\n                    <Markdown>\r\n                        {obj[0].body}\r\n                    </Markdown>\r\n                    {obj[0].quesimg ? <img alt=\"Question\" src={obj[0].quesimg} /> : null}\r\n                </div>\r\n            </div>\r\n            <Row>\r\n                {obj[0].options.map((d, i) => {\r\n                    return (\r\n                        <Col key={i} span={12} style={{ padding: '5px 20px' }}>\r\n                            <b>{oo[i]} ) </b> <Markdown>{d.optbody}</Markdown>\r\n                            {d.optimg ? <img alt=\"Option\" src={d.optimg} /> : null}\r\n                        </Col>\r\n                    )\r\n                })}\r\n            </Row>\r\n        </div>\r\n    );\r\n};\r\n\r\nvar Q = connect(mapStateToProps,null)(QuestionView);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Steps, Typography } from 'antd';\r\nimport { steps } from '../../../services/steps';\r\nimport { changeStep } from '../../../actions/testAction';\r\n\r\nimport { \r\n    ChangeSubjectTableData\r\n} from '../../../actions/adminAction';\r\n\r\nimport BasicTestForm from './basicForm';\r\nimport AddJobPost from './AddJobPost';\r\nimport SelectQuestion from './selectQuestion';\r\nimport AddCodingQuestion from './AddCoding';\r\nimport FinalQuestionView from './questionview';\r\n\r\nimport './newtest.css';\r\n\r\nconst { Step } = Steps;\r\nconst { Title } = Typography;\r\n\r\nclass  NewTest extends Component {\r\n    componentDidMount(){\r\n        this.props.ChangeSubjectTableData();\r\n    }\r\n    render(){\r\n        var torender = \"\";\r\n\r\n        if (this.props.test.currentStep === 1) {\r\n            torender=<AddJobPost />;\r\n        }\r\n        else if (this.props.test.currentStep === 2) {\r\n            torender=<SelectQuestion />;\r\n        }\r\n        else if (this.props.test.currentStep === 3) {\r\n            torender = <AddCodingQuestion />;\r\n        }\r\n        else if (this.props.test.currentStep === 4) {\r\n            torender=<FinalQuestionView />;\r\n        }\r\n        else{\r\n            torender=<BasicTestForm />;\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <div style={{padding:'0px auto 5px auto',width:'100%',textAlign:'center'}}>\r\n                    <Title level={3}>Create New Assessment</Title>\r\n                </div>\r\n                <Steps className=\"newtest-steps-holder\" current={this.props.test.currentStep}>\r\n                    {steps.map(item => (\r\n                        <Step key={item.title} title={item.title} />\r\n                    ))}\r\n                </Steps>\r\n                <div className=\"new-test-form-holder\">\r\n                    {torender}\r\n                </div>\r\n            </div>\r\n        )\r\n    }  \r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    test : state.test\r\n});\r\n\r\nexport default connect(mapStateToProps,{\r\n    changeStep,\r\n    ChangeSubjectTableData\r\n})(NewTest);","import React from \"react\";\nimport \"@github/markdown-toolbar-element\";\nimport { Button } from 'antd';\n\nfunction Toolbar(props) {\n  const btnStyle = {\n    padding: \"3px 10px\",\n    fontSize: \"12px\",\n    lineHeight: \"20px\",\n    margin: \"3px\",\n  };\n\n  return (\n    <div>\n      <markdown-toolbar for=\"textarea_input\">\n\n        <md-header level=\"1\">\n          <Button style={btnStyle} type=\"default\">\n            <i className=\"fas fa-heading\"></i>\n          </Button>\n        </md-header>\n\n        <md-bold>\n          <Button style={btnStyle} type=\"default\">\n            <i className=\"fas fa-bold\"></i>\n          </Button>\n        </md-bold>\n\n        <md-italic>\n          <Button style={btnStyle} type=\"default\">\n            <i className=\"fas fa-italic\"></i>\n          </Button>\n        </md-italic>\n\n        <md-quote>\n          <Button style={btnStyle} type=\"default\">\n            <i className=\"fas fa-quote-right\"></i>\n          </Button>\n        </md-quote>\n\n        <md-link>\n          <Button style={btnStyle} type=\"default\">\n            <i className=\"fas fa-link\"></i>\n          </Button>\n        </md-link>\n\n        <md-image>\n          <Button style={btnStyle} type=\"default\">\n            <i className=\"fas fa-image\"></i>\n          </Button>\n        </md-image>\n\n        <md-unordered-list>\n          <Button style={btnStyle} type=\"default\">\n            <i className=\"fas fa-list-ul\"></i>\n          </Button>\n        </md-unordered-list>\n\n        <md-ordered-list>\n          <Button style={btnStyle} type=\"default\">\n            <i className=\"fas fa-list-ol\"></i>\n          </Button>\n        </md-ordered-list>\n\n      </markdown-toolbar>\n    </div>\n  );\n}\n\nexport default Toolbar;\n","import React, { Fragment, Component } from \"react\";\r\nimport {\r\n    Form,\r\n    Input,\r\n    Button,\r\n    Select,\r\n    Row,\r\n    Col,\r\n    Checkbox,\r\n    Modal,\r\n    Upload,\r\n    Icon,\r\n    InputNumber \r\n} from 'antd';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { SecurePost } from '../../../services/axiosCall';\r\nimport apis from '../../../services/Apis';\r\nimport Alert from '../../../components/common/alert';\r\nimport auth from '../../../services/AuthServices';\r\nimport Markdown from \"../../../utils/Markdown\";\r\nimport Toolbar from './Toolbar';\r\n\r\nimport { \r\n    ChangeCodingQuestionModalState,\r\n    ChangeCodingQuestionData\r\n} from \"../../../actions/codingAction\";\r\n\r\nclass AddQuestion extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            submitDisabled: false,\r\n            adding: false,\r\n            description: ''\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n    \r\n    // Handle Change\r\n    handleChange(event) {\r\n        this.setState({description: event.target.value});\r\n    };\r\n\r\n    // Submit Form\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        this.props.form.validateFieldsAndScroll((err, values) => {\r\n            // console.log(values);\r\n            if (!err) {\r\n                SecurePost({\r\n                    url:apis.CREATE_CODING_QUESTION,\r\n                    data:{\r\n                        title:values.title,\r\n                        statement: values.statement,\r\n                        category:values.category,\r\n                        difficulty:values.difficulty,\r\n                        timelimit:values.timelimit,\r\n                        memorylimit: values.memorylimit\r\n                    }\r\n                })\r\n                .then((response) => {\r\n                    this.setState({\r\n                        adding:false\r\n                    });\r\n\r\n                    if(response.data.success){\r\n                        this.props.ChangeCodingQuestionModalState(false);\r\n                        Alert('success','Success', response.data.message);\r\n                        this.props.ChangeCodingQuestionData();\r\n                    }\r\n                    else{\r\n                        this.props.ChangeCodingQuestionModalState(false);\r\n                        this.props.form.resetFields();\r\n                        return Alert('warning','Warning!',response.data.message);\r\n                    }\r\n                })\r\n                .catch((error)=>{\r\n                    // console.log(error);\r\n                    this.props.form.resetFields();\r\n                    \r\n                    return Alert('error','Error!','Server Error');\r\n                });\r\n            }\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { getFieldDecorator } = this.props.form;\r\n        const { Option } = Select;\r\n        const { TextArea } = Input;\r\n        \r\n        return (\r\n            <Fragment>\r\n                <div>\r\n                    <Form onSubmit={this.handleSubmit}>\r\n                        <Row>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Problem Title\" hasFeedback>\r\n                                    {getFieldDecorator('title', {\r\n                                            rules: [{ required: true, message: 'Please type problem title!' }],\r\n                                    })(\r\n                                        <Input />\r\n                                    )}\r\n                                </Form.Item> \r\n                            </Col>  \r\n                        </Row>\r\n\r\n                        <Row>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Problem Statement\" hasFeedback>\r\n                                    {getFieldDecorator('statement', {\r\n                                        rules: [{ required: true, message: 'Please type question!' }],\r\n                                    })(\r\n                                        <div>\r\n                                            <Toolbar />\r\n                                            <TextArea\r\n                                                id=\"textarea_input\"\r\n                                                rows={5}\r\n                                                onChange={this.handleChange} \r\n                                            />\r\n                                        </div>\r\n                                    )}\r\n                                </Form.Item> \r\n                            </Col>  \r\n                        </Row>\r\n\r\n                        <Row>\r\n                            <Col span={24}>\r\n                                <Markdown>{this.state.description}</Markdown>\r\n                            </Col>  \r\n                        </Row>\r\n\r\n                        <Row>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Memory Limit\" hasFeedback>\r\n                                    {getFieldDecorator('memorylimit', {\r\n                                        rules: [{ required: true, message: 'Please input memory limit!'}],\r\n                                    })(\r\n                                        <InputNumber min={1} style={{ width: '100%' }} />\r\n                                    )}\r\n                                </Form.Item>\r\n                            </Col>\r\n                        </Row>\r\n\r\n                        <Row>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Time Limit\" hasFeedback>\r\n                                    {getFieldDecorator('timelimit', {\r\n                                        rules: [{ required: true, message: 'Please input time limit!'}],\r\n                                    })(\r\n                                        <InputNumber min={1} style={{ width: '100%' }} />\r\n                                    )}\r\n                                </Form.Item>\r\n                            </Col>\r\n                        </Row>\r\n\r\n                        <Row>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Difficulty\" hasFeedback>\r\n                                    {getFieldDecorator('difficulty', {\r\n                                        rules: [{ required: true, message: 'Please select difficulty' }],\r\n                                    })(\r\n                                        <Select\r\n                                            style={{ width:'100%'}}\r\n                                            placeholder=\"Select Difficulty\"\r\n                                        >\r\n                                            <Option value='easy'>Easy</Option>\r\n                                            <Option value='medium'>Medium</Option>\r\n                                            <Option value='hard'>Hard</Option>\r\n                                        </Select>\r\n                                    )}\r\n                                </Form.Item>\r\n                            </Col>\r\n                        </Row>\r\n\r\n                        <Row>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Category\" hasFeedback>\r\n                                    {getFieldDecorator('category', {\r\n                                            rules: [{ required: true, message: 'Enter category' }],\r\n                                    })(\r\n                                        <Input />\r\n                                    )}\r\n                                </Form.Item> \r\n                            </Col>  \r\n                        </Row>\r\n\r\n                        <Row>\r\n                            <Col span={24}>\r\n                                <Form.Item>\r\n                                    <Button \r\n                                        type=\"primary\" \r\n                                        htmlType=\"submit\" \r\n                                        disabled={this.state.submitDisabled} \r\n                                        loading={this.state.adding} \r\n                                        block\r\n                                    >\r\n                                        Create Question\r\n                                    </Button>\r\n                                </Form.Item>\r\n                            </Col>\r\n                        </Row>\r\n\r\n                    </Form>\r\n                </div>\r\n            </Fragment>\r\n        );\r\n    }\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    trainer: state.trainer,\r\n    admin: state.admin,\r\n    coding: state.coding \r\n});\r\n\r\nconst NewQuestionForm = Form.create({ name: 'newQuestion' })(AddQuestion);\r\n\r\nexport default connect(mapStateToProps, {\r\n    ChangeCodingQuestionModalState,\r\n    ChangeCodingQuestionData\r\n})(NewQuestionForm);\r\n","import React, { Fragment, useState, useEffect } from 'react';\nimport { Skeleton, \n    Row, Col, \n    Icon, Tabs, \n    Descriptions, \n    Button, \n    Typography, \n    Divider,\n    Input\n} from 'antd';\nimport Markdown from '../../../utils/Markdown';\n\nimport { SecurePost } from '../../../services/axiosCall';\nimport apis from '../../../services/Apis';\nimport Alert from '../../../components/common/alert';\n\nconst { TabPane } = Tabs;\nconst { Title, Text } = Typography;\nconst { TextArea } = Input;\n\nconst QuestionDetails = (props) => {\n    const [state, setstate] = useState({\n        id: props.id,\n        loading: true,\n        details: []\n    });\n\n    const [question, setquestion] = useState([]);\n\n    // Test Cases\n    const questionId = props.id;\n\n    const [testcase, setTestCase] = useState({\n        loading: true,\n        error: \"\",\n        question: {},\n        testcases: [],\n        input: \"\",\n        output: \"\"\n    });\n\n    const getData = () => {\n        SecurePost({\n            url:apis.GET_CODING_QUESTION_DETAILS,\n            data:{\n                questionId: state.id\n            }\n        })\n        .then((response) => {\n            if(response.data.success){\n                setquestion(response.data.question);\n                setTestCase({\n                    ...state,\n                    testcases: response.data.testcases\n                })\n\n                setTimeout(() => {\n                    setstate({\n                        ...state,\n                        loading: false\n                    });\n                }, 3000);\n                \n            }\n            else{\n                return Alert('warning','Warning!',response.data.message);\n            }\n        })\n        .catch((error) => {\n            return Alert('error','Error!','Server Error');\n        });\n    };\n\n    useEffect(() => {\n        getData();\n    }, []);\n\n    const tabChange = (key) => {\n        // console.log(key)\n    }\n\n    // Tab 2\n\n    const TestCaseListComp = () => {\n        if (testcase.testcases.length) {\n            let i = 1;\n            return testcase.testcases.map((testcase) => {\n\n                return <li \n                        className=\"container\" \n                        style={{marginLeft: '25px', float: 'right', listStyle: 'none'}} \n                        key={testcase.id}\n                    >\n                    <div className=\"row\">\n\n                        <div className=\"col-md-3\">\n                            <span className=\"input-label\">Testcase #{i++}</span>\n                        </div>\n\n                        <div className=\"col-md-3\">\n                            <p>Input</p> <br />\n                            <TextArea \n                                value={testcase.input}\n                                disabled=\"true\"\n                            />\n                        </div>\n\n                        <div className=\"col-md-3\">\n                            <p>Output</p> <br />\n                            <TextArea \n                                value={testcase.output}\n                                disabled=\"true\"\n                            />\n                        </div>\n\n                        <div className=\"col-md-3\">\n                            <p>Action</p> <br />\n                            <Button \n                                type=\"primary\" \n                                shape=\"circle\" \n                                icon=\"delete\" \n                            />\n                        </div>\n\n                    </div>\n                </li>\n            })\n        } else {\n            return <div>\n                <Title level={4} style={{ marginLeft: '15px'}}> No TestCases found !!!</Title>\n            </div>\n        }\n    };\n\n    const onSubmit = (event) => {\n        event.preventDefault();\n\n        let formData = {};\n\n        formData = {\n            \"test-input\": testcase.input,\n            \"test-output\": testcase.output\n        };\n\n        SecurePost({\n            url:`${apis.CREATE_CODING_TESTCASE}/${questionId}`,\n            data: formData\n        })\n        .then((response) => {\n            if(response.data.success){\n                Alert('success','Success', response.data.message);\n            }\n            else{\n                return Alert('warning','Warning!',response.data.message);\n            }\n        })\n        .catch((error)=>{            \n            return Alert('error','Error!','Error Adding Test Case');\n        });\n    };\n\n    const handlechangeFile = name => event => {\n        setTestCase({ ...testcase, [name]: event.target.value });\n    }\n\n    return (\n        <Fragment>\n            <Skeleton loading={state.loading} active avatar>\n                <Tabs defaultActiveKey=\"1\" onChange={(e) => tabChange(e)}>\n\n                    {/* Tab 1 */}\n\n                    <TabPane tab={<span><Icon type=\"home\" />Basic Info</span>} key=\"1\">\n                        <Descriptions \n                            bordered \n                            title=\"\" \n                            border \n                            size=\"small\" \n                            column={{ xxl: 1, xl: 1, lg: 1, md: 1, sm: 1, xs: 1 }}\n                        >\n                            <Descriptions.Item label=\"Question Id\">{state.id}</Descriptions.Item>\n\n                            <Descriptions.Item label=\"Problem Statement\">\n                                <Markdown>\n                                    {question.statement}\n                                </Markdown>\n                            </Descriptions.Item>\n\n                        </Descriptions>\n                    </TabPane>\n\n                    {/* Tab 2 */}\n\n                    <TabPane tab={<span><Icon type=\"plus\" />Test Case</span>} key=\"2\">\n                    <div className=\"row mx-0 my-4 pb-md-0 pb-sm-4 shadow-sm align-items-center\">\n                        <div className=\"col-md-4\">\n                            <div className=\"form-group\">\n                                <span className=\"input-label\">Input</span>\n                                <div className=\"input-group\">\n                                    <TextArea \n                                        rows={4}\n                                        onChange={handlechangeFile(\"input\")}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n\n                        <div className=\"col-md-4\">\n                            <div className=\"form-group\">\n                                <span className=\"input-label\">Output</span>\n                                <div className=\"input-group\">\n                                    <TextArea \n                                        rows={4}\n                                        onChange={handlechangeFile(\"output\")}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n\n                        <div className=\"col-md-4\">\n                            <Button \n                                type=\"primary\" \n                                onClick={onSubmit}\n                            >\n                                Add\n                            </Button>\n                        </div>\n                    </div>\n\n                    <Divider />\n                    <br />\n\n                    <div className=\"card mb-5\">\n                        <div className=\"card-body\">\n                            <ul className=\"list-group list-group-flush row\">\n                                {TestCaseListComp()}\n                            </ul>\n                        </div>\n                    </div>\n\n                    </TabPane>\n                </Tabs>\n            </Skeleton>\n        </Fragment>\n    );\n};\n\nexport default QuestionDetails;\n","import React, { Fragment, useState, useEffect } from 'react';\nimport { Table, Input, Button, Icon, Typography, Popconfirm, Divider, Modal, Select, Row, Col } from 'antd';\nimport Highlighter from 'react-highlight-words';\nimport { connect } from 'react-redux';\n\nimport NewQuestion from './AddQuestion';\nimport QuestionDetails from './QuestionDetails';\n\nimport { \n    ChangeCodingQuestionModalState,\n    ChangeCodingQuestionData,\n} from \"../../../actions/codingAction\";\n\nconst AllQuestions = (props) => {\n\n    const [state, setstate] = useState({\n        questiondetailsId : null,\n        questiondetailsModelVisible:false\n    });\n\n    // Action Modal\n    const OpendetailsModal = (id) => {\n        setstate((previousState,previousProps)=>{\n          return{\n            questiondetailsId:id,\n            questiondetailsModelVisible:true\n          }\n        });\n    };\n\n    const ClosedetailsModal = () => {\n        setstate((previousState,previousProps)=>{\n          return{\n            questiondetailsId:null,\n            questiondetailsModelVisible:false\n          }\n        });\n    };\n\n    useEffect(() => {\n        props.ChangeCodingQuestionData();\n    }, []);\n\n    const showModal = (mode) => {\n        props.ChangeCodingQuestionModalState(true);\n    };\n\n    const handleOk = e => {\n        props.ChangeCodingQuestionModalState(false);\n    };\n\n    const handleCancel = e => {\n        props.ChangeCodingQuestionModalState(false);\n    };\n\n\n    const columns = [\n        {\n            title: 'Problem Title',\n            dataIndex: 'title',\n            key: 'title',\n            width: '15%',\n        },\n        {\n            title: 'Category',\n            dataIndex: 'category',\n            key: 'category',\n            width: '15%',\n        },\n        {\n            title: 'Difficulty',\n            dataIndex: 'difficulty',\n            key: 'difficulty',\n            width: '15%',\n        },\n        {\n            title: 'Action',\n            key: '_id',\n            dataIndex: '_id',\n            width: '15%',\n            render: (key) => (\n                <Button \n                    type=\"primary\" \n                    shape=\"circle\" \n                    onClick={()=>OpendetailsModal(key)} \n                    icon=\"info-circle\" \n                />\n            ),\n        },\n    ];\n\n    return (\n        <Fragment>\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-lg-6\">\n                        <Button \n                            type=\"primary\" \n                            icon=\"code\" \n                            style={{marginBottom:'10px'}} \n                            onClick={showModal}\n                        >\n                            Add New Coding Question\n                        </Button>\n                    </div>\n\n                    <div className=\"col-lg-6\"></div>\n                </div>\n            </div>\n\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-lg-12\">\n                        <Table \n                            bordered={true} \n                            columns={columns} \n                            dataSource={props.coding.QuestionTableData} \n                            size=\"medium\" \n                            pagination={{ pageSize: 5 }}\n                            loading={props.coding.QuestionTableLoading}\n                            rowKey=\"_id\" \n                        />\n                    </div>\n                </div>\n            </div>\n\n            {/* New Question Form */}\n            <Modal\n                title=\"New Coding Question\"\n                style={{top :'20px',padding:'0px',backgroundColor:'rgb(155,175,190)'}}\n                width=\"70%\"\n                visible={props.coding.NewQuestionModalState}\n                onOk={() => handleOk}\n                onCancel={handleCancel}\n                footer={[]}\n                destroyOnClose={true}\n            >\n                <NewQuestion />\n            </Modal>\n\n            {/* Question Details */}\n            <Modal\n                visible={state.questiondetailsModelVisible}\n                title=\"Question Details\"\n                onCancel={ClosedetailsModal}\n                style={{top :'20px',padding:'0px',backgroundColor:'rgb(155,175,190)'}}\n                width=\"70%\"\n                destroyOnClose={true}\n                footer={[]}\n            >\n                <QuestionDetails id={state.questiondetailsId} / >\n            </Modal>\n\n        </Fragment>\n    );\n};\n\nconst mapStateToProps = state => ({\n    trainer: state.trainer,\n    admin: state.admin,\n    coding: state.coding \n});\n\nexport default connect(mapStateToProps,{\n    ChangeCodingQuestionModalState,\n    ChangeCodingQuestionData\n})(AllQuestions);","import React, { Fragment, useState, useEffect } from 'react';\nimport MaterialTable from 'material-table';\nimport { connect } from 'react-redux';\n\nimport { SecurePost } from '../../services/axiosCall';\nimport apis from '../../services/Apis';\nimport  Alert  from '../common/alert';\nimport { UpdateReferTable } from '../../actions/trainerAction';\n\nconst Refer = (props) => {\n    \n    useEffect(() => {\n        props.UpdateReferTable();\n    }, []);\n\n    return (\n        <Fragment>\n            <MaterialTable\n                title=\"Referrer List\"\n                columns={[\n                    { title: 'Referrer Code', field: '_id' },\n                    { title: 'Name', field: 'name' },\n                    { title: 'Email', field: 'email' },\n                ]}\n\n                data={props.trainer.referTable}\n\n                options={{\n                    filtering: true,\n                    exportButton: true,\n                    headerStyle: {\n                        backgroundColor: '#01579b',\n                        color: '#FFF'\n                    }\n                }}\n            />\n        </Fragment>\n    );\n};\n\nconst mapStateToProps = state => ({\n    trainer : state.trainer\n});\n\nexport default connect(mapStateToProps,{\n    UpdateReferTable\n})(Refer);","import React from 'react';\nimport { Button, Modal, Form, Input, Radio } from 'antd';\nimport { connect } from 'react-redux';\n\nimport { SecurePost } from '../../services/axiosCall';\nimport apis from '../../services/Apis';\nimport  Alert  from '../common/alert';\nimport { UpdateReferTable } from '../../actions/trainerAction';\n\nconst CollectionCreateForm = Form.create({ name: 'form_in_modal' })(\n  // eslint-disable-next-line\n  class extends React.Component {\n    render() {\n      const { visible, onCancel, onCreate, form } = this.props;\n      const { getFieldDecorator } = form;\n      return (\n        <Modal\n          visible={visible}\n          title=\"Add a new Referrer\"\n          okText=\"Add\"\n          onCancel={onCancel}\n          onOk={onCreate}\n        >\n          <Form layout=\"vertical\">\n            <Form.Item label=\"Name\" hasFeedback>\n              {getFieldDecorator('name', {\n                rules: [{ required: true, message: 'Please input the name!' }],\n              })(<Input />)}\n            </Form.Item>\n\n            <Form.Item label=\"Email\" hasFeedback>\n              {getFieldDecorator('email', {\n                rules: [\n                    { \n                        required: true, \n                        message: 'Please input the email!' \n                    },\n                    {\n                        type: 'email',\n                        message: 'The input is not valid E-mail!',\n                    },\n                ],\n              })(<Input />)}\n            </Form.Item>\n\n          </Form>\n        </Modal>\n      );\n    }\n  },\n);\n\nclass CollectionsPage extends React.Component {\n  constructor(props){\n    super(props);\n    this.state={\n      visible: false,\n    }\n  }\n\n  showModal = () => {\n    this.setState({ visible: true });\n  };\n\n  handleCancel = () => {\n    this.setState({ visible: false });\n  };\n\n  // Submit Form\n  handleCreate = () => {\n    const { form } = this.formRef.props;\n\n    form.validateFields((err, values) => {\n      if (!err) {\n        SecurePost({\n            url: apis.ADD_REFER,\n            data: {\n                name: values.name,\n                email: values.email\n            }\n        })\n        .then((response) => {\n            if(response.data.success){\n              Alert('success', 'Success', response.data.message);\n              form.resetFields();\n              this.props.UpdateReferTable();\n              this.setState({ visible: false });\n            }\n        })\n        .catch((error) => {\n            return Alert('error','Error!','Server Error');\n        });\n      }\n    });\n  };\n\n  saveFormRef = formRef => {\n    this.formRef = formRef;\n  };\n\n  render() {\n    return (\n      <div>\n        <Button type=\"primary\" onClick={this.showModal}>\n          Add New Referrer\n        </Button>\n\n        <CollectionCreateForm\n          wrappedComponentRef={this.saveFormRef}\n          visible={this.state.visible}\n          onCancel={this.handleCancel}\n          onCreate={this.handleCreate}\n        />\n        \n      </div>\n    );\n  }\n};\n\nexport default connect(null,{\n  UpdateReferTable\n})(CollectionsPage);","import React, { Fragment, useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { \r\n  Statistic, \r\n  Row, Col, \r\n  Button, Typography, \r\n  Divider, Spin,\r\n  Card, Icon, List, Avatar\r\n} from 'antd';\r\n\r\nimport { SecurePost } from '../../services/axiosCall';\r\nimport apis from '../../services/Apis';\r\nimport Alert from '../common/alert';\r\nimport Refer from './Refer';\r\nimport AddRefer from './AddRefer';\r\n\r\nimport './welcome.css';\r\n\r\nconst { Title, Text } = Typography;\r\n\r\nconst Welcome = (props) => {\r\n  const [state, setstate] = useState({\r\n    questat: [],\r\n    loading: false,\r\n  });\r\n\r\n  const [teststat, setteststat] = useState([]);\r\n  const [cantotal, setcantotal] = useState(0);\r\n\r\n  // Get Question Stat\r\n  const getQueStat = () => {\r\n    setstate({\r\n      loading: true,\r\n    });\r\n\r\n    SecurePost({\r\n      url: `${apis.GET_QUESTION_STAT}`\r\n    })\r\n    .then((response) => {\r\n        if (response.data.success) {\r\n          setstate({\r\n            questat: response.data.data,\r\n            loading: false\r\n          });\r\n        }\r\n        else {\r\n          return Alert('warning', 'Warning!', response.data.message);\r\n        }\r\n    })\r\n    .catch((error) => {\r\n        return Alert('error', 'Error!', 'Server Error');\r\n    });\r\n  };\r\n\r\n  const getTestStat = () => {\r\n    SecurePost({\r\n      url: `${apis.GET_TEST_STAT}`\r\n    })\r\n    .then((response) => {\r\n        if (response.data.success) {\r\n          setteststat(response.data.data);\r\n          setcantotal(response.data.total);\r\n        }\r\n        else {\r\n          return Alert('warning', 'Warning!', response.data.message);\r\n        }\r\n    })\r\n    .catch((error) => {\r\n      return Alert('error', 'Error!', 'Server Error');\r\n    });\r\n  };\r\n\r\n  useEffect( () => {\r\n    getQueStat();\r\n    getTestStat();\r\n  }, []);\r\n\r\n\r\n  return (\r\n    <Fragment>\r\n      \r\n      <Title level={4}>\r\n        Welcome {props.user.userDetails.name}\r\n      </Title>\r\n\r\n      <Divider />\r\n\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-4\">\r\n            <Card>\r\n              <Statistic\r\n                title=\"Total Assessments Created\"\r\n                value={teststat.length}\r\n              />\r\n            </Card>\r\n          </div>\r\n\r\n          <div className=\"col-md-4\">\r\n              <Card>\r\n                <Statistic\r\n                  title=\"Total Candidates Applied\"\r\n                  value={cantotal}\r\n                />\r\n              </Card>\r\n          </div>\r\n\r\n          <div className=\"col-md-4\">\r\n              <Card>\r\n                <Statistic\r\n                  title=\"Plan Expires in (days)\"\r\n                  value={30}\r\n                />\r\n              </Card>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <Divider />\r\n      \r\n\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-lg-12\" style={{ maxHeight: '200px', overflowY: 'scroll' }}>\r\n            <Title level={4}>Number of Candidates by Assessment</Title>\r\n            {state.loading ? <Spin />\r\n              : \r\n              <List\r\n                itemLayout=\"horizontal\"\r\n                dataSource={teststat}\r\n                renderItem={item => (\r\n                  <List.Item>\r\n                    <List.Item.Meta\r\n                      title={item.title}\r\n                      description={<div>Number of Candidates : <strong>{item.cnt}</strong></div>}\r\n                    />\r\n                  </List.Item>\r\n                )}\r\n              />\r\n            }\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <Divider />\r\n\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-lg-6\">\r\n            <AddRefer />\r\n          </div>\r\n          <div className=\"col-lg-6\">\r\n            \r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <br />\r\n\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-lg-12\">\r\n            <Refer />\r\n          </div>\r\n        </div>\r\n      </div>      \r\n\r\n      <Divider />\r\n\r\n      <Title level={4}>Question Bank Details</Title>\r\n\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-lg-12\" style={{ maxHeight: '200px', overflowY: 'scroll' }}>\r\n            <Title level={4}>Number of Questions by Category</Title>\r\n\r\n            {state.loading ? <Spin />\r\n              : \r\n              <List\r\n              itemLayout=\"horizontal\"\r\n              dataSource={state.questat}\r\n              renderItem={item => (\r\n                <List.Item>\r\n                  <List.Item.Meta\r\n                    avatar={\r\n                    <Avatar src={item._id.pic} />}\r\n                    title={item._id.topic}\r\n                    description={<div>Number of Questions : <strong>{item.cnt}</strong></div>}\r\n                  />\r\n                </List.Item>\r\n              )}\r\n            />\r\n          }\r\n\r\n            \r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      \r\n\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  user : state.user\r\n});\r\n\r\nexport default connect(mapStateToProps, null)(Welcome);","import React, { Fragment } from 'react';\r\nimport { Result } from 'antd';\r\n\r\nexport default function ErrorPage() {\r\n    return (\r\n        <Fragment>\r\n            <Result\r\n                status=\"404\"\r\n                title=\"404\"\r\n                subTitle=\"Sorry, the page you visited does not exist.\"\r\n            />\r\n        </Fragment>\r\n    )\r\n};","import React, { Component, Fragment } from 'react'\nimport {\n    Form,\n    Input,\n    Button,\n    Select,\n    Row,\n    Col,\n    Checkbox,\n    Typography,\n    Modal,\n    Upload,\n    Icon,\n    InputNumber,\n    Divider\n} from 'antd';\nimport { connect } from 'react-redux';\n\nimport { SecurePost } from '../../services/axiosCall';\nimport apis from '../../services/Apis';\nimport Alert from '../common/alert';\nimport auth from '../../services/AuthServices';\n\nconst { Title, Text } = Typography;\n\nclass Profile extends Component {\n    constructor(props){\n        super(props);\n        this.state={\n            logo: this.props.user.userDetails.avatar,\n            adding:false,\n            submitDisabled:false,\n        }        \n    }\n\n    handleSubmit = e => {\n        e.preventDefault();\n\n        this.props.form.validateFieldsAndScroll((err, values) => {\n            if (!err) {\n                SecurePost({\n                    url: `${apis.UPDATE_USER}`,\n                    data: {\n                        _id: this.props.user.userDetails._id,\n                        organisation: values.organisation,\n                        avatar: this.state.logo,\n                        bio: values.about\n                    }\n                })\n                .then((response) => {\n                    if (response.data.success) {\n                        Alert('success', 'Success', response.data.message);\n                    }\n                    else {\n                        return Alert('warning', 'Warning!', response.data.message);\n                    }\n                })\n                .catch((error) => {\n                    return Alert('error', 'Error!', 'Server Error');\n                });\n            }\n        });\n    };\n\n    // Upload Image Prop\n    changeqImage = (f)=>{\n        this.setState((ps,pp)=>{\n            return({\n                logo: (f.link ?`${f.link}`:null),\n                submitDisabled:false\n            });\n        });\n    };\n\n    upl = () =>{\n        this.setState({\n            submitDisabled:true\n        })\n    };\n\n    render() {\n        const { getFieldDecorator } = this.props.form;\n\n        const { Option } = Select;\n        const { TextArea } = Input;\n\n        var QuestionImageprops = {\n            name: 'file',\n            action: `${apis.BASE}${apis.FILE_UPLOAD}?Token=${auth.retriveToken()}`,\n            listType: 'picture',\n        };\n        \n        return (\n            <Fragment>\n                <Text>Profile Settings</Text>\n                <Divider />\n\n                <img src={this.props.user.userDetails.avatar} alt=\"logo\" />\n\n                <Divider />\n                    <Form  onSubmit={this.handleSubmit}>\n                        <div>\n                            <Row>\n                                <Col span={24}>\n                                    <Form.Item label=\"Organisation Name\"  hasFeedback>\n                                        {getFieldDecorator('organisation', {\n                                            initialValue : this.props.user.userDetails.organisation,\n                                            rules: [{ whitespace: true }],\n                                        })(<Input />)}\n                                    </Form.Item>\n                                </Col>\n                            </Row>\n\n                            <Row>\n                                <Col span={24}>\n                                    <Form.Item label=\"Write About Your Organisation\" hasFeedback>\n                                        {getFieldDecorator('about', {\n                                            initialValue : this.props.user.userDetails.bio,\n                                        })(\n                                            <TextArea rows={5} />\n                                        )}\n                                    </Form.Item>\n                                </Col>\n                            </Row>\n\n                            <Row>\n                                <Col span={24} style={{padding : '0px 20px'}}>\n                                    <Form.Item label=\"Organisation Logo\">\n                                    {getFieldDecorator('resume')(\n                                        <Upload \n                                            {...QuestionImageprops} \n                                            beforeUpload={this.upl} \n                                            onRemove={this.changeqImage} \n                                            onSuccess={this.changeqImage}\n                                        >\n                                            <Button>\n                                                <Icon type=\"upload\" /> Upload\n                                            </Button>\n                                        </Upload>,\n                                    )}\n                                    </Form.Item>\n                                </Col>\n                            </Row>\n                            \n                            <Row>\n                                <Col span={24}>\n                                    <Form.Item>\n                                        <Button \n                                            type=\"primary\" \n                                            htmlType=\"submit\" \n                                            disabled={this.state.submitDisabled} \n                                            loading={this.state.adding} \n                                            block\n                                        >\n                                            Update\n                                        </Button>\n                                    </Form.Item>\n                                </Col>\n                            </Row>\n                        </div>\n                    </Form>\n\n                    <Divider />\n\n            </Fragment>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    admin : state.admin,\n    user: state.user\n});\n\nconst NewForm = Form.create({ name: 'newQuestion' })(Profile);\n\nexport default connect(mapStateToProps, null)(NewForm);","import React, { Fragment } from 'react';\nimport {\n    Form,\n    Input,\n    Divider,\n    Button,\n    Typography,\n    Row,\n    Col\n} from 'antd';\n\nimport { SecurePost } from '../../services/axiosCall';\nimport apis from '../../services/Apis';\nimport Alert from '../common/alert';\nimport auth from '../../services/AuthServices';\n  \n  \nclass ResetPassword extends React.Component {\n    state = {\n      confirmDirty: false\n    };\n  \n    handleSubmit = e => {\n      e.preventDefault();\n      this.props.form.validateFieldsAndScroll((err, values) => {\n        if (!err) {\n          SecurePost({\n            url: `${apis.RESET_PASSWORD}`,\n            data: {\n              currentPassword: values.current,\n              newPassword: values.password\n            }\n          })\n          .then((response) => {\n              if (response.data.success) {\n                  this.props.form.resetFields();\n                  Alert('success', 'Success', response.data.message);\n              }\n              else {\n                  return Alert('warning', 'Warning!', response.data.message);\n              }\n          })\n          .catch((error) => {\n              return Alert('error', 'Error!', 'Server Error');\n          });\n        }\n      });\n    };\n  \n    handleConfirmBlur = e => {\n      const { value } = e.target;\n      this.setState({ confirmDirty: this.state.confirmDirty || !!value });\n    };\n  \n    compareToFirstPassword = (rule, value, callback) => {\n      const { form } = this.props;\n      if (value && value !== form.getFieldValue('password')) {\n        callback('Two passwords that you enter is inconsistent!');\n      } else {\n        callback();\n      }\n    };\n  \n    validateToNextPassword = (rule, value, callback) => {\n      const { form } = this.props;\n      if (value && this.state.confirmDirty) {\n        form.validateFields(['confirm'], { force: true });\n      }\n      callback();\n    };\n  \n    render() {\n      const { getFieldDecorator } = this.props.form;\n      const { Title } = Typography;\n\n      return (\n        <Fragment>\n            <Title level={4}> Reset Password </Title>\n            <Form onSubmit={this.handleSubmit}>\n                <Row>\n                    <Col span={24}>\n                        <Form.Item label=\"Enter Current Password\" hasFeedback>\n                            {getFieldDecorator('current', {\n                            rules: [\n                                {\n                                required: true,\n                                message: 'Please input your current password!',\n                                },\n                                {\n                                validator: this.validateToNextPassword,\n                                },\n                            ],\n                            })(<Input.Password />)}\n                        </Form.Item>\n                    </Col>\n                </Row>\n\n                <Row>\n                    <Col span={24}>\n                        <Form.Item label=\"Enter New Password\" hasFeedback>\n                            {getFieldDecorator('password', {\n                            rules: [\n                                {\n                                required: true,\n                                message: 'Please input your password!',\n                                },\n                                {\n                                validator: this.validateToNextPassword,\n                                },\n                            ],\n                            })(<Input.Password />)}\n                        </Form.Item>\n                    </Col>\n                </Row>\n\n                <Row>\n                    <Col span={24}>\n                        <Form.Item label=\"Confirm Password\" hasFeedback>\n                            {getFieldDecorator('confirm', {\n                            rules: [\n                                {\n                                required: true,\n                                message: 'Please confirm your password!',\n                                },\n                                {\n                                validator: this.compareToFirstPassword,\n                                },\n                            ],\n                            })(<Input.Password onBlur={this.handleConfirmBlur} />)}\n                        </Form.Item>\n                    </Col>\n                </Row>\n\n                <Row>\n                    <Col span={24}>\n                        <Form.Item>\n                            <Button type=\"primary\" htmlType=\"submit\" block>\n                                Update Password\n                            </Button>\n                        </Form.Item>\n                    </Col>\n                </Row> \n                \n            </Form>\n\n            <Divider />\n        </Fragment>\n      );\n    }\n  }\n  \n  const ResetPasswordForm = Form.create({ name: 'register' })(ResetPassword);\n  \n  export default ResetPasswordForm;","import React, { Fragment } from 'react';\n\nimport Profile from './Profile';\nimport ResetPassword from './ResetPassword';\n\nconst Settings = () => {\n    return (\n        <Fragment>\n            <Profile />\n            <ResetPassword />\n        </Fragment>\n    );\n};\n\nexport default Settings;\n","import React from 'react';\r\nimport './backbone.css';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport queryString from 'query-string';\r\n\r\nimport AllTrainer from '../admin/allTrainer/alltrainer';\r\nimport AllTopics from '../admin/allTopics/alltopics.js';\r\nimport AllQuestions from '../trainer/allquestions/allquestion';\r\nimport AllTests from '../trainer/alltests/alltest';\r\nimport ConductTest from '../trainer/conducttest/conducttest';\r\nimport NewTest from '../trainer/newtest/newtest';\r\nimport AllCoding from '../coding/Question/AllQuestions';\r\n\r\nimport auth from '../../services/AuthServices';\r\nimport Welcome from './welcome';\r\nimport ErrorPage from './errorPage';\r\nimport Settings from './settings';\r\n\r\nimport { login, logout } from '../../actions/loginAction';\r\nimport { changeActiveRoute } from '../../actions/useraction';\r\nimport Alert from '../common/alert';\r\n\r\nimport { Layout, Menu,Button, Avatar, Icon, Tooltip } from 'antd';\r\nimport NoticeIcon from 'ant-design-pro/lib/NoticeIcon';\r\nimport main from './logo.png';\r\n\r\nconst { Header, Sider, Content, Footer } = Layout;\r\n\r\nclass Dashboard extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            LocalIsLoggedIn: this.props.user.isLoggedIn,\r\n            collapsed: true\r\n        }\r\n    }\r\n\r\n    toggle = () => {\r\n        this.setState({\r\n          collapsed: !this.state.collapsed,\r\n        });\r\n    };\r\n\r\n    logOut = () => {\r\n        auth.deleteToken();\r\n        window.location.href = '/';\r\n    };\r\n\r\n    componentWillMount(){\r\n        // console.log(this.state.LocalIsLoggedIn);\r\n        var t = auth.retriveToken();\r\n        if(this.state.LocalIsLoggedIn){\r\n            \r\n        }\r\n        else if(t && t!=='undefined'){\r\n            auth.FetchAuth(t).then((response) => {\r\n                //console.log(response.data);\r\n                this.props.login(response.data.user);\r\n                this.setState({\r\n                    LocalIsLoggedIn: true\r\n                });\r\n\r\n                var subUrl = this.props.match.params.options;\r\n                // console.log(subUrl);\r\n                var obj = this.props.user.userOptions.find((o, i) => {\r\n                    if (o.link === `/user/${subUrl}`) {\r\n                        return o\r\n                    }\r\n                });\r\n\r\n                var tt = this.props.user.userOptions.indexOf(obj);\r\n                \r\n                if (tt === -1) {\r\n                    window.location.href = `${this.props.user.userOptions[0].link}`;\r\n                }\r\n                else {\r\n                    this.props.changeActiveRoute(String(tt));\r\n                }\r\n            }).catch((error) => {\r\n                Alert('warning', 'Warning!', 'Server Error.');\r\n                auth.deleteToken();\r\n                window.location.href = '/';\r\n            });\r\n        }\r\n        else{\r\n            window.location='/';\r\n        }   \r\n    };\r\n\r\n\r\n    render(){\r\n        let torender = null;\r\n        if(this.props.match.params.options==='listtrainers'){\r\n            torender = <AllTrainer/>;\r\n        }\r\n        else if(this.props.match.params.options==='listsubjects'){\r\n            torender = <AllTopics/>\r\n        }\r\n        else if(this.props.match.params.options==='listquestions'){\r\n            torender = <AllQuestions/>\r\n        }\r\n        else if(this.props.match.params.options==='listtests'){\r\n            torender = <AllTests/>\r\n        }\r\n        else if(this.props.match.params.options==='home'){\r\n            torender=<Welcome />\r\n        }\r\n        else if(this.props.match.params.options==='newtest'){\r\n            torender=<NewTest />\r\n        }\r\n        else if(this.props.match.params.options==='listcode'){\r\n            torender=<AllCoding />\r\n        }\r\n        else if(this.props.match.params.options==='conducttest'){\r\n            let params = queryString.parse(this.props.location.search)\r\n            // console.log(params)\r\n            torender=<ConductTest {...params}/>\r\n        }\r\n        else if(this.props.match.params.options==='settings'){\r\n            torender=<Settings />\r\n        }\r\n        else{\r\n            torender=<ErrorPage />\r\n        }\r\n\r\n        return (\r\n            <Layout>\r\n                <Sider\r\n                    trigger={null}\r\n                    collapsible\r\n                    collapsed={this.state.collapsed}\r\n                >\r\n                    \r\n                    <div className=\"logo11\">\r\n                        <img src={main} alt=\"company logo\" className=\"d-logo\" />\r\n                    </div>\r\n\r\n                    <Menu \r\n                        defaultSelectedKeys={[this.props.user.activeRoute]}\r\n                        mode=\"inline\"\r\n                        theme=\"dark\"\r\n                        >\r\n                        {\r\n                            this.props.user.userOptions.map((d,i)=>{\r\n                                return(\r\n                                    <Menu.Item key={i}>\r\n                                        <Icon type={d.icon} />\r\n                                        <span>{d.display}</span>\r\n                                        <Link to={d.link}></Link>\r\n                                    </Menu.Item>\r\n                                )\r\n                            })\r\n                        }\r\n                    </Menu>\r\n                </Sider>\r\n                <Layout>\r\n                    <Header\r\n                        style={{ position: 'fixed', width: '100vw', paddingLeft: '10px', zIndex: '1000', background: '#fff' }}\r\n                    >\r\n                        <Icon\r\n                            className=\"trigger\"\r\n                            type={this.state.collapsed ? 'double-right' : 'double-left'}\r\n                            onClick={this.toggle}\r\n                            style={{color:'#000',fontSize:'20px'}}\r\n                            />\r\n                        <ul className=\"user-options-list\">\r\n                            <li>\r\n                                <NoticeIcon count={0} />\r\n                            </li>\r\n                            \r\n                            <li>\r\n                                <Avatar \r\n                                    src={this.props.user.userDetails.avatar}\r\n                                    alt={this.props.user.userDetails.organisation} \r\n                                />\r\n                            </li>\r\n\r\n                            <li>\r\n                                <Tooltip placement=\"bottom\" title=\"Log Out\">\r\n                                    <Button \r\n                                        type=\"primary\" \r\n                                        shape=\"circle\" \r\n                                        onClick={this.logOut} \r\n                                        className=\"logout-button\"\r\n                                    >\r\n                                        <Icon type=\"logout\" />\r\n                                    </Button>\r\n                                </Tooltip>\r\n                            </li>\r\n                        </ul>\r\n                            \r\n                    </Header>\r\n                    <Content\r\n                        style={{\r\n                        margin: '24px 16px',\r\n                        padding: 24,\r\n                        marginTop:'80px',\r\n                        background: '#fff',\r\n                        minHeight: '100vh'\r\n                        }}\r\n                    >\r\n                        <div style={{ width:'100%', }}>\r\n                            {torender}\r\n                        </div>\r\n                    </Content>\r\n                    <Footer style={{ textAlign: 'center', background: '#fff' }}>\r\n                        gnius Talent Solution © {new Date().getFullYear()}\r\n                    </Footer>\r\n                </Layout>\r\n            </Layout>\r\n        );\r\n    };\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    user : state.user\r\n});\r\n\r\nexport default connect(mapStateToProps,{\r\n    changeActiveRoute,\r\n    login, \r\n    logout\r\n})(Dashboard);\r\n","export const changeActiveRoute = (d)=> dispatch =>{\r\n    dispatch({\r\n       type : 'CHANGE_ACTIVE_ROUTE',\r\n       payload : d\r\n    })\r\n}\r\n\r\nexport const changeActiveUrl = (d)=> dispatch =>{\r\n    dispatch({\r\n       type : 'CHANGE_ACTIVE_URL',\r\n       payload : d\r\n    })\r\n}","import React, { Component, Fragment } from 'react';\r\nimport {\r\n    Row, \r\n    Col, \r\n    Form, \r\n    Icon, \r\n    Input, \r\n    Button, \r\n    Select, Divider,\r\n    Typography, Layout, Upload, message \r\n} from 'antd';\r\nimport queryString from 'query-string';\r\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\r\nimport moment from 'moment';\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nimport {\r\n    FacebookShareButton,\r\n    TelegramShareButton,\r\n    TwitterShareButton,\r\n    FacebookIcon,\r\n    TwitterIcon,\r\n    LinkedinIcon,\r\n    TelegramIcon,\r\n    WhatsappIcon,\r\n    FacebookShareCount,\r\n    WhatsappShareButton,\r\n    LinkedinShareButton\r\n} from \"react-share\";\r\n\r\nimport renderHTML from 'react-render-html';\r\nimport { FormBuilder, FormRenderer } from 'react-ant-form-builder';\r\n\r\nimport apis from '../../../services/Apis';\r\nimport { Post } from '../../../services/axiosCall';\r\nimport Alert from '../../common/alert';\r\n\r\nimport '../../../Layout.css';\r\nimport './trainerRegister.css';\r\nimport logo from '../../basic/header/logo.png';\r\nimport FileUploadInput from '../../../utils/FileUpload';\r\n\r\nconst { Option } = Select;\r\nconst { Title } = Typography;\r\nconst { Header, Footer, Sider, Content } = Layout;\r\n\r\nclass TraineeRegisterForm extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            inform:true,\r\n            testid:null,\r\n            user:null,\r\n            jobstatus: false,\r\n            jobData: {},\r\n            resume: null,\r\n            customdata: {},\r\n            custombtn: false,\r\n            refid: null\r\n        };\r\n    };\r\n    \r\n    getJobDetails = () => {\r\n        let params = queryString.parse(this.props.location.search);\r\n\r\n        Post({\r\n            url : apis.GET_JOB_DETAILS,\r\n            data: {\r\n                testid: params.testid\r\n            }\r\n        })\r\n        .then((data) => {\r\n            if (data.data.success) {\r\n                this.setState({\r\n                    jobstatus: true,\r\n                    jobData: data.data.job\r\n                });\r\n\r\n                if (data.data.job.jobcustom) {\r\n                    this.setState({\r\n                        custombtn: true\r\n                    });\r\n                }\r\n            }\r\n            else{\r\n                this.setState({\r\n                    jobstatus: false\r\n                });\r\n            }\r\n        })\r\n        .catch((error) => {\r\n            console.log(error);\r\n        });\r\n    };\r\n\r\n    componentDidMount(){\r\n        let params = queryString.parse(this.props.location.search)\r\n        \r\n        console.log(params);\r\n\r\n        this.setState({\r\n            testid:params.testid,\r\n            refid: params.ref\r\n        });\r\n\r\n        this.getJobDetails();\r\n\r\n        // console.log(this.state.jobData);\r\n    };\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        this.props.form.validateFields((err, values) => {\r\n            if (!err) {\r\n                Post({\r\n                    url: apis.REGISTER_TRAINEE_FOR_TEST,\r\n                    data: {\r\n                        name: values.name,\r\n                        emailid: values.email,\r\n                        contact: `${values.prefix}${values.contact}`,\r\n                        organisation: values.organisation,\r\n                        testid: this.state.testid,\r\n                        location: values.location,\r\n                        resume: this.state.resume,\r\n                        custom: this.state.customdata,\r\n                        refer: this.state.refid\r\n                    }\r\n                })\r\n                .then((data) => {\r\n                    if (data.data.success) {\r\n                        this.setState({\r\n                            inform: false,\r\n                            user: data.data.user\r\n                        });\r\n                    }\r\n                    else {\r\n                        this.props.form.resetFields();\r\n                        Alert('error', 'Error!', data.data.message);\r\n                    }\r\n                }).catch((error) => {\r\n                    // console.log(error);\r\n                    this.props.form.resetFields();\r\n                    Alert('error', 'Error!', \"Server Error\");\r\n                });\r\n            }\r\n        });\r\n    };\r\n\r\n    resendMail = () => {\r\n        Post({\r\n            url: apis.RESEND_TRAINER_REGISTRATION_LINK,\r\n            data: {\r\n                id: this.state.user._id\r\n            }\r\n        })\r\n        .then((response) => {\r\n            if (response.data.success) {\r\n                Alert('success', 'Success!', \"Email has been sent to your email\");\r\n            }\r\n            else {\r\n                Alert('error', 'Error!', response.data.message);\r\n            }\r\n        })\r\n        .catch((error) => {\r\n            // console.log(error);\r\n            Alert('error', 'Error!', \"Server Error\");\r\n        });\r\n    };\r\n\r\n\r\n    renderJob = () => (\r\n        <Fragment>\r\n            <Helmet>\r\n                <meta charSet=\"utf-8\" />\r\n                <title>{this.state.jobData.postedBy.organisation} - {this.state.jobData.jobtitle} - gnius Assessment - where talent meets opportunities</title>\r\n            </Helmet>\r\n\r\n            <div className=\"container-fluid\" style={{padding: '0', overflow: 'hidden'}}>\r\n                <div className=\"row\">\r\n                    <div className=\"col-lg-12\">\r\n                        <Layout>\r\n                            <Header style={{ height: '100px' }}>\r\n                                <Title style={{ \r\n                                    color: '#fff', \r\n                                    marginTop: '20px',\r\n                                    }} \r\n                                    level={4}\r\n                                >\r\n                                    {this.state.jobData.postedBy.organisation} - {this.state.jobData.jobtitle}\r\n                                </Title>\r\n                            </Header>\r\n                        </Layout>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"container-fluid\" style={{padding: '0', overflow: 'hidden'}}>\r\n                <div className=\"row\">\r\n                    <div className=\"col-lg-12\">\r\n                        <div style={{ marginTop: '10px'}}></div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            \r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              {/* Left */}\r\n              <div className=\"col-lg-6\">\r\n                <div\r\n                    style={{\r\n                      margin: '5px',\r\n                      textAlign: 'justify',\r\n                      padding: '5px',\r\n                      justifyContent: 'center',\r\n                      alignItems: 'start',\r\n                      fontFamily: 'Raleway, Ubuntu, sans-serif'\r\n                    }}\r\n                >\r\n                    {renderHTML(this.state.jobData.jobdescription)}\r\n                </div>\r\n                  \r\n              </div>\r\n\r\n\r\n              {/* Right */}\r\n              <div className=\"col-lg-6\">\r\n                  <div\r\n                    style={{\r\n                      margin: '5px',\r\n                      justifyContent: 'center',\r\n                      alignItems: 'start',\r\n                      outline: 'none',\r\n                      fontFamily: 'Raleway, Ubuntu, sans-serif'\r\n                    }}\r\n                  >\r\n                    <ul style={{ listStyle: 'none' }}>\r\n                        <li style={{ padding: '5px' }}>\r\n                            <strong>About Company</strong>\r\n                            <br /> {this.state.jobData.postedBy.bio}\r\n                        </li>\r\n\r\n                        <li style={{ padding: '5px' }}>\r\n                            <img\r\n                                width={200}\r\n                                src={this.state.jobData.postedBy.avatar}\r\n                            />\r\n                        </li>\r\n\r\n                        <li style={{ padding: '5px' }}>\r\n                            <b>Posted on:</b> {moment(this.state.jobData.dateOfPosting).format('MMMM Do YYYY')} - {moment(this.state.jobData.dateOfPosting).fromNow()} \r\n                        </li>\r\n\r\n                        <li style={{ padding: '5px' }}>\r\n                            <Icon type=\"environment\" /> {this.state.jobData.joblocation}\r\n                        </li>\r\n\r\n                        <li style={{ padding: '5px' }}>\r\n                            <Button href=\"#apply\" type=\"primary\" shape=\"round\" size='large'>\r\n                                Apply\r\n                            </Button>\r\n                        </li>\r\n\r\n\r\n                    </ul>\r\n\r\n                  </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n        </Fragment>\r\n    );\r\n\r\n    // Resume Upload                \r\n    changeResume = (f) => {\r\n        if (f.success === true) {\r\n            message.success(`Resume file uploaded successfully`);\r\n        }\r\n\r\n        this.setState((ps, pp)=>{\r\n            return({\r\n                resume:(f.link ?`${f.link}`:null)\r\n            });\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { getFieldDecorator } = this.props.form;\r\n\r\n        const prefixSelector = getFieldDecorator('prefix', {\r\n            initialValue :'+91',\r\n            rules: [{ required: true, message: 'Please enter contact no prefix' }],\r\n        })(\r\n            <Select style={{ width: 70 }}>\r\n              <Option value=\"+91\">+91</Option>\r\n            </Select>,\r\n        );\r\n\r\n        const uploadProps = {\r\n            name: 'file',\r\n            action: `${apis.BASE}${apis.UPLOAD_RESUME}`,\r\n            listType: 'picture'\r\n        };\r\n\r\n        return (\r\n            <Fragment>\r\n                <div className=\"header-container\"></div>\r\n\r\n                {\r\n                    this.state.jobstatus ? this.renderJob() : null\r\n                }\r\n\r\n                <div id=\"apply\"></div>\r\n\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12\">\r\n                            <Title level={2} style={{ textAlign: 'center'}}>Application</Title>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                {/* <Spin indicator={antIcon} /> */}\r\n\r\n                <div className=\"registration-form-container\">    \r\n                {this.state.inform ?\r\n                    <div className=\"registration-form-inner\">\r\n                        <div className=\"container\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-12\">\r\n                                    <Form \r\n                                        onSubmit={this.handleSubmit}\r\n                                        autoComplete=\"off\"\r\n                                        className=\"login-form\"\r\n                                    >\r\n                                        <Row>\r\n                                            <Col span={12} style={{ padding: '5px' }}>\r\n                                                <Form.Item label=\"Name\" hasFeedback>\r\n                                                    {getFieldDecorator('name', {\r\n                                                        rules: [{ required: true, message: 'Please input your name' }],\r\n                                                    })(\r\n                                                        <Input\r\n                                                            prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                                                            placeholder=\"Name\"\r\n                                                        />,\r\n                                                    )}\r\n                                                </Form.Item>\r\n                                            </Col>\r\n\r\n                                            <Col span={12} style={{ padding: '5px' }}>\r\n                                                <Form.Item label=\"Email\" hasFeedback>\r\n                                                    {getFieldDecorator('email', {\r\n                                                        rules: [{\r\n                                                            type: 'email',\r\n                                                            message: 'The input is not valid E-mail!',\r\n                                                        },\r\n                                                        {\r\n                                                            required: true,\r\n                                                            message: 'Please input your E-mail!',\r\n                                                        }],\r\n                                                    })(\r\n                                                        <Input\r\n                                                            prefix={<Icon type=\"mail\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                                                            placeholder=\"Email Id\"\r\n                                                        />,\r\n                                                    )}\r\n                                                </Form.Item>\r\n                                            </Col>\r\n                                \r\n                                            <Col span={24} style={{ padding: '5px' }}>\r\n                                                <Form.Item label=\"Phone Number\" hasFeedback>\r\n                                                    {getFieldDecorator('contact', {\r\n                                                        rules: [{\r\n                                                            required: true,\r\n                                                            message: 'Please input your phone number!'\r\n                                                        },\r\n                                                        {\r\n                                                            len: 10,\r\n                                                            message: 'Contact number must be 10 digit long'\r\n                                                        }],\r\n                                                    })(<Input addonBefore={prefixSelector} min={10} max={10} />)}\r\n                                                </Form.Item>\r\n                                                \r\n                                                <Form.Item label=\"Organisation (University/Company Name)\" hasFeedback>\r\n                                                    {getFieldDecorator('organisation', {\r\n                                                        rules: [{\r\n                                                            required: true,\r\n                                                            message: 'Please input your organisation name',\r\n                                                        }],\r\n                                                    })(\r\n                                                        <Input\r\n                                                            prefix={<Icon type=\"idcard\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                                                            placeholder=\"Organisation\"\r\n                                                        />,\r\n                                                    )}\r\n                                                </Form.Item>\r\n                                            </Col>\r\n\r\n                                            <Col span={24} style={{ padding: '5px' }}>\r\n                                                <Form.Item label=\"Address\" hasFeedback>\r\n                                                    {getFieldDecorator('location', {\r\n                                                        rules: [{ required: true, message: 'Please input your location' }],\r\n                                                    })(\r\n                                                        <Input\r\n                                                            prefix={<Icon type=\"home\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                                                            placeholder=\"Address\"\r\n                                                        />,\r\n                                                    )}\r\n                                                </Form.Item>\r\n                                            </Col>\r\n\r\n                                            {/* Resume */}\r\n                                            <Col span={24}>\r\n                                                <Form.Item label=\"Upload Resume\">\r\n                                                    {getFieldDecorator('resume', {\r\n                                                        rules: [{ required: true, message: 'Please upload your resume' }],\r\n                                                    })(\r\n                                                        <Upload \r\n                                                            {...uploadProps}\r\n                                                            onRemove={this.changeResume} \r\n                                                            onSuccess={this.changeResume}\r\n                                                        >\r\n                                                            <Button>\r\n                                                                <Icon type=\"upload\" /> Upload\r\n                                                            </Button>\r\n                                                        </Upload>,\r\n                                                    )}\r\n                                                </Form.Item>\r\n                                            </Col>\r\n\r\n                                            <Col span={24} style={{ paddingTop: '33px' }}>\r\n                                                <Form.Item>\r\n                                                    <Button \r\n                                                        style={{ width: '100%' }} \r\n                                                        type=\"primary\" \r\n                                                        htmlType=\"submit\" \r\n                                                        className=\"btn\"\r\n                                                        disabled={this.state.custombtn}\r\n                                                    >\r\n                                                        Register\r\n                                                    </Button>\r\n                                                </Form.Item>\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </Form>\r\n\r\n                                    <Divider />\r\n\r\n                                    {\r\n                                        this.state.jobData.jobcustom ? <div>\r\n                                            <FormRenderer\r\n                                                allowDraft={false}\r\n                                                formStructure={this.state.jobData.jobcustom}\r\n                                                data={this.state.customdata}\r\n                                                onSave={changedData => {\r\n                                                    // onSave for data received here.\r\n                                                    this.setState({ \r\n                                                        customdata: changedData,\r\n                                                        custombtn: false\r\n                                                    });\r\n                                                }}\r\n                                                onError={error => console.log(error)}\r\n                                            />\r\n\r\n                                            <span> * Click Submit to Enable Register Button</span>\r\n\r\n                                        </div> : null\r\n                                    }\r\n\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        \r\n                    </div> :\r\n                    <div className=\"reasendmail-container-register\">\r\n                        <Title style={{ color: '#fff' }} level={4}>\r\n                            Thank You, You have successfully registered !!!\r\n                            An email containing your assessment link will be sent to {this.state.user.emailid}, one day before the assessment date.\r\n\r\n                            All the Best !!!\r\n                        </Title>\r\n                    </div>\r\n                }\r\n            </div>\r\n\r\n            <div \r\n                className=\"container-fluid\" \r\n                style={{padding: '0', overflow: 'hidden', marginTop: '50px',}}\r\n            >\r\n                <div className=\"row\">\r\n                    <div className=\"col-lg-12\">\r\n                        <Layout>\r\n                            <Footer style={{ textAlign: 'center'}}>\r\n                                Powered by<img src={logo} alt=\"gnius\" className=\"logo\" />\r\n                                <br />\r\n                                gnius Talent Solution ©{new Date().getFullYear()}\r\n                            </Footer>\r\n                        </Layout>     \r\n                    </div>\r\n                </div>\r\n            </div>\r\n            </Fragment>\r\n        );\r\n    };\r\n};\r\n\r\nconst TraineeRegister = Form.create({ name: 'Trainee Registration' })(TraineeRegisterForm);\r\nexport default TraineeRegister;","import React, { Fragment, useState } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { Button, Checkbox } from 'antd';\r\nimport { ProceedtoTest, fetchTestdata } from '../../../actions/traineeAction';\r\nimport './portal.css';\r\nimport logo from '../../basic/header/logo.png';\r\n\r\nfunction Instruction(props) {\r\n    const [state, setstate] = useState(false);\r\n\r\n    function onChange(e) {\r\n        // console.log(e.target.checked);\r\n        setstate(e.target.checked);\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className=\"header-container\">\r\n                <img src={logo} alt=\"company logo\" className=\"logo\" />\r\n            </div>\r\n\r\n            <div className=\"instaruction-page-wrapper\">\r\n                <div className=\"instruction-page-inner\">\r\n                    <h1>Instructions:</h1>\r\n                    <p>Please read the instructions carefully</p>\r\n                    <h4>1. All questions are compulsory.</h4>\r\n                    <h4>\r\n                        2. Please save the question before you proceed to the next question.\r\n                        <b>NOTE :</b>To save answers, click on the 'Save & Next' button.\r\n                    </h4>\r\n                    <h4>3. Please don't leave the window before you submit.</h4>\r\n                    <h4>4. Click on 'Submit' button to submit the assessment. </h4>\r\n                    <h4>5. The test will be automatically submitted when the time ends.</h4>\r\n                    <h4>\r\n                        <Checkbox onChange={onChange}>I have read and understood all the instructions</Checkbox>\r\n                    </h4>\r\n                    <div className=\"proceed-to-test-button\">\r\n                        {state ? \r\n                            <Button\r\n                            style={{ float: 'right' }}\r\n                            type=\"primary\" icon=\"caret-right\"\r\n                            onClick={() => { props.ProceedtoTest(props.trainee.testid, props.trainee.traineeid, () => { props.fetchTestdata(props.trainee.testid, props.trainee.traineeid) }) }} loading={props.trainee.proceedingToTest}\r\n                        >\r\n                            Proceed\r\n                        </Button> : null\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    trainee : state.trainee\r\n});\r\n\r\nexport default connect(mapStateToProps,{\r\n    ProceedtoTest,\r\n    fetchTestdata\r\n})(Instruction);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport './portal.css';\r\n\r\nconst user_icon = 'https://res.cloudinary.com/gniusedu/image/upload/v1616994666/gnius-jpg_aspibu.jpg';\r\n\r\nfunction Trainee(props) {\r\n    return (\r\n        <div className=\"loggedin-trainee-container\">\r\n            <div className=\"loggedin-trainee-inner\">\r\n                <img alt=\"User Icon\" src={user_icon} className=\"loggedin-trainee-logo\"/>\r\n                <div className=\"loggedin-trainee-details-container\">\r\n                    <p>{props.trainee.traineeDetails.name}</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    trainee : state.trainee\r\n});\r\n\r\n\r\n\r\n\r\nexport default connect(mapStateToProps,null)(Trainee);","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { Badge, Icon,Button,Row,Col  } from 'antd';\r\nimport './portal.css';\r\nimport {switchQuestion} from '../../../actions/traineeAction';\r\n\r\nclass Operations extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"question-list-wrapper\">\r\n                <div className=\"question-list-inner\">\r\n                    <Row style={{ padding: '5px' }}>\r\n                        {this.props.trainee.answers.map((d, i) => {\r\n                            return (\r\n                                <Col key={i} span={6} style={{ padding: '10px' }}>\r\n                                    <Mark qid={d.questionid} ans={d.isAnswered} mark={d.isMarked} no={i} />\r\n                                </Col>\r\n                            )\r\n                        })}\r\n                    </Row>\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n};\r\n\r\n\r\nfunction mark(props){\r\n    if(props.mark){\r\n        if(props.ans){\r\n            return(\r\n                <Badge className=\"qb\" count={<Icon type=\"flag\"  theme=\"filled\" style={{ color: '#f5222d' }} />}>\r\n                    <Button\r\n                        onClick={() => props.switchQuestion(props.no)}\r\n                        style={{ background: '#0B6623', color: '#fff' }}\r\n                    >\r\n                        {props.no + 1}\r\n                    </Button>\r\n                </Badge>  \r\n            )\r\n        }\r\n        else{\r\n            return (\r\n                <Badge className=\"qb\" count={<Icon type=\"flag\" theme=\"filled\" style={{ color: '#f5222d' }} />}>\r\n                    <Button\r\n                        onClick={() => props.switchQuestion(props.no)}\r\n                        style={{ background: '#999999', color: '#fff' }}\r\n                    >\r\n                        {props.no + 1}\r\n                    </Button>\r\n                </Badge>\r\n            );\r\n        };\r\n    }\r\n    else{\r\n        if(props.ans){\r\n            return(\r\n                <Button\r\n                    onClick={() => props.switchQuestion(props.no)}\r\n                    className=\"qb\"\r\n                    style={{ background: '#0EFF00', color: '#000' }}\r\n                >\r\n                    {props.no + 1}\r\n                </Button>\r\n            )\r\n        }\r\n        else{\r\n            return (\r\n                <Button\r\n                    onClick={() => props.switchQuestion(props.no)}\r\n                    className=\"qb\"\r\n                    style={{ background: '#CC0000', color: '#fff' }}\r\n                >\r\n                    {props.no + 1}\r\n                </Button>\r\n            );\r\n        };\r\n    };\r\n};\r\n\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n    trainee : state.trainee\r\n});\r\n\r\nlet Mark = connect(mapStateToProps, {\r\n    switchQuestion\r\n})(mark);\r\n\r\nexport default connect(mapStateToProps,null)(Operations);","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport {LocaltestDone,fetchTestdata} from '../../../actions/traineeAction';\r\nimport './portal.css';\r\nimport apis from '../../../services/Apis';\r\nimport { Post } from '../../../services/axiosCall';\r\nimport Alert from '../../common/alert';\r\n\r\nclass Clock extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            localMinutes:this.props.trainee.m_left,\r\n            localSeconds:this.props.trainee.s_left\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        this.clockF(); \r\n    }\r\n\r\n    endTest =()=>{\r\n        Post({\r\n            url:`${apis.END_TEST}`,\r\n            data:{\r\n                testid: this.props.trainee.testid,\r\n                userid:this.props.trainee.traineeid\r\n            }\r\n        })\r\n        .then((response)=>{\r\n            if(response.data.success){\r\n                this.props.fetchTestdata(this.props.trainee.testid,this.props.trainee.traineeid)\r\n            }\r\n            else{\r\n                return Alert('error','Error!',response.data.message);\r\n            }\r\n        }).catch((error)=>{\r\n            return Alert('error','Error!','Error');\r\n        })\r\n    }\r\n\r\n\r\n    clockF = () => {\r\n        let c = setInterval(() => {\r\n            // console.log('i am done')\r\n            let l = this.state.localMinutes;\r\n            let s = this.state.localSeconds;\r\n\r\n            if (l == 0 && s == 1) {\r\n                clearInterval(c);\r\n                this.endTest();\r\n            }\r\n            else {\r\n                if (s == 0) {\r\n                    s = 59;\r\n                    l = l - 1;\r\n                }\r\n                else {\r\n                    s = s - 1;\r\n                }\r\n                this.setState({\r\n                    localMinutes: l,\r\n                    localSeconds: s\r\n                })\r\n            }\r\n        }, 1000)\r\n    };\r\n\r\n    componentWillUnmount(){}\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"clock-wrapper\">\r\n                <div className=\"clock-container\">\r\n                    {this.state.localMinutes} : {this.state.localSeconds}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    trainee : state.trainee\r\n});\r\n\r\nexport default connect(mapStateToProps,{\r\n    LocaltestDone,fetchTestdata\r\n})(Clock);","import React from 'react'\r\nimport { connect } from 'react-redux';\r\nimport './portal.css';\r\nimport Trainee from './user';\r\nimport {Button,Popconfirm} from 'antd';\r\nimport Operations from './operations';\r\nimport Clock from './clock';\r\nimport Alert from '../../common/alert';\r\nimport apis from '../../../services/Apis';\r\nimport { Post } from '../../../services/axiosCall';\r\nimport { fetchTestdata } from '../../../actions/traineeAction'\r\n\r\nclass Sidepanel extends React.Component {\r\n\r\n    endTest =()=>{\r\n        Post({\r\n            url:`${apis.END_TEST}`,\r\n            data:{\r\n                testid: this.props.trainee.testid,\r\n                userid:this.props.trainee.traineeid\r\n            }\r\n        }).then((response)=>{\r\n            if(response.data.success){\r\n                \r\n                this.props.fetchTestdata(this.props.trainee.testid,this.props.trainee.traineeid)\r\n            }\r\n            else{\r\n                return Alert('error','Error!',response.data.message);\r\n            }\r\n        }).catch((error)=>{\r\n            return Alert('error','Error!','Error');\r\n        })\r\n    }\r\n    \r\n    render(){\r\n        return (\r\n            <div className={\"side-panel-in-exam-dashboard \"+(this.props.mode==='desktop'?'w-20':'w-100')}>\r\n                <Trainee />\r\n                <Clock/>\r\n                <Operations />\r\n                <div className=\"End-test-container\">\r\n                    <Popconfirm\r\n                        title=\"Are you sure to end the test\"\r\n                        onConfirm={this.endTest}\r\n                        okText=\"Yes\"\r\n                        cancelText=\"No\"\r\n                    >\r\n                        <Button type=\"default\">Submit</Button>\r\n                    </Popconfirm>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n    trainee : state.trainee\r\n});\r\n\r\nexport default connect(mapStateToProps,{\r\n    fetchTestdata\r\n})(Sidepanel);\r\n\r\n","import React from 'react'\r\nimport { connect } from 'react-redux';\r\n\r\nimport Alert from '../../common/alert';\r\nimport apis from '../../../services/Apis';\r\nimport { Post } from '../../../services/axiosCall';\r\n\r\nimport { Icon,Button,Row,Col,Radio,Checkbox  } from 'antd';\r\nimport { switchQuestion, updateIsMarked, fetchTestdata } from '../../../actions/traineeAction';\r\nimport Markdown from '../../../utils/Markdown';\r\n\r\nimport './portal.css';\r\n\r\nclass SingleQuestion extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        if(this.props.trainee.answers[this.props.trainee.activeQuestionIndex].chosenOption.length===this.props.trainee.questions[this.props.trainee.activeQuestionIndex].anscount){\r\n            this.state={\r\n                AnswerSelected:true,\r\n                options:this.props.trainee.questions[this.props.trainee.activeQuestionIndex].options,\r\n                answers:this.props.trainee.answers[this.props.trainee.activeQuestionIndex].chosenOption,\r\n                ticked:0\r\n            }\r\n        }\r\n        else{\r\n            this.state={\r\n                AnswerSelected:false,\r\n                options:this.props.trainee.questions[this.props.trainee.activeQuestionIndex].options,\r\n                answers:this.props.trainee.answers[this.props.trainee.activeQuestionIndex].chosenOption,\r\n                ticked:0\r\n            }\r\n        }\r\n        \r\n    }\r\n    componentWillMount(){\r\n        this.setState((PState,Pprops)=>{\r\n            let t=0;\r\n\r\n            var s = PState.options.map((d,i) => {\r\n                for(var ii=0;ii<PState.answers.length;ii++){\r\n                    if(PState.answers[ii]===d._id){\r\n\r\n                        t+=1;\r\n                        return({\r\n                            ...d,\r\n                            checked:true\r\n                        })\r\n                    }\r\n                }\r\n                return({\r\n                    ...d,\r\n                    checked:false\r\n                })\r\n            })\r\n            return({\r\n                ticked:t,\r\n                options :s\r\n            })\r\n        })\r\n    }\r\n\r\n    SaveTocloud = () => {\r\n        Post({\r\n            url: `${apis.UPDATE_ANSWERS}`,\r\n            data: {\r\n                testid: this.props.trainee.testid,\r\n                userid: this.props.trainee.traineeid,\r\n                qid: this.props.trainee.questions[this.props.trainee.activeQuestionIndex]._id,\r\n                newAnswer: this.state.answers\r\n            }\r\n        }).then((response) => {\r\n            if (response.data.success) {\r\n                // console.log(response.data);\r\n                var t = [...this.props.trainee.answers];\r\n                t[this.props.trainee.activeQuestionIndex] = {\r\n                    ...t[this.props.trainee.activeQuestionIndex],\r\n                    chosenOption: this.state.answers,\r\n                    isAnswered: true\r\n                }\r\n                this.props.updateIsMarked(t);\r\n            }\r\n            else {\r\n                this.props.fetchTestdata(this.props.trainee.testid, this.props.trainee.traineeid);\r\n                return Alert('error', 'Error!', response.data.message);\r\n                \r\n            }\r\n        }).catch((err) => {\r\n            return Alert('error', 'Error!', 'Server Error');\r\n        });\r\n\r\n        //save to cloud then\r\n    };\r\n\r\n    previous = () => {\r\n        if (this.props.trainee.activeQuestionIndex > 0) {\r\n            this.props.switchQuestion(this.props.trainee.activeQuestionIndex - 1)\r\n        }\r\n    };\r\n\r\n    next = () => {\r\n        if (this.state.AnswerSelected) {\r\n            this.SaveTocloud();\r\n            if (this.props.trainee.activeQuestionIndex < this.props.trainee.questions.length - 1) {\r\n                this.props.switchQuestion(this.props.trainee.activeQuestionIndex + 1)\r\n            }\r\n        }\r\n        else {\r\n            if (this.props.trainee.activeQuestionIndex < this.props.trainee.questions.length - 1) {\r\n                this.props.switchQuestion(this.props.trainee.activeQuestionIndex + 1)\r\n            }\r\n        }\r\n    };\r\n\r\n    mark = () => {\r\n        let aa = [...this.props.trainee.answers];\r\n        let c = aa[this.props.trainee.activeQuestionIndex];\r\n        c.isMarked = !this.props.trainee.answers[this.props.trainee.activeQuestionIndex].isMarked;\r\n        aa[this.props.trainee.activeQuestionIndex] = c\r\n        this.props.updateIsMarked(aa);\r\n    };\r\n\r\n    onAnswerChange=(d1,d2,d3)=>{\r\n        var ansCount=this.props.trainee.questions[this.props.trainee.activeQuestionIndex].anscount;\r\n        if(d2){\r\n            if(this.state.ticked===ansCount){\r\n                return Alert('error','Error!','Clear selected options to select other option')\r\n            }\r\n            else{\r\n                var op1 = [...this.state.options];\r\n                op1[d1]={\r\n                    ...op1[d1],\r\n                    checked:true\r\n                }\r\n                var op2 = [...this.state.answers]\r\n                op2.push(d3);\r\n                \r\n                if(this.state.ticked===ansCount-1){\r\n                    this.setState((PState, Pprops) => {\r\n                        return ({\r\n                            AnswerSelected: true,\r\n                            ticked: PState.ticked + 1,\r\n                            options: op1,\r\n                            answers: op2\r\n                        });\r\n                    });\r\n                }\r\n                else{\r\n                    this.setState((PState, Pprops) => {\r\n                        return ({\r\n                            ticked: PState.ticked + 1,\r\n                            options: op1,\r\n                            answers: op2\r\n                        });\r\n                    });\r\n                }\r\n                \r\n            }\r\n        }\r\n        else{\r\n            op1 = [...this.state.options];\r\n\r\n            op1[d1]={\r\n                ...op1[d1],\r\n                checked:false\r\n            }\r\n\r\n            op2 = [...this.state.answers]\r\n            var index=op2.indexOf(d3);\r\n            op2.splice(index, 1)\r\n            this.setState((PState, Pprops) => {\r\n                return ({\r\n                    AnswerSelected: false,\r\n                    ticked: PState.ticked - 1,\r\n                    options: op1,\r\n                    answers: op2\r\n                });\r\n            });\r\n        }\r\n    }\r\n\r\n    render(){\r\n        // console.log(this.state)\r\n        let opts = ['A', 'B', 'C', 'D', 'E'];\r\n        return (\r\n            <div>\r\n                <div className=\"Question-single-container\">\r\n                    <Row>\r\n                        <Col span={2}>\r\n                            <Button style={{ background: '#93329e', color: '#fff' }} shape=\"circle\">\r\n                                {this.props.trainee.activeQuestionIndex + 1}\r\n                            </Button>\r\n                        </Col>\r\n\r\n                        <Col span={22}>\r\n                            <Radio.Group style={{float:'right'}}>\r\n                                <Radio.Button\r\n                                    style={{ background: '#93329e', color: '#fff' }}\r\n                                >\r\n                                    {this.props.trainee.questions[this.props.trainee.activeQuestionIndex].anscount === 1 ? \"Single answer type\" : \"Multiple answer type\"}\r\n                                </Radio.Button>\r\n\r\n                                <Radio.Button\r\n                                    style={{ background: '#93329e', color: '#fff' }}\r\n                                >\r\n                                    Marks : {this.props.trainee.questions[this.props.trainee.activeQuestionIndex].weightage}\r\n                                </Radio.Button>\r\n                            </Radio.Group>\r\n                        </Col>\r\n\r\n                    </Row>\r\n                    {\r\n                        this.props.mode==='mobile'?\r\n                            <Button onClick={this.props.triggerSidebar} style={{ background: '#93329e', color: '#fff', float: 'right' }}>\r\n                                Menu\r\n                            </Button>\r\n                        :null\r\n                    }\r\n                    <div className=\"Question-single-body-holder\">\r\n                        <div>\r\n                            <h3 style={{ fontFamily: \"'Montserrat', sans-serif\" }}>\r\n                                <Markdown>\r\n                                    {this.props.trainee.questions[this.props.trainee.activeQuestionIndex].body}\r\n                                </Markdown>\r\n                            </h3>\r\n                        </div>\r\n                        \r\n                        {this.props.trainee.questions[this.props.trainee.activeQuestionIndex].quesimg?\r\n                            <div className=\"Single-question-body-image-container\">\r\n                                <img alt=\"Unable to load\" src={this.props.trainee.questions[this.props.trainee.activeQuestionIndex].quesimg} className=\"Single-question-body-image\"/>\r\n                            </div>:null\r\n                        }\r\n                    </div>\r\n\r\n                    <div className=\"Question-single-option-panel\">\r\n                        <Row>\r\n                            {this.state.options.map((d,i)=>{\r\n                                return (\r\n                                    <Col span={24} key={i} className=\"Single-option\">\r\n                                        <Col span={24} style={{ textAlign: 'left' }}>\r\n                                            <ul\r\n                                                style={{\r\n                                                    listStyle: 'none',\r\n                                                    padding: 0,\r\n                                                }}\r\n                                            >\r\n                                                <li>\r\n                                                    <Col span={1}>\r\n                                                        {opts[i]}{'  '}\r\n                                                    </Col>\r\n                                                    <Col span={19} style={{ background: '#eee', color: '#000' }}>\r\n                                                        <Checkbox\r\n                                                            checked={d.checked}\r\n                                                            onChange={(e) => { this.onAnswerChange(i, e.target.checked, d._id) }}\r\n                                                        >\r\n                                                            <h3 style={{ fontFamily: \"'Montserrat', sans-serif\" }}>\r\n                                                                {d.optbody}\r\n                                                            </h3>\r\n                                                        </Checkbox>\r\n                                                    </Col>\r\n\r\n                                                    <Col span={4}>\r\n                                                        <div className=\"option-image-in-exam-panel-holder\">\r\n                                                            {d.optimg ? <img alt=\"Unable to load\" className=\"option-image-in-exam-panel\" src={d.optimg} /> : null}\r\n                                                        </div>\r\n                                                    </Col>\r\n                                                </li>\r\n                                            </ul>\r\n                                        </Col>\r\n                                    </Col>\r\n                                );\r\n                            })}\r\n                        </Row>\r\n                    </div>\r\n                </div>\r\n                \r\n                <div className=\"control-button-in-exam-portal\">\r\n                    <Button.Group>\r\n                        {this.props.trainee.activeQuestionIndex===0?\r\n                            null\r\n                            :\r\n                            <Button style={{background:'#93329e',color:'#fff'}} onClick={this.previous}>\r\n                                <Icon type=\"left\" />\r\n                                Previous\r\n                            </Button>\r\n                        }\r\n                        <Button type=\"default\" onClick={this.mark}>\r\n                                <Icon type=\"flag\" />\r\n                                {!this.props.trainee.answers[this.props.trainee.activeQuestionIndex].isMarked?\"Mark Question\":\"Unmark Question\"}\r\n                        </Button>\r\n                        {this.props.trainee.activeQuestionIndex===this.props.trainee.questions.length-1?\r\n                            null\r\n                            :\r\n                            <Button style={{background:'#93329e',color:'#fff'}} onClick={this.next}>\r\n                                {this.state.AnswerSelected?\"Save & Next\": \"Next\"}\r\n                                <Icon type=\"right\" />\r\n                            </Button>\r\n                        }\r\n                        {this.props.trainee.activeQuestionIndex===this.props.trainee.questions.length-1 && this.state.AnswerSelected?\r\n                            <Button style={{background:'#93329e',color:'#fff'}} onClick={()=>{this.SaveTocloud()}}>\r\n                                Save\r\n                                <Icon type=\"right\" />\r\n                            </Button>:null\r\n                        }\r\n                    </Button.Group>\r\n                </div>\r\n            </div>\r\n        )\r\n    }   \r\n}\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n    trainee : state.trainee\r\n});\r\n\r\nexport default connect(mapStateToProps,{\r\n    switchQuestion,\r\n    updateIsMarked,\r\n    fetchTestdata\r\n})(SingleQuestion);","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport './portal.css';\r\nimport SingleQuestion from './singleQuestion';\r\nimport { fetchTraineeTestQuestions,fetchTraineeTestAnswerSheet } from '../../../actions/traineeAction'\r\n\r\nclass Question extends Component {\r\n\r\n    componentWillMount(){\r\n        this.props.fetchTraineeTestQuestions(this.props.trainee.testid);\r\n        this.props.fetchTraineeTestAnswerSheet(this.props.trainee.testid,this.props.trainee.traineeid);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"question-holder\">\r\n                <div className=\"single-question-container\">\r\n                    {this.props.trainee.answers.length>0 && this.props.trainee.questions.length>0 ?\r\n                        <SingleQuestion \r\n                            mode={this.props.mode} \r\n                            triggerSidebar={this.props.triggerSidebar}  \r\n                            key={this.props.trainee.activeQuestionIndex} \r\n                        /> : null\r\n                    }\r\n                </div>\r\n            </div>\r\n        )\r\n    };\r\n};\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n    trainee : state.trainee\r\n});\r\n\r\nexport default connect(mapStateToProps,{\r\n    fetchTraineeTestQuestions,\r\n    fetchTraineeTestAnswerSheet\r\n})(Question);","import React,{ useState, useEffect } from 'react'\r\nimport './portal.css';\r\nimport Sidepanel from './sidepanel'\r\nimport Question from './question';\r\nimport { Drawer } from \"antd\";\r\n\r\n\r\nfunction getWindowDimensions() {\r\n    const { innerWidth: width, innerHeight: height } = window;\r\n    return {\r\n        width,\r\n        height\r\n    };\r\n}\r\n\r\nfunction useWindowDimensions() {\r\n    const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\r\n  \r\n    useEffect(() => {\r\n        function handleResize() {\r\n            setWindowDimensions(getWindowDimensions());\r\n        }\r\n        window.addEventListener('resize', handleResize);\r\n        return () => window.removeEventListener('resize', handleResize);\r\n    }, []);\r\n  \r\n    return windowDimensions;\r\n};\r\n\r\nexport default function TestBoard(props) {\r\n    const { height, width } = useWindowDimensions();\r\n    const [visible,setVisible]=useState(false);\r\n\r\n    let onClose=()=>setVisible(false);\r\n    let onOpen=()=>setVisible(true);\r\n\r\n    if(width>768){\r\n        return (\r\n            <div className=\"exam-dashboard-wrapper\">\r\n                <Question mode={width>768?\"desktop\":\"mobile\"} triggerSidebar={onOpen}/>\r\n                <Sidepanel mode={width>768?\"desktop\":\"mobile\"} />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    else{\r\n        return (\r\n            <div className=\"exam-dashboard-wrapper\">\r\n                <Question mode={width>768?\"desktop\":\"mobile\"} triggerSidebar={onOpen} />\r\n                \r\n                <Drawer\r\n                    title=\"Menu\"\r\n                    placement=\"right\"\r\n                    closable={true}\r\n                    onClose={onClose}\r\n                    visible={visible}\r\n                    width=\"100%\"\r\n                >\r\n                    <Sidepanel mode={width>768?\"desktop\":\"mobile\"}/>    \r\n                </Drawer>\r\n            </div>\r\n        )\r\n    }  \r\n};","import React, { Component, Fragment } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Typography,Skeleton  } from 'antd'\r\nimport './portal.css';\r\n\r\nimport Instruction from './instruction';\r\nimport TestBoard from './testBoard';\r\nimport Answer from '../answersheet/answer';\r\n\r\nimport { \r\n    fetchTraineedata, \r\n    setTestDetsils, \r\n    fetchTestdata, \r\n    FeedbackStatus \r\n} from '../../../actions/traineeAction';\r\nimport queryString from 'query-string';\r\nimport logo from '../../basic/header/logo.png';\r\n\r\n\r\nconst { Title } = Typography;\r\n\r\nclass MainPortal extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        let params = queryString.parse(this.props.location.search);\r\n\r\n        this.state = {\r\n            testDetails:params\r\n        };\r\n        this.props.setTestDetsils(params.testid,params.traineeid);\r\n    }\r\n\r\n    componentDidMount(){\r\n        // console.log(this.props.trainee.traineeid)\r\n        this.props.fetchTraineedata(this.state.testDetails.traineeid)\r\n        this.props.fetchTestdata(this.state.testDetails.testid,this.state.testDetails.traineeid)\r\n    }\r\n\r\n\r\n    render() {\r\n        if(this.props.trainee.initialloading2 || this.props.trainee.initialloading1){\r\n            return(\r\n                <div className=\"skeletor-wrapper\">\r\n                    <Skeleton active />\r\n                    <Skeleton active />\r\n                </div>  \r\n            )\r\n        }\r\n        else{\r\n\r\n            if(this.props.trainee.invalidUrl){\r\n                return window.location.href=``;\r\n            }\r\n\r\n            else{\r\n                \r\n                if(this.props.trainee.LocaltestDone){\r\n                    return(\r\n                        <div>\r\n                            <Answer/>\r\n                        </div>\r\n                    )\r\n                }\r\n\r\n                else{\r\n                    if(this.props.trainee.testconducted){\r\n                        return (\r\n                            <Fragment>\r\n                                <div className=\"header-container\">\r\n                                    <img src={logo} alt=\"company logo\" className=\"logo\" />\r\n                                </div>\r\n\r\n                                <div className=\"Test-portal-not-started-yet-wrapper\">\r\n                                    <div className=\"Test-portal-not-started-yet-inner\">\r\n                                        <Title className=\"Test-portal-not-started-yet-inner-message\" style={{ color: '#fff' }} level={4}>\r\n                                            The Assessment is Over!<br />\r\n                                        </Title>\r\n                                    </div>\r\n                                </div>\r\n                            </Fragment>\r\n                        )\r\n                    }\r\n                    else{\r\n                        if(!this.props.trainee.testbegins){\r\n                            return (\r\n                                <Fragment>\r\n                                     <div className=\"header-container\">\r\n                                        <img src={logo} alt=\"company logo\" className=\"logo\" />\r\n                                    </div>\r\n\r\n                                    <div className=\"Test-portal-not-started-yet-wrapper\">\r\n                                        <div className=\"Test-portal-not-started-yet-inner\">\r\n                                            <Title className=\"Test-portal-not-started-yet-inner-message\" style={{color:'#fff'}} level={4}>The assessment will begin shortly. Please wait for the instruction, then refresh the page.</Title>\r\n                                        </div>\r\n                                    </div>\r\n                                </Fragment>\r\n                            )\r\n                        }\r\n                        else{\r\n                            if(this.props.trainee.startedWriting){\r\n                                return (\r\n                                    <div>\r\n                                        <TestBoard />\r\n                                    </div>\r\n                                );\r\n                            }\r\n                            else{\r\n                                return(\r\n                                    <div>\r\n                                        <Instruction/>                             \r\n                                    </div>\r\n                                )\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n    trainee : state.trainee\r\n});\r\n\r\nexport default connect(mapStateToProps,{\r\n    fetchTraineedata,\r\n    setTestDetsils,\r\n    fetchTestdata,\r\n    FeedbackStatus\r\n})(MainPortal);","import React from 'react';\r\nimport {BrowserRouter,Route} from \"react-router-dom\";\r\nimport './App.css';\r\nimport { Provider } from 'react-redux';\r\nimport store  from './store';\r\n\r\nimport 'ant-design-pro/dist/ant-design-pro.css'; // Ant Design Pro\r\n\r\nimport Home from './components/basic/homepage/Home';\r\nimport Homepage from './components/basic/homepage/homepage';\r\nimport Dashboard from './components/dashboard/backbone';\r\nimport TraineeRegister from './components/trainee/register/traineeregister';\r\nimport MainPortal from './components/trainee/examPortal/portal';\r\nimport Test from './Test';\r\n\r\nfunction App() {\r\n  return (\r\n    <Provider store={store}>\r\n      <BrowserRouter>\r\n        <nav>\r\n          <Route exact path=\"/\" component={Home} />\r\n          <Route exact path=\"/auth/login\" component={Homepage} />\r\n          <Route exact path=\"/home\" component={Homepage} />\r\n          <Route exact path=\"/user\" component={Dashboard}/>\r\n          <Route path=\"/user/:options\" component={Dashboard}/>\r\n          <Route exact path=\"/candidate/register\" component={TraineeRegister}/>\r\n          <Route exact path=\"/candidate/taketest\" component={MainPortal}/>\r\n          {/* <Route exact path=\"/test\" component={Test}/> */}\r\n\r\n        </nav>\r\n      </BrowserRouter>\r\n    </Provider> \r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport moment from 'moment';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nmoment().utcOffset(\"+05:30\");\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\nserviceWorker.unregister();\r\n","const bgcolor=[\r\n                'rgba(255, 99, 132, 0.2)',\r\n                'rgba(54, 162, 235, 0.2)',\r\n                'rgba(255, 206, 86, 0.2)',\r\n                'rgba(75, 192, 192, 0.2)',\r\n                'rgba(153, 102, 255, 0.2)',\r\n                'rgba(255, 159, 64, 0.2)',\r\n                'rgba(255, 99, 132, 0.2)',\r\n                'rgba(54, 162, 235, 0.2)',\r\n                'rgba(255, 206, 86, 0.2)',\r\n                'rgba(75, 192, 192, 0.2)',\r\n                'rgba(153, 102, 255, 0.2)',\r\n                'rgba(255, 159, 64, 0.2)',\r\n                'rgba(255, 99, 132, 0.2)',\r\n                'rgba(54, 162, 235, 0.2)',\r\n                'rgba(255, 206, 86, 0.2)',\r\n                'rgba(75, 192, 192, 0.2)',\r\n                'rgba(153, 102, 255, 0.2)',\r\n                'rgba(255, 159, 64, 0.2)',\r\n                'rgba(255, 99, 132, 0.2)',\r\n                'rgba(54, 162, 235, 0.2)',\r\n                'rgba(255, 206, 86, 0.2)',\r\n                'rgba(75, 192, 192, 0.2)',\r\n                'rgba(153, 102, 255, 0.2)',\r\n                'rgba(255, 159, 64, 0.2)',\r\n                'rgba(255, 99, 132, 0.2)',\r\n                'rgba(54, 162, 235, 0.2)',\r\n                'rgba(255, 206, 86, 0.2)',\r\n                'rgba(75, 192, 192, 0.2)',\r\n                'rgba(153, 102, 255, 0.2)',\r\n                'rgba(255, 159, 64, 0.2)',\r\n                'rgba(255, 99, 132, 0.2)',\r\n                'rgba(54, 162, 235, 0.2)',\r\n                'rgba(255, 206, 86, 0.2)',\r\n                'rgba(75, 192, 192, 0.2)',\r\n                'rgba(153, 102, 255, 0.2)',\r\n                'rgba(255, 159, 64, 0.2)',\r\n                'rgba(255, 99, 132, 0.2)',\r\n                'rgba(54, 162, 235, 0.2)',\r\n                'rgba(255, 206, 86, 0.2)',\r\n                'rgba(75, 192, 192, 0.2)',\r\n                'rgba(153, 102, 255, 0.2)',\r\n                'rgba(255, 159, 64, 0.2)',\r\n                'rgba(255, 99, 132, 0.2)',\r\n                'rgba(54, 162, 235, 0.2)',\r\n                'rgba(255, 206, 86, 0.2)',\r\n                'rgba(75, 192, 192, 0.2)',\r\n                'rgba(153, 102, 255, 0.2)',\r\n                'rgba(255, 159, 64, 0.2)',\r\n                'rgba(255, 99, 132, 0.2)',\r\n                'rgba(54, 162, 235, 0.2)',\r\n                'rgba(255, 206, 86, 0.2)',\r\n                'rgba(75, 192, 192, 0.2)',\r\n                'rgba(153, 102, 255, 0.2)',\r\n                'rgba(255, 159, 64, 0.2)',\r\n                'rgba(255, 99, 132, 0.2)',\r\n                'rgba(54, 162, 235, 0.2)',\r\n                'rgba(255, 206, 86, 0.2)',\r\n                'rgba(75, 192, 192, 0.2)',\r\n                'rgba(153, 102, 255, 0.2)',\r\n                'rgba(255, 159, 64, 0.2)'\r\n]\r\n\r\nconst bordercolor =[\r\n                'rgba(255, 99, 132, 1)',\r\n                'rgba(54, 162, 235, 1)',\r\n                'rgba(255, 206, 86, 1)',\r\n                'rgba(75, 192, 192, 1)',\r\n                'rgba(153, 102, 255, 1)',\r\n                'rgba(255, 159, 64, 1)',\r\n                'rgba(255, 99, 132, 1)',\r\n                'rgba(54, 162, 235, 1)',\r\n                'rgba(255, 206, 86, 1)',\r\n                'rgba(75, 192, 192, 1)',\r\n                'rgba(153, 102, 255, 1)',\r\n                'rgba(255, 159, 64, 1)',\r\n                'rgba(255, 99, 132, 1)',\r\n                'rgba(54, 162, 235, 1)',\r\n                'rgba(255, 206, 86, 1)',\r\n                'rgba(75, 192, 192, 1)',\r\n                'rgba(153, 102, 255, 1)',\r\n                'rgba(255, 159, 64, 1)',\r\n                'rgba(255, 99, 132, 1)',\r\n                'rgba(54, 162, 235, 1)',\r\n                'rgba(255, 206, 86, 1)',\r\n                'rgba(75, 192, 192, 1)',\r\n                'rgba(153, 102, 255, 1)',\r\n                'rgba(255, 159, 64, 1)',\r\n                'rgba(255, 99, 132, 1)',\r\n                'rgba(54, 162, 235, 1)',\r\n                'rgba(255, 206, 86, 1)',\r\n                'rgba(75, 192, 192, 1)',\r\n                'rgba(153, 102, 255, 1)',\r\n                'rgba(255, 159, 64, 1)',\r\n                'rgba(255, 99, 132, 1)',\r\n                'rgba(54, 162, 235, 1)',\r\n                'rgba(255, 206, 86, 1)',\r\n                'rgba(75, 192, 192, 1)',\r\n                'rgba(153, 102, 255, 1)',\r\n                'rgba(255, 159, 64, 1)',\r\n                'rgba(255, 99, 132, 1)',\r\n                'rgba(54, 162, 235, 1)',\r\n                'rgba(255, 206, 86, 1)',\r\n                'rgba(75, 192, 192, 1)',\r\n                'rgba(153, 102, 255, 1)',\r\n                'rgba(255, 159, 64, 1)',\r\n                'rgba(255, 99, 132, 1)',\r\n                'rgba(54, 162, 235, 1)',\r\n                'rgba(255, 206, 86, 1)',\r\n                'rgba(75, 192, 192, 1)',\r\n                'rgba(153, 102, 255, 1)',\r\n                'rgba(255, 159, 64, 1)',\r\n                'rgba(255, 99, 132, 1)',\r\n                'rgba(54, 162, 235, 1)',\r\n                'rgba(255, 206, 86, 1)',\r\n                'rgba(75, 192, 192, 1)',\r\n                'rgba(153, 102, 255, 1)',\r\n                'rgba(255, 159, 64, 1)',\r\n                'rgba(255, 99, 132, 1)',\r\n                'rgba(54, 162, 235, 1)',\r\n                'rgba(255, 206, 86, 1)',\r\n                'rgba(75, 192, 192, 1)',\r\n                'rgba(153, 102, 255, 1)',\r\n                'rgba(255, 159, 64, 1)' \r\n]\r\n\r\nmodule.exports={bgcolor,bordercolor}","module.exports = __webpack_public_path__ + \"static/media/gnius.18d25fd2.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.9992ff04.png\";"],"sourceRoot":""}