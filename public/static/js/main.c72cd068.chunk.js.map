{"version":3,"sources":["components/basic/header/logo.png","reducers/opendrawer.js","reducers/admin.js","services/userOption.js","reducers/loggedinuser.js","reducers/trainer.js","reducers/test.js","reducers/conductTest.js","reducers/trainee.js","reducers/coding.js","reducers/index.js","actions/types.js","store.js","components/basic/homepage/Features.js","components/basic/homepage/Home.js","services/Apis.js","services/axiosCall.js","services/AuthServices.js","actions/loginAction.js","components/common/alert.js","components/basic/login/SignInSide.js","components/basic/login/login.js","components/basic/header/header.js","components/basic/homepage/homepage.js","actions/adminAction.js","components/admin/newTrainer/newtrainer.js","components/admin/allTrainer/alltrainer.js","components/admin/newTopics/newtopics.js","components/admin/allTopics/alltopics.js","actions/trainerAction.js","components/trainer/newquestion/newquestion.js","utils/Markdown.js","components/trainer/questionDetails/questiondetails.js","components/trainer/allquestions/allquestion.js","components/trainer/conducttest/questions.js","components/trainer/testdetails/stats.js","components/trainer/testdetails/trainee.js","components/trainer/testdetails/feedbacks.js","components/trainee/examPortal/coding/CodeEditor.js","actions/traineeAction.js","components/trainee/examPortal/coding/index.js","components/trainee/answersheet/feedback.js","components/trainee/answersheet/answer.js","components/trainer/testdetails/Analysis.js","components/trainer/testdetails/CodingResult.js","components/trainer/testdetails/testdetails.js","components/trainer/alltests/alltest.js","actions/conductTest.js","actions/testAction.js","components/trainer/conducttest/details.js","components/trainer/conducttest/candidates.js","components/trainer/conducttest/JobApplications.js","components/trainer/conducttest/conducttest.js","services/steps.js","components/trainer/newtest/basicForm.js","utils/Editor.js","components/trainer/newtest/AddJobPost.js","components/trainer/newtest/generaterandomquestion.js","components/trainer/newtest/selectQuestion.js","actions/codingAction.js","components/trainer/newtest/AddCoding.js","components/trainer/newtest/questionview.js","components/trainer/newtest/newtest.js","components/coding/Question/Toolbar.js","components/coding/Question/AddQuestion.js","components/coding/Question/QuestionDetails.js","components/coding/Question/AllQuestions.js","components/dashboard/Refer.js","components/dashboard/AddRefer.js","components/dashboard/welcome.js","components/dashboard/errorPage.js","components/dashboard/Profile.js","components/dashboard/ResetPassword.js","components/dashboard/settings.js","components/dashboard/backbone.js","actions/useraction.js","components/trainee/register/traineeregister.js","components/trainee/examPortal/instruction.js","components/trainee/examPortal/user.js","components/trainee/examPortal/operations.js","components/trainee/examPortal/clock.js","components/trainee/examPortal/sidepanel.js","components/trainee/examPortal/singleQuestion.js","components/trainee/examPortal/question.js","components/trainee/examPortal/testBoard.js","components/trainee/examPortal/portal.js","App.js","serviceWorker.js","index.js","services/bgcolor.js","assets/gnius.png","components/dashboard/logo.png"],"names":["module","exports","__webpack_require__","p","initialState","navigationCollapsed","TrainermodalOpened","TrainerconfirmDirty","Trainermode","trainerId","TrainersearchText","trainerTableLoadingStatus","trainerEditFormLoadingStatus","trainerTableData","trainerdetails","subjectTableData","SubjectmodalOpened","SubjectconfirmDirty","Subjectmode","SubjectId","SubjectsearchText","SubjectTableLoading","subjectDetails","ADMIN_PERMISSIONS","display","icon","link","TRAINER_PERMISSIONS","isLoggedIn","userDetails","activeRoute","userOptions","NewQuestionmodalOpened","AllQuestionconfirmDirty","QuestionsearchText","QuestionTableLoading","QuestionTableData","selectedSubjects","QuestionFormData","fifthoptioAddButtonVisible","TestTableLoading","TestTableData","DataActiveTestDetails","testDetailsId","testquestions","referTable","greet","currentStep","mode","newtestFormData","testType","testTitle","testDuration","OrganisationName","testSubject","testQuestions","startTime","endTime","addjobpost","jobPostData","title","description","maxApplicants","maxPositions","skillsets","location","type","customdata","questionsAvailablebasedonSubject","addcoding","codingtData","codingquestionsAvailablebasedonSubject","id","testRegisterLink","basictestdetails","isRegistrationavailable","testbegins","testconducted","isResultgenerated","start","end","registeredCandidates","questionsOfTest","proceedingToTest","invalidUrl","testid","traineeid","initialloading1","initialloading2","startedWriting","LocaltestDone","m_left","s_left","traineeDetails","name","emailid","contact","activeQuestionIndex","questions","answers","hasGivenFeedBack","loadcoding","codingData","Iscoding","codingsubmitted","codingStartTime","NewQuestionModalState","assessmentDuration","combineReducers","drawer","state","arguments","length","undefined","Object","objectSpread","admin","action","payload1","payload2","payload3","payload4","payload","user","activeurl","trainer","options","concat","toConsumableArray","image","body","isAnswer","TestDetailsmodalOpened","TestsearchText","test","console","log","conduct","trainee","payload5","payload6","payload7","coding","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","apply","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","useStyles","makeStyles","theme","marginRight","spacing","heroContent","backgroundColor","palette","background","paper","padding","heroButtons","marginTop","cardGrid","paddingTop","paddingBottom","card","height","flexDirection","cardMedia","cardContent","flexGrow","footer","cards","Album","classes","react_default","a","createElement","Fragment","CssBaseline","Container","className","maxWidth","Grid","container","map","index","item","key","xs","sm","md","Card","CardContent","Typography","gutterBottom","variant","component","Copyright","color","align","Link","href","Date","getFullYear","@global","ul","margin","listStyle","appBar","toolbar","flexWrap","toolbarTitle","cardHeader","cardPricing","justifyContent","alignItems","marginBottom","defineProperty","borderTop","divider","breakpoints","up","footers","Pricing","AppBar","position","elevation","Toolbar","noWrap","src","logo","alt","Button","justify","Box","mt","Home_Copyright","apis","BASE_LOCAL_URL","BASE","LOGIN","GETDETAILSUSER","UPDATE_USER","GET_ALL_TRAINER","GET_SINGLE_TRAINER_DETAILS","CREATE_TRAINER","DELETE_TRAINER","GET_ALL_SUBJECTS","GET_SINGLE_SUBJECT_DETAILS","CREATE_SUBJECT","GET_ALL_QUESTIONS","DELETE_QUESTION","FETCH_SINGLE_QUESTION","CREATE_QUESTIONS","FILE_UPLOAD","CREATE_TEST","GET_ALL_TESTS","GET_SINGLE_TEST","REGISTER_TRAINEE_FOR_TEST","RESEND_TRAINER_REGISTRATION_LINK","GET_SINGLE_TEST_DETAILS_BASIC","STOP_REGISTRATION","START_TEST_BY_TRAINER","GET_TEST_CANDIDATES","GET_TEST_QUESTIONS","FETCH_TRAINEE_DETAILS","FETCH_TRAINEE_TEST_DETAILS","PROCEED_TO_TEST","FETCH_TRAINEE_TEST_QUESTION","FETCH_TRAINEE_TEST_ANSWERSHEET","UPDATE_ANSWERS","END_TEST","FETCH_OWN_RESULT","FETCH_SINGLE_QUESTION_BY_TRAINEE","END_TEST_BY_TRAINER","FEEDBACK_STATUS_CHECK","GIVE_FEEDBACK","GET_STATS","GET_EXCEL","MAX_MARKS_FETCH","GET_FEEDBACKS","CHECK_TEST_NAME","IMPORT_CANDIDATES","GET_JOB_DETAILS","CREATE_CODING_QUESTION","LIST_CODING_QUESTION","GET_CODING_QUESTION_DETAILS","CREATE_CODING_TESTCASE","GET_CODING_QUESTION_DATA","POST_SUBMISSION","CODING_SECTION_START","CODING_SECTION_SUBMIT","CODING_SECTION_GET","CODING_SUBMISSION_GET","UPLOAD_RESUME","GET_QUESTION_STAT","GET_TEST_STAT","ADD_REFER","LIST_REFER","RESET_PASSWORD","axios","require","SecureGet","method","baseURL","params","Token","auth","retriveToken","SecurePost","Post","AuthServices","AuthService","classCallCheck","this","localStorage","getItem","storeToken","t","setItem","deleteToken","removeItem","LoginAuth","u","url","data","password","FetchAuth","token","login","details","dispatch","logout","Alert","s","h","b","Modal","success","content","error","warning","root","backgroundImage","backgroundRepeat","grey","backgroundSize","backgroundPosition","avatar","secondary","main","form","width","submit","SignInSide","props","Paper","square","Avatar","LockOutlined_default","children","Login","_this","possibleConstructorReturn","getPrototypeOf","call","handleSubmit","e","preventDefault","validateFields","err","values","email","then","response","message","setState","catch","getFieldDecorator","react_router","to","es_form","onSubmit","autoComplete","Item","label","hasFeedback","rules","required","input","prefix","style","placeholder","Password","es_button","htmlType","block","React","Component","LoginForm","Form","create","connect","HomepageHeader","header_header","basic_login_login","ChangeTrainerModalState","d1","d2","d3","slice","confirmpassword","ChangeTrainerTableData","ChangeSubjectModalState","topic","ChangeSubjectTableData","d","Option","Select","TextArea","Input","NewTrainer","checked","status","submitDisabled","toggle","compareToFirstPassword","rule","value","callback","getFieldValue","validateToNextPassword","force","changeqImage","f","ps","pp","upl","validateFieldsAndScroll","_id","organisation","bio","prefixSelector","initialValue","es_select","newtrainer_Option","QuestionImageprops","listType","whitespace","len","addonBefore","min","max","validator","onBlur","handleConfirmBlur","es_switch","checkedChildren","unCheckedChildren","onChange","newtrainer_TextArea","rows","upload","assign","beforeUpload","onRemove","onSuccess","NewTrainerForm","ChangeTrainerConfirmDirty","AllTrainer","openModal","closeModal","deleteTrainer","getColumnSearchProps","dataIndex","filterDropdown","_ref","setSelectedKeys","selectedKeys","confirm","clearFilters","ref","node","searchInput","target","onPressEnter","handleSearch","onClick","size","handleReset","filterIcon","filtered","onFilter","record","toString","toLowerCase","includes","onFilterDropdownVisibleChange","visible","setTimeout","select","render","text","main_default","highlightStyle","searchWords","autoEscape","textToHighlight","ChangeTrainerSearchText","TrainertableLoading","_this2","Title","columns","shape","popconfirm","cancelText","okText","onConfirm","level","textAlign","table","bordered","dataSource","pagination","pageSize","loading","rowKey","modal","onOk","handleOk","onCancel","top","destroyOnClose","newTrainer_newtrainer","NewTopics","NewSubjectForm","ChangeSubjectConfirmDirty","AllTopics","ChangeSubjectSearchText","newtopics","ChangeQuestionModalState","ChangeQuestionTableData","subject","UpdateReferTable","NewQuestion","addfifthOption","previousState","previousProps","questionDetails","Customalert","OptionTextChange","i","newOptions","AnswerOptionSwitch","OptionImageonChange","ans","opts","forEach","element","push","optbody","optimg","adding","questionbody","quesimg","questionimage","explanation","weightage","waitage","resetFields","row","col","span","showSearch","optionFilterProp","ExplanationChange","offset","input_number","option","es_checkbox","disabled","NewQuestionForm","ChangeQuestionConfirmDirty","renderers","inlineMath","react_katex","math","_ref2","code","_ref3","language","prism","Markdown","react_markdown_default","plugins","gfm","TabPane","Tabs","QuestionDetails","tabChange","ID","_this3","skeleton","active","tabs","defaultActiveKey","tab","Tab1","Tab2","descriptions","border","column","xxl","xl","lg","difficulty","anscount","createdBy","moment","createdAt","format","optn","Optiondata","utils_Markdown","AllQuestions","OpendetailsModal","questiondetailsId","questiondetailsModelVisible","ClosedetailsModal","openNewModal","closeNewModal","handleSubjectChange","ChangeSelectedSubjects","deleteQuestion","ChangeQuestionSearchText","defaultValue","allowClear","newquestion_newquestion","questiondetails_QuestionDetails","Questions","refreshquestionList","updateQuestiosnTest","total","aMap","fontSize","reduce","accumulator","current","dd","ii","Stats","stats","Scorelable","Scoredata","bgColor1","borcolor1","maxmMarks","passData","passLable","stat","statdata","_this$state","maxi","p90_100","p80_90","p70_80","p60_70","p50_60","below50","pc","score","dp","bgcolor","bordercolor","barData","labels","datasets","borderColor","borderWidth","DoughNutData1","DoughNutData2","es_card","file","react_chartjs_2_es","maintainAspectRatio","Trainee","maxMarks","tag","es_tag","trainee_Title","FeedBacks","feedbacks","es_comment","author","userid","rate","rating","feedback","Text","_useState","useState","evaluating","question","editorMode","testcaseshow","_useState2","slicedToArray","setQuestion","_useState3","_useState4","setscore","react","placement","notification","info","isEvaluating","CodeEditor_Title","maxHeight","overflowY","statement","event","lang","req_mode","selected","react_ace_lib_default","editorProps","$blockScrolling","Infinity","commands","bindKey","win","mac","exec","editor","_i","_editorEvents","events","addEventListener","stopPropagation","ncode","testId","traineeId","que_id","source_code","language_id","twoToneColor","showResult","fetchTestdata","completed","pending","Math","floor","Number","String","switchQuestion","FeedbackStatus","time","Index","handleModeChange","testDetails","testTime","show","startCoding","counter","$","document","mouseleave","leavecounter","ready","on","alert","bind","LoadCodingQuestion","targetTime","getTime","CountDown_default","onEnd","submitCoding","tabPosition","Array","from","v","coding_TabPane","coding_CodeEditor","sweetalert_react_lib_default","load","tid","uid","Feedback","handleStarChange","star","onCommentChange","comment","submitFeedback","desc","feedback_Title","feedback_Text","tooltips","feedback_TextArea","Panel","Collapse","Answer","handleCancel","Mvisible","OpenModel","qid","ActiveQuestionId","TotalScore","getsubmitCoding","p1","p2","p3","Promise","all","r","result","tags","toUpperCase","userData","answer_Title","collapse","header","subTitle","examPortal_coding","answer_SingleQuestionDetails","SingleQuestionDetails","_this4","fetching","qdetails","_this5","answersheet_answer","CodingResult","setstate","setloading","_useState5","_useState6","useEffect","Prism","highlightAll","submission","dist_default","field","rowData","submit_time","diff","detailPanel","tooltip","readOnly","showcode","sourcecode","filtering","exportButton","headerStyle","TestDetails","showModal","testdetails","mainlink","split","splice","p4","p5","testdetails_TabPane","addonAfter","lib","onCopy","subjects","questions_Questions","updateQuestiosnActiveTest","stats_Stats","Analysis_Trainee","testdetails_CodingResult","AllTests","ChangeTestDetailsModalState","ChangeTestSearchText","ChangeTestTableData","afterClose","trainer_testdetails_testdetails","changeConducttestId","updateCandidatesTest","changeStep","changeBasicNewTestDetails","changeRegistrationStatus","changeTestRegisterStatus","changeTestStatus","endTestByTrainee","getCandidates","changeTestRegisterLink","updateCurrentTestBasicDetails","layout","papaparseOptions","dynamicTyping","skipEmptyLines","transformHeader","replace","Candidates","searchText","handleForce","fileInfo","progress","refreshUserList","getResume","open","candidates_Title","react_csv_reader_default","cssClass","onFileLoaded","parserOptions","percent","exportFromJSON","fileName","exportType","components","json","ConductTestS","ChangeLocalTestId","localTestId","ChangetestId","needRedirect","CC","conducttest_Title","C","conducttest_TabPane","candidates","conducttest_JobApplications","mapStateToProps","steps","utcOffset","BasicTestFormO","DatePicker","RangePicker","duration","validateTestName","checkingName","testname","can_use","ee","basicForm_Option","validateStatus","date_picker","showTime","onChangeStart","onOkStart","onChangeEnd","onOkEnd","BasicTestForm","QuillModules","font","list","QuillFormats","AddJobPost","onCheck","onChangeEditor","handleFinal","addJobData","jobtitle","joblocation","jobtype","formSchema","AddJobPost_Title","react_quill_lib_default","modules","formats","AddJobPost_Option","AddJobPost_Panel","react_ant_form_builder_dist","formStructure","onSave","schema","onError","allowDraft","changedData","JobForm","check","GeneraterandomQuestionO","no","qus","allquestions","l","random","pushQuestionToQueue","autogenerate","renderItem","handleChange","targetKeys","direction","moveKeys","generating","changeMode","fetchSubjectWiseQuestion","transfer","generaterandomquestion_SingleQuestionDetails","GeneraterandomQuestion","removeQuestionFromMainQueue","questionCount","tabBarExtraContent","selectQuestion_TabPane","generaterandomquestion","float","ChangeCodingQuestionModalState","ChangeCodingQuestionData","AddCoding","checkcode","pushCodingQuestionToQueue","codingDuration","AddCoding_Title","CodingForm","removeCodingQuestionFromMainQueue","FinalQuestionView","createtest","jobdescription","jobcustom","codingquestions","codingduration","renderHTML","questionview_Title","Q","obj","filter","hero","oo","Step","Steps","NewTest","torender","newtest_AddJobPost","selectQuestion","newtest_AddCoding","questionview","basicForm","newtest_Title","prev","btnStyle","lineHeight","for","AddQuestion","category","timelimit","memorylimit","assertThisInitialized","Question_Toolbar","setquestion","questionId","testcases","output","testcase","setTestCase","handlechangeFile","QuestionDetails_TabPane","QuestionDetails_TextArea","formData","test-input","test-output","marginLeft","QuestionDetails_Title","TestCaseListComp","Question_AddQuestion","Question_QuestionDetails","CollectionCreateForm","_React$Component","_class","inherits","createClass","_this$props","onCreate","CollectionsPage","handleCreate","formRef","saveFormRef","wrappedComponentRef","questat","teststat","setteststat","cantotal","setcantotal","welcome_Title","statistic","spin","itemLayout","Meta","cnt","AddRefer","dashboard_Refer","pic","ErrorPage","Profile","about","Profile_Text","NewForm","ResetPassword","confirmDirty","currentPassword","newPassword","ResetPasswordForm","Settings","dashboard_Profile","dashboard_ResetPassword","Header","Layout","Sider","Content","Footer","Dashboard","collapsed","logOut","LocalIsLoggedIn","subUrl","match","find","o","tt","indexOf","changeActiveRoute","allTrainer_alltrainer","allTopics_alltopics","allquestions_allquestion","alltests_alltest","dashboard_welcome","newtest_newtest","Question_AllQuestions","queryString","parse","search","conducttest","settings","trigger","collapsible","menu","defaultSelectedKeys","react_router_dom","paddingLeft","zIndex","NoticeIcon_default","count","minHeight","TraineeRegisterForm","getJobDetails","jobstatus","jobData","job","custombtn","resume","custom","refer","refid","inform","resendMail","renderJob","Helmet","charSet","postedBy","overflow","traineeregister_Header","traineeregister_Title","fontFamily","outline","dateOfPosting","fromNow","changeResume","traineeregister_Option","uploadProps","traineeregister_Footer","TraineeRegister","ProceedtoTest","user_icon","Operations","Mark","questionid","isAnswered","mark","isMarked","badge","Clock","endTest","clockF","c","setInterval","localMinutes","localSeconds","clearInterval","Sidepanel","clock","operations","SingleQuestion","SaveTocloud","newAnswer","chosenOption","updateIsMarked","previous","next","AnswerSelected","aa","onAnswerChange","ansCount","ticked","op1","op2","PState","Pprops","es_radio","Group","triggerSidebar","Question","fetchTraineeTestQuestions","fetchTraineeTestAnswerSheet","singleQuestion","getWindowDimensions","_window","innerWidth","innerHeight","TestBoard","_useWindowDimensions","windowDimensions","setWindowDimensions","handleResize","removeEventListener","useWindowDimensions","setVisible","onOpen","examPortal_question","sidepanel","closable","onClose","MainPortal","setTestDetsils","fetchTraineedata","portal_Title","instruction","App","es","exact","path","Home","Homepage","Boolean","hostname","ReactDOM","src_App","getElementById","navigator","serviceWorker","registration","unregister"],"mappings":"kTAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,uYCGlCC,EAAe,CACjBC,qBAAsB,GCJpBD,EAAe,CACjBE,oBAAqB,EACrBC,qBAAqB,EACrBC,YAAc,WACdC,UAAY,KACZC,kBAAoB,GACpBC,2BAA0B,EAC1BC,8BAA6B,EAC7BC,iBAAiB,GACjBC,eAAe,GACfC,iBAAmB,GACnBC,oBAAqB,EACrBC,qBAAqB,EACrBC,YAAc,YACdC,UAAY,KACZC,kBAAoB,GACpBC,qBAAsB,EACtBC,eAAgB,ICjBPC,EAAoB,CAC7B,CACIC,QAAS,UACTC,KAAM,OACNC,KAAM,cAEV,CACIF,QAAS,eACTC,KAAM,OACNC,KAAM,sBAEV,CACIF,QAAS,iBACTC,KAAM,OACNC,KAAM,sBAEV,CACIF,QAAS,4BACTC,KAAM,OACNC,KAAM,kBAEV,CACIF,QAAS,gBACTC,KAAM,WACNC,KAAM,uBAEV,CACIF,QAAS,WACTC,KAAM,UACNC,KAAM,mBAIDC,EAAsB,CAC/B,CACIH,QAAS,UACTC,KAAM,OACNC,KAAM,cAEV,CACIF,QAAS,iBACTC,KAAM,OACNC,KAAM,sBAEV,CACIF,QAAS,oBACTC,KAAM,WACNC,KAAM,uBAEV,CACIF,QAAS,4BACTC,KAAM,OACNC,KAAM,kBAEV,CACIF,QAAS,kBACTC,KAAM,OACNC,KAAM,mBAEV,CACIF,QAAS,kBACTC,KAAM,cACNC,KAAM,iBAEV,CACIF,QAAS,sBACTC,KAAM,WACNC,KAAM,qBAEV,CACIF,QAAS,WACTC,KAAM,UACNC,KAAM,mBCtERtB,EAAe,CACjBwB,YAAa,EACbC,YAAc,GACdC,YAAY,IACZC,YAAY,YCNV3B,EAAe,CACjB4B,wBAAyB,EACzBC,yBAAyB,EACzBC,mBAAqB,GACrBC,sBAAuB,EACvBC,kBAAoB,GACpBC,iBAAiB,GACjBC,iBAAiB,GACjBC,4BAA2B,EAC3BC,kBAAiB,EACjBC,cAAc,GACdC,sBAAwB,CACpBC,cAAgB,KAChBC,cAAe,IAEnBC,WAAY,ICfVzC,EAAe,CACjB0C,MAAO,KACPC,YAAa,EACbC,KAAM,SACNC,gBAAiB,CACbC,SAAU,KACVC,UAAW,GACXC,aAAc,GACdC,iBAAkB,KAClBC,YAAa,GACbC,cAAe,GACfC,UAAW,KACXC,QAAS,MAEbC,YAAY,EACZC,YAAa,CACTC,MAAO,GACPC,YAAa,KACbC,cAAe,IACfC,aAAc,GACdC,UAAW,GACXC,SAAU,KACVC,KAAM,YACNC,WAAY,IAEhBC,iCAAkC,GAClCC,WAAW,EACXC,YAAa,CACTf,cAAe,GACfH,aAAc,IAElBmB,uCAAwC,IC/BtCnE,EAAe,CACjBoE,GAAK,KACLC,iBAAiB,GACjBC,iBAAiB,CACbC,yBAAwB,EACxBC,YAAW,EACXC,eAAc,EACdC,mBAAmB,EACnBC,MAAO,KACPC,IAAK,MAETC,qBAAqB,GACrBC,gBAAgB,ICZd9E,EAAe,CACjB+E,kBAAiB,EACjBC,YAAW,EACXC,OAAO,KACPC,UAAU,KACVC,iBAAgB,EAChBC,iBAAgB,EAChBZ,YAAa,EACba,gBAAe,EACfZ,eAAc,EACda,eAAc,EACdC,OAAO,EACPC,OAAO,EACPC,eAAe,CACXC,KAAK,GACLC,QAAQ,GACRC,QAAQ,IAEZC,oBAAoB,EACpBC,UAAU,GACVC,QAAQ,GACRC,kBAAiB,EACjBC,YAAY,EACZC,WAAY,GACZC,UAAU,EACVC,gBAAiB,KACjBC,gBAAiB,MC1BfrG,EAAe,CACjBsG,uBAAuB,EACvBvE,sBAAuB,EACvBC,kBAAoB,GACpBuE,mBAAoB,GCOTC,cAAgB,CAC3BC,OTLW,WAAiC,IAAhCC,EAAgCC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAxB3G,EACpB,QAD4C2G,UAAAC,OAAA,EAAAD,UAAA,QAAAE,GAC9B/C,MACV,IUTyB,oBVUrB,OAAOgD,OAAAC,EAAA,EAAAD,CAAA,GACAJ,EADP,CAEIzG,qBAAuByG,EAAMzG,sBAErC,QACI,OAAOyG,ISFfM,MROW,WAAiC,IAAhCN,EAAgCC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAxB3G,EAAciH,EAAUN,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC5C,OAAOI,EAAOnD,MACV,IAAK,6BACD,OAAOgD,OAAAC,EAAA,EAAAD,CAAA,GACAJ,EADP,CAEIxG,mBAAqB+G,EAAOC,SAC5B7G,UAAY4G,EAAOE,SACnB/G,YAAc6G,EAAOG,SACrB1G,eAAiBuG,EAAOI,WAGhC,IAAK,mCACD,OAAOP,OAAAC,EAAA,EAAAD,CAAA,GACAJ,EADP,CAEIvG,oBAAsB8G,EAAOK,UAErC,IAAK,6BACG,OAAOR,OAAAC,EAAA,EAAAD,CAAA,GACAJ,EADP,CAEIpG,kBAAoB2G,EAAOK,UAEvC,IAAK,sCACG,OAAOR,OAAAC,EAAA,EAAAD,CAAA,GACAJ,EADP,CAEInG,0BAA4B0G,EAAOC,SACnCzG,iBAAmBwG,EAAOE,WAGtC,IAAK,6BACD,OAAOL,OAAAC,EAAA,EAAAD,CAAA,GACAJ,EADP,CAEI9F,mBAAqBqG,EAAOC,SAC5BnG,UAAYkG,EAAOE,SACnBrG,YAAcmG,EAAOG,SACrBlG,eAAiB+F,EAAOI,WAEhC,IAAK,mCACD,OAAOP,OAAAC,EAAA,EAAAD,CAAA,GACAJ,EADP,CAEI7F,oBAAsBoG,EAAOK,UAErC,IAAK,6BACG,OAAOR,OAAAC,EAAA,EAAAD,CAAA,GACAJ,EADP,CAEI1F,kBAAoBiG,EAAOK,UAEvC,IAAK,sCACG,OAAOR,OAAAC,EAAA,EAAAD,CAAA,GACAJ,EADP,CAEIzF,oBAAsBgG,EAAOC,SAC7BvG,iBAAkBsG,EAAOE,WAErC,QACI,OAAOT,IQ3Dfa,KNLW,WAAiC,IAAhCb,EAAgCC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAxB3G,EAAciH,EAAUN,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC5C,OAAOI,EAAOnD,MACV,IAAK,oBACD,OAAOgD,OAAAC,EAAA,EAAAD,CAAA,GACAJ,EADP,CAEIc,UAAYP,EAAOK,UAE3B,IAAK,sBACD,OAAOR,OAAAC,EAAA,EAAAD,CAAA,GACAJ,EADP,CAEIhF,YAAcuF,EAAOK,UAE7B,IAAK,QACD,MAAyB,UAAtBL,EAAOK,QAAQxD,KACPgD,OAAAC,EAAA,EAAAD,CAAA,GACAJ,EADP,CAEIlF,YAAa,EACbC,YAAYqF,OAAAC,EAAA,EAAAD,CAAA,GACLG,EAAOK,SAEd3F,YAAcR,IAIX2F,OAAAC,EAAA,EAAAD,CAAA,GACAJ,EADP,CAEIlF,YAAa,EACbC,YAAYqF,OAAAC,EAAA,EAAAD,CAAA,GACLG,EAAOK,SAEd3F,YAAcJ,IAI1B,IAAK,SACD,OAAOuF,OAAAC,EAAA,EAAAD,CAAA,GACAJ,EADP,CAEIlF,YAAa,EACbC,YAAa,KAIrB,QACI,OAAOiF,IMrCfe,QLIW,WAAiC,IAAhCf,EAAgCC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAxB3G,EAAciH,EAAUN,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC5C,OAAOI,EAAOnD,MACV,IAAK,8BACD,OAAOgD,OAAAC,EAAA,EAAAD,CAAA,GACAJ,EADP,CAEI9E,uBAAyBqF,EAAOC,WAExC,IAAK,oCACD,OAAOJ,OAAAC,EAAA,EAAAD,CAAA,GACAJ,EADP,CAEI7E,wBAA0BoF,EAAOK,UAEzC,IAAK,8BACD,OAAOR,OAAAC,EAAA,EAAAD,CAAA,GACAJ,EADP,CAEI5E,mBAAqBmF,EAAOK,UAEpC,IAAK,uCACD,OAAOR,OAAAC,EAAA,EAAAD,CAAA,GACAJ,EADP,CAEI3E,qBAAuBkF,EAAOC,SAC9BlF,kBAAoBiF,EAAOE,WAEnC,IAAK,mBACD,OAAOL,OAAAC,EAAA,EAAAD,CAAA,GACAJ,EADP,CAEIxE,iBAAiB4E,OAAAC,EAAA,EAAAD,CAAA,GACVJ,EAAMxE,iBADG,CAEZwF,QAAO,GAAAC,OAAAb,OAAAc,EAAA,EAAAd,CACAJ,EAAMxE,iBAAiBwF,SADvB,CAEH,CACIG,MAAO,KACPC,KAAO,KACPC,UAAU,OAItB5F,4BAA2B,IAEnC,IAAK,0BACD,OAAO2E,OAAAC,EAAA,EAAAD,CAAA,GACAJ,EADP,CAEIzE,iBAAmBgF,EAAOK,UAElC,IAAK,4BACD,OAAAR,OAAAC,EAAA,EAAAD,CAAA,GACOJ,EADP,CAEIxE,iBAAmB+E,EAAOK,UAElC,IAAK,kCACD,OAAOR,OAAAC,EAAA,EAAAD,CAAA,GACAJ,EADP,CAEIsB,uBAAyBf,EAAOC,SAChC5E,sBAAqBwE,OAAAC,EAAA,EAAAD,CAAA,GACdJ,EAAMpE,sBADQ,CAEjBC,cAAgB0E,EAAOE,aAGnC,IAAK,0BACD,OAAOL,OAAAC,EAAA,EAAAD,CAAA,GACAJ,EADP,CAEIuB,eAAiBhB,EAAOK,UAEhC,IAAK,mCACD,OAAOR,OAAAC,EAAA,EAAAD,CAAA,GACAJ,EADP,CAEItE,iBAAmB6E,EAAOC,SAC1B7E,cAAe4E,EAAOE,WAE9B,IAAK,sCACD,OAAAL,OAAAC,EAAA,EAAAD,CAAA,GACOJ,EADP,CAEIpE,sBAAsBwE,OAAAC,EAAA,EAAAD,CAAA,GACfJ,EAAMpE,sBADQ,CAEjBE,cAAcyE,EAAOK,YAGjC,IAAK,qBACD,OAAOR,OAAAC,EAAA,EAAAD,CAAA,GACAJ,EADP,CAEIjE,WAAYwE,EAAOK,UAE3B,QACI,OAAOZ,IKtFfwB,KJmBW,WAAkC,IAAjCxB,EAAiCC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAzB3G,EAAciH,EAAWN,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC7C,OAAQI,EAAOnD,MACX,IAAK,qBACD,OAAOgD,OAAAC,EAAA,EAAAD,CAAA,GACAJ,EADP,CAEI/D,YAAasE,EAAOK,UAE5B,IAAK,gCACD,OAAOR,OAAAC,EAAA,EAAAD,CAAA,GACAJ,EADP,CAEI7D,gBAAgBiE,OAAAC,EAAA,EAAAD,CAAA,GACTJ,EAAM7D,gBACNoE,EAAOK,WAGtB,IAAK,mCACD,OAAOR,OAAAC,EAAA,EAAAD,CAAA,GACAJ,EADP,CAEI1C,iCAAkCiD,EAAOK,UAEjD,IAAK,kCACD,OAAOR,OAAAC,EAAA,EAAAD,CAAA,GACAJ,EADP,CAEI7D,gBAAgBiE,OAAAC,EAAA,EAAAD,CAAA,GACTJ,EAAM7D,gBADE,CAEXM,cAAe8D,EAAOK,YAGlC,IAAK,kCACD,OAAOR,OAAAC,EAAA,EAAAD,CAAA,GACAJ,EADP,CAEI1C,iCAAkCiD,EAAOK,UAEjD,IAAK,8BACD,OAAOR,OAAAC,EAAA,EAAAD,CAAA,GACAJ,EADP,CAEI9D,KAAMqE,EAAOK,UAErB,IAAK,eACD,OAAAR,OAAAC,EAAA,EAAAD,CAAA,GACOJ,EADP,CAEIpD,WAAa2D,EAAOC,SACpB3D,YAAa0D,EAAOE,WAE5B,IAAK,8BACD,OAAAL,OAAAC,EAAA,EAAAD,CAAA,GACOJ,EADP,CAEIzC,UAAYgD,EAAOK,UAE3B,IAAK,+BAED,OADAa,QAAQC,IAAInB,EAAOK,SACnBR,OAAAC,EAAA,EAAAD,CAAA,GACOJ,EADP,CAEIxC,YAAY4C,OAAAC,EAAA,EAAAD,CAAA,GACLJ,EAAMxC,YADF,CAEPlB,aAAciE,EAAOK,YAGjC,IAAK,wCACD,OAAOR,OAAAC,EAAA,EAAAD,CAAA,GACAJ,EADP,CAEIxC,YAAY4C,OAAAC,EAAA,EAAAD,CAAA,GACLJ,EAAMxC,YADF,CAEPf,cAAe8D,EAAOK,YAGlC,IAAK,yCACD,OAAOR,OAAAC,EAAA,EAAAD,CAAA,GACAJ,EADP,CAEIvC,uCAAwC8C,EAAOK,UAEvD,QACI,OAAOZ,II1Ff2B,QHFW,WAAiC,IAAhC3B,EAAgCC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAxB3G,EAAciH,EAAUN,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC5C,OAAOI,EAAOnD,MACV,IAAK,sBACD,OAAOgD,OAAAC,EAAA,EAAAD,CAAA,GACAJ,EADP,CAEItC,GAAG6C,EAAOK,UAElB,IAAK,yBACD,OAAOR,OAAAC,EAAA,EAAAD,CAAA,GACAJ,EADP,CAEIrC,iBAAiB4C,EAAOK,UAEhC,IAAK,4BACD,OAAAR,OAAAC,EAAA,EAAAD,CAAA,GACOJ,EADP,CAEIpC,iBAAiB2C,EAAOK,UAEhC,IAAK,uCACD,OAAAR,OAAAC,EAAA,EAAAD,CAAA,GACOJ,EADP,CAEIpC,iBAAiBwC,OAAAC,EAAA,EAAAD,CAAA,GACVJ,EAAMpC,iBADG,CAEZC,wBAAwB0C,EAAOK,YAG3C,IAAK,2BACD,OAAAR,OAAAC,EAAA,EAAAD,CAAA,GACOJ,EADP,CAEIpC,iBAAiB2C,EAAOK,UAEhC,IAAK,4BACD,OAAAR,OAAAC,EAAA,EAAAD,CAAA,GACOJ,EADP,CAEI7B,qBAAqBoC,EAAOK,UAEpC,IAAK,2BACD,OAAAR,OAAAC,EAAA,EAAAD,CAAA,GACOJ,EADP,CAEI5B,gBAAiBmC,EAAOK,UAEhC,QACI,OAAOZ,IGtCf4B,QFYW,WAAiC,IAAhC5B,EAAgCC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAxB3G,EAAciH,EAAUN,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC5C,OAAOI,EAAOnD,MACV,IAAK,yBACD,OAAAgD,OAAAC,EAAA,EAAAD,CAAA,GACOJ,EADP,CAEIV,iBAAiBiB,EAAOK,UAEhC,IAAK,2BACD,OAAAR,OAAAC,EAAA,EAAAD,CAAA,GACOJ,EADP,CAEIzB,OAAOgC,EAAOC,SACdhC,UAAU+B,EAAOE,WAEzB,IAAK,kBACD,OAAAL,OAAAC,EAAA,EAAAD,CAAA,GACOJ,EADP,CAEIlC,WAAYyC,EAAOC,SACnB7B,eAAgB4B,EAAOE,SACvB1C,cAAewC,EAAOG,SACtB9B,cAAe2B,EAAOI,SACtB9B,OAAQ0B,EAAOsB,SACf/C,OAAQyB,EAAOuB,SACfrC,SAAUc,EAAOwB,SACjBrC,iBAAiB,EACjBjB,iBAAgB,IAExB,IAAK,mBACD,OAAA2B,OAAAC,EAAA,EAAAD,CAAA,GACOJ,EADP,CAEI1B,YAAW,IAEnB,IAAK,kBACD,OAAO8B,OAAAC,EAAA,EAAAD,CAAA,GACAJ,EADP,CAEIpB,eAAgB,IAExB,IAAK,qBACD,OAAAwB,OAAAC,EAAA,EAAAD,CAAA,GACOJ,EADP,CAEI3B,iBAAiBkC,EAAOK,UAEhC,IAAK,kBACD,OAAOR,OAAAC,EAAA,EAAAD,CAAA,GACAJ,EADP,CAEIb,oBAAoBoB,EAAOK,UAEnC,IAAK,0BACD,OAAAR,OAAAC,EAAA,EAAAD,CAAA,GACOJ,EADP,CAEItB,iBAAgB,EAChBK,eAAewB,EAAOK,UAE9B,IAAK,gCACD,OAAAR,OAAAC,EAAA,EAAAD,CAAA,GACOJ,EADP,CAEIZ,UAAUmB,EAAOK,UAEzB,IAAK,kCACD,OAAAR,OAAAC,EAAA,EAAAD,CAAA,GACOJ,EADP,CAEIX,QAAQkB,EAAOK,UAEvB,IAAK,cACD,OAAAR,OAAAC,EAAA,EAAAD,CAAA,GACOJ,EADP,CAEIT,WAAYgB,EAAOC,SACnBhB,WAAYe,EAAOE,WAE3B,IAAK,eACD,OAAAL,OAAAC,EAAA,EAAAD,CAAA,GACOJ,EADP,CAEIL,gBAAiBY,EAAOK,UAEhC,IAAK,gBACD,OAAAR,OAAAC,EAAA,EAAAD,CAAA,GACOJ,EADP,CAEIN,gBAAiBa,EAAOK,UAEhC,QACI,OAAOZ,IE1FfgC,ODZW,WAAkC,IAAjChC,EAAiCC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAzB3G,EAAciH,EAAWN,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC7C,OAAOI,EAAOnD,MACV,IAAK,qCACD,OAAOgD,OAAAC,EAAA,EAAAD,CAAA,GACAJ,EADP,CAEIJ,sBAAwBW,EAAOK,UAEvC,IAAK,8CACD,OAAOR,OAAAC,EAAA,EAAAD,CAAA,GACAJ,EADP,CAEI3E,qBAAuBkF,EAAOC,SAC9BlF,kBAAoBiF,EAAOE,WAEnC,QACI,OAAOT,MGfbiC,EAAa,CAACC,KAmBLC,EAhBDC,YACVC,EALiB,GAOjBC,YACIC,IAAeC,WAAf,EAAmBP,GAClBQ,OAAOC,sCAAwCD,OAAOC,wCAA2CJ,uKCCpGK,EAAYC,YAAW,SAACC,GAAD,MAAY,CACrClI,KAAM,CACFmI,YAAaD,EAAME,QAAQ,IAE/BC,YAAa,CACTC,gBAAiBJ,EAAMK,QAAQC,WAAWC,MAC1CC,QAASR,EAAME,QAAQ,EAAG,EAAG,IAEjCO,YAAa,CACTC,UAAWV,EAAME,QAAQ,IAE7BS,SAAU,CACNC,WAAYZ,EAAME,QAAQ,GAC1BW,cAAeb,EAAME,QAAQ,IAEjCY,KAAM,CACFC,OAAQ,OACRlJ,QAAS,OACTmJ,cAAe,UAEnBC,UAAW,CACPL,WAAY,UAEhBM,YAAa,CACTC,SAAU,GAEdC,OAAQ,CACJhB,gBAAiBJ,EAAMK,QAAQC,WAAWC,MAC1CC,QAASR,EAAME,QAAQ,OAIzBmB,EAAQ,CACV,CACIpH,MAAO,YACPnC,KAAM,YACNoC,YAAa,gFAEjB,CACID,MAAO,aACPnC,KAAM,OACNoC,YAAa,6CAEjB,CACID,MAAO,iBACPnC,KAAM,UACNoC,YAAa,uCAEjB,CACID,MAAO,oBACPnC,KAAM,iBACNoC,YAAa,mDAEjB,CACID,MAAO,WACPnC,KAAM,aACNoC,YAAa,8EAEjB,CACID,MAAO,UACPnC,KAAM,QACNoC,YAAa,+CAIN,SAASoH,IACtB,IAAMC,EAAUzB,IAEhB,OACE0B,EAAAC,EAAAC,cAACF,EAAAC,EAAME,SAAP,KACEH,EAAAC,EAAAC,cAACE,EAAA,EAAD,MAEAJ,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAWC,UAAWP,EAAQZ,SAAUoB,SAAS,MAE/CP,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAMC,WAAS,EAAC/B,QAAS,GACtBmB,EAAMa,IAAI,SAACpB,EAAMqB,GAAP,OACTX,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAMI,MAAI,EAACC,IAAKF,EAAOG,GAAI,GAAIC,GAAI,EAAGC,GAAI,GACxChB,EAAAC,EAAAC,cAACe,EAAA,EAAD,CAAMX,UAAWP,EAAQT,MACvBU,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAAaZ,UAAWP,EAAQL,aAC9BM,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAYC,cAAY,EAACC,QAAQ,KAAKC,UAAU,MAC5CtB,EAAAC,EAAAC,cAAC5J,EAAA,QAAD,CAAMyC,KAAMuG,EAAKhJ,OAAS,KAD9B,IACqCgJ,EAAK7G,OAE1CuH,EAAAC,EAAAC,cAACiB,EAAA,EAAD,KACG7B,EAAK5G,sBC7E5B,SAAS6I,IACL,OACIvB,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAYE,QAAQ,QAAQG,MAAM,gBAAgBC,MAAM,UACnD,kBACDzB,EAAAC,EAAAC,cAACwB,EAAA,EAAD,CAAMF,MAAM,UAAUG,KAAK,KACvB3B,EAAAC,EAAAC,cAAA,mCACI,KACP,IAAI0B,MAAOC,cACX,KAKb,IAAMvD,EAAYC,YAAW,SAACC,GAAD,MAAY,CACrCsD,UAAW,CACPC,GAAI,CACAC,OAAQ,EACRhD,QAAS,EACTiD,UAAW,SAGnBC,OAAQ,CACJtD,gBAAiB,WAErBuD,QAAS,CACLC,SAAU,QAEdC,aAAc,CACV1C,SAAU,GAEdpJ,KAAM,CACFyL,OAAQxD,EAAME,QAAQ,EAAG,MAE7BC,YAAa,CACTK,QAASR,EAAME,QAAQ,EAAG,EAAG,IAEjC4D,WAAY,CACR1D,gBAAiB,WAErB2D,YAAa,CACTlM,QAAS,OACTmM,eAAgB,SAChBC,WAAY,WACZC,aAAclE,EAAME,QAAQ,IAEhCkB,OAAO7D,OAAA4G,EAAA,EAAA5G,CAAA,CACH6G,UAAS,aAAAhG,OAAe4B,EAAMK,QAAQgE,SACtC3D,UAAWV,EAAME,QAAQ,GACzBU,WAAYZ,EAAME,QAAQ,GAC1BW,cAAeb,EAAME,QAAQ,IAC5BF,EAAMsE,YAAYC,GAAG,MAAQ,CAC1B3D,WAAYZ,EAAME,QAAQ,GAC1BW,cAAeb,EAAME,QAAQ,QAMnCsE,EAAU,CACZ,CACIvK,MAAO,UACPC,YAAa,CAAC,OAAQ,aAAc,aAExC,CACID,MAAO,WACPC,YAAa,CAAC,OAAQ,oBAE1B,CACID,MAAO,YACPC,YAAa,CAAC,QAAS,WAAY,mBAEvC,CACID,MAAO,QACPC,YAAa,CAAC,iBAAkB,eAAgB,mBAIzC,SAASuK,IACtB,IAAMlD,EAAUzB,IAEd,OACI0B,EAAAC,EAAAC,cAACF,EAAAC,EAAME,SAAP,KACIH,EAAAC,EAAAC,cAACE,EAAA,EAAD,MACAJ,EAAAC,EAAAC,cAACgD,EAAA,EAAD,CAAQC,SAAS,SAAS3B,MAAM,UAAU4B,UAAW,EAAG9C,UAAWP,EAAQmC,QACvElC,EAAAC,EAAAC,cAACmD,EAAA,EAAD,CAAS/C,UAAWP,EAAQoC,SACxBnC,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAYE,QAAQ,KAAKG,MAAM,UAAU8B,QAAM,EAAChD,UAAWP,EAAQsC,cAC/DrC,EAAAC,EAAAC,cAAA,OAAKqD,IAAKC,IAAMC,IAAI,eAAenD,UAAU,UAEjDN,EAAAC,EAAAC,cAACwD,EAAA,EAAD,CAAQ/B,KAAK,cAAcH,MAAM,UAAUH,QAAQ,WAAWf,UAAWP,EAAQxJ,MAC7EyJ,EAAAC,EAAAC,cAAC5J,EAAA,QAAD,CAAMyC,KAAK,SADf,IAC0B,MAD1B,qBAMRiH,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAWE,SAAS,KAAKe,UAAU,OAAOhB,UAAWP,EAAQpB,aACzDqB,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAYG,UAAU,KAAKD,QAAQ,KAAKI,MAAM,SAASD,MAAM,cAAcJ,cAAY,GAAvF,YAIApB,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAYE,QAAQ,KAAKI,MAAM,SAASD,MAAM,gBAAgBF,UAAU,KAAxE,+JAKJtB,EAAAC,EAAAC,cAACJ,EAAD,MAGAE,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAWE,SAAS,KAAKe,UAAU,OAAOhB,UAAWP,EAAQpB,aACzDqB,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAYG,UAAU,KAAKD,QAAQ,KAAKI,MAAM,SAASD,MAAM,cAAcJ,cAAY,GAAvF,YAKJpB,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAWE,SAAS,KAAKe,UAAU,OAAOhB,UAAWP,EAAQpB,aACzDqB,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAYG,UAAU,KAAKD,QAAQ,KAAKI,MAAM,SAASD,MAAM,cAAcJ,cAAY,GAAvF,+CAUJpB,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAWE,SAAS,KAAKe,UAAU,SAAShB,UAAWP,EAAQH,QAC3DI,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAMC,WAAS,EAAC/B,QAAS,EAAGiF,QAAQ,gBAC/BX,EAAQtC,IAAI,SAACd,GAAD,OACTI,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAMI,MAAI,EAACE,GAAI,EAAGC,GAAI,EAAGF,IAAKjB,EAAOnH,OACjCuH,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAYE,QAAQ,KAAKG,MAAM,cAAcJ,cAAY,GACpDxB,EAAOnH,OAEZuH,EAAAC,EAAAC,cAAA,UACKN,EAAOlH,YAAYgI,IAAI,SAACE,GAAD,OACpBZ,EAAAC,EAAAC,cAAA,MAAIW,IAAKD,GACLZ,EAAAC,EAAAC,cAACwB,EAAA,EAAD,CAAMC,KAAK,IAAIN,QAAQ,YAAYG,MAAM,iBACpCZ,WAQ7BZ,EAAAC,EAAAC,cAAC0D,EAAA,EAAD,CAAKC,GAAI,GACL7D,EAAAC,EAAAC,cAAC4D,EAAD,4FC3FLC,GAzEF,CACTC,eAAmE,GACnEC,KAA2D,GAC3DC,MAAQ,iBACRC,eAAiB,uBACjBC,YAAa,8BACbC,gBAAiB,oCACjBC,2BAA6B,gCAC7BC,eAAiB,+BACjBC,eAAiB,+BAEjBC,iBAAmB,8BACnBC,2BAA6B,0BAC7BC,eAAiB,yBACjBC,kBAAoB,gCACpBC,gBAAgB,2BAChBC,sBAAsB,4BACtBC,iBAAkB,2BAClBC,YAAY,iBAEZC,YAAc,sBACdC,cAAc,2BACdC,gBAAgB,+BAChBC,0BAA0B,wBAC1BC,iCAAkC,kCAClCC,8BAA8B,6BAE9BC,kBAAmB,oCACnBC,sBAAsB,qBACtBC,oBAAqB,0BACrBC,mBAAoB,yBACpBC,sBAAsB,0BACtBC,2BAA2B,wBAE3BC,gBAAgB,8BAChBC,4BAA4B,kCAC5BC,+BAA+B,iCAC/BC,eAAe,gCACfC,SAAW,2BACXC,iBAAiB,wBACjBC,iCAAiC,+BACjCC,oBAAoB,mBACpBC,sBAAsB,kCACtBC,cAAc,2BAEdC,UAAU,kCACVC,UAAU,kCACVC,gBAAgB,yBAChBC,cAAc,gCACdC,gBAAiB,8BAEjBC,kBAAmB,iCACnBC,gBAAgB,kCAEhBC,uBAAwB,iCACxBC,qBAAsB,+BACtBC,4BAA6B,+BAC7BC,uBAAwB,iCACxBC,yBAA0B,0CAC1BC,gBAAiB,4CAEjBC,qBAAsB,uCACtBC,sBAAuB,wCACvBC,mBAAoB,yCACpBC,sBAAuB,2BACvBC,cAAe,wBACfC,kBAAmB,oBACnBC,cAAe,qBACfC,UAAW,oBACXC,WAAY,qBACZC,eAAgB,gCCtEdC,GAAQC,EAAQ,KAETC,GAAY,SAAChT,GACtB,OAAO8S,GAAM/L,OAAAC,EAAA,EAAAD,CAAA,CACTkM,OAAO,MACPC,QAAUnE,GAAKE,MACZjP,EAHK,CAIRmT,OAAOpM,OAAAC,EAAA,EAAAD,CAAA,GACA/G,EAAEmT,OADH,CAEFC,MAAQC,GAAKC,qBAcZC,GAAY,SAACvT,GACtB,OAAO8S,GAAM/L,OAAAC,EAAA,EAAAD,CAAA,CACTkM,OAAO,OACPC,QAAUnE,GAAKE,MACZjP,EAHK,CAIRmT,OAAOpM,OAAAC,EAAA,EAAAD,CAAA,GACA/G,EAAEmT,OADH,CAEFC,MAAQC,GAAKC,qBAKZE,GAAM,SAACxT,GAChB,OAAO8S,GAAM/L,OAAAC,EAAA,EAAAD,CAAA,CACTmM,QAAUnE,GAAKE,KACfgE,OAAO,QACJjT,KCIIyT,GAAA,IAxCX,SAAAC,IAAc3M,OAAA4M,EAAA,EAAA5M,CAAA6M,KAAAF,GAAAE,KAMdN,aAAe,WACX,OAAOO,aAAaC,QAAQ,UAPnBF,KAUbG,WAAa,SAACC,GACVH,aAAaI,QAAQ,QAASD,IAXrBJ,KAcbM,YAAc,WACVL,aAAaM,WAAW,UAffP,KAkBbQ,UAAY,SAACC,EAAErU,GACX,OAAOwT,GAAK,CACRc,IAAIvF,GAAKG,MACTqF,KAAK,CACD3O,QAAUyO,EACVG,SAAWxU,MAvBV4T,KA4Bba,UAAY,SAACT,GACT,ODlBWhU,ECkBA,CACPsU,IAAMvF,GAAKI,eACXgE,OAAS,CACLC,MAAQY,IDpBblB,GAAM/L,OAAAC,EAAA,EAAAD,CAAA,CACTkM,OAAO,MACPC,QAAUnE,GAAKE,MACZjP,IAJO,IAACA,GCVX4T,KAAKc,MAAM,MCJNC,GAAQ,SAACC,GAAD,OAAY,SAAAC,GAC7BA,EAAS,CACN9Q,KAAO,QACPwD,QAAUqN,MAKJE,GAAS,kBAAM,SAAAD,GACxBA,EAAS,CACL9Q,KAAM,SACNoD,SAAU,+BCXH,SAAS4N,KAAuB,IAAjBC,EAAiBpO,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAf,UAAUqO,EAAKrO,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAAHoO,EAAGtO,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC3C,MAAO,YAAJkO,EAEKG,KAAMC,QAAQ,CACV3R,MAAOwR,EACPI,QAAQH,IAIR,UAAJF,EAEAG,KAAMG,MAAM,CACR7R,MAAOwR,EACPI,QAAQH,IAMZC,KAAMI,QAAQ,CACV9R,MAAOwR,EACPI,QAAQH,iDCKlB5L,GAAYC,YAAW,SAACC,GAAD,MAAY,CACvCgM,KAAM,CACJjL,OAAQ,SAEVzC,MAAO,CACL2N,gBAAiB,8FACjBC,iBAAkB,YAClB9L,gBACyB,UAAvBJ,EAAMK,QAAQ9F,KAAmByF,EAAMK,QAAQ8L,KAAK,IAAMnM,EAAMK,QAAQ8L,KAAK,KAC/EC,eAAgB,QAChBC,mBAAoB,UAEtB9L,MAAO,CACLiD,OAAQxD,EAAME,QAAQ,EAAG,GACzBrI,QAAS,OACTmJ,cAAe,SACfiD,WAAY,UAEdqI,OAAQ,CACN9I,OAAQxD,EAAME,QAAQ,GACtBE,gBAAiBJ,EAAMK,QAAQkM,UAAUC,MAE3CC,KAAM,CACJC,MAAO,OACPhM,UAAWV,EAAME,QAAQ,IAE3ByM,OAAQ,CACNnJ,OAAQxD,EAAME,QAAQ,EAAG,EAAG,OAIjB,SAAS0M,GAAWC,GACjC,IAAMtL,EAAUzB,KAEhB,OACE0B,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAMC,WAAS,EAACa,UAAU,OAAOhB,UAAWP,EAAQyK,MAClDxK,EAAAC,EAAAC,cAACE,EAAA,EAAD,MACAJ,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAMI,MAAI,EAACE,IAAI,EAAOC,GAAI,EAAGC,GAAI,EAAGV,UAAWP,EAAQjD,QACvDkD,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAMI,MAAI,EAACE,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGM,UAAWgK,KAAOlI,UAAW,EAAGmI,QAAM,GACrEvL,EAAAC,EAAAC,cAAA,OAAKI,UAAWP,EAAQhB,OAEtBiB,EAAAC,EAAAC,cAACsL,GAAA,EAAD,CAAQlL,UAAWP,EAAQ+K,QACzB9K,EAAAC,EAAAC,cAACuL,GAAAxL,EAAD,OAGFD,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAYG,UAAU,KAAKD,QAAQ,MAAnC,mBAICgK,EAAMK,uBChEXC,eACF,SAAAA,EAAYN,GAAM,IAAAO,EAAA,OAAA7P,OAAA4M,EAAA,EAAA5M,CAAA6M,KAAA+C,IACdC,EAAA7P,OAAA8P,GAAA,EAAA9P,CAAA6M,KAAA7M,OAAA+P,GAAA,EAAA/P,CAAA4P,GAAAI,KAAAnD,KAAMyC,KAMVW,aAAe,SAAAC,GACXA,EAAEC,iBACFN,EAAKP,MAAMJ,KAAKkB,eAAe,SAACC,EAAKC,GAC5BD,GAED/D,GACCe,UAAUiD,EAAOC,MAAMD,EAAO7C,UAC9B+C,KAAK,SAACC,GAEH,IAAGA,EAASjD,KAAKa,QAQb,OAAOL,GAAM,QAAQ,SAAUyC,EAASjD,KAAKkD,SAP7Cb,EAAKP,MAAM1B,MAAM6C,EAASjD,KAAK/M,MAC/B6L,GAAKU,WAAWyD,EAASjD,KAAKG,OAC9BkC,EAAKc,SAAS,CACVjW,YAAa,MAOxBkW,MAAM,SAACrC,GAEJ,OAAOP,GAAM,QAAQ,SAAS,qBA3B1C6B,EAAKjQ,MAAM,CACPlF,YAAY,GAHFmV,yEAmCV,IACIgB,EAAsBhE,KAAKyC,MAAMJ,KAAjC2B,kBACR,OAAGhE,KAAKjN,MAAMlF,WACHuJ,EAAAC,EAAAC,cAAC2M,EAAA,EAAD,CAAUC,GAAIlE,KAAKyC,MAAM7O,KAAK5F,YAAY,GAAGL,OAIhDyJ,EAAAC,EAAAC,cAACkL,GAAD,KACQpL,EAAAC,EAAAC,cAAC6M,GAAA,QAAD,CACIC,SAAUpE,KAAKoD,aACfiB,aAAa,OAEbjN,EAAAC,EAAAC,cAAC6M,GAAA,QAAKG,KAAN,CAAWC,MAAM,QAAQC,aAAW,GAC/BR,EAAkB,QAAS,CACxBS,MAAO,CACH,CACItU,KAAM,QACN0T,QAAS,kCAEb,CACIa,UAAU,EACVb,QAAS,+BARpBG,CAWE5M,EAAAC,EAAAC,cAACqN,GAAA,QAAD,CACCC,OAAQxN,EAAAC,EAAAC,cAAC5J,EAAA,QAAD,CAAMyC,KAAK,OAAO0U,MAAO,CAAEjM,MAAO,qBAC1CkM,YAAY,YAGpB1N,EAAAC,EAAAC,cAAC6M,GAAA,QAAKG,KAAN,CAAWC,MAAM,WAAWC,aAAW,GAClCR,EAAkB,WAAY,CAC3BS,MAAO,CACH,CACIC,UAAU,EAAMb,QAAS,iCAHpCG,CAOG5M,EAAAC,EAAAC,cAACqN,GAAA,QAAMI,SAAP,CACAH,OAAQxN,EAAAC,EAAAC,cAAC5J,EAAA,QAAD,CAAMyC,KAAK,OAAO0U,MAAO,CAAEjM,MAAO,qBAC1CkM,YAAY,eAKpB1N,EAAAC,EAAAC,cAAC6M,GAAA,QAAKG,KAAN,KACIlN,EAAAC,EAAAC,cAAC0N,GAAA,QAAD,CAAQ7U,KAAK,UAAU8U,SAAS,SAASC,OAAK,GAA9C,mBAjFZC,IAAMC,WA4FpBC,GAAYC,WAAKC,OAAO,CAAExT,KAAM,SAApBuT,CAA+BvC,IAMlCyC,eAJS,SAAAzS,GAAK,MAAK,CAC9Ba,KAAOb,EAAMa,OAGsB,CACnCmN,SACAG,WAFWsE,CAGZH,mCCpGYI,OAVf,SAAwBhD,GACpB,OACIrL,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKI,UAAU,sBACXN,EAAAC,EAAAC,cAAA,OAAKqD,IAAKyH,KAAMvH,IAAI,eAAenD,UAAU,YCmB7D,IAIe8N,eAJS,SAAAzS,GAAK,MAAK,CAChCa,KAAOb,EAAMa,OAGwB,GAAxB4R,CAtBf,SAAkB/C,GAChB,OAAGhD,GAAKC,gBAAwC,cAAtBD,GAAKC,eAEtBtI,EAAAC,EAAAC,cAAC2M,EAAA,EAAD,CAAUC,GAAG,eAKlB9M,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKI,UAAU,YACbN,EAAAC,EAAAC,cAACoO,GAAD,MACAtO,EAAAC,EAAAC,cAACqO,GAAD,0GChBCC,GAA0B,SAACC,EAAGC,EAAGC,GAAP,OAAa,SAAA9E,GACxC,iBAAL8E,EACC3G,GAAU,CACNsB,IAAG,GAAA1M,OAAMmH,GAAKO,2BAAX,KAAA1H,OAAyC8R,KAC7CnC,KAAK,SAACC,GAEL,IAAGA,EAASjD,KAAKa,QAcb,OAAOL,GAAM,UAAU,WAAWyC,EAASjD,KAAKkD,SAbhD5C,EAAS,CACL9Q,KAAO,6BACPoD,UAAW,EACXC,SAAWsS,EACXrS,SAAW,eACXC,SAASP,OAAAC,EAAA,EAAAD,CAAA,GACFyQ,EAASjD,KAAKA,KAAK,GADlB,CAEJ1O,QAAS2R,EAASjD,KAAKA,KAAK,GAAG1O,QAAQ+T,MAAM,GAC7CpB,OAAOhB,EAASjD,KAAKA,KAAK,GAAG1O,QAAQ+T,MAAM,EAAE,SAO1DjC,MAAM,SAACrC,GACN,OAAOP,GAAM,QAAQ,SAAS,kBAIlCF,EAAS,CACL9Q,KAAO,6BACPoD,SAAWsS,EACXrS,SAAWsS,EACXrS,SAAWsS,EACXrS,SAAU,CACN3B,KAAO,KACPC,QAAQ,KACRC,QAAS,KACT2S,OAAO,KACPhE,SAAS,KACTqF,gBAAkB,UAsBrBC,GAAyB,kBAAK,SAAAjF,GACvCA,EAAS,CACL9Q,KAAO,sCACPoD,UAAW,EACXC,SAAW,KAEf4L,GAAU,CACNsB,IAAG,GAAA1M,OAAMmH,GAAKM,mBACfkI,KAAK,SAACC,GAEFA,EAASjD,KAAKa,QACbP,EAAS,CACL9Q,KAAO,sCACPoD,UAAW,EACXC,SAAWoQ,EAASjD,KAAKA,QAI7BQ,GAAM,QAAQ,SAASyC,EAASjD,KAAKkD,SACrC5C,EAAS,CACL9Q,KAAO,sCACPoD,UAAW,EACXC,SAAW,QAGlBuQ,MAAM,SAACrC,GACRP,GAAM,QAAQ,SAAS,gBACvBF,EAAS,CACL9Q,KAAO,sCACPoD,UAAW,EACXC,SAAW,SAKV2S,GAA0B,SAACN,EAAGC,EAAGC,GAAP,OAAa,SAAA9E,GACxC,iBAAL8E,EACC3G,GAAU,CACNsB,IAAG,GAAA1M,OAAMmH,GAAKW,2BAAX,KAAA9H,OAAyC8R,KAC7CnC,KAAK,SAACC,GACL,IAAGA,EAASjD,KAAKa,QAUb,OAAOL,GAAM,UAAU,WAAWyC,EAASjD,KAAKkD,SAThD5C,EAAS,CACL9Q,KAAO,6BACPoD,UAAW,EACXC,SAAWsS,EACXrS,SAAW,eACXC,SAAUkQ,EAASjD,KAAKA,KAAK,OAMtCoD,MAAM,SAACrC,GACN,OAAOP,GAAM,QAAQ,SAAS,kBAIlCF,EAAS,CACL9Q,KAAO,6BACPoD,SAAWsS,EACXrS,SAAWsS,EACXrS,SAAWsS,EACXrS,SAAU,CACN0S,MAAQ,UAsBXC,GAAyB,SAACC,GAAD,OAAM,SAAArF,GAExCA,EAAS,CACN9Q,KAAO,sCACPoD,UAAW,EACXC,SAAU,KAEb4L,GAAU,CACNsB,IAAG,GAAA1M,OAAMmH,GAAKU,oBACf8H,KAAK,SAACC,GAEFA,EAASjD,KAAKa,QACbP,EAAS,CACL9Q,KAAO,sCACPoD,UAAW,EACXC,SAAWoQ,EAASjD,KAAKA,QAI7BQ,GAAM,QAAQ,SAASyC,EAASjD,KAAKkD,SACrC5C,EAAS,CACL9Q,KAAO,sCACPoD,UAAW,EACXC,SAAW,QAGlBuQ,MAAM,SAACrC,GACRP,GAAM,QAAQ,SAAS,gBACvBF,EAAS,CACL9Q,KAAO,sCACPoD,UAAW,EACXC,SAAW,2DC7Jf+S,GAAWC,WAAXD,OACAE,GAAaC,WAAbD,SAEFE,gNACF5T,MAAQ,CACJ6T,QAAS5D,EAAKP,MAAMpP,MAAMtG,eAAe8Z,OACzCjM,KAAM,KACNkM,gBAAe,KAGnBC,OAAS,WACL/D,EAAKc,SAAS,CACV8C,SAAU5D,EAAKjQ,MAAM6T,aAI7BI,uBAAyB,SAACC,EAAMC,EAAOC,GACnC,IAAM9E,EAAOW,EAAKP,MAAMJ,KACpB6E,GAASA,IAAU7E,EAAK+E,cAAc,YACtCD,EAAS,4BAETA,OAIRE,uBAAyB,SAACJ,EAAMC,EAAOC,GACnC,IAAM9E,EAAOW,EAAKP,MAAMJ,KACpB6E,GAASlE,EAAKP,MAAMpP,MAAM7G,qBAC1B6V,EAAKkB,eAAe,CAAC,WAAY,CAAE+D,OAAO,IAE9CH,OAGJI,aAAe,SAACC,GACZxE,EAAKc,SAAS,SAAC2D,EAAGC,GACd,MAAO,CACH9M,KAAM4M,EAAE7Z,KAAF,GAAAqG,OAAWwT,EAAE7Z,MAAO,KAC1BmZ,gBAAe,QAK3Ba,IAAI,WACA3E,EAAKc,SAAS,CACVgD,gBAAe,OAIvB1D,aAAe,SAAAC,GACXA,EAAEC,iBAEFN,EAAKP,MAAMJ,KAAKuF,wBAAwB,SAACpE,EAAKC,GACrCD,GAED7D,GAAW,CACPe,IAAG,GAAA1M,OAAKmH,GAAKQ,gBACbgF,KAAM,CACFkH,IAAK7E,EAAKP,MAAMpP,MAAM3G,UACtBqF,KAAM0R,EAAO1R,KACb6O,SAAU6C,EAAO7C,SACjB5O,QAASyR,EAAOzR,QAChBC,QAASwR,EAAOmB,OAASnB,EAAOxR,QAChC4U,OAAQ7D,EAAKjQ,MAAM6T,QACnBkB,aAAcrE,EAAOqE,aACrB5F,OAAQc,EAAKjQ,MAAM6H,KACnBmN,IAAKtE,EAAOsE,OAGnBpE,KAAK,SAACC,GACH,IAAIA,EAASjD,KAAKa,QAQd,OADAwB,EAAKP,MAAMmD,yBAAwB,EAAO,KAAM,YACzCzE,GAAM,UAAW,WAAYyC,EAASjD,KAAKkD,SAPlDb,EAAKP,MAAMmD,yBAAwB,EAAO,KAAM,YAChDzE,GAAM,UAAW,UAAWyC,EAASjD,KAAKkD,SAC1Cb,EAAKP,MAAMyD,2BAOhBnC,MAAM,SAACrC,GAEN,OADAsB,EAAKP,MAAMmD,yBAAwB,EAAO,KAAM,YACzCzE,GAAM,QAAS,SAAU,8FAMvC,IACG6C,EAAsBhE,KAAKyC,MAAMJ,KAAjC2B,kBAEFgE,EAAiBhE,EAAkB,SAAU,CAC/CiE,aAAcjI,KAAKyC,MAAMpP,MAAMtG,eAAe6X,QAAU,MACxDH,MAAO,CAAC,CAAEC,UAAU,EAAMb,QAAS,oCAFhBG,CAInB5M,EAAAC,EAAAC,cAAC4Q,GAAA,QAAD,CAAQrD,MAAO,CAAEvC,MAAO,KACtBlL,EAAAC,EAAAC,cAAC6Q,GAAD,CAAQjB,MAAM,OAAd,SAIFkB,EAAqB,CACrBrW,KAAM,OACNuB,OAAM,GAAAU,OAAKmH,GAAKE,MAAVrH,OAAiBmH,GAAKiB,YAAtB,WAAApI,OAA2CyL,GAAKC,gBACtD2I,SAAU,WAGd,OACIjR,EAAAC,EAAAC,cAAA,OAAKI,UAAU,yBACXN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,8BACXN,EAAAC,EAAAC,cAAC6M,GAAA,QAAD,CAAOC,SAAUpE,KAAKoD,aAAciB,aAAa,OAC7CjN,EAAAC,EAAAC,cAAC6M,GAAA,QAAKG,KAAN,CAAWC,MAAM,OAAOC,aAAW,EAAC9M,UAAU,uBACzCsM,EAAkB,OAAQ,CACvBiE,aAAejI,KAAKyC,MAAMpP,MAAMtG,eAAegF,KAC/C0S,MAAO,CAAC,CAAEC,UAAU,EAAMb,QAAS,0BAA2ByE,YAAY,KAF7EtE,CAGE5M,EAAAC,EAAAC,cAACqN,GAAA,QAAD,QAGJ3E,KAAKyC,MAAMpP,MAAM3G,UAcL,KAdiB0K,EAAAC,EAAAC,cAAC6M,GAAA,QAAKG,KAAN,CAAWC,MAAM,SAASC,aAAW,EAAC9M,UAAU,uBAC3EsM,EAAkB,UAAW,CAC1BiE,aAAejI,KAAKyC,MAAMpP,MAAMtG,eAAeiF,QAC/CyS,MAAO,CACH,CACItU,KAAM,QACN0T,QAAS,kCAEb,CACIa,UAAU,EACVb,QAAS,+BATpBG,CAYE5M,EAAAC,EAAAC,cAACqN,GAAA,QAAD,QAGPvN,EAAAC,EAAAC,cAAC6M,GAAA,QAAKG,KAAN,CAAWC,MAAM,eAAe7M,UAAU,uBACrCsM,EAAkB,UAAW,CAC1BiE,aAAejI,KAAKyC,MAAMpP,MAAMtG,eAAekF,QAC/CwS,MAAO,CACH,CACIC,UAAU,EACVb,QAAS,mCAEb,CACI0E,IAAI,GACJ1E,QAAQ,0CATnBG,CAWE5M,EAAAC,EAAAC,cAACqN,GAAA,QAAD,CAAO6D,YAAaR,EAAgBS,IAAK,GAAIC,IAAK,OAGtD1I,KAAKyC,MAAMpP,MAAM3G,UA6BX,KA7BuB0K,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAC6M,GAAA,QAAKG,KAAN,CAAWC,MAAM,WAAWC,aAAW,EAAC9M,UAAU,uBAC9EsM,EAAkB,WAAY,CAC3BiE,aAAejI,KAAKyC,MAAMpP,MAAMtG,eAAe6T,SAC/C6D,MAAO,CACH,CACIC,UAAU,EACVb,QAAS,+BAEb,CACI8E,UAAW3I,KAAKqH,0BAR3BrD,CAWE5M,EAAAC,EAAAC,cAACqN,GAAA,QAAMI,SAAP,QAGP3N,EAAAC,EAAAC,cAAC6M,GAAA,QAAKG,KAAN,CAAWC,MAAM,mBAAmBC,aAAW,EAAC9M,UAAU,uBACrDsM,EAAkB,UAAW,CAC1BiE,aAAejI,KAAKyC,MAAMpP,MAAMtG,eAAekZ,gBAC/CxB,MAAO,CACP,CACIC,UAAU,EACVb,QAAS,iCAEb,CACI8E,UAAW3I,KAAKgH,0BARvBhD,CAWE5M,EAAAC,EAAAC,cAACqN,GAAA,QAAMI,SAAP,CAAgB6D,OAAQ5I,KAAK6I,uBAIxCzR,EAAAC,EAAAC,cAAC6M,GAAA,QAAKG,KAAN,CAAWC,MAAM,SAAS7M,UAAU,uBAC/BsM,EAAkB,SAAlBA,CACG5M,EAAAC,EAAAC,cAACwR,GAAA,QAAD,CACIC,gBAAiB3R,EAAAC,EAAAC,cAAC5J,EAAA,QAAD,CAAMyC,KAAK,UAC5B6Y,kBAAmB5R,EAAAC,EAAAC,cAAC5J,EAAA,QAAD,CAAMyC,KAAK,UAC9ByW,QAAS5G,KAAKjN,MAAM6T,QACpBqC,SAAUjJ,KAAK+G,WAM3B3P,EAAAC,EAAAC,cAAC6M,GAAA,QAAKG,KAAN,CAAWC,MAAM,oBAAoBC,aAAW,EAAC9M,UAAU,uBACtDsM,EAAkB,eAAgB,CAC/BiE,aAAejI,KAAKyC,MAAMpP,MAAMtG,eAAe+a,aAC/CrD,MAAO,CAAC,CAAEC,UAAU,EAAMb,QAAS,kCAAmCyE,YAAY,KAFrFtE,CAGE5M,EAAAC,EAAAC,cAACqN,GAAA,QAAD,QAGPvN,EAAAC,EAAAC,cAAC6M,GAAA,QAAKG,KAAN,CAAWC,MAAM,gCAAgC7M,UAAU,sBAAsB8M,aAAW,GACvFR,EAAkB,MAAO,CACtBiE,aAAejI,KAAKyC,MAAMpP,MAAMtG,eAAegb,IAC/CtD,MAAO,CAAC,CAAEC,UAAU,EAAMb,QAAS,4CAFtCG,CAIG5M,EAAAC,EAAAC,cAAC4R,GAAD,CAAUC,KAAM,MAIxB/R,EAAAC,EAAAC,cAAC6M,GAAA,QAAKG,KAAN,CAAWC,MAAM,oBAAoB7M,UAAU,uBAC3CN,EAAAC,EAAAC,cAAC8R,GAAA,EAADjW,OAAAkW,OAAA,GACQjB,EADR,CAEIkB,aAActJ,KAAK2H,IACnB4B,SAAUvJ,KAAKuH,aACfiC,UAAWxJ,KAAKuH,eAEhBnQ,EAAAC,EAAAC,cAAC0N,GAAA,QAAD,KACI5N,EAAAC,EAAAC,cAAC5J,EAAA,QAAD,CAAMyC,KAAK,WADf,aAMRiH,EAAAC,EAAAC,cAAC6M,GAAA,QAAKG,KAAN,KACIlN,EAAAC,EAAAC,cAAC0N,GAAA,QAAD,CAAQ7U,KAAK,UAAU8U,SAAS,SAASC,OAAK,GACzClF,KAAKyC,MAAMpP,MAAM5G,wBA1NzB2Y,aAwOnBqE,GAAiBnE,WAAKC,OAAO,CAAExT,KAAM,YAApBuT,CAAkCqB,IAE1CnB,eANS,SAAAzS,GAAK,MAAK,CAC9BM,MAAQN,EAAMM,QAKqB,CACnCqW,0BDpNqC,SAACpD,GAAD,OAAM,SAAArF,GAC3CA,EAAS,CACN9Q,KAAO,mCACPwD,QAAU2S,MCkNbV,2BACAM,2BAHWV,CAIZiE,ICxPGE,eAEJ,SAAAA,EAAYlH,GAAM,IAAAO,EAAA,OAAA7P,OAAA4M,EAAA,EAAA5M,CAAA6M,KAAA2J,IAChB3G,EAAA7P,OAAA8P,GAAA,EAAA9P,CAAA6M,KAAA7M,OAAA+P,GAAA,EAAA/P,CAAAwW,GAAAxG,KAAAnD,KAAMyC,KAMRmH,UAAY,SAACnZ,EAAGxB,GACd+T,EAAKP,MAAMmD,yBAAwB,EAAKnV,EAAGxB,IAR3B+T,EAWlB6G,WAAa,WACX7G,EAAKP,MAAMmD,yBAAwB,EAAM,KAAK,aAZ9B5C,EAmBlB8G,cAAgB,SAACrZ,GACfkP,GAAW,CACTe,IAAG,GAAA1M,OAAMmH,GAAKS,gBACd+E,KAAO,CACHkH,IAAMpX,KAETkT,KAAK,SAACC,GACP,IAAGA,EAASjD,KAAKa,QAKf,OAAOL,GAAM,UAAU,WAAWyC,EAASjD,KAAKkD,SAJhD1C,GAAM,UAAU,UAAUyC,EAASjD,KAAKkD,SACxCb,EAAKP,MAAMyD,2BAKZnC,MAAM,SAACrC,GACR,OAAOP,GAAM,QAAQ,SAAS,mBAlChB6B,EAsChB+G,qBAAuB,SAAAC,GAAS,MAAK,CACjCC,eAAgB,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,gBAAiBC,EAApBF,EAAoBE,aAAcC,EAAlCH,EAAkCG,QAASC,EAA3CJ,EAA2CI,aAA3C,OACdlT,EAAAC,EAAAC,cAAA,OAAKuN,MAAO,CAAEzO,QAAS,IACrBgB,EAAAC,EAAAC,cAACqN,GAAA,QAAD,CACE4F,IAAK,SAAAC,GACHxH,EAAKyH,YAAcD,GAErB1F,YAAW,UAAA9Q,OAAYgW,GACvB9C,MAAOkD,EAAa,GACpBnB,SAAU,SAAA5F,GAAC,OAAI8G,EAAgB9G,EAAEqH,OAAOxD,MAAQ,CAAC7D,EAAEqH,OAAOxD,OAAS,KACnEyD,aAAc,kBAAM3H,EAAK4H,aAAaR,EAAcC,IACpDxF,MAAO,CAAEvC,MAAO,IAAKxI,aAAc,EAAGrM,QAAS,WAEjD2J,EAAAC,EAAAC,cAAC0N,GAAA,QAAD,CACE7U,KAAK,UACL0a,QAAS,kBAAM7H,EAAK4H,aAAaR,EAAcC,IAC/C3c,KAAK,SACLod,KAAK,QACLjG,MAAO,CAAEvC,MAAO,GAAIzM,YAAa,IALnC,UASAuB,EAAAC,EAAAC,cAAC0N,GAAA,QAAD,CAAQ6F,QAAS,kBAAM7H,EAAK+H,YAAYT,IAAeQ,KAAK,QAAQjG,MAAO,CAAEvC,MAAO,KAApF,WAKJ0I,WAAY,SAAAC,GAAQ,OAClB7T,EAAAC,EAAAC,cAAC5J,EAAA,QAAD,CAAMyC,KAAK,SAAS0U,MAAO,CAAEjM,MAAOqS,EAAW,eAAY/X,MAE7DgY,SAAU,SAAChE,EAAOiE,GAAR,OACRA,EAAOnB,GACJoB,WACAC,cACAC,SAASpE,EAAMmE,gBACpBE,8BAA+B,SAAAC,GACzBA,GACFC,WAAW,kBAAMzI,EAAKyH,YAAYiB,YAGtCC,OAAQ,SAAAC,GAAI,OACVxU,EAAAC,EAAAC,cAACuU,GAAAxU,EAAD,CACEyU,eAAgB,CAAE9V,gBAAiB,UAAWI,QAAS,GACvD2V,YAAa,CAAC/I,EAAKP,MAAMpP,MAAM1G,mBAC/Bqf,YAAU,EACVC,gBAAiBL,EAAKR,gBAnFdpI,EAwFd4H,aAAe,SAACR,EAAcC,GAC5BA,IACArH,EAAKP,MAAMyJ,wBAAwB9B,EAAa,KA1FpCpH,EA6Fd+H,YAAc,SAAAT,GACZA,IACAtH,EAAKP,MAAMyJ,wBAAwB,KA7FvClJ,EAAKjQ,MAAM,CACToZ,qBAAsB,GAHRnJ,oFAgBhBhD,KAAKyC,MAAMyD,0DAkFF,IAAAkG,EAAApM,KACCqM,EAAU9T,KAAV8T,MACFC,EAAU,CAACnZ,OAAAC,EAAA,EAAAD,CAAA,CAEbtD,MAAO,OACPma,UAAW,OACX/R,IAAK,OACLqK,MAAO,OACJtC,KAAK+J,qBAAqB,SANjB5W,OAAAC,EAAA,EAAAD,CAAA,CASZtD,MAAO,WACPma,UAAW,UACX/R,IAAK,UACLqK,MAAO,OACJtC,KAAK+J,qBAAqB,YAbjB5W,OAAAC,EAAA,EAAAD,CAAA,CAgBZtD,MAAO,iBACPma,UAAW,UACX/R,IAAK,WACF+H,KAAK+J,qBAAqB,YAE/B,CACEla,MAAO,SACPoI,IAAK,MACL+R,UAAW,MACX2B,OAAQ,SAAC1T,GAAD,OACNb,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAC0N,GAAA,QAAD,CAAQ7U,KAAK,UAAUoc,MAAM,SAAS7e,KAAK,OAAOmd,QAAS,kBAAIuB,EAAKxC,UAAU3R,EAAI,mBAChFb,EAAAC,EAAAC,cAAC2C,GAAA,EAAD,CAAS9J,KAAK,aACdiH,EAAAC,EAAAC,cAACkV,GAAA,EAAD,CACE3c,MAAM,qBACN4c,WAAW,KACXC,OAAO,MACPC,UAAW,WAAKP,EAAKtC,cAAc7R,IACnCvK,KAAM0J,EAAAC,EAAAC,cAAC5J,EAAA,QAAD,CAAMyC,KAAK,SAAS0U,MAAO,CAAEjM,MAAO,UAE1CxB,EAAAC,EAAAC,cAAC0N,GAAA,QAAD,CAAQ7U,KAAK,SAASoc,MAAM,SAAS7e,KAAK,gBAOpD,OACI0J,EAAAC,EAAAC,cAAA,OAAKI,UAAU,yBACbN,EAAAC,EAAAC,cAAC0N,GAAA,QAAD,CAAQ7U,KAAK,UAAUzC,KAAK,WAAWmX,MAAO,CAAC/K,aAAa,QAAS+Q,QAAS,kBAAIuB,EAAKxC,UAAU,KAAK,cAAtG,WAGAxS,EAAAC,EAAAC,cAAA,OAAKI,UAAU,gCACbN,EAAAC,EAAAC,cAAC+U,EAAD,CAAOO,MAAO,EAAG/H,MAAO,CAACjM,MAAM,OAAOiU,UAAU,WAAhD,oBAEFzV,EAAAC,EAAAC,cAACwV,GAAA,EAAD,CACEC,UAAU,EACVT,QAASA,EACTU,WAAYhN,KAAKyC,MAAMpP,MAAMvG,iBAC7Bge,KAAK,SACLmC,WAAY,CAAEC,SAAU,GACxBC,QAASnN,KAAKyC,MAAMpP,MAAMzG,0BAC1BwgB,OAAO,QAdX,IAgBEhW,EAAAC,EAAAC,cAAC+V,GAAA,EAAD,CACE7B,QAASxL,KAAKyC,MAAMpP,MAAM9G,mBAC1BsD,OAAO,EACPyd,KAAMtN,KAAKuN,SACXC,SAAUxN,KAAK6J,WACfhF,MAAO,CAAC4I,IAAK,OAAOrX,QAAQ,MAAMJ,gBAAgB,oBAClDsM,MAAM,MACNoL,gBAAgB,EAChB1W,OAAQ,IAIRI,EAAAC,EAAAC,cAACqW,GAAD,eA9KSvI,aAyLVI,eAJS,SAAAzS,GAAK,MAAK,CAC9BM,MAAQN,EAAMM,QAGqB,CACnC6Y,wBFjJmC,SAAC5F,GAAD,OAAM,SAAArF,GACzCA,EAAS,CACN9Q,KAAO,6BACPwD,QAAU2S,ME+IbJ,0BACAN,4BAHWJ,CAIZmE,IC5LGiE,iOAEFxK,aAAe,SAAAC,GACXA,EAAEC,iBACFN,EAAKP,MAAMJ,KAAKuF,wBAAwB,SAACpE,EAAKC,GACrCD,GAED7D,GAAW,CACPe,IAAG,GAAA1M,OAAKmH,GAAKY,gBACb4E,KAAM,CACFkH,IAAK7E,EAAKP,MAAMpP,MAAMjG,UACtBgZ,MAAO3C,EAAO2C,SAEnBzC,KAAK,SAACC,GACL,IAAIA,EAASjD,KAAKa,QAOd,OADAwB,EAAKP,MAAM0D,yBAAwB,EAAO,KAAM,aACzChF,GAAM,UAAW,WAAYyC,EAASjD,KAAKkD,SANlDb,EAAKP,MAAM0D,yBAAwB,EAAO,KAAM,aAChDhF,GAAM,UAAW,UAAWyC,EAASjD,KAAKkD,SAC1Cb,EAAKP,MAAM4D,2BAMhBtC,MAAM,SAACrC,GAEN,OADAsB,EAAKP,MAAM0D,yBAAwB,EAAO,KAAM,aACzChF,GAAM,QAAS,SAAU,8FAMvC,IACG6C,EAAsBhE,KAAKyC,MAAMJ,KAAjC2B,kBACR,OACI5M,EAAAC,EAAAC,cAAA,OAAKI,UAAU,yBACXN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,8BACXN,EAAAC,EAAAC,cAAC6M,GAAA,QAAD,CAAOC,SAAUpE,KAAKoD,cAClBhM,EAAAC,EAAAC,cAAC6M,GAAA,QAAKG,KAAN,CAAWC,MAAM,aAAaC,aAAW,EAAC9M,UAAU,uBAC/CsM,EAAkB,QAAS,CACxBiE,aAAejI,KAAKyC,MAAMpP,MAAM9F,eAAe6Y,MAC/C3B,MAAO,CAAC,CAAEC,UAAU,EAAMb,QAAS,2BAA4ByE,YAAY,KAF9EtE,CAGE5M,EAAAC,EAAAC,cAACqN,GAAA,QAAD,QAGPvN,EAAAC,EAAAC,cAAC6M,GAAA,QAAKG,KAAN,KACIlN,EAAAC,EAAAC,cAAC0N,GAAA,QAAD,CAAQ7U,KAAK,UAAU8U,SAAS,SAASC,OAAK,GACzClF,KAAKyC,MAAMpP,MAAMlG,wBA9C1BiY,cA4DlByI,GAAiBvI,WAAKC,OAAO,CAAExT,KAAM,YAApBuT,CAAkCsI,IAE1CpI,eANS,SAAAzS,GAAK,MAAK,CAC9BM,MAAQN,EAAMM,QAKqB,CACnCya,0BHsDqC,SAACxH,GAAD,OAAM,SAAArF,GAC3CA,EAAS,CACN9Q,KAAO,mCACPwD,QAAU2S,MGxDbD,0BACAF,4BAHWX,CAIZqI,ICrEGE,gNAEJnE,UAAY,SAACnZ,EAAGxB,GACd+T,EAAKP,MAAM0D,yBAAwB,EAAK1V,EAAGxB,MAG7C4a,WAAa,WACX7G,EAAKP,MAAM0D,yBAAwB,EAAM,KAAK,gBAO9C4D,qBAAuB,SAAAC,GAAS,MAAK,CACjCC,eAAgB,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,gBAAiBC,EAApBF,EAAoBE,aAAcC,EAAlCH,EAAkCG,QAASC,EAA3CJ,EAA2CI,aAA3C,OACdlT,EAAAC,EAAAC,cAAA,OAAKuN,MAAO,CAAEzO,QAAS,IACrBgB,EAAAC,EAAAC,cAACqN,GAAA,QAAD,CACE4F,IAAK,SAAAC,GACHxH,EAAKyH,YAAcD,GAErB1F,YAAW,UAAA9Q,OAAYgW,GACvB9C,MAAOkD,EAAa,GACpBnB,SAAU,SAAA5F,GAAC,OAAI8G,EAAgB9G,EAAEqH,OAAOxD,MAAQ,CAAC7D,EAAEqH,OAAOxD,OAAS,KACnEyD,aAAc,kBAAM3H,EAAK4H,aAAaR,EAAcC,IACpDxF,MAAO,CAAEvC,MAAO,IAAKxI,aAAc,EAAGrM,QAAS,WAEjD2J,EAAAC,EAAAC,cAAC0N,GAAA,QAAD,CACE7U,KAAK,UACL0a,QAAS,kBAAM7H,EAAK4H,aAAaR,EAAcC,IAC/C3c,KAAK,SACLod,KAAK,QACLjG,MAAO,CAAEvC,MAAO,GAAIzM,YAAa,IALnC,UASAuB,EAAAC,EAAAC,cAAC0N,GAAA,QAAD,CAAQ6F,QAAS,kBAAM7H,EAAK+H,YAAYT,IAAeQ,KAAK,QAAQjG,MAAO,CAAEvC,MAAO,KAApF,WAKJ0I,WAAY,SAAAC,GAAQ,OAClB7T,EAAAC,EAAAC,cAAC5J,EAAA,QAAD,CAAMyC,KAAK,SAAS0U,MAAO,CAAEjM,MAAOqS,EAAW,eAAY/X,MAE7DgY,SAAU,SAAChE,EAAOiE,GAAR,OACRA,EAAOnB,GACJoB,WACAC,cACAC,SAASpE,EAAMmE,gBACpBE,8BAA+B,SAAAC,GACzBA,GACFC,WAAW,kBAAMzI,EAAKyH,YAAYiB,YAGtCC,OAAQ,SAAAC,GAAI,OACVxU,EAAAC,EAAAC,cAACuU,GAAAxU,EAAD,CACEyU,eAAgB,CAAE9V,gBAAiB,UAAWI,QAAS,GACvD2V,YAAa,CAAC/I,EAAKP,MAAMpP,MAAMhG,mBAC/B2e,YAAU,EACVC,gBAAiBL,EAAKR,kBAK5BR,aAAe,SAACR,EAAcC,GAC5BA,IACArH,EAAKP,MAAMuL,wBAAwB5D,EAAa,OAGlDW,YAAc,SAAAT,GACZA,IACAtH,EAAKP,MAAMuL,wBAAwB,yFA5DvChO,KAAKyC,MAAM4D,0DA+DF,IAAA+F,EAAApM,KACCqM,EAAU9T,KAAV8T,MACFC,EAAU,CAACnZ,OAAAC,EAAA,EAAAD,CAAA,CAEbtD,MAAO,OACPma,UAAW,QACX/R,IAAK,QACLqK,MAAO,OACJtC,KAAK+J,qBAAqB,UAE/B,CACEla,MAAO,SACPoI,IAAK,MACL+R,UAAW,MACX2B,OAAQ,SAAC1T,GAAD,OACNb,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAC0N,GAAA,QAAD,CAAQ7U,KAAK,UAAUoc,MAAM,SAAS7e,KAAK,OAAOmd,QAAS,kBAAIuB,EAAKxC,UAAU3R,EAAI,uBAKxF,OACIb,EAAAC,EAAAC,cAAA,OAAKI,UAAU,yBACbN,EAAAC,EAAAC,cAAC0N,GAAA,QAAD,CAAQ7U,KAAK,UAAUzC,KAAK,YAAYmX,MAAO,CAAC/K,aAAa,QAAS+Q,QAAS,kBAAIuB,EAAKxC,UAAU,KAAK,eAAvG,WAGAxS,EAAAC,EAAAC,cAAA,OAAKI,UAAU,gCACbN,EAAAC,EAAAC,cAAC+U,EAAD,CAAOO,MAAO,EAAG/H,MAAO,CAACjM,MAAM,OAAOiU,UAAU,WAAhD,uBAEFzV,EAAAC,EAAAC,cAACwV,GAAA,EAAD,CACEC,UAAU,EACVT,QAASA,EACTU,WAAYhN,KAAKyC,MAAMpP,MAAMrG,iBAC7B8d,KAAK,SACLmC,WAAY,CAAEC,SAAU,GACxBC,QAASnN,KAAKyC,MAAMpP,MAAM/F,oBAC1B8f,OAAO,QAdX,IAgBEhW,EAAAC,EAAAC,cAAC+V,GAAA,EAAD,CACE7B,QAASxL,KAAKyC,MAAMpP,MAAMpG,mBAC1B4C,OAAO,EACPyd,KAAMtN,KAAKuN,SACXC,SAAUxN,KAAK6J,WACfhF,MAAO,CAAC4I,IAAK,OAAOrX,QAAQ,MAAMJ,gBAAgB,oBAClD0X,gBAAgB,EAChB1W,OAAQ,IAIRI,EAAAC,EAAAC,cAAC2W,GAAD,eA3HQ7I,aAsITI,eAJS,SAAAzS,GAAK,MAAK,CAC9BM,MAAQN,EAAMM,QAGqB,CACnC2a,wBJPmC,SAAC1H,GAAD,OAAM,SAAArF,GACzCA,EAAS,CACN9Q,KAAO,6BACPwD,QAAU2S,MIKbD,0BACAF,4BAHWX,CAIZuI,uBCpJUG,GAA2B,SAACrI,GAAD,OAAQ,SAAA5E,GAC5CA,EAAS,CACL9Q,KAAO,8BACPoD,SAAWsS,MAmBNsI,GAA0B,SAAC7H,GAAD,OAAO,SAAArF,GAC1CA,EAAS,CACL9Q,KAAM,uCACNoD,UAAU,EACVC,SAAU,KAGdmM,GAAW,CACPe,IAAG,GAAA1M,OAAKmH,GAAKa,mBACb2E,KAAM,CACFyN,QAAS9H,KAGhB3C,KAAK,SAACC,GACCA,EAASjD,KAAKa,QACdP,EAAS,CACL9Q,KAAM,uCACNoD,UAAU,EACVC,SAAUoQ,EAASjD,KAAKA,QAI5BQ,GAAM,QAAS,SAAUyC,EAASjD,KAAKkD,SACvC5C,EAAS,CACL9Q,KAAM,uCACNoD,UAAU,EACVC,SAAU,QAIrBuQ,MAAM,SAACrC,GACJP,GAAM,QAAS,SAAU,gBACzBF,EAAS,CACL9Q,KAAM,uCACNoD,UAAU,EACVC,SAAU,SAqFT6a,GAAmB,kBAAM,SAAApN,GAClCtB,GAAW,CACPe,IAAKvF,GAAK6D,aAEb2E,KAAK,SAACC,GACAA,EAASjD,KAAKa,SACbP,EAAS,CACL9Q,KAAM,qBACNwD,QAASiQ,EAASjD,KAAKA,SAIlCoD,MAAM,SAACrC,GACJ,OAAOP,GAAM,QAAQ,SAAS,2DCnIhCmN,eACF,SAAAA,EAAY7L,GAAM,IAAAO,EAAA,OAAA7P,OAAA4M,EAAA,EAAA5M,CAAA6M,KAAAsO,IACdtL,EAAA7P,OAAA8P,GAAA,EAAA9P,CAAA6M,KAAA7M,OAAA+P,GAAA,EAAA/P,CAAAmb,GAAAnL,KAAAnD,KAAMyC,KAkCV8L,eAAiB,SAAClL,GACdL,EAAKc,SAAS,SAAC0K,EAAcC,GACzB,MAAO,CACHjgB,4BAA2B,EAC3BkgB,gBAAgBvb,OAAAC,EAAA,EAAAD,CAAA,GACTqb,EAAcE,gBADN,CAEX3a,QAAO,GAAAC,OAAAb,OAAAc,EAAA,EAAAd,CACAqb,EAAcE,gBAAgB3a,SAD9B,CAEH,CACIG,MAAO,KACPC,KAAO,KACPC,UAAU,WA9ChB4O,EAsDlB2L,YAAc,WACVpN,KAAM8I,QAAQ,CACVxa,MAAO,UACP4R,QAAS,wCACTiL,OAAQ,eACRD,WAAY,QA3DFzJ,EAkElB4L,iBAAkB,SAACvL,EAAEwL,GACjB,IAAIC,EAAU3b,OAAAc,EAAA,EAAAd,CAAO6P,EAAKjQ,MAAM2b,gBAAgB3a,SAChD+a,EAAWD,GAAX1b,OAAAC,EAAA,EAAAD,CAAA,GACO6P,EAAKjQ,MAAM2b,gBAAgB3a,QAAQ8a,GAD1C,CAEI1a,KAAOkP,EAAEqH,OAAOxD,QAEM,cAAtB4H,EAAWD,GAAG3a,YAA6ChB,IAAtB4b,EAAWD,GAAG3a,OAA2C,OAAtB4a,EAAWD,GAAG3a,OAAsC,SAAtB4a,EAAWD,GAAG3a,OAC9F,cAArB4a,EAAWD,GAAG1a,WAA2CjB,IAArB4b,EAAWD,GAAG1a,MAAyC,SAArB2a,EAAWD,GAAG1a,MAAsC,KAArB2a,EAAWD,GAAG1a,MAAkC,OAArB2a,EAAWD,GAAG1a,OAC3I2a,EAAWD,GAAX1b,OAAAC,EAAA,EAAAD,CAAA,GACO6P,EAAKjQ,MAAM2b,gBAAgB3a,QAAQ8a,GAD1C,CAEIza,UAAW,IAEf4O,EAAKc,SAAS,SAAC2D,EAAGC,GACd,MAAO,CACHgH,gBAAgBvb,OAAAC,EAAA,EAAAD,CAAA,GACTsU,EAAGiH,gBADK,CAEX3a,QAAQ+a,QAK5B9L,EAAKc,SAAS,SAAC2D,EAAGC,GACd,MAAO,CACHgH,gBAAgBvb,OAAAC,EAAA,EAAAD,CAAA,GACTsU,EAAGiH,gBADK,CAEX3a,QAAQ+a,QA3FN9L,EAiGlB+L,mBAAqB,SAAC1L,EAAEwL,GACpB,GAAiD,KAA7C7L,EAAKjQ,MAAM2b,gBAAgB3a,QAAQ8a,GAAG1a,MAA0D,OAA7C6O,EAAKjQ,MAAM2b,gBAAgB3a,QAAQ8a,GAAG1a,MACvC,OAA9C6O,EAAKjQ,MAAM2b,gBAAgB3a,QAAQ8a,GAAG3a,OAA8D,cAA9C8O,EAAKjQ,MAAM2b,gBAAgB3a,QAAQ8a,GAAG3a,YAAqEhB,IAA9C8P,EAAKjQ,MAAM2b,gBAAgB3a,QAAQ8a,GAAG3a,MADjK,CAGI,IAAI4a,EAAU3b,OAAAc,EAAA,EAAAd,CAAO6P,EAAKjQ,MAAM2b,gBAAgB3a,SAChD+a,EAAWD,GAAX1b,OAAAC,EAAA,EAAAD,CAAA,GACO6P,EAAKjQ,MAAM2b,gBAAgB3a,QAAQ8a,GAD1C,CAEIza,SAAWiP,EAAEqH,OAAO9D,UAExB5D,EAAKc,SAAS,SAAC2D,EAAGC,GACd,MAAO,CACHgH,gBAAgBvb,OAAAC,EAAA,EAAAD,CAAA,GACTsU,EAAGiH,gBADK,CAEX3a,QAAQ+a,YAOpB9L,EAAK2L,eArHK3L,EA2HlBgM,oBAAsB,SAACxH,EAAEqH,GACrB,IAAIC,EAAU3b,OAAAc,EAAA,EAAAd,CAAO6P,EAAKjQ,MAAM2b,gBAAgB3a,SAC5CyT,EAKAsH,EAAWD,GAAX1b,OAAAC,EAAA,EAAAD,CAAA,GACO6P,EAAKjQ,MAAM2b,gBAAgB3a,QAAQ8a,GAD1C,CAEI3a,MAAK,GAAAF,OAAKmH,GAAKE,KAAV,KAAArH,OAAkBwT,EAAE7Z,gBANtBmhB,EAAWD,GAAG3a,MACrB4a,EAAWD,GAAG3a,MAAM,MAQxB8O,EAAKc,SAAS,CACVgD,gBAAe,IAEO,cAAtBgI,EAAWD,GAAG3a,YAA6ChB,IAAtB4b,EAAWD,GAAG3a,OAA2C,OAAtB4a,EAAWD,GAAG3a,OAAsC,SAAtB4a,EAAWD,GAAG3a,OAC9F,cAArB4a,EAAWD,GAAG1a,WAA2CjB,IAArB4b,EAAWD,GAAG1a,MAAyC,SAArB2a,EAAWD,GAAG1a,MAAsC,KAArB2a,EAAWD,GAAG1a,MAAkC,OAArB2a,EAAWD,GAAG1a,OAC3I2a,EAAWD,GAAX1b,OAAAC,EAAA,EAAAD,CAAA,GACO6P,EAAKjQ,MAAM2b,gBAAgB3a,QAAQ8a,GAD1C,CAEIza,UAAW,KAGvB4O,EAAKc,SAAS,SAAC2D,EAAGC,GACd,MAAO,CACHgH,gBAAgBvb,OAAAC,EAAA,EAAAD,CAAA,GACTsU,EAAGiH,gBADK,CAEX3a,QAAQ+a,QArJN9L,EA4JlBI,aAAe,SAAAC,GACXA,EAAEC,iBACFN,EAAKP,MAAMJ,KAAKuF,wBAAwB,SAACpE,EAAKC,GAE1C,IAAKD,EAAK,CACN,IAAIgE,EAAE,EACFyH,EAAI,EACJC,EAAK,GAETlM,EAAKjQ,MAAM2b,gBAAgB3a,QAAQob,QAAQ,SAACC,EAAQP,GAChDK,EAAKG,KAAK,CACNC,QAAQF,EAAQjb,KAChBob,OAAOH,EAAQlb,MACfE,SAASgb,EAAQhb,WAED,cAAhBgb,EAAQlb,YAAuChB,IAAhBkc,EAAQlb,OAAqC,OAAhBkb,EAAQlb,OAAgC,SAAhBkb,EAAQlb,OAAiC,KAAfkb,EAAQjb,MAA2B,OAAfib,EAAQjb,MAA8B,SAAfib,EAAQjb,MAAgC,cAAfib,EAAQjb,WAAqCjB,IAAfkc,EAAQjb,OACxNqT,EAAE,GAEH4H,EAAQhb,WACP6a,GAAQ,KAGbzH,EACKyH,GAIAjM,EAAKc,SAAS,CACV0L,QAAO,IAEX7P,GAAW,CACPe,IAAIvF,GAAKgB,iBACTwE,KAAK,CACDxM,KAAKsP,EAAOgM,aACZ1b,QAAQmb,EACRQ,QAAQ1M,EAAKjQ,MAAM2b,gBAAgBiB,cACnCvB,QAAQ3K,EAAO2K,QACfwB,YAAYnM,EAAOmM,YACnBC,UAAUpM,EAAOqM,WAEtBnM,KAAK,SAACC,GAKL,GAHAZ,EAAKc,SAAS,CACV0L,QAAO,KAER5L,EAASjD,KAAKa,QAQb,OAFAwB,EAAKP,MAAMyL,0BAAyB,GACpClL,EAAKP,MAAMJ,KAAK0N,cACT5O,GAAM,UAAU,WAAWyC,EAASjD,KAAKkD,SAPhDb,EAAKP,MAAMyL,0BAAyB,GACpC/M,GAAM,UAAU,UAAUyC,EAASjD,KAAKkD,SACxCb,EAAKP,MAAM0L,wBAAwBnL,EAAKP,MAAM3O,QAAQxF,oBAQ3DyV,MAAM,SAACrC,GAgCN,OA9BAsB,EAAKP,MAAMJ,KAAK0N,cAChB/M,EAAKc,SAAS,CACV0L,QAAO,EACPd,gBAAgB,CACZiB,cAAc,KACd5b,QAAS,CACL,CACIG,MAAO,KACPC,KAAO,KACPC,UAAU,GAEd,CACIF,MAAO,KACPC,KAAO,KACPC,UAAU,GAEd,CACIF,MAAO,KACPC,KAAO,KACPC,UAAU,GAEd,CACIF,MAAO,KACPC,KAAO,KACPC,UAAU,OAK1B4O,EAAKP,MAAMyL,0BAAyB,GAC7B/M,GAAM,QAAQ,SAAS,mBAhElCA,GAAM,UAAU,WAAW,0CAsE/BA,GAAM,UAAU,WAAW,mCA1PzB6B,EAgQlBuE,aAAe,SAACC,GACZxE,EAAKc,SAAS,SAAC2D,EAAGC,GACd,MAAO,CACHgH,gBAAgBvb,OAAAC,EAAA,EAAAD,CAAA,GACTsU,EAAGiH,gBADK,CAEXiB,cAAenI,EAAE7Z,KAAF,GAAAqG,OAAWmH,GAAKE,KAAhB,KAAArH,OAAwBwT,EAAE7Z,MAAO,OAEpDmZ,gBAAe,MAvQT9D,EA4QlB2E,IAAI,WACA3E,EAAKc,SAAS,CACVgD,gBAAe,KA5QnB9D,EAAKjQ,MAAM,CACP2b,gBAAgB,CACZiB,cAAc,KACd5b,QAAS,CACL,CACIG,MAAO,KACPC,KAAO,KACPC,UAAU,GAEd,CACIF,MAAO,KACPC,KAAO,KACPC,UAAU,GAEd,CACIF,MAAO,KACPC,KAAO,KACPC,UAAU,GAEd,CACIF,MAAO,KACPC,KAAO,KACPC,UAAU,KAItBob,QAAO,EACP1I,gBAAe,EACftY,4BAA2B,GA9BjBwU,yEAkRT,IAAAoJ,EAAApM,KAEGgE,EAAsBhE,KAAKyC,MAAMJ,KAAjC2B,kBACAuC,EAAWC,WAAXD,OACAE,EAAaC,WAAbD,SACJ2B,EAAqB,CACrBrW,KAAM,OACNuB,OAAM,GAAAU,OAAKmH,GAAKE,MAAVrH,OAAiBmH,GAAKiB,YAAtB,WAAApI,OAA2CyL,GAAKC,gBACtD2I,SAAU,WAGd,OACIjR,EAAAC,EAAAC,cAAA,OAAKI,UAAU,yBACXN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,8BACXN,EAAAC,EAAAC,cAAC6M,GAAA,QAAD,CAAOC,SAAUpE,KAAKoD,cAClBhM,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAC0Y,GAAA,QAAD,KACI5Y,EAAAC,EAAAC,cAAC2Y,GAAA,QAAD,CAAKC,KAAM,GACP9Y,EAAAC,EAAAC,cAAC6M,GAAA,QAAKG,KAAN,CAAWC,MAAM,UAAUC,aAAW,GACjCR,EAAkB,UAAW,CAC1BS,MAAO,CAAC,CAAEC,UAAU,EAAMb,QAAS,gCADtCG,CAGG5M,EAAAC,EAAAC,cAAC4Q,GAAA,QAAD,CACIiI,YAAU,EACVtL,MAAO,CAAEvC,MAAM,QACfwC,YAAY,mBACZsL,iBAAiB,KAGbpQ,KAAKyC,MAAMpP,MAAMrG,iBAAiB8K,IAAI,SAACwO,EAAEuI,GAAH,OAAOzX,EAAAC,EAAAC,cAACiP,EAAD,CAAQtO,IAAKqO,EAAEuB,IAAKzG,EAAGkF,EAAEF,MAAOc,MAAOZ,EAAEuB,KAAMvB,EAAEF,cAOtHhP,EAAAC,EAAAC,cAAC0Y,GAAA,QAAD,KACI5Y,EAAAC,EAAAC,cAAC2Y,GAAA,QAAD,CAAKC,KAAM,IACP9Y,EAAAC,EAAAC,cAAC6M,GAAA,QAAKG,KAAN,CAAWC,MAAM,WAAWC,aAAW,GAClCR,EAAkB,eAAgB,CAC/BS,MAAO,CAAC,CAAEC,UAAU,EAAMb,QAAS,2BADtCG,CAGG5M,EAAAC,EAAAC,cAACmP,EAAD,CAAU0C,KAAM,OAI5B/R,EAAAC,EAAAC,cAAC2Y,GAAA,QAAD,CAAKC,KAAM,EAAGrL,MAAO,CAACzO,QAAU,aAC5BgB,EAAAC,EAAAC,cAAC6M,GAAA,QAAKG,KAAN,CAAWC,MAAM,kBACbnN,EAAAC,EAAAC,cAAC8R,GAAA,EAADjW,OAAAkW,OAAA,GAAYjB,EAAZ,CAAgCkB,aAActJ,KAAK2H,IAAK4B,SAAUvJ,KAAKuH,aAAciC,UAAWxJ,KAAKuH,eACjGnQ,EAAAC,EAAAC,cAAC0N,GAAA,QAAD,KACI5N,EAAAC,EAAAC,cAAC5J,EAAA,QAAD,CAAMyC,KAAK,WADf,eAOhBiH,EAAAC,EAAAC,cAAC0Y,GAAA,QAAD,KACI5Y,EAAAC,EAAAC,cAAC2Y,GAAA,QAAD,CAAKC,KAAM,IACP9Y,EAAAC,EAAAC,cAAC6M,GAAA,QAAKG,KAAN,CAAWC,MAAM,cAAcC,aAAW,GACrCR,EAAkB,cAAe,CAC9BS,MAAO,CAAC,CAAEC,UAAU,EAAMb,QAAS,8CADtCG,CAGG5M,EAAAC,EAAAC,cAACmP,EAAD,CAAUwC,SAAUjJ,KAAKqQ,kBAAmBlH,KAAM,OAI9D/R,EAAAC,EAAAC,cAAC2Y,GAAA,QAAD,CAAKK,OAAQ,EAAGJ,KAAM,GAClB9Y,EAAAC,EAAAC,cAAC6M,GAAA,QAAKG,KAAN,CAAWC,MAAM,YAAYC,aAAW,GACnCR,EAAkB,UAAW,CAC1BS,MAAO,CAAC,CAAEC,UAAU,EAAMb,QAAS,4BADtCG,CAGG5M,EAAAC,EAAAC,cAACiZ,GAAA,EAAD,CAAa9H,IAAK,EAAGC,IAAK,QAK1CtR,EAAAC,EAAAC,cAAA,OAAKuN,MAAO,CAACrO,WAAW,SAEhBwJ,KAAKjN,MAAM2b,gBAAgB3a,QAAQ+D,IAAI,SAAC0Y,EAAO3B,GAC3C,OACIzX,EAAAC,EAAAC,cAAC0Y,GAAA,QAAD,CAAK/X,IAAK4W,EAAGnX,UAAU,IACnBN,EAAAC,EAAAC,cAAC2Y,GAAA,QAAD,CAAKK,OAAQ,EAAGJ,KAAM,IAClB9Y,EAAAC,EAAAC,cAAC6M,GAAA,QAAKG,KAAN,CAAWC,MAAK,SAAAvQ,OAAW6a,EAAE,IACzBzX,EAAAC,EAAAC,cAACmP,EAAD,CAAUS,MAAOkF,EAAKrZ,MAAM2b,gBAAgB3a,QAAQ8a,GAAG1a,KAAM8U,SAAW,SAAC5F,GAAD,OAAK+I,EAAKwC,iBAAiBvL,EAAEwL,IAAI1F,KAAM,MAGvH/R,EAAAC,EAAAC,cAAC2Y,GAAA,QAAD,CAAKK,OAAQ,EAAGJ,KAAM,EAAGrL,MAAO,CAACgI,UAAU,WACvCzV,EAAAC,EAAAC,cAAC6M,GAAA,QAAKG,KAAN,CAAWC,MAAK,SAAAvQ,OAAW6a,EAAE,EAAb,WACZzX,EAAAC,EAAAC,cAAC8R,GAAA,EAADjW,OAAAkW,OAAA,GAAYjB,EAAZ,CAAgCkB,aAAc8C,EAAKzE,IAAK4B,SAAU,SAAC/B,GAAD,OAAK4E,EAAK4C,oBAAoB,KAAKH,IAAIrF,UAAW,SAAChC,GAAD,OAAK4E,EAAK4C,oBAAoBxH,EAAEqH,MAChJzX,EAAAC,EAAAC,cAAC0N,GAAA,QAAD,KACI5N,EAAAC,EAAAC,cAAC5J,EAAA,QAAD,CAAMyC,KAAK,WADf,cAMZiH,EAAAC,EAAAC,cAAC2Y,GAAA,QAAD,CAAKC,KAAM,EAAGrL,MAAO,CAACzO,QAAU,cAC5BgB,EAAAC,EAAAC,cAAC6M,GAAA,QAAKG,KAAN,KACIlN,EAAAC,EAAAC,cAACmZ,GAAA,QAAD,CAAU7J,QAASwF,EAAKrZ,MAAM2b,gBAAgB3a,QAAQ8a,GAAGza,SAAU6U,SAAU,SAAC5F,GAAD,OAAK+I,EAAK2C,mBAAmB1L,EAAEwL,YAQxIzX,EAAAC,EAAAC,cAAC0Y,GAAA,QAAD,KACI5Y,EAAAC,EAAAC,cAAC2Y,GAAA,QAAD,CAAKC,KAAM,IACLlQ,KAAKjN,MAAMvE,2BAA6B4I,EAAAC,EAAAC,cAAC0N,GAAA,QAAD,CAAQ7U,KAAK,UAAU0a,QAAS,SAACxH,GAAD,OAAK+I,EAAKmC,eAAelL,KAAzD,kBAAuF,OAGzIjM,EAAAC,EAAAC,cAAC0Y,GAAA,QAAD,KACI5Y,EAAAC,EAAAC,cAAC2Y,GAAA,QAAD,CAAKK,OAAQ,GAAKJ,KAAM,GACpB9Y,EAAAC,EAAAC,cAAC6M,GAAA,QAAKG,KAAN,KACIlN,EAAAC,EAAAC,cAAC0N,GAAA,QAAD,CAAQ7U,KAAK,UAAU8U,SAAS,SAASyL,SAAU1Q,KAAKjN,MAAM+T,eAAgBqG,QAASnN,KAAKjN,MAAMyc,OAAQtK,OAAK,GAA/G,iCApYdE,aA0ZpBuL,GAAkBrL,WAAKC,OAAO,CAAExT,KAAM,eAApBuT,CAAqCgJ,IAE9C9I,eATS,SAAAzS,GAAK,MAAK,CAC9Be,QAAUf,EAAMe,QAChBT,MAAQN,EAAMM,QAOqB,CACnCud,2BD9asC,SAACtK,GAAD,OAAO,SAAArF,GAC7CA,EAAS,CACN9Q,KAAO,oCACPwD,QAAU2S,MC4ab4H,4BACAC,4BAHW3I,CAIZmL,kICpbGE,YAAY,CAChBC,WAAY,SAAA5G,GAAA,IAAEhD,EAAFgD,EAAEhD,MAAF,OAAa9P,EAAAC,EAAAC,cAACyZ,GAAA,WAAD,CAAYC,KAAM9J,KAC3C8J,KAAM,SAAAC,GAAA,IAAE/J,EAAF+J,EAAE/J,MAAF,OAAa9P,EAAAC,EAAAC,cAACyZ,GAAA,UAAD,CAAWC,KAAM9J,KACpCgK,KAAM,SAAAC,GAAuB,IAArBC,EAAqBD,EAArBC,SAAUlK,EAAWiK,EAAXjK,MAChB,OAAO9P,EAAAC,EAAAC,cAAC+Z,GAAA,EAAD,CAAmBD,SAAUA,EAAUtO,SAAUoE,OAU7CoK,GANE,SAAC7O,GAChB,OACErL,EAAAC,EAAAC,cAACia,GAAAla,EAADlE,OAAAkW,OAAA,CAAewH,UAAWA,GAAWW,QAAS,CAACC,KAAIT,OAAWvO,KCV1DiP,GAAYC,KAAZD,QAEaE,eACjB,SAAAA,EAAYnP,GAAM,IAAAO,EAAA,OAAA7P,OAAA4M,EAAA,EAAA5M,CAAA6M,KAAA4R,IACd5O,EAAA7P,OAAA8P,GAAA,EAAA9P,CAAA6M,KAAA7M,OAAA+P,GAAA,EAAA/P,CAAAye,GAAAzO,KAAAnD,KAAMyC,KAOVoP,UAAY,SAAC5Z,KANT+K,EAAKjQ,MAAM,CACPoa,SAAU,EACVnM,QAAQ,MAJEgC,oFAYC,IAAAoJ,EAAApM,KACX8R,EAAK9R,KAAKyC,MAAMhS,GAEpB2O,GAAU,CACNsB,IAAG,GAAA1M,OAAKmH,GAAKe,sBAAV,KAAAlI,OAAmC8d,KACvCnO,KAAK,SAACC,GAELwI,EAAKtI,SAAS,CACV9C,QAAS4C,EAASjD,KAAKA,KAAK,GAC5BwM,SAAS,MAEdpJ,MAAM,SAACrC,uCAKL,IAAAqQ,EAAA/R,KACL,OACI5I,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAC0a,GAAA,EAAD,CAAU7E,QAASnN,KAAKjN,MAAMoa,QAAS8E,QAAM,EAAC/P,QAAM,GAChD9K,EAAAC,EAAAC,cAAC4a,GAAA,EAAD,CAAMC,iBAAiB,IAAIlJ,SAAU,SAAC5F,GAAD,OAAO0O,EAAKF,UAAUxO,KACvDjM,EAAAC,EAAAC,cAACoa,GAAD,CAASU,IAAKhb,EAAAC,EAAAC,cAAA,YAAMF,EAAAC,EAAAC,cAAC5J,EAAA,QAAD,CAAMyC,KAAK,SAAjB,cAA6C8H,IAAI,KAC3Db,EAAAC,EAAAC,cAAC+a,GAAD,CAAM5hB,GAAIuP,KAAKyC,MAAMhS,GAAIuQ,QAAShB,KAAKjN,MAAMiO,WAEjD5J,EAAAC,EAAAC,cAACoa,GAAD,CAASU,IAAKhb,EAAAC,EAAAC,cAAA,YAAMF,EAAAC,EAAAC,cAAC5J,EAAA,QAAD,CAAMyC,KAAK,oBAAjB,YAAsD8H,IAAI,KACpEb,EAAAC,EAAAC,cAACgb,GAAD,CAAMtR,QAAShB,KAAKjN,MAAMiO,qBAtCToE,aAgD7C,SAASiN,GAAK5P,GACV,OACIrL,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACib,GAAA,EAAD,CAAcxF,UAAQ,EAACld,MAAM,GAAG2iB,QAAM,EAAC1H,KAAK,QAAQ2H,OAAQ,CAAEC,IAAK,EAAGC,GAAI,EAAGC,GAAI,EAAGxa,GAAI,EAAGD,GAAI,EAAGD,GAAI,IAClGd,EAAAC,EAAAC,cAACib,GAAA,EAAajO,KAAd,CAAmBC,MAAM,eAAe9B,EAAMhS,IAC9C2G,EAAAC,EAAAC,cAACib,GAAA,EAAajO,KAAd,CAAmBC,MAAM,WAAW9B,EAAMzB,QAAQoN,QAAQhI,OAC1DhP,EAAAC,EAAAC,cAACib,GAAA,EAAajO,KAAd,CAAmBC,MAAM,cAAc9B,EAAMzB,QAAQ6R,YACrDzb,EAAAC,EAAAC,cAACib,GAAA,EAAajO,KAAd,CAAmBC,MAAM,uBAAuB9B,EAAMzB,QAAQ8R,UAC9D1b,EAAAC,EAAAC,cAACib,GAAA,EAAajO,KAAd,CAAmBC,MAAM,aAAa9B,EAAMzB,QAAQ6O,WACpDzY,EAAAC,EAAAC,cAACib,GAAA,EAAajO,KAAd,CAAmBC,MAAM,cAAc9B,EAAMzB,QAAQ+R,UAAUhhB,MAC/DqF,EAAAC,EAAAC,cAACib,GAAA,EAAajO,KAAd,CAAmBC,MAAM,cAAcyO,IAAOvQ,EAAMzB,QAAQiS,WAAWC,OAAO,6BAO9F,SAASZ,GAAK7P,GACV,IAAM0Q,EAAO,CAAC,IAAK,IAAK,IAAK,IAAK,KAC5BC,EAAa3Q,EAAMzB,QAGzB,OACI5J,EAAAC,EAAAC,cAAA,OAAKI,UAAU,+BACXN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,uBACXN,EAAAC,EAAAC,cAAC+b,GAAD,KACKD,EAAWjf,OAInBif,EAAW1D,QACRtY,EAAAC,EAAAC,cAAA,OAAKI,UAAU,iCACXN,EAAAC,EAAAC,cAAA,OAAKuD,IAAI,iBAAiBnD,UAAU,uBAAuBiD,IAAKyY,EAAW1D,WAE7E,KAENtY,EAAAC,EAAAC,cAAA,WACK8b,EAAWrf,QAAQ+D,IAAI,SAACwO,EAAGuI,GACxB,OACIzX,EAAAC,EAAAC,cAAA,OAAKW,IAAK4W,GACNzX,EAAAC,EAAAC,cAAC0Y,GAAA,QAAD,CAAK7f,KAAK,OAAO4K,QAAQ,SAASrD,UAAU,0BACxCN,EAAAC,EAAAC,cAAC2Y,GAAA,QAAD,CAAKC,KAAM,GAEH5J,EAAElS,SAAWgD,EAAAC,EAAAC,cAAC0N,GAAA,QAAD,CAAQtN,UAAU,QAAQ6U,MAAM,UAAU4G,EAAKtE,IAAezX,EAAAC,EAAAC,cAAC0N,GAAA,QAAD,CAAQ7U,KAAK,UAAUoc,MAAM,UAAU4G,EAAKtE,KAI9HvI,EAAEiJ,OACCnY,EAAAC,EAAAC,cAAC2Y,GAAA,QAAD,CAAKC,KAAM,EAAGrL,MAAO,CAAEzO,QAAS,QAC5BgB,EAAAC,EAAAC,cAAA,OAAKuD,IAAI,iBAAiBnD,UAAU,uBAAuBiD,IAAK2L,EAAEiJ,UAGtE,KAEHjJ,EAAEiJ,OACCnY,EAAAC,EAAAC,cAAC2Y,GAAA,QAAD,CAAKC,KAAM,IAAK5J,EAAEgJ,SAElBlY,EAAAC,EAAAC,cAAC2Y,GAAA,QAAD,CAAKC,KAAM,IAAK5J,EAAEgJ,mBC/FhDgE,eACJ,SAAAA,EAAY7Q,GAAM,IAAAO,EAAA,OAAA7P,OAAA4M,EAAA,EAAA5M,CAAA6M,KAAAsT,IAChBtQ,EAAA7P,OAAA8P,GAAA,EAAA9P,CAAA6M,KAAA7M,OAAA+P,GAAA,EAAA/P,CAAAmgB,GAAAnQ,KAAAnD,KAAMyC,KAOR8Q,iBAAmB,SAAC9iB,GAClBuS,EAAKc,SAAS,SAAC0K,EAAcC,GAC3B,MAAM,CACJ+E,kBAAkB/iB,EAClBgjB,6BAA4B,MAZhBzQ,EAgBlB0Q,kBAAoB,WAClB1Q,EAAKc,SAAS,SAAC0K,EAAcC,GAC3B,MAAM,CACJ+E,kBAAkB,KAClBC,6BAA4B,MApBhBzQ,EA8BlB2Q,aAAe,SAAC1kB,GACd+T,EAAKP,MAAMyL,0BAAyB,IA/BpBlL,EAkClB4Q,cAAgB,WACd5Q,EAAKP,MAAMyL,0BAAyB,IAnCpBlL,EAsClB6Q,oBAAqB,SAACzS,GACpB4B,EAAKP,MAAMqR,uBAAuB1S,GAClC4B,EAAKP,MAAM0L,wBAAwB/M,IAxCnB4B,EA2ClB+Q,eAAiB,SAACtjB,GAChBkP,GAAW,CACTe,IAAG,GAAA1M,OAAMmH,GAAKc,iBACd0E,KAAO,CACHkH,IAAMpX,KAETkT,KAAK,SAACC,GACP,IAAGA,EAASjD,KAAKa,QAKf,OAAOL,GAAM,UAAU,WAAWyC,EAASjD,KAAKkD,SAJhD1C,GAAM,UAAU,UAAUyC,EAASjD,KAAKkD,SACxCb,EAAKP,MAAM0L,wBAAwBnL,EAAKP,MAAM3O,QAAQxF,oBAKvDyV,MAAM,SAACrC,GACR,OAAOP,GAAM,QAAQ,SAAS,mBA1DhB6B,EA8DhB+G,qBAAuB,SAAAC,GAAS,MAAK,CACjCC,eAAgB,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,gBAAiBC,EAApBF,EAAoBE,aAAcC,EAAlCH,EAAkCG,QAASC,EAA3CJ,EAA2CI,aAA3C,OACdlT,EAAAC,EAAAC,cAAA,OAAKuN,MAAO,CAAEzO,QAAS,IACrBgB,EAAAC,EAAAC,cAACqN,GAAA,QAAD,CACE4F,IAAK,SAAAC,GACHxH,EAAKyH,YAAcD,GAErB1F,YAAW,UAAA9Q,OAAYgW,GACvB9C,MAAOkD,EAAa,GACpBnB,SAAU,SAAA5F,GAAC,OAAI8G,EAAgB9G,EAAEqH,OAAOxD,MAAQ,CAAC7D,EAAEqH,OAAOxD,OAAS,KACnEyD,aAAc,kBAAM3H,EAAK4H,aAAaR,EAAcC,IACpDxF,MAAO,CAAEvC,MAAO,IAAKxI,aAAc,EAAGrM,QAAS,WAEjD2J,EAAAC,EAAAC,cAAC0N,GAAA,QAAD,CACE7U,KAAK,UACL0a,QAAS,kBAAM7H,EAAK4H,aAAaR,EAAcC,IAC/C3c,KAAK,SACLod,KAAK,QACLjG,MAAO,CAAEvC,MAAO,GAAIzM,YAAa,IALnC,UASAuB,EAAAC,EAAAC,cAAC0N,GAAA,QAAD,CAAQ6F,QAAS,kBAAM7H,EAAK+H,YAAYT,IAAeQ,KAAK,QAAQjG,MAAO,CAAEvC,MAAO,KAApF,WAKJ0I,WAAY,SAAAC,GAAQ,OAClB7T,EAAAC,EAAAC,cAAC5J,EAAA,QAAD,CAAMyC,KAAK,SAAS0U,MAAO,CAAEjM,MAAOqS,EAAW,eAAY/X,MAE7DgY,SAAU,SAAChE,EAAOiE,GAAR,OACRA,EAAOnB,GACJoB,WACAC,cACAC,SAASpE,EAAMmE,gBACpBE,8BAA+B,SAAAC,GACzBA,GACFC,WAAW,kBAAMzI,EAAKyH,YAAYiB,YAGtCC,OAAQ,SAAAC,GAAI,OACVxU,EAAAC,EAAAC,cAACuU,GAAAxU,EAAD,CACEyU,eAAgB,CAAE9V,gBAAiB,UAAWI,QAAS,GACvD2V,YAAa,CAAC/I,EAAKP,MAAM3O,QAAQ3F,oBACjC6d,YAAU,EACVC,gBAAiBL,EAAKR,gBA3GdpI,EAgHd4H,aAAe,SAACR,EAAcC,GAC5BA,IACArH,EAAKP,MAAMuR,yBAAyB5J,EAAa,KAlHrCpH,EAqHd+H,YAAc,SAAAT,GACZA,IACAtH,EAAKP,MAAMuR,yBAAyB,KArHxChR,EAAKjQ,MAAM,CACTygB,kBAAoB,KACpBC,6BAA4B,GAJdzQ,oFA0BhBhD,KAAKyC,MAAM4D,yBACXrG,KAAKyC,MAAM0L,wBAAwBnO,KAAKyC,MAAM3O,QAAQxF,mDA+F7C,IAAA8d,EAAApM,KACCqM,EAAU9T,KAAV8T,MAEFC,EAAU,CACd,CACEzc,MAAO,UACPma,UAAW,gBACX/R,IAAK,gBACLqK,MAAO,OALKnP,OAAAC,EAAA,EAAAD,CAAA,CAQZtD,MAAO,WACPma,UAAW,OACX/R,IAAK,OACLqK,MAAO,OACJtC,KAAK+J,qBAAqB,SAE/B,CACEla,MAAO,aACPma,UAAW,iBACX/R,IAAK,iBACLqK,MAAO,OAET,CACEzS,MAAO,SACPoI,IAAK,MACL+R,UAAW,MACX1H,MAAO,MACPqJ,OAAQ,SAAC1T,GAAD,OACNb,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAC0N,GAAA,QAAD,CACE7U,KAAK,UACLoc,MAAM,SACN1B,QAAS,kBAAIuB,EAAKmH,iBAAiBtb,IACnCvK,KAAK,oBAMb,OACI0J,EAAAC,EAAAC,cAAA,OAAKI,UAAU,yBACbN,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC0Y,GAAA,QAAD,KAEE5Y,EAAAC,EAAAC,cAAC2Y,GAAA,QAAD,CAAKC,KAAM,IACT9Y,EAAAC,EAAAC,cAAC0N,GAAA,QAAD,CACE7U,KAAK,UACLzC,KAAK,kBACLmX,MAAO,CAAC/K,aAAa,QACrB+Q,QAAS,kBAAIuB,EAAKuH,aAAa,sBAJjC,6BAUFvc,EAAAC,EAAAC,cAAC2Y,GAAA,QAAD,CAAKC,KAAM,IACT9Y,EAAAC,EAAAC,cAAC4Q,GAAA,QAAD,CACEjZ,KAAK,WACL6V,YAAY,8BACZmP,aAAcjU,KAAKyC,MAAM3O,QAAQxF,iBACjC2a,SAAUjJ,KAAK6T,oBACfhP,MAAO,CAAEvC,MAAO,QAChB4R,YAAY,EACZ9D,iBAAiB,KAEhBpQ,KAAKyC,MAAMpP,MAAMrG,iBAAiB8K,IAAI,SAAAE,GAAI,OACzCZ,EAAAC,EAAAC,cAAC4Q,GAAA,QAAO3B,OAAR,CAAetO,IAAKD,EAAK6P,IAAKX,MAAOlP,EAAK6P,IAAKzG,EAAGpJ,EAAKoO,OACpDpO,EAAKoO,aAQlBhP,EAAAC,EAAAC,cAAA,OAAKI,UAAU,gCACbN,EAAAC,EAAAC,cAAC+U,EAAD,CAAOO,MAAO,EAAG/H,MAAO,CAACjM,MAAM,OAAOiU,UAAU,WAAhD,8BAKFzV,EAAAC,EAAAC,cAACwV,GAAA,EAAD,CACEC,UAAU,EACVT,QAASA,EACTU,WAAYhN,KAAKyC,MAAM3O,QAAQzF,kBAC/Byc,KAAK,SACLmC,WAAY,CAAEC,SAAU,GACxBC,QAASnN,KAAKyC,MAAM3O,QAAQ1F,qBAC5Bgf,OAAO,QAGThW,EAAAC,EAAAC,cAAC+V,GAAA,EAAD,CACE7B,QAASxL,KAAKyC,MAAM3O,QAAQ7F,uBAC5B4B,MAAM,eACN2d,SAAUxN,KAAK4T,cACf/O,MAAO,CAAC4I,IAAK,OAAOrX,QAAQ,MAAMJ,gBAAgB,oBAClDsM,MAAM,MACNoL,gBAAgB,EAChB1W,OAAQ,IAERI,EAAAC,EAAAC,cAAC6c,GAAD,OAGF/c,EAAAC,EAAAC,cAAC+V,GAAA,EAAD,CACE7B,QAASxL,KAAKjN,MAAM0gB,4BACpB5jB,MAAM,mBACN2d,SAAUxN,KAAK0T,kBACf7O,MAAO,CAAC4I,IAAK,OAAOrX,QAAQ,MAAMJ,gBAAgB,oBAClDsM,MAAM,MACNoL,gBAAgB,EAChB1W,OAAQ,IAERI,EAAAC,EAAAC,cAAC8c,GAAD,CAAiB3jB,GAAIuP,KAAKjN,MAAMygB,6BA5OrBpO,aAyPZI,eALS,SAAAzS,GAAK,MAAK,CAC9Be,QAAUf,EAAMe,QAChBT,MAAQN,EAAMM,QAGqB,CACrC6a,4BACAC,2BACA6F,yBJ7PsC,SAAC1N,GAAD,OAAM,SAAArF,GAC1CA,EAAS,CACN9Q,KAAO,8BACPwD,QAAU2S,MI2PfwN,uBJ/MoC,SAACxN,GAAD,OAAO,SAAArF,GACzCA,EAAS,CACL9Q,KAAM,0BACNwD,QAAS2S,MI6MfD,2BALab,CAMZ8N,6CCzQkBe,WAFH9b,KAAV8T,kBAGJ,SAAAgI,EAAY5R,GAAM,IAAAO,EAAA,OAAA7P,OAAA4M,EAAA,EAAA5M,CAAA6M,KAAAqU,IACdrR,EAAA7P,OAAA8P,GAAA,EAAA9P,CAAA6M,KAAA7M,OAAA+P,GAAA,EAAA/P,CAAAkhB,GAAAlR,KAAAnD,KAAMyC,KAWV6R,oBAAsB,WAClBtR,EAAKc,SAAS,CACVqJ,SAAS,IAGbxN,GAAW,CACPe,IAAG,GAAA1M,OAAKmH,GAAK2B,oBACb6D,KAAM,CACFlQ,GAAIuS,EAAKP,MAAMhS,MAEpBkT,KAAK,SAACC,GAEDA,EAASjD,KAAKa,QACdwB,EAAKP,MAAM8R,oBAAoB3Q,EAASjD,KAAKA,MAG7CQ,GAAM,QAAS,SAAUyC,EAASjD,KAAKkD,SAE3Cb,EAAKc,SAAS,CACVqJ,SAAS,MAEdpJ,MAAM,SAACrC,GAENP,GAAM,QAAS,SAAU,gBACzB6B,EAAKc,SAAS,CACVqJ,SAAS,OAnCjBnK,EAAKjQ,MAAQ,CACToa,SAAS,EACTqH,MAAO,GAJGxR,oFASdhD,KAAKsU,uDAkCL,IAAMG,EAAO,CAAC,IAAK,IAAK,IAAK,IAAK,KAGlC,OACIrd,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAC0Y,GAAA,QAAD,KACI5Y,EAAAC,EAAAC,cAAC2Y,GAAA,QAAD,CAAKC,KAAM,IACP9Y,EAAAC,EAAAC,cAAA,MAAIuN,MAAO,CAAC6P,SAAU,SAAtB,gBACkB,KAEV1U,KAAKyC,MAAMtR,gBAAgBwjB,OAAO,SAACC,EAAaC,GAAd,OAA0BD,EAAcC,EAAQhF,WAAW,MAOzG7P,KAAKyC,MAAMtR,gBAAgB2G,IAAI,SAACwO,EAAGuI,GAE/B,OACIzX,EAAAC,EAAAC,cAAA,OAAKW,IAAK4W,EAAGhK,MAAO,CAAEpO,cAAe,SAEjCW,EAAAC,EAAAC,cAAC0Y,GAAA,QAAD,KACI5Y,EAAAC,EAAAC,cAAC2Y,GAAA,QAAD,CAAKC,KAAM,GACP9Y,EAAAC,EAAAC,cAAC0N,GAAA,QAAD,CAAQ7U,KAAK,UAAUoc,MAAM,UAAWsC,EAAE,IAE9CzX,EAAAC,EAAAC,cAAC2Y,GAAA,QAAD,CAAKC,KAAM5J,EAAEoJ,QAAQ,EAAE,GACnBtY,EAAAC,EAAAC,cAAA,OAAKuD,IAAI,iBAAiBF,IAAK2L,EAAEoJ,QAAS7K,MAAO,CAACvC,MAAM,WAE5DlL,EAAAC,EAAAC,cAAC2Y,GAAA,QAAD,CAAKC,KAAM5J,EAAEoJ,QAAQ,GAAG,GAAI7K,MAAO,CAACzO,QAAQ,SACxCgB,EAAAC,EAAAC,cAAC+b,GAAD,KAAW/M,EAAEnS,OAEjBiD,EAAAC,EAAAC,cAAC2Y,GAAA,QAAD,CAAKC,KAAM,GAAX,SACW5J,EAAEuJ,WAEbzY,EAAAC,EAAAC,cAAC2Y,GAAA,QAAD,CAAKK,OAAQ,EAAGJ,KAAM,IAClB9Y,EAAAC,EAAAC,cAAC0Y,GAAA,QAAD,KACK1J,EAAEvS,QAAQ+D,IAAI,SAACgd,EAAGC,GACf,OACI3d,EAAAC,EAAAC,cAAC2Y,GAAA,QAAD,CAAKhY,IAAK8c,EAAI7E,KAAM,GAAIrL,MAAO,CAACpO,cAAc,SAC1CW,EAAAC,EAAAC,cAAC0Y,GAAA,QAAD,KACI5Y,EAAAC,EAAAC,cAAC2Y,GAAA,QAAD,CAAKC,KAAM,GAEP4E,EAAG1gB,SAASgD,EAAAC,EAAAC,cAAC0N,GAAA,QAAD,CAAQtN,UAAU,QAAQ6U,MAAM,UAAUkI,EAAKM,IAAc3d,EAAAC,EAAAC,cAAC0N,GAAA,QAAD,CAAQ7U,KAAK,UAAUoc,MAAM,UAAUkI,EAAKM,KAGzH3d,EAAAC,EAAAC,cAAC2Y,GAAA,QAAD,CAAKK,OAAQ,EAAGJ,KAAM4E,EAAGvF,OAAO,EAAE,GAC9BnY,EAAAC,EAAAC,cAAA,OAAKuD,IAAI,iBAAiBF,IAAKma,EAAGvF,OAAQ1K,MAAO,CAACvC,MAAM,WAE5DlL,EAAAC,EAAAC,cAAC2Y,GAAA,QAAD,CAAKK,OAAQ,EAAGJ,KAAM4E,EAAGvF,OAAO,GAAG,IAC/BnY,EAAAC,EAAAC,cAAA,SAAIwd,EAAGxF,4BA9FhClK,qDCJlB4P,eACjB,SAAAA,EAAYvS,GAAM,IAAAO,EAAA,OAAA7P,OAAA4M,EAAA,EAAA5M,CAAA6M,KAAAgV,IACdhS,EAAA7P,OAAA8P,GAAA,EAAA9P,CAAA6M,KAAA7M,OAAA+P,GAAA,EAAA/P,CAAA6hB,GAAA7R,KAAAnD,KAAMyC,KACD1P,MAAM,CACPtC,GAAGuS,EAAKP,MAAMhS,GACdwkB,MAAMjS,EAAKP,MAAMwS,MACjBC,WAAW,GACXC,UAAU,GACVC,SAAS,GACTC,UAAU,GACVC,UAAUtS,EAAKP,MAAM6S,UACrBC,SAAS,CAAC,EAAE,GACZC,UAAU,CAAC,OAAO,QAClBC,KAAK,CAAC,cAAc,aAAa,aAAa,aAAa,aAAa,aACxEC,SAAS,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,IAbV1S,qFAiBE,IAAAoJ,EAAApM,KAAA2V,EACS3V,KAAKjN,MAAzBqiB,EADWO,EACXP,SAASC,EADEM,EACFN,UACVO,GAAM,EACNxpB,EAAE,EACFob,EAAE,EACFqO,EAAQ,EACRC,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAQ,EACRC,EAAG,EACPnW,KAAKjN,MAAMkiB,MAAMnd,IAAI,SAACwO,EAAGuI,IACrBsH,EAAM7P,EAAE8P,MAAQhK,EAAKrZ,MAAMuiB,UAAa,MAC9B,GACNO,IAEKM,GAAM,GACXL,IAEKK,GAAM,GACXJ,IAEKI,GAAM,GACXH,IAEKG,GAAM,GACXF,IAGAC,IAGA5P,EAAE8P,OAAShK,EAAKrZ,MAAMuiB,UAAY,EAClClpB,IAGAob,IAEAlB,EAAE8P,MAAQR,IACVA,EAAOtP,EAAE8P,SAMjB,IAHA,IAAIC,EAAI,GACJ9R,EAAQ,GAEJsK,EAAE,EAAEA,GAAG+G,EAAK/G,IAChBwH,EAAGhH,KAAK,GACR9K,EAAM8K,KAAKR,GACXuG,EAAS/F,KAAKiH,WAAQzH,IACtBwG,EAAUhG,KAAKkH,eAAY1H,IAI/B7O,KAAKjN,MAAMkiB,MAAMnd,IAAI,SAACwO,EAAGuI,GACrBwH,EAAG/P,EAAE8P,WAGTpW,KAAK8D,SAAS,CACVoR,WAAY3Q,EACZ4Q,UAAWkB,EACXjB,SAAUA,EACVC,UAAWA,EACXE,SAAU,CAAC/N,EAAGpb,GACdspB,SAAU,CAACG,EAASC,EAAQC,EAAQC,EAAQC,EAAQC,sCAKxD,IAAIM,EAAQ,CACRC,OAAOzW,KAAKjN,MAAMmiB,WAClBwB,SAAS,CAAC,CACNnS,MAAO,SACP5D,KAAMX,KAAKjN,MAAMoiB,UACjBnf,gBAAgBgK,KAAKjN,MAAMqiB,SAC3BuB,YAAY3W,KAAKjN,MAAMsiB,UACvBuB,YAAa,KAGjBC,EAAc,CACdJ,OAAOzW,KAAKjN,MAAMyiB,UAClBkB,SAAS,CAAC,CACNnS,MAAO,YACP5D,KAAMX,KAAKjN,MAAMwiB,SACjBvf,gBAAgB,CAACsgB,WAAQ,GAAGA,WAAQ,IACpCK,YAAY,CAACJ,eAAY,GAAGA,eAAY,IACxCK,YAAa,KAGjBE,EAAc,CACdL,OAAOzW,KAAKjN,MAAM0iB,KAClBiB,SAAS,CAAC,CACNnS,MAAO,2BACP5D,KAAMX,KAAKjN,MAAM2iB,SACjB1f,gBAAgB,CAACsgB,WAAQ,GAAGA,WAAQ,GAAGA,WAAQ,GAAGA,WAAQ,GAAGA,WAAQ,GAAGA,WAAQ,IAChFK,YAAY,CAACJ,eAAY,GAAGA,eAAY,GAAGA,eAAY,GAAGA,eAAY,GAAGA,eAAY,GAAGA,eAAY,IACpGK,YAAa,KAGrB,OACIxf,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACyf,GAAA,QAAD,KACI3f,EAAAC,EAAAC,cAAA,OAAKI,UAAU,oBACXN,EAAAC,EAAAC,cAAA,kDACAF,EAAAC,EAAAC,cAAA,KAAGyB,KAAMiH,KAAKyC,MAAMuU,KAAMtM,OAAO,SAAShT,UAAU,iBAApD,eAIZN,EAAAC,EAAAC,cAAA,OAAKuN,MAAO,CAACvO,UAAU,SACnBc,EAAAC,EAAAC,cAACyf,GAAA,QAAD,KACI3f,EAAAC,EAAAC,cAAA,OAAKuN,MAAO,CAACzO,QAAQ,uBACjBgB,EAAAC,EAAAC,cAAA,sCAEJF,EAAAC,EAAAC,cAAA,OAAKuN,MAAO,CAACzO,QAAQ,uBACjBgB,EAAAC,EAAAC,cAAC2f,GAAA,EAAD,CACItW,KAAM6V,EACNziB,QAAS,CAAEmjB,qBAAqB,QAKhD9f,EAAAC,EAAAC,cAAA,OAAKuN,MAAO,CAACvO,UAAU,SACnBc,EAAAC,EAAAC,cAACyf,GAAA,QAAD,KACI3f,EAAAC,EAAAC,cAAC0Y,GAAA,QAAD,KACI5Y,EAAAC,EAAAC,cAAC2Y,GAAA,QAAD,CAAKC,KAAM,IACP9Y,EAAAC,EAAAC,cAAA,OAAKuN,MAAO,CAACzO,QAAQ,uBACjBgB,EAAAC,EAAAC,cAAA,wBAEJF,EAAAC,EAAAC,cAAA,OAAKuN,MAAO,CAACzO,QAAQ,uBACjBgB,EAAAC,EAAAC,cAAC2f,GAAA,EAAD,CAAUtW,KAAMkW,MAGxBzf,EAAAC,EAAAC,cAAC2Y,GAAA,QAAD,CAAKC,KAAM,IACP9Y,EAAAC,EAAAC,cAAA,OAAKuN,MAAO,CAACzO,QAAQ,uBACjBgB,EAAAC,EAAAC,cAAA,uCAEJF,EAAAC,EAAAC,cAAA,OAAKuN,MAAO,CAACzO,QAAQ,uBACjBgB,EAAAC,EAAAC,cAAC2f,GAAA,EAAD,CAAUtW,KAAMmW,iBA5JjB1R,aCH3BiH,GAAU9T,KAAV8T,MAEO,SAAS8K,GAAQ1U,GAC5B,IAAI2U,EAAW3U,EAAM6S,WAAa,EAE5BhJ,EAAU,CACZ,CACIzc,MAAO,OACPma,UAAW,cACX/R,IAAK,eAET,CACIpI,MAAO,WACPma,UAAW,iBACX/R,IAAK,kBAET,CACIpI,MAAO,aACPma,UAAW,iBACX/R,IAAK,kBAET,CACIpI,MAAO,eACPma,UAAW,sBACX/R,IAAK,uBAET,CACIpI,MAAM,QACNma,UAAW,QACX/R,IAAK,SAET,CACIpI,MAAM,SACNma,UAAU,QACV/R,IAAK,MACL0T,OAAQ,SAAA0L,GAAG,OACPjgB,EAAAC,EAAAC,cAAA,YACIF,EAAAC,EAAAC,cAACggB,GAAA,EAAD,CAAK1e,MAAOye,GAAOD,EAAS,EAAI,QAAU,MAAOnf,IAAKof,GACjDA,GAAOD,EAAS,EAAI,OAAS,YAMlD,OACIhgB,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACyf,GAAA,QAAD,KACI3f,EAAAC,EAAAC,cAAA,OAAKI,UAAU,oBACXN,EAAAC,EAAAC,cAACigB,GAAD,CAAO3K,MAAO,GAAd,yBAIAxV,EAAAC,EAAAC,cAACwV,GAAA,EAAD,CACIG,YAAY,EACZG,OAAO,MACPd,QAASA,EACTU,WAAYvK,EAAMwS,gDCxD3B,SAASuC,GAAU/U,GAE9B,OACIrL,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACyf,GAAA,QAAD,KACI3f,EAAAC,EAAAC,cAAA,OAAKI,UAAU,oBACXN,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,uBAGJF,EAAAC,EAAAC,cAAA,WACKmL,EAAMgV,UAAU3f,IAAI,SAACwO,EAAEuI,GACpB,OACIzX,EAAAC,EAAAC,cAACyf,GAAA,QAAD,CAAM9e,IAAK4W,EAAGhK,MAAO,CAAC/K,aAAa,SAC/B1C,EAAAC,EAAAC,cAACogB,GAAA,EAAD,CACIC,OAAM,GAAA3jB,OAAKsS,EAAEsR,OAAO7lB,KAAd,OAAAiC,OAAwBsS,EAAEsR,OAAO9P,aAAjC,KACN5F,OACI9K,EAAAC,EAAAC,cAAC4K,GAAA,EAAD,CACIvH,IAAI,oFACJE,IAAKyL,EAAEsR,OAAO7lB,OAGtB0P,QACIrK,EAAAC,EAAAC,cAAA,YACIF,EAAAC,EAAAC,cAACugB,GAAA,EAAD,CAAM/M,KAAK,QAAQ4F,UAAQ,EAACuD,aAAc3N,EAAEwR,SAC5C1gB,EAAAC,EAAAC,cAAA,SACKgP,EAAEyR,+JCX/C1L,qDAAgB9T,KAAhB8T,OAAO2L,GAASzf,KAATyf,KA+OAxS,eAJS,SAAAzS,GAAK,MAAK,CAC9B4B,QAAS5B,EAAM4B,UAGqB,KAAzB6Q,CA5OI,SAAC/C,GAAU,IAAAwV,EACIC,mBAAS,CACvC/K,SAAS,EACTzL,MAAO,GACPyW,YAAY,EACZC,SAAU,GACVrmB,KAAM,GACNqf,SAAU,GACVF,KAAM,GACNmH,WAAY,QACZ3D,SAAU,GACV4D,cAAc,IAXYC,EAAAplB,OAAAqlB,GAAA,EAAArlB,CAAA8kB,EAAA,GACrBG,EADqBG,EAAA,GACXE,EADWF,EAAA,GAAAG,EAcFR,mBAAS,IAdPS,EAAAxlB,OAAAqlB,GAAA,EAAArlB,CAAAulB,EAAA,GAcrBtC,EAdqBuC,EAAA,GAcdC,EAdcD,EAAA,GA8H5B,OACEvhB,EAAAC,EAAAC,cAACuhB,EAAA,SAAD,KAEIzhB,EAAAC,EAAAC,cAAA,OAAKI,UAAU,aACXN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,OACXN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,aACXN,EAAAC,EAAAC,cAAA,OAAKuN,MAAO,CAACvO,UAAW,aArCnB,SAACwiB,GAClB,GAAGV,EAASD,WACR,OAAOY,KAAaC,KAAK,CACrBnV,QAAO,aACP/T,YAAa,+CACbgpB,cAqCPG,CAAa,eAEd7hB,EAAAC,EAAAC,cAAA,OAAKI,UAAU,aACXN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,OAEXN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,YAEXN,EAAAC,EAAAC,cAAC0gB,GAAD,qBACkBvV,EAAM9B,KAAKkH,KAG7BzQ,EAAAC,EAAAC,cAAC4hB,GAAD,CAAOtM,MAAO,GAAd,qBAEAxV,EAAAC,EAAAC,cAAA,OAAKuN,MAAO,CAAEsU,UAAW,QAASC,UAAW,WACzChiB,EAAAC,EAAAC,cAAC+b,GAAD,KACK5Q,EAAM9B,KAAK0Y,aAOxBjiB,EAAAC,EAAAC,cAAA,OAAKI,UAAU,YAEfN,EAAAC,EAAAC,cAAA,UACII,UAAU,gBACVmN,MAAO,CAACvO,UAAW,OAAQwD,aAAc,OAAQwI,MAAO,OACxD2G,SA5IC,SAACqQ,GAClB,IAAIC,EAAOD,EAAM5O,OAAOxD,MAEpBsS,EAAW,QAEF,OAATD,IACFC,EAAW,SAGA,OAATD,EACAC,EAAW,QAGE,OAARD,EACPC,EAAW,OAGK,OAATD,EACPC,EAAW,SAGI,OAARD,IACPC,EAAW,UAGbf,EAAYtlB,OAAAC,EAAA,EAAAD,CAAA,GAAKilB,EAAN,CAAgBC,WAAYmB,EAAUpI,SAAUmI,OAqH3CniB,EAAAC,EAAAC,cAAA,UAAQ4P,MAAM,GAAGuS,UAAQ,GAAzB,mBAEAriB,EAAAC,EAAAC,cAAA,UAAQ4P,MAAM,MAAd,iBACA9P,EAAAC,EAAAC,cAAA,UAAQ4P,MAAM,MAAd,mBACA9P,EAAAC,EAAAC,cAAA,UAAQ4P,MAAM,MAAd,yBACA9P,EAAAC,EAAAC,cAAA,UAAQ4P,MAAM,MAAd,mBACA9P,EAAAC,EAAAC,cAAA,UAAQ4P,MAAM,MAAd,mBAGJ9P,EAAAC,EAAAC,cAACoiB,GAAAriB,EAAD,CACIpI,KAAMmpB,EAASC,WACfziB,MAAM,UACN7D,KAAK,SACL2iB,SAAU0D,EAAS1D,SACnBiF,YAAa,CAAEC,gBAAiBC,KAChCC,SAAU,CAAC,CACP/nB,KAAM,WACNgoB,QAAS,CAAEC,IAAK,SAAUC,IAAK,aAC/BC,KAAM,SAAUC,GAGZ,IADA,IACAC,EAAA,EAAAC,EADqB,CAAC,YAAa,WAAY,UAAW,YAAa,YAAa,QACpFD,EAAAC,EAAApnB,OAAAmnB,IAAmC,CAA9B,IAAME,EAAMD,EAAAD,GAEbD,EAAOtiB,UAAU0iB,iBAAiBD,EAAQ,SAAUjX,GAAKA,EAAEmX,oBAAsB,OAI7FvR,SA9KO,SAACwR,GACxBhC,EAAYtlB,OAAAC,EAAA,EAAAD,CAAA,GAAKilB,EAAN,CAAgBlH,KAAMuJ,MA8KjBvT,MAAOkR,EAASlH,OAGpB9Z,EAAAC,EAAAC,cAAA,OAAKuN,MAAO,CAACvO,UAAW,OAAQwD,aAAc,UAE9C1C,EAAAC,EAAAC,cAAC0N,GAAA,QAAD,CACI7U,KAAK,UACL0a,QApJG,SAACyO,GAChBA,EAAMhW,iBACNmV,EAAYtlB,OAAAC,EAAA,EAAAD,CAAA,GAAKilB,EAAN,CACP1W,MAAO,GACPyW,YAAY,EACZG,cAAc,KAIlB3Y,GAAW,CACPe,IAAIvF,GAAKoD,gBACToC,KAAK,CACD+Z,OAAQjY,EAAMlO,KAAKjD,OACnBqpB,UAAWlY,EAAMlO,KAAKhD,UACtB9B,UAAWgT,EAAM9N,QAAQjC,gBACzBkoB,OAAQnY,EAAM9B,KAAKkH,IACnBgT,YAAazC,EAASlH,KACtB4J,YAAa1C,EAAShH,YAG7BzN,KAAK,SAACC,GACH6U,EAAYtlB,OAAAC,EAAA,EAAAD,CAAA,GACLilB,EADI,CAEP1W,MAAO,GACPyW,YAAY,EACZG,cAAc,KAGlBM,EAAShV,EAASjD,KAAKyV,SAI1BrS,MAAM,SAACrC,GACJ+W,EAAYtlB,OAAAC,EAAA,EAAAD,CAAA,GACLilB,EADI,CAEP1W,MAAO,GACPyW,YAAY,EACZG,cAAc,QAgHV5H,SAAU0H,EAASD,YAHvB,aAYPC,EAASE,aACNlhB,EAAAC,EAAAC,cAAA,OAAKI,UAAU,aACXN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,OACXN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,aACXN,EAAAC,EAAAC,cAAA,OAAKuN,MAAO,CAACvO,UAAW,OAAQuW,UAAW,WACvCzV,EAAAC,EAAAC,cAAC4hB,GAAD,CAAOtM,MAAO,GAAd,WAEAxV,EAAAC,EAAAC,cAAA,OAAKuN,MAAO,CAAClO,OAAQ,QAASmD,aAAa,OAAQ0Y,OAAQ,oBAAqBlQ,MAAO,SAClF8T,EAAMnjB,OAAS,EAAImE,EAAAC,EAAAC,cAAA,OAAKuN,MAAO,CAAEsU,UAAW,QAASC,UAAW,WAlH1E,WACf,IAAIvK,EAAI,EACR,OAAOuH,EAAMte,IAAI,SAAC6I,GACd,OAAOvJ,EAAAC,EAAAC,cAAA,OAAKI,UAAU,aACtBN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,OACXN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,YACXN,EAAAC,EAAAC,cAAA,0BAAqBuX,KAGzBzX,EAAAC,EAAAC,cAAA,OAAKI,UAAU,YACXN,EAAAC,EAAAC,cAAA,sBAAiBqJ,EADrB,IAC4B,MACd,WAATA,EACGvJ,EAAAC,EAAAC,cAAC5J,EAAA,QAAD,CAAMyC,KAAK,eAAeyF,MAAM,UAAUmlB,aAAa,YACrD3jB,EAAAC,EAAAC,cAAC5J,EAAA,QAAD,CAAMyC,KAAK,eAAeyF,MAAM,UAAUmlB,aAAa,iBAqG8BC,IAAsB,UAOzH,QCrMCC,GAAe,SAACpV,EAAGC,GAAJ,OAAS,SAAA7E,GACjCrB,GAAK,CACDc,IAAIvF,GAAK6B,2BACT2D,KAAK,CACDrP,OAAOuU,EACPtU,UAAUuU,KAEfnC,KAAK,SAACC,GAEL,GAAGA,EAASjD,KAAKa,QACb,GAAGoC,EAASjD,KAAKA,KAAKua,YAActX,EAASjD,KAAKA,KAAKjP,eACnDuP,EAAS,CACL9Q,KAAK,kBACLoD,SAAUqQ,EAASjD,KAAKA,KAAK9P,WAC7B2C,SAAUoQ,EAASjD,KAAKA,KAAKjP,eAC7B+B,SAAUmQ,EAASjD,KAAKA,KAAK7P,cAC7B4C,SAAUkQ,EAASjD,KAAKA,KAAKua,UAC7BtmB,SAAU,EACVC,SAAU,EACVC,SAAU8O,EAASjD,KAAKA,KAAKrQ,gBAGjC,CACA,IAAI8P,GArEFkG,EAqEiB1C,EAASjD,KAAKA,KAAKwa,QAjE3C,CACHvpB,OAHSwpB,KAAKC,MAAM/U,EAAI,IAIxBzU,OAHSypB,OAAOC,OAAOjV,EAAI,IAAIN,MAAM,EAAG,MAmEhC/E,EAAS,CACL9Q,KAAM,kBACNoD,SAAUqQ,EAASjD,KAAKA,KAAK9P,WAC7B2C,SAAUoQ,EAASjD,KAAKA,KAAKjP,eAC7B+B,SAAUmQ,EAASjD,KAAKA,KAAK7P,cAC7B4C,SAAUkQ,EAASjD,KAAKA,KAAKua,UAC7BtmB,SAAUwL,EAAExO,OACZiD,SAAUuL,EAAEvO,OACZiD,SAAU8O,EAASjD,KAAKA,KAAKrQ,iBAMrC2Q,EAAS,CACL9Q,KAAM,eArFL,IAACmW,IAyFbvC,MAAM,SAACP,GACJvC,EAAS,CACL9Q,KAAM,mBA2GLqrB,GAAiB,SAAC3V,GAC3B,MAAO,CACH1V,KAAM,kBACNwD,QAASkS,IAWJ4V,GAAiB,SAACra,GAC3B,MAAO,CACHjR,KAAM,yBACNwD,QAASyN,ICvMTsQ,YAAYC,KAAZD,SACJgK,GAAO,EAELC,eACF,SAAAA,EAAYlZ,GAAO,IAAAO,EAAA7P,OAAA4M,EAAA,EAAA5M,CAAA6M,KAAA2b,IACjB3Y,EAAA7P,OAAA8P,GAAA,EAAA9P,CAAA6M,KAAA7M,OAAA+P,GAAA,EAAA/P,CAAAwoB,GAAAxY,KAAAnD,KAAMyC,KAyFRmZ,iBAAmB,SAAAvY,GACf,IAAMpU,EAAOoU,EAAEqH,OAAOxD,MACtBlE,EAAKc,SAAS,CAAE7U,UAzFlB,IAAIsQ,EAAS,CACXjO,OAAQ0R,EAAKP,MAAM9N,QAAQrD,OAC3BC,UAAWyR,EAAKP,MAAM9N,QAAQpD,WALf,OAQjByR,EAAKjQ,MAAQ,CACX9D,KAAM,OACN4sB,YAAatc,EACbuc,SAAU,EACVC,MAAM,GAZS/Y,oFAiBA,IAAAoJ,EAAApM,KACT0a,EAAS1a,KAAKyC,MAAM9N,QAAQrD,OAChB0O,KAAKyC,MAAM9N,QAAQpD,UAErCyO,KAAKyC,MAAMuZ,YAAYhc,KAAKyC,MAAM9N,QAAQrD,OAAO0O,KAAKyC,MAAM9N,QAAQpD,WAEpE,IAAI0qB,EAAU,EAGdC,KAAEC,UAAUC,WAAW,SAAA/Y,GACnB4Y,IACA7P,EAAKtI,SAAS,CACVuY,aAAcJ,EACdF,MAAM,IAGNE,EAAU,GAAGznB,QAAQC,IAAI,YAIjCynB,KAAEC,UAAUG,MAAM,WACFJ,KAAEC,UAGRI,GAAG,iBAAkB,SAAUlZ,GAEjC,OADAA,EAAEC,kBACK,IAIX4Y,KAAE,cAAcK,GAAG,iBAAkB,SAASlZ,GAC1CmZ,MAAM,2BACNnZ,EAAEC,qBAKV4Y,KAAE,WACEA,KAAElc,MAAMyc,KAAK,cAAe,SAASpZ,GACjCA,EAAEC,qBAIVtD,KAAK8D,SAAS,CAACqJ,SAAS,IAGY,OAAjClN,aAAaC,QAAQ,QACpBD,aAAaI,QAAQ,OAAQ,IAAIrH,MAGjC0iB,GAAOzb,aAAaC,QAAQ,QAGhCP,GAAW,CACPe,IAAIvF,GAAKmD,yBACTqC,KAAK,CACD+Z,OAAQA,KAGf/W,KAAK,SAACC,GACH,IAAGA,EAASjD,KAAKa,QAKb,OAAOL,GAAM,UAAU,WAAWyC,EAASjD,KAAKkD,SAJhDuI,EAAK3J,MAAMia,oBAAmB,EAAM9Y,EAASjD,KAAKxO,WAClDia,EAAKtI,SAAS,CAACgY,SAAUlY,EAASjD,KAAK+a,SAM9C3X,MAAM,SAACrC,GACJ,OAAOP,GAAM,QAAQ,SAAS,mDAS7B,IAAA4Q,EAAA/R,KAAA2V,EACoB3V,KAAKjN,MAAxB9D,EADD0mB,EACC1mB,KAAM6sB,EADPnG,EACOmG,SAIVa,EAAa,EAOjB,OAHgBA,EAAH,KAFbjB,GAAOzb,aAAaC,QAAQ,UAEC,IAAIlH,MAAO4jB,UAAqB,IAATd,EAClC,IAAI9iB,KAAK0iB,IAAMkB,UAAoB,IAATd,EAG1C1kB,EAAAC,EAAAC,cAACuhB,EAAA,SAAD,KACIzhB,EAAAC,EAAAC,cAAA,OAAKI,UAAU,aACXN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,OACXN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,aACXN,EAAAC,EAAAC,cAAA,OAAKuN,MAAO,CAACvO,UAAW,aAKpCc,EAAAC,EAAAC,cAAA,OAAKI,UAAU,aACXN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,OACXN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,aACXN,EAAAC,EAAAC,cAAC0a,GAAA,EAAD,CAAU7E,QAASnN,KAAKyC,MAAM9N,QAAQrC,WAAY2f,QAAM,EAAC/P,QAAM,GAE/D9K,EAAAC,EAAAC,cAAA,OAAKuN,MAAO,CAAClO,OAAQ,SACjBS,EAAAC,EAAAC,cAAA,OAAKI,UAAU,aACXN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,OACXN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,YACXN,EAAAC,EAAAC,cAAA,MAAI7G,GAAG,QACH2G,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAC5J,EAAA,QAAD,CAAMmX,MAAO,CAAC6P,SAAU,QAASvkB,KAAK,UAG1CiH,EAAAC,EAAAC,cAAA,WAIAF,EAAAC,EAAAC,cAAA,qBAIAF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAACulB,GAAAxlB,EAAD,CACIwN,MAAO,CAAE6P,SAAU,IACnBhK,OAAQiS,EACRG,MAAO,kBAAM/K,EAAKtP,MAAMsa,aAAahL,EAAKtP,MAAM9N,QAAQrD,OAAOygB,EAAKtP,MAAM9N,QAAQpD,iBAMlG6F,EAAAC,EAAAC,cAAA,OAAKI,UAAU,YACXN,EAAAC,EAAAC,cAACkV,GAAA,EAAD,CACI3c,MAAM,+BACN8c,UAAW,WACPoF,EAAKtP,MAAMsa,aAAahL,EAAKtP,MAAM9N,QAAQrD,OAAOygB,EAAKtP,MAAM9N,QAAQpD,WACrE0O,aAAaM,WAAW,SAE5BmM,OAAO,MACPD,WAAW,MAEXrV,EAAAC,EAAAC,cAAC0N,GAAA,QAAD,CAAQ7U,KAAK,WAAb,uBAUhBiH,EAAAC,EAAAC,cAAA,OAAKuN,MAAO,CAAC/K,aAAc,UAE3B1C,EAAAC,EAAAC,cAAC4a,GAAA,EAAD,CAAMC,iBAAiB,IAAI6K,YAAa/tB,EAAM4V,MAAO,CAAElO,OAAQ,SAC1DxD,OAAAc,EAAA,EAAAd,CAAI8pB,MAAMC,KAAK,CAAEjqB,OAAQ+M,KAAKyC,MAAM9N,QAAQpC,WAAWU,QAAU,SAACkqB,EAAGtO,GAAJ,OAAUA,KAAI/W,IAAI,SAAA+W,GAAC,OACjFzX,EAAAC,EAAAC,cAAC8lB,GAAD,CAAShL,IAAG,WAAApe,OAAa6a,EAAE,GAAK5W,IAAK4W,GAArC,WAEaA,EAAE,EAEXzX,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAC+lB,GAAD,CACIplB,IAAK4W,EACLlO,KAAMoR,EAAKtP,MAAM9N,QAAQpC,WAAWsc,GACpCta,KAAMwd,EAAKhf,MAAM8oB,sBAWjDzkB,EAAAC,EAAAC,cAACgmB,GAAAjmB,EAAD,CACI0kB,KAAM/b,KAAKjN,MAAMgpB,KACjBlsB,MAAM,IACN+b,KAAK,gEACLe,UAAW,kBAAMoF,EAAKjO,SAAS,CAAEiY,MAAM,eArMnC5W,IAAMC,WAiNXI,eAJS,SAAAzS,GAAK,MAAK,CAC9B4B,QAAS5B,EAAM4B,UAGqB,CACpC+nB,mBDV8B,SAACa,EAAM5c,GACrC,MAAO,CACHxQ,KAAM,cACNoD,SAAUgqB,EACV/pB,SAAUmN,ICOdoc,aDwBwB,SAACS,EAAKC,GAAN,OAAc,SAAAxc,GACtCrB,GAAK,CACDc,IAAG,GAAA1M,OAAKmH,GAAKsD,uBACbkC,KAAM,CACF+Z,OAAQ8C,EACR7C,UAAW8C,KAGlB9Z,KAAK,SAACC,GACCA,EAASjD,KAAKa,QACdP,EAAS,CACL9Q,KAAM,gBACNwD,SAAS,IAIbwN,GAAM,QAAS,SAAUyC,EAASjD,KAAKkD,WAG9CE,MAAM,SAACrC,GACJP,GAAM,QAAS,SAAU,oBC3C7B6a,YDHuB,SAACwB,EAAKC,GAAN,OAAc,SAAAxc,GACrCrB,GAAK,CACDc,IAAG,GAAA1M,OAAKmH,GAAKqD,sBACbmC,KAAM,CACF+Z,OAAQ8C,EACR7C,UAAW8C,KAGlB9Z,KAAK,SAACC,GACCA,EAASjD,KAAKa,QAEdP,EAAS,CACL9Q,KAAM,eACNwD,QAASiQ,EAASjD,KAAKA,KAAKlR,YAIhC0R,GAAM,QAAS,SAAUyC,EAASjD,KAAKkD,WAG9CE,MAAM,SAACrC,GACJP,GAAM,QAAS,SAAU,qBCrBlBqE,CAIZmW,IClOKlV,WAAaC,WAAbD,UACA4F,GAAgB9T,KAAhB8T,MAAO2L,GAASzf,KAATyf,KAET0F,eACF,SAAAA,EAAYjb,GAAM,IAAAO,EAAA,OAAA7P,OAAA4M,EAAA,EAAA5M,CAAA6M,KAAA0d,IACd1a,EAAA7P,OAAA8P,GAAA,EAAA9P,CAAA6M,KAAA7M,OAAA+P,GAAA,EAAA/P,CAAAuqB,GAAAva,KAAAnD,KAAMyC,KAQVkb,iBAAiB,SAACC,GAEd5a,EAAKc,SAAS,CAAE8Z,KAAKA,KAXP5a,EAalB6a,gBAAgB,SAACC,GACb9a,EAAKc,SAAS,CAAEga,QAAQA,EAAQpT,OAAOxD,SAdzBlE,EAiBlB+a,eAAe,WACX/a,EAAKc,SAAS,CAAEqJ,SAAS,IADV,IAAAwI,EAES3S,EAAKjQ,MAAvB6qB,EAFSjI,EAETiI,KAAME,EAFGnI,EAEHmI,QAEF,IAAPF,GAAYE,EAAQ7qB,OAAO,GAC1B2M,GAAK,CACDc,IAAKvF,GAAKuC,cACViD,KAAM,CACFrP,OAAQ0R,EAAKP,MAAM9N,QAAQrD,OAC3BsmB,OAAQ5U,EAAKP,MAAM9N,QAAQpD,UAC3BumB,OAAQ8F,EACR7F,SAAU+F,KAGjBna,KAAK,SAACC,GACCA,EAASjD,KAAKa,SACdwB,EAAKc,SAAS,CAAEqJ,SAAS,IACzBhM,GAAM,UAAW,UAAW,4BAC5B6B,EAAKP,MAAMgZ,gBAAe,KAG1BzY,EAAKc,SAAS,CAAEqJ,SAAS,IACzBhM,GAAM,QAAS,SAAUyC,EAASjD,KAAKkD,YAE5CE,MAAM,SAACrC,GAENP,GAAM,QAAS,SAAU,gBACzB6B,EAAKc,SAAS,CAAEqJ,SAAS,OA1CjCnK,EAAKjQ,MAAQ,CACT6qB,KAAM,EACNE,QAAS,YACT3Q,SAAS,GALCnK,yEAqDd,IAAMgb,EAAO,CAAC,WAAY,MAAO,SAAU,OAAQ,aACnD,OACI5mB,EAAAC,EAAAC,cAAC0Y,GAAA,QAAD,KACI5Y,EAAAC,EAAAC,cAAC2Y,GAAA,QAAD,CAAKC,KAAM,IACP9Y,EAAAC,EAAAC,cAAA,OACIuN,MAAO,CAAEvC,MAAO,MAAOlJ,OAAQ,OAAQyT,UAAW,OAAQzW,QAAS,SAEnEgB,EAAAC,EAAAC,cAAC2mB,GAAD,CAAOrR,MAAO,GAAd,iBACAxV,EAAAC,EAAAC,cAAA,OAAKI,UAAU,MACXN,EAAAC,EAAAC,cAAA,YACIF,EAAAC,EAAAC,cAAC4mB,GAAD,oCADJ,IAC6C9mB,EAAAC,EAAAC,cAAA,WACzCF,EAAAC,EAAAC,cAACugB,GAAA,EAAD,CAAMsG,SAAUH,EAAM/U,SAAUjJ,KAAK2d,iBAAkBzW,MAAOlH,KAAKjN,MAAM6qB,OACxE5d,KAAKjN,MAAM6qB,KAAOxmB,EAAAC,EAAAC,cAAA,QAAMI,UAAU,iBAAiBsmB,EAAKhe,KAAKjN,MAAM6qB,KAAO,IAAa,KAIhGxmB,EAAAC,EAAAC,cAAC2C,GAAA,EAAD,MAEA7C,EAAAC,EAAAC,cAAA,OAAKI,UAAU,MACXN,EAAAC,EAAAC,cAAC8mB,GAAD,CAAUjV,KAAM,EAAGF,SAAUjJ,KAAK6d,gBAAiB3W,MAAOlH,KAAKjN,MAAM+qB,WAGzE1mB,EAAAC,EAAAC,cAAC2C,GAAA,EAAD,MAEA7C,EAAAC,EAAAC,cAAA,OAAKI,UAAU,MACXN,EAAAC,EAAAC,cAAC0N,GAAA,QAAD,CAAQ7U,KAAK,UAAU0a,QAAS7K,KAAK+d,eAAgB5Q,QAASnN,KAAKjN,MAAMoa,SAAzE,qBA/EL/H,aA6FRI,eAJS,SAAAzS,GAAK,MAAK,CAC9B4B,QAAU5B,EAAM4B,UAGmB,CACnC8mB,mBADWjW,CAEZkY,ICrFKrR,oBAAU9T,KAAV8T,OACAgS,GAAUC,KAAVD,MAEFE,eACF,SAAAA,EAAY9b,GAAM,IAAAO,EAAA,OAAA7P,OAAA4M,EAAA,EAAA5M,CAAA6M,KAAAue,IACdvb,EAAA7P,OAAA8P,GAAA,EAAA9P,CAAA6M,KAAA7M,OAAA+P,GAAA,EAAA/P,CAAAorB,GAAApb,KAAAnD,KAAMyC,KAsFV+b,aAAa,WACTxb,EAAKc,SAAS,CACV2a,UAAU,KAzFAzb,EA6FlB0b,UAAY,SAACC,GACT3b,EAAKc,SAAS,CACV8a,iBAAkBD,EAClBF,UAAU,KAhGAzb,EAoGlBmE,SAAW,SAAClP,KAlGR+K,EAAKjQ,MAAM,CACPoa,SAAQ,EACRxM,KAAK,GACLke,WAAW,KACXJ,UAAS,EACTG,iBAAiB,MAPP5b,oFAWC,IAAAoJ,EAAApM,KACXzO,EAAYyO,KAAKyC,MAAM9N,QAAQpD,WAAayO,KAAKyC,MAAM7O,KAAKgkB,OAAO/P,IACnEvW,EAAS0O,KAAKyC,MAAM9N,QAAQrD,QAAU0O,KAAKyC,MAAM7O,KAAKgkB,OAAOtmB,OAGjE0O,KAAKyC,MAAMqc,gBAAgB9e,KAAKyC,MAAM9N,QAAQrD,OAAQ0O,KAAKyC,MAAM9N,QAAQrD,QAEzE0O,KAAK8D,SAAS,CACVqJ,SAAQ,IAGZ,IAAI4R,EAAKnf,GAAK,CACVc,IAAKvF,GAAKmC,iBACVqD,KAAM,CACFiX,OAAQrmB,EACRD,OAAQA,KAIZ0tB,EAAKpf,GAAK,CACVc,IAAG,GAAA1M,OAAImH,GAAK+B,6BACZyD,KAAK,CACDlQ,GAAGa,KAIP2tB,EAAKrf,GAAK,CACVc,IAAG,GAAA1M,OAAKmH,GAAKsC,uBACbkD,KAAM,CACFiX,OAAQrmB,EACRD,OAAQA,KAIhB4tB,QAAQC,IAAI,CAACJ,EAAIC,EAAIC,IAChBtb,KAAK,SAAA2C,GAQN,GAJA8F,EAAKtI,SAAS,CACVqJ,SAAQ,IAGT7G,EAAE,GAAG3F,KAAKa,SAAW8E,EAAE,GAAG3F,KAAKa,QAAQ,CACtC,IAAI2b,EAAI7W,EAAE,GAAG3F,KAAKA,KACdye,EAAI9Y,EAAE,GAAG3F,KAAK0e,OAAOA,OAAOvnB,IAAI,SAACgd,EAAIjG,GACrC,OAAO1b,OAAAC,EAAA,EAAAD,CAAA,GACA2hB,EACAqI,EAAEtO,MAMbzC,EAAKtI,SAAS,CACVnD,KAAMye,EACNP,WAAYvY,EAAE,GAAG3F,KAAK0e,OAAOjJ,QAG9B9P,EAAE,GAAG3F,KAAKa,SACT4K,EAAK3J,MAAMgZ,eAAenV,EAAE,GAAG3F,KAAKkG,aAIxC1F,GAAM,QAAQ,SAAT,GAAAnN,OAAqBsS,EAAE,GAAG3F,KAAKa,QAAU,GAAG8E,EAAE,GAAG3F,KAAKkD,QAAtD,SAAA7P,OAAqEsS,EAAE,GAAG3F,KAAKa,QAAU,GAAG8E,EAAE,GAAG3F,KAAKkD,YAGlHE,MAAM,SAACP,GAEJ4I,EAAKtI,SAAS,CACVqJ,SAAQ,IAEZhM,GAAM,QAAQ,SAAS,mDAqBvB,IAAA4Q,EAAA/R,KACEsM,EAAU,CACZ,CACIzc,MAAO,gBACPoI,IAAK,SACL0T,OAAQ,SAACC,EAAMT,GAAP,OACJ/T,EAAAC,EAAAC,cAAC0N,GAAA,QAAD,CACIuH,MAAM,SACN7e,KAAK,OACLyC,KAAK,UACL2a,KAAK,QACLD,QAAS,WAAQkH,EAAK2M,UAAU9S,EAAK+S,UAIjD,CACI9uB,MAAO,WACPma,UAAW,OACX/R,IAAK,QAET,CACIpI,MAAO,kBACPoI,IAAK,gBACL+R,UAAW,gBACX2B,OAAQ,SAAA2T,GAAI,OACRloB,EAAAC,EAAAC,cAAA,YACKgoB,EAAKxnB,IAAI,SAAAuf,GACN,OACIjgB,EAAAC,EAAAC,cAACggB,GAAA,EAAD,CAAK1e,MAAM,QAAQX,IAAKof,GACnBA,EAAIkI,oBAO7B,CACI1vB,MAAO,gBACPoI,IAAK,cACL+R,UAAW,cACX2B,OAAQ,SAAA2T,GAAI,OACRloB,EAAAC,EAAAC,cAAA,YACKgoB,EAAKxnB,IAAI,SAAAuf,GACN,OACIjgB,EAAAC,EAAAC,cAACggB,GAAA,EAAD,CAAK1e,MAAM,OAAOX,IAAKof,GAClBA,EAAIkI,oBAO7B,CACI1vB,MAAO,YACPma,UAAW,YACX/R,IAAK,aAET,CACIpI,MAAO,cACPma,UAAW,cACX/R,IAAK,eAET,CACIpI,MAAO,SACPma,UAAW,YACX/R,IAAK,YACL0T,OAAQ,SAAA2T,GAAI,OACRloB,EAAAC,EAAAC,cAAA,YAEQgoB,EAEIloB,EAAAC,EAAAC,cAAC5J,EAAA,QAAD,CAAMyC,KAAK,eAAeyF,MAAM,UAAUmlB,aAAa,YAEvD3jB,EAAAC,EAAAC,cAAC5J,EAAA,QAAD,CAAMyC,KAAK,eAAeyF,MAAM,UAAUmlB,aAAa,YAU/E,OACI3jB,EAAAC,EAAAC,cAAA,OAAKI,UAAU,sBACXN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,wBACVsI,KAAKyC,MAAM+c,SAAS3xB,WACjBuJ,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACmoB,GAAD,CAAO/nB,UAAU,uBAAuBkV,MAAO,GAA/C,UACAxV,EAAAC,EAAAC,cAACib,GAAA,EAAD,CAAcxF,UAAQ,EAACld,MAAO,KAAM2iB,QAAM,EAAC1H,KAAK,SAC5C1T,EAAAC,EAAAC,cAACib,GAAA,EAAajO,KAAd,CAAmBC,MAAM,QACpBvE,KAAKyC,MAAM7O,KAAKgkB,OAAO7lB,MAG5BqF,EAAAC,EAAAC,cAACib,GAAA,EAAajO,KAAd,CAAmBC,MAAM,YACpBvE,KAAKyC,MAAM7O,KAAKgkB,OAAO5lB,SAG5BoF,EAAAC,EAAAC,cAACib,GAAA,EAAajO,KAAd,CAAmBC,MAAM,WACpBvE,KAAKyC,MAAM7O,KAAKgkB,OAAO3lB,SAG5BmF,EAAAC,EAAAC,cAACib,GAAA,EAAajO,KAAd,CAAmBC,MAAM,SACpBvE,KAAKjN,MAAM8rB,aAIpBznB,EAAAC,EAAAC,cAAA,WAEAF,EAAAC,EAAAC,cAACooB,GAAA,EAAD,CAAUzW,SAAUjJ,KAAKmH,UACrB/P,EAAAC,EAAAC,cAAC+mB,GAAD,CAAOsB,OAAO,qBAAqB1nB,IAAI,KACnCb,EAAAC,EAAAC,cAACwV,GAAA,EAAD,CACIhC,KAAK,QACLsC,OAAO,MACPD,QAASnN,KAAKjN,MAAMoa,QACpBb,QAASA,EACTU,WAAYhN,KAAKjN,MAAM4N,KACvBsM,YAAY,OAInB,KAITjN,KAAKyC,MAAM+c,SAAS3xB,WAAa,KAC3BmS,KAAKyC,MAAM9N,QAAQtC,iBACrB+E,EAAAC,EAAAC,cAAC0Y,GAAA,QAAD,CAAKjV,QAAQ,eAAelC,MAAM,UAC9BzB,EAAAC,EAAAC,cAAC2Y,GAAA,QAAD,CAAK/X,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIwa,GAAI,GAAID,GAAI,IACrCvb,EAAAC,EAAAC,cAAC+nB,GAAA,EAAD,CACIxY,OAAO,UACPhX,MAAM,kDACN+vB,SAAS,kCAIrBxoB,EAAAC,EAAAC,cAAA,WAGQ0I,KAAKyC,MAAM9N,QAAQnC,SACnB4E,EAAAC,EAAAC,cAAA,WAEQ0I,KAAKyC,MAAM9N,QAAQlC,gBAAkB2E,EAAAC,EAAAC,cAACygB,GAAD,MAAe3gB,EAAAC,EAAAC,cAACuoB,GAAD,OAG1DzoB,EAAAC,EAAAC,cAACygB,GAAD,OAKlB3gB,EAAAC,EAAAC,cAAC+V,GAAA,EAAD,CACIK,gBAAgB,EAChBpL,MAAM,MACNuC,MAAO,CAAC4I,IAAI,QACZ5d,MAAM,mBACN2b,QAASxL,KAAKjN,MAAM0rB,SACpBnR,KAAMtN,KAAKwe,aACXhR,SAAUxN,KAAKwe,aACfxnB,OAAQ,MAERI,EAAAC,EAAAC,cAACwoB,GAAD,CAAuBnB,IAAK3e,KAAKjN,MAAM6rB,6BAzQ1CzZ,IAAMC,WAkRrB2a,eACF,SAAAA,EAAYtd,GAAM,IAAAud,EAAA,OAAA7sB,OAAA4M,EAAA,EAAA5M,CAAA6M,KAAA+f,IACdC,EAAA7sB,OAAA8P,GAAA,EAAA9P,CAAA6M,KAAA7M,OAAA+P,GAAA,EAAA/P,CAAA4sB,GAAA5c,KAAAnD,KAAMyC,KACD1P,MAAM,CACPktB,UAAS,EACTC,SAAS,MAJCF,oFAQC,IAAAG,EAAAngB,KACfA,KAAK8D,SAAS,CACVmc,UAAS,IAEbrgB,GAAK,CACDc,IAAIvF,GAAKoC,iCACToD,KAAK,CACDge,IAAI3e,KAAKyC,MAAMkc,OAGtBhb,KAAK,SAACC,GAEAA,EAASjD,KAAKa,QACb2e,EAAKrc,SAAS,CACVoc,SAAStc,EAASjD,KAAKA,KAAK,KAIhCQ,GAAM,QAAQ,UAAUyC,EAASjD,KAAKkD,SAE1Csc,EAAKrc,SAAS,CACVmc,UAAS,MAGhBlc,MAAM,SAACrC,GACJye,EAAKrc,SAAS,CACVmc,UAAU,IAGd9e,GAAM,QAAQ,UAAU,mDAK5B,IAAMgS,EAAO,CAAC,IAAK,IAAK,IAAK,IAAK,KAC9BC,EAAapT,KAAKjN,MAAMmtB,SAE5B,OAAgB,OAAb9M,EAEKhc,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKI,UAAU,+BACXN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,uBACV0b,EAAWjf,MAEfif,EAAW1D,QACRtY,EAAAC,EAAAC,cAAA,OAAKI,UAAU,iCACXN,EAAAC,EAAAC,cAAA,OAAKuD,IAAI,iBAAiBnD,UAAU,uBAAuBiD,IAAKyY,EAAW1D,WAE7E,KAENtY,EAAAC,EAAAC,cAAA,WACK8b,EAAWrf,QAAQ+D,IAAI,SAACwO,EAAEuI,GACvB,OACIzX,EAAAC,EAAAC,cAAA,OAAKW,IAAK4W,GACNzX,EAAAC,EAAAC,cAAC0Y,GAAA,QAAD,CAAK7f,KAAK,OAAO4K,QAAQ,SAASrD,UAAU,0BACxCN,EAAAC,EAAAC,cAAC2Y,GAAA,QAAD,CAAKC,KAAM,GAEH5J,EAAElS,SAASgD,EAAAC,EAAAC,cAAC0N,GAAA,QAAD,CAAQtN,UAAU,QAAQ6U,MAAM,UAAU4G,EAAKtE,IAAazX,EAAAC,EAAAC,cAAC0N,GAAA,QAAD,CAAQ7U,KAAK,UAAUoc,MAAM,UAAU4G,EAAKtE,KAI1HvI,EAAEiJ,OACCnY,EAAAC,EAAAC,cAAC2Y,GAAA,QAAD,CAAKC,KAAM,EAAGrL,MAAO,CAACzO,QAAQ,QAC1BgB,EAAAC,EAAAC,cAAA,OAAKuD,IAAI,iBAAiBnD,UAAU,uBAAuBiD,IAAK2L,EAAEiJ,UAGtE,KAEHjJ,EAAEiJ,OACCnY,EAAAC,EAAAC,cAAC2Y,GAAA,QAAD,CAAKC,KAAM,IACP9Y,EAAAC,EAAAC,cAAC+b,GAAD,KAAW/M,EAAEgJ,UAGjBlY,EAAAC,EAAAC,cAAC2Y,GAAA,QAAD,CAAKC,KAAM,IACP9Y,EAAAC,EAAAC,cAAC+b,GAAD,KAAW/M,EAAEgJ,iBAgBjDlY,EAAAC,EAAAC,cAAA,OAAKI,UAAU,oBACXN,EAAAC,EAAAC,cAAC0a,GAAA,EAAD,CAAUC,QAAM,IAChB7a,EAAAC,EAAAC,cAAC0a,GAAA,EAAD,CAAUC,QAAM,YArGA9M,IAAMC,WAiH3BI,eALS,SAAAzS,GAAK,MAAK,CAC9BysB,SAAUzsB,EAAMa,KAChBe,QAAU5B,EAAM4B,UAGmB,CACnC8mB,kBACAqD,gBHpI2B,SAACtB,EAAKC,GAAN,OAAc,SAAAxc,GACzCrB,GAAK,CACDc,IAAG,GAAA1M,OAAKmH,GAAKuD,oBACbiC,KAAM,CACF+Z,OAAQ8C,EACR7C,UAAW8C,KAGlB9Z,KAAK,SAACC,GACCA,EAASjD,KAAKa,QACdP,EAAS,CACL9Q,KAAM,gBACNwD,QAASiQ,EAASjD,KAAKkD,YAUlCE,MAAM,SAACrC,GACJlN,QAAQC,IAAIiN,QG2GL8D,CAGZ+Y,IC5ZY,SAASpH,GAAS1U,GAC7B,OACIrL,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACyf,GAAA,QAAD,KACI3f,EAAAC,EAAAC,cAAA,OAAKI,UAAU,oBACV+K,EAAMwS,MAAMnd,IAAI,SAAA6I,GAAI,OACjBvJ,EAAAC,EAAAC,cAAC8oB,GAAD,CAAaxsB,KAAM+M,EAAM1I,IAAK0I,uDC8LvC0f,YAjLM,SAAC5d,GAAU,IAAAwV,EACJC,mBAAS,IADLK,EAAAplB,OAAAqlB,GAAA,EAAArlB,CAAA8kB,EAAA,GACvBllB,EADuBwlB,EAAA,GAChB+H,EADgB/H,EAAA,GAAAG,EAEAR,oBAAS,GAFTS,EAAAxlB,OAAAqlB,GAAA,EAAArlB,CAAAulB,EAAA,GAEd6H,GAFc5H,EAAA,GAAAA,EAAA,IAAA6H,EAGctI,oBAAS,GAHvBuI,EAAAttB,OAAAqlB,GAAA,EAAArlB,CAAAqtB,EAAA,GAAAC,EAAA,GAAAA,EAAA,GAkB9BC,oBAAU,WACRC,KAAMC,eAENL,GAAW,GAEX5gB,GAAW,CACTe,IAAKvF,GAAKwD,sBACVgC,KAAM,CACJ+Z,OAAQjY,EAAMhS,MAGjBkT,KAAK,SAACC,GACFA,EAASjD,KAAKa,UACf8e,EAAS,CACPjB,OAAQzb,EAASjD,KAAK0e,OACtBwB,WAAYjd,EAASjD,KAAKkgB,aAE5BN,GAAW,MAGdxc,MAAM,SAACrC,GAEN,OADAlN,QAAQC,IAAIiN,GACLP,GAAM,QAAQ,SAAS,mBAE/B,IAqCH,OACE/J,EAAAC,EAAAC,cAACuhB,EAAA,SAAD,KACEzhB,EAAAC,EAAAC,cAACwpB,GAAAzpB,EAAD,CACExH,MAAM,2BACNyc,QAAS,CACP,CAAEzc,MAAO,KAAMkxB,MAAO,YACtB,CAAElxB,MAAO,OAAQkxB,MAAO,aACxB,CAAElxB,MAAO,QAASkxB,MAAO,gBACzB,CAAElxB,MAAO,cAAekxB,MAAO,YAC/B,CACElxB,MAAO,WACP8b,OAAQ,SAAAqV,GACN,IAAIzH,EAAOyH,EAAQzH,KAEfnI,EAAW,QAiBf,MAfa,OAATmI,EACFnI,EAAW,QAEK,OAATmI,EACPnI,EAAW,QAEI,OAARmI,EACPnI,EAAW,OAEK,OAATmI,EACPnI,EAAW,SAEI,OAARmI,IACPnI,EAAW,UAENA,IAGX,CAAEvhB,MAAO,QAASkxB,MAAO,SACzB,CACElxB,MAAO,wBACP8b,OAAQ,SAAAqV,GACN,IAAI3pB,EAAI2b,IAAOgO,EAAQvxB,WAEvB,OADQujB,IAAOgO,EAAQC,aACdC,KAAK7pB,EAAG,aAGrB,CACExH,MAAO,aACPkxB,MAAO,YACPpV,OAAQ,SAAAqV,GAAO,OAAIhO,IAAOgO,EAAQvxB,WAAWyjB,OAAO,6BAEtD,CACErjB,MAAO,cACPkxB,MAAO,cACPpV,OAAQ,SAAAqV,GAAO,OAAIhO,IAAOgO,EAAQC,aAAa/N,OAAO,6BAExD,CACErjB,MAAO,SACPkxB,MAAO,cAGT,CAAElxB,MAAO,iBAAkBkxB,MAAO,eAClC,CAAElxB,MAAO,cAAekxB,MAAO,kBAGjCpgB,KAAM5N,EAAMssB,OAEZ8B,YAAa,CACX,CACEC,QAAS,YACTzV,OAAQ,SAAAqV,GACN,OACE5pB,EAAAC,EAAAC,cAAA,OACEuN,MAAO,CACL6P,SAAU,GACV7H,UAAW,SACXjU,MAAO,QACP5C,gBAAiB,SA5GlB,SAAC2K,EAAM4Y,GACtB,IAAInI,EAAW,GAsBf,MApBa,OAATmI,IACFnI,EAAW,SAGA,OAATmI,EACFnI,EAAW,QAGI,OAARmI,EACPnI,EAAW,OAGK,OAATmI,EACPnI,EAAW,SAGI,OAARmI,IACPnI,EAAW,UAGNha,EAAAC,EAAAC,cAACoiB,GAAAriB,EAAD,CACHpI,KAAMmiB,EACNxb,MAAM,UACNyrB,SAAS,OACTtvB,KAAK,SACL2iB,SAAS,KACTiF,YAAa,CAAEC,gBAAiBC,KAChC3S,MAAOvG,IAiFI2gB,CAASN,EAAQO,WAAYP,EAAQzH,UAMhDxlB,QAAS,CACPytB,WAAW,EACXC,cAAc,EACdC,YAAa,CACX1rB,gBAAiB,UACjB4C,MAAO,cC1KX8Y,GAAYC,KAAZD,QAEFiQ,eACF,SAAAA,EAAYlf,GAAM,IAAAO,EAAA,OAAA7P,OAAA4M,EAAA,EAAA5M,CAAA6M,KAAA2hB,IACd3e,EAAA7P,OAAA8P,GAAA,EAAA9P,CAAA6M,KAAA7M,OAAA+P,GAAA,EAAA/P,CAAAwuB,GAAAxe,KAAAnD,KAAMyC,KAcVmf,UAAY,WACV5e,EAAKc,SAAS,CACZ0H,SAAS,KAjBKxI,EAqBlBuK,SAAW,SAAAlK,GAETL,EAAKc,SAAS,CACZ0H,SAAS,KAxBKxI,EA4BlBwb,aAAe,SAAAnb,GAEbL,EAAKc,SAAS,CACZ0H,SAAS,KA/BKxI,EAmClB6O,UAAY,SAAC5Z,KAjCT+K,EAAKjQ,MAAM,CACPtC,GAAGuS,EAAKP,MAAM3O,QAAQnF,sBAAsBC,cAC5CizB,YAAY,KACZ5M,MAAM,KACN+B,KAAK,KACL7J,SAAQ,EACRiK,SAAS,EACT0K,SAAS,GACTrK,UAAW,GACXjM,SAAS,GAXCxI,oFAuCC,IAAAoJ,EAAApM,KACXrS,EAAO6H,OAAOtF,SAAS6I,KAAKgpB,MAAM,KAAKC,OAAO,EAAE,GAChDF,EAAS,GACbn0B,EAAKwhB,QAAQ,SAAC7I,EAAEuI,GACZiT,EAASA,EAASxb,EAAE,MAExBtG,KAAK8D,SAAS,CAACge,aACf,IAAI/C,EAAKpf,GAAW,CAChBe,IAAG,GAAA1M,OAAKmH,GAAKoB,iBACboE,KAAM,CACFlQ,GAAIuP,KAAKjN,MAAMtC,MAInBuuB,EAAKrf,GAAW,CAChBe,IAAKvF,GAAKwC,UACVgD,KAAM,CACFrP,OAAQ0O,KAAKjN,MAAMtC,MAIvBwuB,EAAKtf,GAAW,CAChBe,IAAKvF,GAAKyC,UACV+C,KAAM,CACFlQ,GAAIuP,KAAKjN,MAAMtC,MAInBwxB,EAAKtiB,GAAW,CAChBe,IAAKvF,GAAK0C,gBACV8C,KAAM,CACFrP,OAAQ0O,KAAKjN,MAAMtC,MAIvByxB,EAAKviB,GAAW,CAChBe,IAAKvF,GAAK2C,cACV6C,KAAM,CACFrP,OAAQ0O,KAAKjN,MAAMtC,MAI3ByuB,QAAQC,IAAI,CAACJ,EAAIC,EAAIC,EAAIgD,EAAIC,IAAKve,KAAK,SAACC,GAGhCA,EAAS,GAAGjD,KAAKa,SAAWoC,EAAS,GAAGjD,KAAKa,SAAWoC,EAAS,GAAGjD,KAAKa,SAAWoC,EAAS,GAAGjD,KAAKa,SAAWoC,EAAS,GAAGjD,KAAKa,QACjI4K,EAAKtI,SAAS,CACV+d,YAAaje,EAAS,GAAGjD,KAAKA,KAC9BsU,MAAOrR,EAAS,GAAGjD,KAAKA,KACxBqW,KAAMpT,EAAS,GAAGjD,KAAKqW,KACvBI,SAAUxT,EAAS,GAAGjD,KAAKA,KAC3BwM,SAAS,EACTsK,UAAW7T,EAAS,GAAGjD,KAAKA,OAIhCQ,GAAM,QAAS,UAAWyC,EAAS,GAAGjD,KAAKkD,QAAUD,EAAS,GAAGjD,KAAKkD,QAAUD,EAAS,GAAGjD,KAAKkD,WAEtGE,MAAM,SAACrC,GAENP,GAAM,QAAS,UAAW,oDAKzB,IAAA4Q,EAAA/R,KACL,GAAGA,KAAKjN,MAAMoa,QACV,OACI/V,EAAAC,EAAAC,cAAA,OAAKI,UAAU,oBACXN,EAAAC,EAAAC,cAAC0a,GAAA,EAAD,CAAUC,QAAM,IAChB7a,EAAAC,EAAAC,cAAC0a,GAAA,EAAD,CAAUC,QAAM,KAIxB,IAAA0D,EAC0B3V,KAAKjN,MAAzB8uB,EADNlM,EACMkM,YAAapxB,EADnBklB,EACmBllB,GAEnB,OACI2G,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAC4a,GAAA,EAAD,CAAMC,iBAAiB,IAAIlJ,SAAW,SAAC5F,GAAD,OAAK0O,EAAKF,UAAUxO,KACtDjM,EAAAC,EAAAC,cAAC6qB,GAAD,CAAS/P,IAAMhb,EAAAC,EAAAC,cAAA,YAAMF,EAAAC,EAAAC,cAAC5J,EAAA,QAAD,CAAMyC,KAAK,SAAjB,WAA2C8H,IAAI,KAC1Db,EAAAC,EAAAC,cAACib,GAAA,EAAD,CAAcxF,UAAQ,EAACld,MAAM,GAAG2iB,QAAM,EAAC1H,KAAK,QAAQ2H,OAAQ,CAAEC,IAAK,EAAGC,GAAI,EAAGC,GAAI,EAAGxa,GAAI,EAAGD,GAAI,EAAGD,GAAI,IAElGd,EAAAC,EAAAC,cAACib,GAAA,EAAajO,KAAd,CAAmBC,MAAM,iBACpBvE,KAAKyC,MAAM3O,QAAQnF,sBAAsBC,eAG9CwI,EAAAC,EAAAC,cAACib,GAAA,EAAajO,KAAd,CAAmBC,MAAM,mBACrBnN,EAAAC,EAAAC,cAACqN,GAAA,QAAD,CAAO+L,UAAU,EAAMxJ,MAAK,GAAAlT,OAAKgM,KAAKjN,MAAM+uB,SAAhB,4BAAA9tB,OAAmDvD,GAAM2xB,WAAYhrB,EAAAC,EAAAC,cAAC+qB,GAAA,gBAAD,CAAiBzW,KAAI,GAAA5X,OAAKgM,KAAKjN,MAAM+uB,SAAhB,4BAAA9tB,OAAmDvD,GAAM6xB,OAAQ,kBAAIze,KAAQrC,QAAQ,8BACvMpK,EAAAC,EAAAC,cAAC5J,EAAA,QAAD,CAAMyC,KAAK,aAGnBiH,EAAAC,EAAAC,cAACib,GAAA,EAAajO,KAAd,CAAmBC,MAAM,mBACpBsd,EAAYhyB,OAGjBuH,EAAAC,EAAAC,cAACib,GAAA,EAAajO,KAAd,CAAmBC,MAAM,mBACpBsd,EAAY1xB,MAGjBiH,EAAAC,EAAAC,cAACib,GAAA,EAAajO,KAAd,CAAmBC,MAAM,WACrBnN,EAAAC,EAAAC,cAAA,YACCuqB,EAAYU,SAASzqB,IAAI,SAACuf,EAAIxI,GAE3B,OACAzX,EAAAC,EAAAC,cAACggB,GAAA,EAAD,CAAK1e,MAFM,WAEQX,IAAKof,EAAIxP,KACvBwP,EAAIjR,MAAMmZ,mBAOvBnoB,EAAAC,EAAAC,cAACib,GAAA,EAAajO,KAAd,CAAmBC,MAAM,cACpByO,IAAO6O,EAAY5O,WAAWC,OAAO,kBAMjD2O,EAAY/wB,cACTsG,EAAAC,EAAAC,cAAC6qB,GAAD,CAAS/P,IAAMhb,EAAAC,EAAAC,cAAA,YAAMF,EAAAC,EAAAC,cAAC5J,EAAA,QAAD,CAAMyC,KAAK,oBAAjB,aAAwD8H,IAAI,KACvEb,EAAAC,EAAAC,cAACkrB,GAAD,CAAW/xB,GAAIuP,KAAKyC,MAAM3O,QAAQnF,sBAAsBC,cAAeuC,gBAAiB6O,KAAKyC,MAAM3O,QAAQnF,sBAAsBE,cAAe0lB,oBAAqBvU,KAAKyC,MAAMggB,6BAEtL,KAEDZ,EAAY/wB,cACTsG,EAAAC,EAAAC,cAAC6qB,GAAD,CAAS/P,IAAMhb,EAAAC,EAAAC,cAAA,YAAMF,EAAAC,EAAAC,cAAC5J,EAAA,QAAD,CAAMyC,KAAK,SAAjB,cAA8C8H,IAAI,KAC7Db,EAAAC,EAAAC,cAAC6f,GAAD,CAAS7B,UAAWtV,KAAKjN,MAAMqkB,SAAU3mB,GAAIuP,KAAKjN,MAAMtC,GAAIwkB,MAAOjV,KAAKjN,MAAMkiB,SAEpF,KAGD4M,EAAY/wB,cACTsG,EAAAC,EAAAC,cAAC6qB,GAAD,CAAS/P,IAAMhb,EAAAC,EAAAC,cAAA,YAAMF,EAAAC,EAAAC,cAAC5J,EAAA,QAAD,CAAMyC,KAAK,cAAjB,cAAmD8H,IAAI,KAClEb,EAAAC,EAAAC,cAACorB,GAAD,CAAOjyB,GAAIuP,KAAKjN,MAAMtC,GAAIwkB,MAAOjV,KAAKjN,MAAMkiB,MAAO+B,KAAMhX,KAAKjN,MAAMikB,KAAM1B,UAAWtV,KAAKjN,MAAMqkB,YAEtG,KAEDyK,EAAY/wB,cACTsG,EAAAC,EAAAC,cAAC6qB,GAAD,CAAS/P,IAAMhb,EAAAC,EAAAC,cAAA,YAAMF,EAAAC,EAAAC,cAAC5J,EAAA,QAAD,CAAMyC,KAAK,YAAjB,aAAgD8H,IAAI,KAChEb,EAAAC,EAAAC,cAACkgB,GAAD,CAAWC,UAAWzX,KAAKjN,MAAM0kB,aAEtC,KAEDoK,EAAY/wB,cACTsG,EAAAC,EAAAC,cAAC6qB,GAAD,CAAS/P,IAAMhb,EAAAC,EAAAC,cAAA,YAAMF,EAAAC,EAAAC,cAAC5J,EAAA,QAAD,CAAMyC,KAAK,cAAjB,YAAiD8H,IAAI,KACjEb,EAAAC,EAAAC,cAACqrB,GAAD,CAAUrN,UAAWtV,KAAKjN,MAAMqkB,SAAU3mB,GAAIuP,KAAKjN,MAAMtC,GAAIwkB,MAAOjV,KAAKjN,MAAMkiB,SAErF,KAGA4M,EAAY/wB,eAAiB+wB,EAAYvxB,UACtC8G,EAAAC,EAAAC,cAAC6qB,GAAD,CAAS/P,IAAMhb,EAAAC,EAAAC,cAAA,YAAMF,EAAAC,EAAAC,cAAC5J,EAAA,QAAD,CAAMyC,KAAK,SAAjB,UAA0C8H,IAAI,KAC1Db,EAAAC,EAAAC,cAACsrB,GAAD,CAAQnyB,GAAIuP,KAAKjN,MAAMtC,MAE5B,cApMA2U,aAgNXI,eAJS,SAAAzS,GAAK,MAAK,CAC9Be,QAAUf,EAAMe,UAGmB,CACnC2uB,0BhB7FqC,SAACnc,GACtC,MAAO,CACHnW,KAAM,sCACNwD,QAAS2S,KgByFFd,CAEZmc,IC1NGkB,gNAEFjZ,UAAY,SAACnZ,GACTuS,EAAKP,MAAMqgB,6BAA4B,EAAKryB,MAGhDoZ,WAAa,WACT7G,EAAKP,MAAMqgB,6BAA4B,EAAM,SAMjD/Y,qBAAuB,SAAAC,GAAS,MAAK,CACjCC,eAAgB,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,gBAAiBC,EAApBF,EAAoBE,aAAcC,EAAlCH,EAAkCG,QAASC,EAA3CJ,EAA2CI,aAA3C,OACdlT,EAAAC,EAAAC,cAAA,OAAKuN,MAAO,CAAEzO,QAAS,IACrBgB,EAAAC,EAAAC,cAACqN,GAAA,QAAD,CACE4F,IAAK,SAAAC,GACHxH,EAAKyH,YAAcD,GAErB1F,YAAW,UAAA9Q,OAAYgW,GACvB9C,MAAOkD,EAAa,GACpBnB,SAAU,SAAA5F,GAAC,OAAI8G,EAAgB9G,EAAEqH,OAAOxD,MAAQ,CAAC7D,EAAEqH,OAAOxD,OAAS,KACnEyD,aAAc,kBAAM3H,EAAK4H,aAAaR,EAAcC,IACpDxF,MAAO,CAAEvC,MAAO,IAAKxI,aAAc,EAAGrM,QAAS,WAEjD2J,EAAAC,EAAAC,cAAC0N,GAAA,QAAD,CACE7U,KAAK,UACL0a,QAAS,kBAAM7H,EAAK4H,aAAaR,EAAcC,IAC/C3c,KAAK,SACLod,KAAK,QACLjG,MAAO,CAAEvC,MAAO,GAAIzM,YAAa,IALnC,UASAuB,EAAAC,EAAAC,cAAC0N,GAAA,QAAD,CAAQ6F,QAAS,kBAAM7H,EAAK+H,YAAYT,IAAeQ,KAAK,QAAQjG,MAAO,CAAEvC,MAAO,KAApF,WAKJ0I,WAAY,SAAAC,GAAQ,OAClB7T,EAAAC,EAAAC,cAAC5J,EAAA,QAAD,CAAMyC,KAAK,SAAS0U,MAAO,CAAEjM,MAAOqS,EAAW,eAAY/X,MAE7DgY,SAAU,SAAChE,EAAOiE,GAAR,OACRA,EAAOnB,GACJoB,WACAC,cACAC,SAASpE,EAAMmE,gBACpBE,8BAA+B,SAAAC,GACzBA,GACFC,WAAW,kBAAMzI,EAAKyH,YAAYiB,YAGtCC,OAAQ,SAAAC,GAAI,OACVxU,EAAAC,EAAAC,cAACuU,GAAAxU,EAAD,CACEyU,eAAgB,CAAE9V,gBAAiB,UAAWI,QAAS,GACvD2V,YAAa,CAAC/I,EAAKP,MAAM3O,QAAQQ,gBACjC0X,YAAU,EACVC,gBAAiBL,EAAKR,kBAK5BR,aAAe,SAACR,EAAcC,GAC5BA,IACArH,EAAKP,MAAMsgB,qBAAqB3Y,EAAa,OAG/CW,YAAc,SAAAT,GACZA,IACAtH,EAAKP,MAAMsgB,qBAAqB,yFA5DlC/iB,KAAKyC,MAAMugB,uDA+DJ,IAAA5W,EAAApM,KACCqM,EAAU9T,KAAV8T,MACFC,EAAU,CAACnZ,OAAAC,EAAA,EAAAD,CAAA,CAEbtD,MAAO,OACPma,UAAW,QACX/R,IAAK,SACF+H,KAAK+J,qBAAqB,UALjB5W,OAAAC,EAAA,EAAAD,CAAA,CAQZtD,MAAO,OACPma,UAAW,OACX/R,IAAK,QACF+H,KAAK+J,qBAAqB,SAE/B,CACEla,MAAO,WACPma,UAAW,WACX/R,IAAK,eACL0T,OAAQ,SAAA2T,GAAI,OACVloB,EAAAC,EAAAC,cAAA,YACGgoB,EAAKxnB,IAAI,SAACuf,EAAIxI,GAEb,OACEzX,EAAAC,EAAAC,cAACggB,GAAA,EAAD,CAAK1e,MAFI,WAEUX,IAAKof,EAAIxP,KACzBwP,EAAIjR,MAAMmZ,oBAvBTpsB,OAAAC,EAAA,EAAAD,CAAA,CA+BZtD,MAAO,aACPma,UAAW,YACX/R,IAAK,aACF+H,KAAK+J,qBAAqB,aAlCjB,CAmCZ4B,OAAQ,SAAA2T,GAAI,OACVloB,EAAAC,EAAAC,cAAA,YACG0b,IAAOsM,GAAMpM,OAAO,mBAI3B,CACErjB,MAAO,SACPoI,IAAK,MACL+R,UAAW,MACX2B,OAAQ,SAAC1T,GAAD,OACNb,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAC0N,GAAA,QAAD,CAAQ7U,KAAK,UAAUoc,MAAM,SAAS7e,KAAK,cAAcmd,QAAS,kBAAIuB,EAAKxC,UAAU3R,UAK3F,OACIb,EAAAC,EAAAC,cAAA,OAAKI,UAAU,yBAEbN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,gCACbN,EAAAC,EAAAC,cAAC+U,EAAD,CAAOO,MAAO,EAAG/H,MAAO,CAACjM,MAAM,OAAOiU,UAAU,WAAhD,wBAGFzV,EAAAC,EAAAC,cAACwV,GAAA,EAAD,CACEC,UAAU,EACVT,QAASA,EACTU,WAAYhN,KAAKyC,MAAM3O,QAAQpF,cAC/Boc,KAAK,SACLmC,WAAY,CAAEC,SAAU,GACxBC,QAASnN,KAAKyC,MAAM3O,QAAQrF,iBAC5B2e,OAAO,QAGThW,EAAAC,EAAAC,cAAC+V,GAAA,EAAD,CACE7B,QAASxL,KAAKyC,MAAM3O,QAAQO,uBAC5BxE,MAAM,qBACNyd,KAAMtN,KAAKuN,SACXC,SAAUxN,KAAK6J,WACfoZ,WAAYjjB,KAAK6J,WACjBhF,MAAO,CAAC4I,IAAK,OAAOrX,QAAQ,MAAMJ,gBAAgB,oBAClDsM,MAAM,MACNoL,gBAAgB,EAChB1W,OAAQ,IAIRI,EAAAC,EAAAC,cAAC4rB,GAAD,eA7JO9d,aAwKRI,eAJS,SAAAzS,GAAK,MAAK,CAChCe,QAAUf,EAAMe,UAGqB,CACnCivB,qBjBzFgC,SAACzc,GAAD,OAAO,SAAArF,GACvCA,EAAS,CACL9Q,KAAM,0BACNwD,QAAS2S,MiBuFb0c,oBjBnF+B,kBAAM,SAAA/hB,GACrCA,EAAS,CACL9Q,KAAM,mCACNoD,UAAU,EACVC,SAAU,KAGdmM,GAAW,CACPe,IAAG,GAAA1M,OAAKmH,GAAKmB,iBACdqH,KAAK,SAACC,GAEDA,EAASjD,KAAKa,QACdP,EAAS,CACL9Q,KAAM,mCACNoD,UAAU,EACVC,SAAUoQ,EAASjD,KAAKA,QAI5BQ,GAAM,QAAS,SAAUyC,EAASjD,KAAKkD,SACvC5C,EAAS,CACL9Q,KAAM,mCACNoD,UAAU,EACVC,SAAU,QAGnBuQ,MAAM,SAACrC,GAENP,GAAM,QAAS,SAAU,gBACzBF,EAAS,CACL9Q,KAAM,mCACNoD,UAAU,EACVC,SAAU,SiBoDlBsvB,4BjBnGuC,SAACjd,EAAIC,GAAL,OAAY,SAAA7E,GACnDA,EAAS,CACL9Q,KAAM,kCACNoD,SAAUsS,EACVrS,SAAUsS,OiB4FHN,CAIZqd,ICvLUM,GAAsB,SAAC7c,GAAD,OAAM,SAAArF,GACrCA,EAAS,CACN9Q,KAAO,sBACPwD,QAAU2S,MAoDJ8c,GAAuB,SAAC9c,GAAD,OAAO,SAAArF,GACvCA,EAAS,CACL9Q,KAAM,4BACNwD,QAAS2S,MAKJiO,GAAsB,SAACjO,GAChC,MAAO,CACHnW,KAAM,2BACNwD,QAAS2S,ICjEJ+c,GAAa,SAAC/c,GAAD,OAAM,SAAArF,GAC5BA,EAAS,CACN9Q,KAAO,qBACPwD,QAAU2S,MAIJgd,GAA4B,SAAChd,GAAD,OAAO,SAAArF,GAC5CA,EAAS,CACL9Q,KAAM,gCACNwD,QAAS2S,MCKXqb,IAFYppB,KAAV8T,mNAiBJkX,yBAA2B,SAACjd,GACxB3G,GAAW,CACPe,IAAG,GAAA1M,OAAKmH,GAAKwB,mBACbgE,KAAM,CACFlQ,GAAIuS,EAAKP,MAAM/N,QAAQjE,GACvBoW,OAAQP,KAEb3C,KAAK,SAACC,GACDA,EAASjD,KAAKa,SACdwB,EAAKP,MAAM+gB,yBAAyBld,GACpCnF,GAAM,UAAW,WAAY,gCAG7BA,GAAM,QAAS,SAAUyC,EAASjD,KAAKkD,WAE5CE,MAAM,SAACrC,GAENP,GAAM,QAAS,SAAU,qBAIjCsiB,iBAAmB,WACf9jB,GAAW,CACPe,IAAG,GAAA1M,OAAKmH,GAAKyB,uBACb+D,KAAM,CACFlQ,GAAIuS,EAAKP,MAAM/N,QAAQjE,MAE5BkT,KAAK,SAACC,GAEDA,EAASjD,KAAKa,SACdwB,EAAKP,MAAMghB,iBAAiB7f,EAASjD,KAAKA,MAC1CQ,GAAM,UAAW,WAAY,mBAG7BA,GAAM,QAAS,SAAUyC,EAASjD,KAAKkD,WAE5CE,MAAM,SAACrC,GAENP,GAAM,QAAS,SAAU,qBAIjCuiB,iBAAmB,WACf/jB,GAAW,CACPe,IAAG,GAAA1M,OAAKmH,GAAKqC,qBACbmD,KAAM,CACFlQ,GAAIuS,EAAKP,MAAM/N,QAAQjE,MAG9BkT,KAAK,SAACC,GAECA,EAASjD,KAAKa,SACdwB,EAAKP,MAAMghB,iBAAiB7f,EAASjD,KAAKA,MAC1CQ,GAAM,UAAW,WAAY,mBAG7BA,GAAM,QAAS,SAAUyC,EAASjD,KAAKkD,WAG9CE,MAAM,SAACrC,GAEJP,GAAM,QAAS,SAAU,qBAIjCwiB,cAAgB,WACZhkB,GAAW,CACPe,IAAG,GAAA1M,OAAKmH,GAAK0B,qBACb8D,KAAM,CACFlQ,GAAIuS,EAAKP,MAAM/N,QAAQjE,MAE5BkT,KAAK,SAACC,MAENG,MAAM,SAACrC,GACNlN,QAAQC,IAAIiN,0FAtFhB,IAAI/T,EAAO6H,OAAOtF,SAAS6I,KAAKgpB,MAAM,KAAKC,OAAO,EAAE,GAChDF,EAAS,GACbn0B,EAAKwhB,QAAQ,SAAC7I,EAAGuI,GACbiT,EAAWA,EAAWxb,EAAI,MAG9Bwb,GAAiB,6BAAA9tB,OAA8BgM,KAAKyC,MAAM/N,QAAQjE,IAClEuP,KAAKyC,MAAMmhB,uBAAuB9B,GAClC9hB,KAAKyC,MAAMohB,8BAA8B7jB,KAAKyC,MAAM/N,QAAQjE,IAC5DuP,KAAKyC,MAAM2gB,wDAiFP,IAAAhX,EAAApM,KACJ,OACI5I,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACib,GAAA,EAAD,CACIzH,KAAK,QACL2H,OAAQ,EACR5iB,MAAM,wBACNi0B,OAAO,WACP/W,UAAU,GAEV3V,EAAAC,EAAAC,cAACib,GAAA,EAAajO,KAAd,CAAmB4L,KAAM,EAAG3L,MAAM,iBAC7BvE,KAAKyC,MAAM/N,QAAQjE,IAGxB2G,EAAAC,EAAAC,cAACib,GAAA,EAAajO,KAAd,CAAmB4L,KAAM,EAAG3L,MAAM,qBAAoBnN,EAAAC,EAAAC,cAACqN,GAAA,QAAD,CAAO+L,UAAU,EAAMxJ,MAAOlH,KAAKyC,MAAM/N,QAAQhE,iBAAkB0xB,WAAYhrB,EAAAC,EAAAC,cAAC+qB,GAAA,gBAAD,CAAiBzW,KAAM5L,KAAKyC,MAAM/N,QAAQhE,iBAAkB4xB,OAAQ,kBAAMze,KAAQrC,QAAQ,8BAA6BpK,EAAAC,EAAAC,cAAC5J,EAAA,QAAD,CAAMyC,KAAK,aAGnQ6P,KAAKyC,MAAM/N,QAAQ/D,iBAAiBG,cACpCsG,EAAAC,EAAAC,cAACib,GAAA,EAAajO,KAAd,CACC4L,KAAM,EACN3L,MAAM,wBAFP,wEAOAnN,EAAAC,EAAAC,cAACib,GAAA,EAAajO,KAAd,CACC4L,KAAM,EACN3L,MAAOvE,KAAKyC,MAAM/N,QAAQ/D,iBAAiBC,wBAA0B,oBAAsB,uBAExFwG,EAAAC,EAAAC,cAAC0N,GAAA,QAAD,CACI0L,SAAU1Q,KAAKyC,MAAM/N,QAAQ/D,iBAAiBE,WAAYga,QAAS,WAAQuB,EAAKmX,0BAA0BnX,EAAK3J,MAAM/N,QAAQ/D,iBAAiBC,0BAC9IT,KAAM6P,KAAKyC,MAAM/N,QAAQ/D,iBAAiBC,wBAA0B,SAAW,WACjFoP,KAAKyC,MAAM/N,QAAQ/D,iBAAiBC,wBAA0B,oBAAsB,sBAM1FoP,KAAKyC,MAAM/N,QAAQ/D,iBAAiBG,cACpCsG,EAAAC,EAAAC,cAACib,GAAA,EAAajO,KAAd,CACC4L,KAAM,EACN3L,MAAM,sBAFP,wEAOAnN,EAAAC,EAAAC,cAACib,GAAA,EAAajO,KAAd,CACI4L,KAAM,EACN3L,MAAOvE,KAAKyC,MAAM/N,QAAQ/D,iBAAiBE,WAAa,mBAAqB,4BAE7EuG,EAAAC,EAAAC,cAAC0N,GAAA,QAAD,CACI0L,SAAU1Q,KAAKyC,MAAM/N,QAAQ/D,iBAAiBE,WAC9Cga,QAAS,WAAQuB,EAAKqX,oBACtBtzB,KAAM,WAHV,cAQAiH,EAAAC,EAAAC,cAAC0N,GAAA,QAAD,CACI0L,UAAW1Q,KAAKyC,MAAM/N,QAAQ/D,iBAAiBE,WAC/Cga,QAAS,WAAQuB,EAAKsX,oBAAsBvzB,KAAM,UAFtD,aASRiH,EAAAC,EAAAC,cAACib,GAAA,EAAajO,KAAd,CACI4L,KAAM,EACN3L,MAAM,yBAELyO,IAAOhT,KAAKyC,MAAM/N,QAAQ/D,iBAAiBK,OAAOkiB,OAAO,4BAG9D9b,EAAAC,EAAAC,cAACib,GAAA,EAAajO,KAAd,CACI4L,KAAM,EACN3L,MAAM,uBAELyO,IAAOhT,KAAKyC,MAAM/N,QAAQ/D,iBAAiBM,KAAKiiB,OAAO,qCA3KtD/N,IAAMC,YAyLjBI,eALS,SAAAzS,GAAK,MAAK,CAC9Be,QAASf,EAAMe,QACfY,QAAS3B,EAAM2B,UAGoB,CACnCkvB,uBFnMkC,SAACtd,GAAD,OAAM,SAAArF,GACxCA,EAAS,CACN9Q,KAAO,yBACPwD,QAAU2S,MEiMbud,8BF9KyC,SAACvd,GAAD,OAAO,SAAArF,GAChDtB,GAAW,CACPe,IAAG,GAAA1M,OAAKmH,GAAKuB,+BACbiE,KAAM,CACFlQ,GAAI6V,KAET3C,KAAK,SAACC,GACL,IAAIA,EAASjD,KAAKa,QAQd,OAAOL,GAAM,QAAS,SAAUyC,EAASjD,KAAKkD,SAN9C5C,EAAS,CACL9Q,KAAM,4BACNwD,QAASiQ,EAASjD,KAAKA,SAOlCoD,MAAM,SAACrC,GAEJ,OAAOP,GAAM,QAAS,SAAU,qCE2JpCqiB,yBF9LoC,SAACld,GAAD,OAAM,SAAArF,GAC1CA,EAAS,CACN9Q,KAAO,uCACPwD,QAAU2S,ME4Lbmd,iBFxL4B,SAACnd,GAAD,OAAO,SAAArF,GACnCA,EAAS,CACL9Q,KAAM,2BACNwD,QAAS2S,MEsLb8c,yBALW5d,CAMZmc,mCCtMKtV,GAAU9T,KAAV8T,MAGF0X,GAAmB,CACvBpE,QAAQ,EACRqE,eAAe,EACfC,gBAAgB,EAChBC,gBAAiB,SAAAvE,GAAM,OAAIA,EAAOtU,cAAc8Y,QAAQ,MAAO,OAG3DC,eAEF,SAAAA,EAAY3hB,GAAM,IAAAO,EAAA,OAAA7P,OAAA4M,EAAA,EAAA5M,CAAA6M,KAAAokB,IACdphB,EAAA7P,OAAA8P,GAAA,EAAA9P,CAAA6M,KAAA7M,OAAA+P,GAAA,EAAA/P,CAAAixB,GAAAjhB,KAAAnD,KAAMyC,KAUVsH,qBAAuB,SAAAC,GAAS,MAAK,CACjCC,eAAgB,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,gBAAiBC,EAApBF,EAAoBE,aAAcC,EAAlCH,EAAkCG,QAASC,EAA3CJ,EAA2CI,aAA3C,OACdlT,EAAAC,EAAAC,cAAA,OAAKuN,MAAO,CAAEzO,QAAS,IACrBgB,EAAAC,EAAAC,cAACqN,GAAA,QAAD,CACE4F,IAAK,SAAAC,GACHxH,EAAKyH,YAAcD,GAErB1F,YAAW,UAAA9Q,OAAYgW,GACvB9C,MAAOkD,EAAa,GACpBnB,SAAU,SAAA5F,GAAC,OAAI8G,EAAgB9G,EAAEqH,OAAOxD,MAAQ,CAAC7D,EAAEqH,OAAOxD,OAAS,KACnEyD,aAAc,kBAAM3H,EAAK4H,aAAaR,EAAcC,IACpDxF,MAAO,CAAEvC,MAAO,IAAKxI,aAAc,EAAGrM,QAAS,WAEjD2J,EAAAC,EAAAC,cAAC0N,GAAA,QAAD,CACE7U,KAAK,UACL0a,QAAS,kBAAM7H,EAAK4H,aAAaR,EAAcC,IAC/C3c,KAAK,SACLod,KAAK,QACLjG,MAAO,CAAEvC,MAAO,GAAIzM,YAAa,IALnC,UASAuB,EAAAC,EAAAC,cAAC0N,GAAA,QAAD,CAAQ6F,QAAS,kBAAM7H,EAAK+H,YAAYT,IAAeQ,KAAK,QAAQjG,MAAO,CAAEvC,MAAO,KAApF,WAKJ0I,WAAY,SAAAC,GAAQ,OAClB7T,EAAAC,EAAAC,cAAC5J,EAAA,QAAD,CAAMyC,KAAK,SAAS0U,MAAO,CAAEjM,MAAOqS,EAAW,eAAY/X,MAE7DgY,SAAU,SAAChE,EAAOiE,GAAR,OACRA,EAAOnB,GACJoB,WACAC,cACAC,SAASpE,EAAMmE,gBACpBE,8BAA+B,SAAAC,GACzBA,GACFC,WAAW,kBAAMzI,EAAKyH,YAAYiB,YAGtCC,OAAQ,SAAAC,GAAI,OACVxU,EAAAC,EAAAC,cAACuU,GAAAxU,EAAD,CACEyU,eAAgB,CAAE9V,gBAAiB,UAAWI,QAAS,GACvD2V,YAAa,CAAC/I,EAAKjQ,MAAMsxB,YACzBrY,YAAU,EACVC,gBAAiBL,EAAKR,gBAxDZpI,EA8DlB4H,aAAe,SAACR,EAAcC,GAC1BA,IACArH,EAAKc,SAAS,CAAEugB,WAAYja,EAAa,MAhE3BpH,EAmElB+H,YAAc,SAAAT,GACVA,IACAtH,EAAKc,SAAS,CAAEugB,WAAY,MArEdrhB,EAmFpB4e,UAAY,WACR5e,EAAKc,SAAS,CACZ0H,SAAS,KArFKxI,EAyFpBuK,SAAW,SAAAlK,GAEPL,EAAKc,SAAS,CACZ0H,SAAS,KA5FKxI,EAgGpBwb,aAAe,SAAAnb,GAEXL,EAAKc,SAAS,CACZ0H,SAAS,KAnGKxI,EAwGpBshB,YAAc,SAAC3jB,EAAM4jB,GAIrB5kB,GAAW,CACPe,IAAG,GAAA1M,OAAKmH,GAAK6C,mBACb2C,KAAM,CACJrP,OAAQ0R,EAAKP,MAAM/N,QAAQjE,GAC3BkQ,KAAMA,KAGTgD,KAAK,SAACC,GACDA,EAASjD,KAAKa,SACdwB,EAAKc,SAAS,CAAC0gB,SAAU,MACzBxhB,EAAKP,MAAM2gB,qBAAqBxf,EAASjD,KAAKA,OAG9CQ,GAAM,QAAS,SAAUyC,EAASjD,KAAKkD,SAEzCb,EAAKc,SAAS,CACZqJ,SAAS,MAGdpJ,MAAM,SAACrC,GACNP,GAAM,QAAS,SAAU,gBACvB6B,EAAKc,SAAS,CAACqJ,SAAS,OAjIVnK,EAsIpByhB,gBAAkB,WAChBzhB,EAAKc,SAAS,CACZqJ,SAAS,IAGXxN,GAAW,CACTe,IAAG,GAAA1M,OAAKmH,GAAK0B,qBACb8D,KAAM,CACJlQ,GAAIuS,EAAKP,MAAM/N,QAAQjE,MAGxBkT,KAAK,SAACC,GAEDA,EAASjD,KAAKa,QAChBwB,EAAKP,MAAM2gB,qBAAqBxf,EAASjD,KAAKA,MAG9CQ,GAAM,QAAS,SAAUyC,EAASjD,KAAKkD,SAEzCb,EAAKc,SAAS,CACZqJ,SAAS,MAEVpJ,MAAM,SAACrC,GAERP,GAAM,QAAS,SAAU,gBACzB6B,EAAKc,SAAS,CACZqJ,SAAS,OAhKGnK,EAqKpB0hB,UAAY,SAAC1N,GACXxhB,OAAOmvB,KAAK3N,IApKRhU,EAAKjQ,MAAM,CACPoa,SAAQ,EACRkX,WAAY,GACZvC,SAAU,GACVtW,SAAS,EACTgZ,SAAU,GAPAxhB,oFAyEhB,IAAIrV,EAAO6H,OAAOtF,SAAS6I,KAAKgpB,MAAM,KAAKC,OAAO,EAAE,GAChDF,EAAS,GACbn0B,EAAKwhB,QAAQ,SAAC7I,EAAEuI,GACZiT,EAASA,EAASxb,EAAE,MAExBtG,KAAK8D,SAAS,CAACge,aACf9hB,KAAKykB,mDA0FE,IAAArY,EAAApM,KACCsM,EAAU,CAACnZ,OAAAC,EAAA,EAAAD,CAAA,CAEXtD,MAAO,OACPma,UAAW,OACX/R,IAAK,QACF+H,KAAK+J,qBAAqB,SALnB5W,OAAAC,EAAA,EAAAD,CAAA,CAQVtD,MAAO,WACPma,UAAW,UACX/R,IAAK,WACF+H,KAAK+J,qBAAqB,YAXnB5W,OAAAC,EAAA,EAAAD,CAAA,CAcRtD,MAAO,aACPma,UAAW,UACX/R,IAAK,WACF+H,KAAK+J,qBAAqB,YAEjC,CACEla,MAAO,SACPma,UAAW,SACX/R,IAAK,SACL0T,OAAQ,SAAAlb,GAAE,OACR2G,EAAAC,EAAAC,cAAC0N,GAAA,QAAD,CACEpM,MAAM,UACNiS,QAAS,kBAAMuB,EAAKsY,UAAUj0B,KAFhC,qBAQJ,CACIZ,MAAO,QACPoI,IAAK,MACL+R,UAAW,MACX2B,OAAQ,SAAAlb,GAAE,OACR2G,EAAAC,EAAAC,cAACqN,GAAA,QAAD,CAAO+L,UAAU,EAAMxJ,MAAK,GAAAlT,OAAKoY,EAAKrZ,MAAM+uB,SAAhB,8BAAA9tB,OAAqDoY,EAAK3J,MAAM/N,QAAQjE,GAAxE,eAAAuD,OAAwFvD,GAAM2xB,WAAYhrB,EAAAC,EAAAC,cAAC+qB,GAAA,gBAAD,CAAiBzW,KAAI,GAAA5X,OAAKoY,EAAKrZ,MAAM+uB,SAAhB,8BAAA9tB,OAAqDoY,EAAK3J,MAAM/N,QAAQjE,GAAxE,eAAAuD,OAAwFvD,GAAM6xB,OAAQ,kBAAIze,KAAQrC,QAAQ,8BAA6BpK,EAAAC,EAAAC,cAAC5J,EAAA,QAAD,CAAMyC,KAAK,eAKzU,OACEiH,EAAAC,EAAAC,cAAA,OAAKI,UAAU,mCACbN,EAAAC,EAAAC,cAAC0N,GAAA,QAAD,CACEtN,UAAU,gBACVvH,KAAK,UACLzC,KAAK,SACLyf,QAASnN,KAAKjN,MAAMoa,QACpBtC,QAAS7K,KAAKykB,iBALhB,UAUArtB,EAAAC,EAAAC,cAAA,OAAKI,UAAU,gCACbN,EAAAC,EAAAC,cAACstB,GAAD,CAAOhY,MAAO,EAAG/H,MAAO,CAAEjM,MAAO,OAAQiU,UAAW,WAApD,kCAEFzV,EAAAC,EAAAC,cAACwV,GAAA,EAAD,CACER,QAASA,EACTS,UAAU,EACVC,WAAYhN,KAAKyC,MAAM/N,QAAQxD,qBAC/Bkc,OAAO,MACPD,QAASnN,KAAKjN,MAAMoa,UAGxB/V,EAAAC,EAAAC,cAAC+V,GAAA,EAAD,CACExd,MAAM,oBACN2b,QAASxL,KAAKjN,MAAMyY,QACpB8B,KAAMtN,KAAKuN,SACXC,SAAUxN,KAAKwe,aACfxnB,OAAQ,IAERI,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,mBAAH,+CACAF,EAAAC,EAAAC,cAAA,oEACAF,EAAAC,EAAAC,cAACutB,GAAAxtB,EAAD,CACEytB,SAAS,kBACTvgB,MAAM,GACNwgB,aAAc/kB,KAAKskB,YACnBU,cAAejB,KAEjB3sB,EAAAC,EAAAC,cAACktB,GAAA,EAAD,CAAUS,QAASjlB,KAAKjN,MAAMyxB,oBA5Pfpf,aAuQVI,eAJS,SAAAzS,GAAK,MAAK,CAC9B2B,QAAU3B,EAAM2B,UAGmB,CACnCyuB,uBACAC,yBAFW5d,CAGZ4e,wBCpPY5e,eAJS,SAAAzS,GAAK,MAAK,CAChC2B,QAAS3B,EAAM2B,UAGuB,KAAzB8Q,CAvCS,SAAC/C,GACvB,IAAM9B,EAAO8B,EAAM/N,QAAQxD,qBAQ3B,OACMkG,EAAAC,EAAAC,cAACuhB,EAAA,SAAD,KACEzhB,EAAAC,EAAAC,cAAA,OAAKI,UAAU,aACbN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,OACbN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,aAEfN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,YACbN,EAAAC,EAAAC,cAAA,UAAQnH,KAAK,SAAS0a,QAXd,WACpBqa,aAAe,CAAEvkB,OAAMwkB,SAJR,WAIkBC,WAHhB,UAaL,oBAKNhuB,EAAAC,EAAAC,cAAA,WAEAF,EAAAC,EAAAC,cAAA,OAAKI,UAAU,aACbN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,OACbN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,YAAamN,MAAO,CAAEsU,UAAW,QAASC,UAAW,WAClEhiB,EAAAC,EAAAC,cAAC+tB,GAAA,YAAD,CAAaC,KAAM7iB,EAAM/N,QAAQxD,6BCdzCmb,GAAU9T,KAAV8T,MACAqF,GAAYC,KAAZD,QAEF6T,eACF,SAAAA,EAAY9iB,GAAM,IAAAO,EAAA,OAAA7P,OAAA4M,EAAA,EAAA5M,CAAA6M,KAAAulB,IACdviB,EAAA7P,OAAA8P,GAAA,EAAA9P,CAAA6M,KAAA7M,OAAA+P,GAAA,EAAA/P,CAAAoyB,GAAApiB,KAAAnD,KAAMyC,KAYV+iB,kBAAoB,SAAClf,GACjBtD,EAAKc,SAAS,CACV2hB,YAAanf,EAAEoE,OAAOxD,SAfZlE,EAmBlB0iB,aAAe,SAACpf,GACZtD,EAAKc,SAAS,CACV6hB,cAAc,KAnBlB3iB,EAAKP,MAAM0gB,oBAAoBngB,EAAKP,MAAMnR,QAC1C0R,EAAKjQ,MAAM,CACP0yB,YAAY,KACZE,cAAa,GALH3iB,oFAUdhD,KAAKyC,MAAM4gB,WAAW,oCAgBtB,OAAGrjB,KAAKjN,MAAM4yB,aACHnwB,OAAOtF,SAAS6I,KAAhB,4BAAA/E,OAAiDgM,KAAKjN,MAAM0yB,aAI/DruB,EAAAC,EAAAC,cAAA,OAAKI,UAAU,6BACTsI,KAAKyC,MAAM/N,QAAQjE,GAwBjB2G,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACsuB,GAAD,CAAI3tB,IAAK+H,KAAKyC,MAAM/N,QAAQ/D,iBAAiBG,iBAxBjDsG,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACuuB,GAAD,CACIhhB,MAAO,CAAEvC,MAAM,OAAQuK,UAAU,UACjCD,MAAO,GAFX,uBAOAxV,EAAAC,EAAAC,cAAA,OAAKI,UAAU,4BACXN,EAAAC,EAAAC,cAACqN,GAAA,QAAD,CACIG,YAAY,sBACZmE,SAAUjJ,KAAKwlB,kBACfte,MAAOlH,KAAKjN,MAAM0yB,cAEtBruB,EAAAC,EAAAC,cAAC0N,GAAA,QAAD,CACI6F,QAAS7K,KAAK0lB,aACdv1B,KAAK,UACL0U,MAAO,CAACvO,UAAU,SAHtB,qBAhDL8O,aAoErB0gB,uLAEE,OACQ1uB,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAC0J,GAAD,MAGA5J,EAAAC,EAAAC,cAAC4a,GAAA,EAAD,CAAMC,iBAAiB,IAAItN,MAAO,CAACvO,UAAU,SAEzCc,EAAAC,EAAAC,cAACyuB,GAAD,CAAS3T,IAAKhb,EAAAC,EAAAC,cAAA,YAAMF,EAAAC,EAAAC,cAAC5J,EAAA,QAAD,CAAMyC,KAAK,SAAjB,sBAAqD8H,IAAI,KACnEb,EAAAC,EAAAC,cAAC0uB,GAAD,OAGJ5uB,EAAAC,EAAAC,cAACyuB,GAAD,CAAS3T,IAAKhb,EAAAC,EAAAC,cAAA,YAAMF,EAAAC,EAAAC,cAAC5J,EAAA,QAAD,CAAMyC,KAAK,oBAAjB,aAAuD8H,IAAI,KACrEb,EAAAC,EAAAC,cAACkrB,GAAD,CAAW/xB,GAAIuP,KAAKyC,MAAM/N,QAAQjE,GAAIU,gBAAiB6O,KAAKyC,MAAM/N,QAAQvD,gBAAiBojB,oBAAqBvU,KAAKyC,MAAM8R,uBAG/Hnd,EAAAC,EAAAC,cAACyuB,GAAD,CAAS3T,IAAKhb,EAAAC,EAAAC,cAAA,YAAMF,EAAAC,EAAAC,cAAC5J,EAAA,QAAD,CAAMyC,KAAK,aAAjB,oBAAuD8H,IAAI,KACrEb,EAAAC,EAAAC,cAAC2uB,GAAD,gBAlBZ7gB,aA4BV8gB,GAAkB,SAAAnzB,GAAK,MAAK,CAC9Be,QAAUf,EAAMe,QAChBY,QAAU3B,EAAM2B,UAIhBkxB,GAAGpgB,YAAQ0gB,GAAgB,CAC3B/C,uBACAC,wBACA7O,wBAHG/O,CAIJsgB,IAGYtgB,eAAQ0gB,GAAiB,CACpC7C,cACAF,uBACAC,wBACA7O,wBAJW/O,CAKZ+f,eCtIUY,GAAQ,CACjB,CACEt2B,MAAO,iBAET,CACEA,MAAO,gBAET,CACEA,MAAO,oBAET,CACEA,MAAO,mBAET,CACEA,MAAO,+BCJbmjB,MAASoT,UAAU,cAEX7f,GAAWC,WAAXD,OAGF8f,IAFkBC,WAAhBC,wBAGJ,SAAAF,EAAY5jB,GAAM,IAAAO,EAAA,OAAA7P,OAAA4M,EAAA,EAAA5M,CAAA6M,KAAAqmB,IACdrjB,EAAA7P,OAAA8P,GAAA,EAAA9P,CAAA6M,KAAA7M,OAAA+P,GAAA,EAAA/P,CAAAkzB,GAAAljB,KAAAnD,KAAMyC,KAMVW,aAAe,SAAAC,GACXA,EAAEC,iBACFN,EAAKP,MAAMJ,KAAKkB,eAAe,SAACC,EAAKC,GAC5BD,IAEDR,EAAKP,MAAM6gB,0BAA0B,CACjCn0B,SAAUsU,EAAOtT,KACjBf,UAAWqU,EAAO5T,MAClBR,aAAcoU,EAAO+iB,SACrBl3B,iBAAkBmU,EAAOqE,aACzBvY,YAAakU,EAAO8e,SACpB9yB,UAAWgU,EAAOzS,MAClBtB,QAAS+T,EAAOxS,MAEpB+R,EAAKP,MAAM4gB,WAAW,OArBhBrgB,EA0BlByjB,iBAAmB,SAACxf,EAAMC,EAAOC,GAC1BD,EAAMjU,QAAQ,GACb+P,EAAKc,SAAS,CACV4iB,aAAa,eAEjB/mB,GAAW,CACPe,IAAKvF,GAAK4C,gBACV4C,KAAM,CACFgmB,SAAUzf,KAEfvD,KAAK,SAAChD,GAEDA,EAAKA,KAAKa,QACNb,EAAKA,KAAKimB,SACV5jB,EAAKc,SAAS,CACV4iB,aAAc,YAElBvf,MAGAnE,EAAKc,SAAS,CACV4iB,aAAc,UAElBvf,EAAS,wCAIbnE,EAAKc,SAAS,CACV4iB,aAAc,YAElBvf,OAELpD,MAAM,SAAC8iB,GAEN7jB,EAAKc,SAAS,CACV4iB,aAAc,YAElBvf,OAIJA,KAjEJnE,EAAKjQ,MAAQ,CACT2zB,aAAc,IAHJ1jB,yEAuET,IACGgB,EAAsBhE,KAAKyC,MAAMJ,KAAjC2B,kBACR,OACI5M,EAAAC,EAAAC,cAAA,OAAKI,UAAU,yBACXN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,yBACXN,EAAAC,EAAAC,cAAC6M,GAAA,QAAD,CACIC,SAAUpE,KAAKoD,aACfiB,aAAa,OAEbjN,EAAAC,EAAAC,cAAC6M,GAAA,QAAKG,KAAN,CAAWC,MAAM,kBAAmBC,aAAW,GAC1CR,EAAkB,OAAQ,CACvBiE,aAAejI,KAAKyC,MAAMlO,KAAKrF,gBAAgBC,SAC/CsV,MAAO,CAAC,CAAEC,UAAU,EAAMb,QAAS,qCAFtCG,CAIG5M,EAAAC,EAAAC,cAAC4Q,GAAA,QAAD,CAAQpD,YAAY,aAChB1N,EAAAC,EAAAC,cAACwvB,GAAD,CAAQ5f,MAAM,cAAd,cACA9P,EAAAC,EAAAC,cAACwvB,GAAD,CAAQ5f,MAAM,qBAAd,qBACA9P,EAAAC,EAAAC,cAACwvB,GAAD,CAAQ5f,MAAM,uBAAd,0BAKZ9P,EAAAC,EAAAC,cAAC6M,GAAA,QAAKG,KAAN,CAAWC,MAAM,mBAAoBC,aAAW,EAACuiB,eAAgB/mB,KAAKjN,MAAM2zB,cACvE1iB,EAAkB,QAAS,CACxBiE,aAAejI,KAAKyC,MAAMlO,KAAKrF,gBAAgBE,UAC/CqV,MAAO,CACH,CAAEC,UAAU,EAAMb,QAAS,oCAC3B,CAAE4E,IAAI,EAAG5E,QAAS,4CAClB,CAAE8E,UAAW3I,KAAKymB,oBALzBziB,CASG5M,EAAAC,EAAAC,cAACqN,GAAA,QAAD,CAAOG,YAAY,uBAI3B1N,EAAAC,EAAAC,cAAC6M,GAAA,QAAKG,KAAN,CAAWC,MAAM,WAAYC,aAAW,GACnCR,EAAkB,WAAY,CAC3BiE,aAAejI,KAAKyC,MAAMlO,KAAKrF,gBAAgBK,YAC/CkV,MAAO,CAAC,CAAEC,UAAU,EAAMb,QAAS,yCAFtCG,CAIG5M,EAAAC,EAAAC,cAAC4Q,GAAA,QAAD,CACAjZ,KAAK,WACL6V,YAAY,8BACZD,MAAO,CAAEvC,MAAO,QAChB4R,YAAY,EACZ9D,iBAAiB,KAEZpQ,KAAKyC,MAAMpP,MAAMrG,iBAAiB8K,IAAI,SAAAE,GAAI,OACvCZ,EAAAC,EAAAC,cAAC4Q,GAAA,QAAO3B,OAAR,CAAetO,IAAKD,EAAK6P,IAAKX,MAAOlP,EAAK6P,IAAKzG,EAAGpJ,EAAKoO,OACtDpO,EAAKoO,YAOtBhP,EAAAC,EAAAC,cAAC6M,GAAA,QAAKG,KAAN,CAAWC,MAAM,yDAAyDC,aAAW,GAChFR,EAAkB,WAAY,CAC3BiE,aAAejI,KAAKyC,MAAMlO,KAAKrF,gBAAgBG,aAC/CoV,MAAO,CAAC,CAAEC,UAAU,EAAMb,QAAS,qCAFtCG,CAIG5M,EAAAC,EAAAC,cAACiZ,GAAA,EAAD,CAAa1L,MAAO,CAACvC,MAAM,QAAUwC,YAAY,gBAAgB2D,IAAK,GAAIC,IAAK,QAIvFtR,EAAAC,EAAAC,cAAC6M,GAAA,QAAKG,KAAN,CAAWC,MAAM,oBAAqBC,aAAW,GAC5CR,EAAkB,eAAgB,CAC/BiE,aAAejI,KAAKyC,MAAMlO,KAAKrF,gBAAgBI,kBADlD0U,CAGG5M,EAAAC,EAAAC,cAACqN,GAAA,QAAD,CAAOG,YAAY,wBAI3B1N,EAAAC,EAAAC,cAAC6M,GAAA,QAAKG,KAAN,CAAWC,MAAM,uBAAwBC,aAAW,GAE5CR,EAAkB,QAAS,CACvBS,MAAO,CAAC,CAAEC,UAAU,EAAMb,QAAS,uCADvCG,CAGI5M,EAAAC,EAAAC,cAAC0vB,GAAA,QAAD,CACIC,UAAQ,EACRniB,YAAY,oBACZmE,SAAUjJ,KAAKknB,cACf5Z,KAAMtN,KAAKmnB,cAM3B/vB,EAAAC,EAAAC,cAAC6M,GAAA,QAAKG,KAAN,CAAWC,MAAM,uBAAwBC,aAAW,GAE5CR,EAAkB,MAAO,CACrBS,MAAO,CAAC,CAAEC,UAAU,EAAMb,QAAS,qCADvCG,CAGI5M,EAAAC,EAAAC,cAAC0vB,GAAA,QAAD,CACIC,UAAQ,EACRniB,YAAY,kBACZmE,SAAUjJ,KAAKonB,YACf9Z,KAAMtN,KAAKqnB,YAM3BjwB,EAAAC,EAAAC,cAAC6M,GAAA,QAAKG,KAAN,KACIlN,EAAAC,EAAAC,cAAC0N,GAAA,QAAD,CAAQ7U,KAAK,UAAU8U,SAAS,SAASC,OAAK,GAA9C,mBAjLCE,cA4LvBkiB,GAAgBhiB,WAAKC,OAAO,CAAExT,KAAM,cAApBuT,CAAoC+gB,IAO3C7gB,eALS,SAAAzS,GAAK,MAAK,CAC9BwB,KAAOxB,EAAMwB,KACblB,MAAMN,EAAMM,QAGuB,CACnCgwB,cACAC,8BAFW9d,CAGZ8hB,mCCrNUC,YAAe,CACxBhuB,QAAS,CACL,CAAC,CAAEomB,OAAQ,KAAO,CAAEA,OAAQ,KAAO,CAAEA,OAAQ,CAAC,EAAG,EAAG,EAAG,IAAM,CAAE6H,KAAM,KACrE,CAAC,CAAE1c,KAAM,KACT,CAAC,OAAQ,SAAU,YAAa,SAAU,cAC1C,CAAC,CAAE2c,KAAM,WAAa,CAAEA,KAAM,WAC9B,CAAC,OAAQ,QAAS,SAClB,CAAC,SACD,CAAC,iBAIIC,GAAe,CACxB,SACA,OACA,OACA,OACA,SACA,YACA,SACA,aACA,OACA,SACA,OACA,QACA,QACA,cCGIrb,GAAU9T,KAAV8T,MACA9F,GAAWC,WAAXD,OAEA8X,IADgBiI,WAAhBC,YACUjI,KAAVD,OAEFsJ,eACF,SAAAA,EAAYllB,GAAM,IAAAO,EAAA,OAAA7P,OAAA4M,EAAA,EAAA5M,CAAA6M,KAAA2nB,IACd3kB,EAAA7P,OAAA8P,GAAA,EAAA9P,CAAA6M,KAAA7M,OAAA+P,GAAA,EAAA/P,CAAAw0B,GAAAxkB,KAAAnD,KAAMyC,KAUVmlB,QAAU,SAACvkB,GACPL,EAAKc,SAAS,CAAE8C,QAASvD,EAAEqH,OAAO9D,WAZpB5D,EAelB6kB,eAAiB,SAAC3gB,GACd1S,QAAQC,IAAIyS,GACZlE,EAAKc,SAAS,CAAEqW,OAAQjT,KAjBVlE,EAqBlB8kB,YAAc,SAAAzkB,GACVA,EAAEC,iBACFN,EAAKP,MAAMJ,KAAKkB,eAAe,SAACC,EAAKC,GAC5BD,IACDhP,QAAQC,IAAIgP,GACZT,EAAKP,MAAMslB,WAAW/kB,EAAKjQ,MAAM6T,QAAQ,CACrC/W,MAAO4T,EAAOukB,SACdl4B,YAAakT,EAAKjQ,MAAMonB,OACxBlqB,UAAW,GACXC,SAAUuT,EAAOwkB,YACjB93B,KAAMsT,EAAOykB,QACb93B,WAAY4S,EAAKjQ,MAAMo1B,aAG3BnlB,EAAKP,MAAM4gB,WAAW,OAnChBrgB,EAyClB4e,UAAY,WACR5e,EAAKc,SAAS,CAAE0H,SAAS,KA1CXxI,EA6ClBuK,SAAW,SAAAlK,GACPL,EAAKc,SAAS,CAAE0H,SAAS,KA9CXxI,EAiDlBwb,aAAe,SAAAnb,GACXL,EAAKc,SAAS,CAAE0H,SAAS,KAhDzBxI,EAAKjQ,MAAQ,CACT6T,SAAS,EACTuT,OAAQ,KACRgO,WAAY,GACZxnB,KAAM,GACN6K,SAAS,GAPCxI,yEAqDT,IAAAoJ,EAAApM,KACGgE,EAAsBhE,KAAKyC,MAAMJ,KAAjC2B,kBAER,OACI5M,EAAAC,EAAAC,cAACuhB,EAAA,SAAD,KACIzhB,EAAAC,EAAAC,cAAA,OAAKuN,MAAO,CAAEzO,QAAS,oBAAqBkM,MAAO,OAAQuK,UAAW,WAClEzV,EAAAC,EAAAC,cAAC8wB,GAAD,CAAOxb,MAAO,GAAd,iBAGJxV,EAAAC,EAAAC,cAAA,OAAKI,UAAU,aACXN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,OACXN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,aACXN,EAAAC,EAAAC,cAACmZ,GAAA,QAAD,CAAUxH,SAAUjJ,KAAK4nB,SAAzB,2DAOZxwB,EAAAC,EAAAC,cAAA,OAAKI,UAAU,aACXN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,OACXN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,aACdsI,KAAKjN,MAAM6T,QACRxP,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAC8wB,GAAD,CAAOvjB,MAAO,CAACgI,UAAW,UAAWD,MAAO,GAA5C,wBACAxV,EAAAC,EAAAC,cAAC6M,GAAA,QAAD,CACIC,SAAUpE,KAAK8nB,YACfzjB,aAAa,OAEbjN,EAAAC,EAAAC,cAAC6M,GAAA,QAAKG,KAAN,CAAWC,MAAM,YAAaC,aAAW,GACpCR,EAAkB,WAAY,CAC3BiE,aAAejI,KAAKyC,MAAMlO,KAAK3E,YAAYC,MAC3C4U,MAAO,CAAC,CAAEC,UAAU,EAAMb,QAAS,+BAFtCG,CAIG5M,EAAAC,EAAAC,cAACqN,GAAA,QAAD,CAAOG,YAAY,gBAK3B1N,EAAAC,EAAAC,cAAC6M,GAAA,QAAKG,KAAN,CAAWC,MAAM,kBAAmBC,aAAW,GAC3CpN,EAAAC,EAAAC,cAAC+wB,GAAAhxB,EAAD,CACIixB,QAASf,GACTgB,QAASb,GACTxgB,MAAOlH,KAAKjN,MAAMonB,OAClBrV,YAAY,4BACZmE,SAAUjJ,KAAK6nB,kBAIvBzwB,EAAAC,EAAAC,cAAC6M,GAAA,QAAKG,KAAN,CAAWC,MAAM,WAAYC,aAAW,GACnCR,EAAkB,UAAW,CAC1BiE,aAAejI,KAAKyC,MAAMlO,KAAK3E,YAAYs4B,QAC3CzjB,MAAO,CAAC,CAAEC,UAAU,EAAMb,QAAS,8BAFtCG,CAIG5M,EAAAC,EAAAC,cAAC4Q,GAAA,QAAD,CAAQpD,YAAY,YAChB1N,EAAAC,EAAAC,cAACkxB,GAAD,CAAQthB,MAAM,aAAd,aACA9P,EAAAC,EAAAC,cAACkxB,GAAD,CAAQthB,MAAM,aAAd,aACA9P,EAAAC,EAAAC,cAACkxB,GAAD,CAAQthB,MAAM,cAAd,cACA9P,EAAAC,EAAAC,cAACkxB,GAAD,CAAQthB,MAAM,kBAAd,qBAKZ9P,EAAAC,EAAAC,cAAC6M,GAAA,QAAKG,KAAN,CAAWC,MAAM,eAAgBC,aAAW,GACvCR,EAAkB,cAAe,CAC9BiE,aAAejI,KAAKyC,MAAMlO,KAAK3E,YAAYM,SAC3CuU,MAAO,CAAC,CAAEC,UAAU,EAAMb,QAAS,kCAFtCG,CAIG5M,EAAAC,EAAAC,cAACqN,GAAA,QAAD,CAAOG,YAAY,mBAI3B1N,EAAAC,EAAAC,cAAC6M,GAAA,QAAKG,KAAN,KACIlN,EAAAC,EAAAC,cAAC0N,GAAA,QAAD,CAAQ7U,KAAK,UAAU8U,SAAS,SAASC,OAAK,GAA9C,UAMR9N,EAAAC,EAAAC,cAACooB,GAAA,EAAD,CAAUvN,iBAAkB,CAAC,MACzB/a,EAAAC,EAAAC,cAACmxB,GAAD,CAAO9I,OAAO,uBAAuB1nB,IAAI,KACrCb,EAAAC,EAAAC,cAACoxB,GAAA,YAAD,CACIC,cAAe3oB,KAAKjN,MAAMo1B,WAC1BS,OAAQ,SAAAC,GACJzc,EAAKtI,SAAS,CAAEqkB,WAAYU,IAE5Br0B,QAAQC,IAAIo0B,IAEhBC,QAAS,SAAApnB,GAAK,OAAIlN,QAAQC,IAAIiN,MAGlCtK,EAAAC,EAAAC,cAAC2C,GAAA,EAAD,MAEC,SACD7C,EAAAC,EAAAC,cAAA,yDAEAF,EAAAC,EAAAC,cAAC0N,GAAA,QAAD,CAAQ7U,KAAK,UAAU0a,QAAS7K,KAAK4hB,WAArC,aAORxqB,EAAAC,EAAAC,cAAC+V,GAAA,EAAD,CACIxd,MAAM,UACN2b,QAASxL,KAAKjN,MAAMyY,QACpB8B,KAAMtN,KAAKuN,SACXC,SAAUxN,KAAKwe,cAEfpnB,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAACoxB,GAAA,aAAD,CACIK,YAAY,EACZJ,cAAe3oB,KAAKjN,MAAMo1B,WAC1BxnB,KAAMX,KAAKjN,MAAM4N,KACjBioB,OAAQ,SAAAI,GAEJ5c,EAAKtI,SAAS,CAAEnD,KAAMqoB,KAE1BF,QAAS,SAAApnB,GAAK,OAAIlN,QAAQC,IAAIiN,QAK1CtK,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OAAKI,UAAU,aACXN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,OACXN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,aACXN,EAAAC,EAAAC,cAAC0N,GAAA,QAAD,CACI6F,QAAS,kBAAIuB,EAAK3J,MAAM4gB,WAAW,IACnClzB,KAAK,UACL8U,SAAS,SAASC,OAAK,GAH3B,uBAvLnBE,aA2MnB6jB,GAAU3jB,WAAKC,OAAO,CAAExT,KAAM,cAApBuT,CAAoCqiB,IAMrCniB,eAJS,SAAAzS,GAAK,MAAK,CAC9BwB,KAAOxB,EAAMwB,OAGuB,CACpC8uB,cACA0E,WR7KsB,SAACmB,EAAOvoB,GAAR,OAAgB,SAAAM,GACtCA,EAAS,CACL9Q,KAAO,eACPoD,SAAU21B,EACV11B,SAAUmN,OQuKH6E,CAGZyjB,eCtOGE,eACF,SAAAA,EAAY1mB,GAAM,IAAAO,EAAA,OAAA7P,OAAA4M,EAAA,EAAA5M,CAAA6M,KAAAmpB,IACdnmB,EAAA7P,OAAA8P,GAAA,EAAA9P,CAAA6M,KAAA7M,OAAA+P,GAAA,EAAA/P,CAAAg2B,GAAAhmB,KAAAnD,KAAMyC,KAcVW,aAAe,SAAAC,GACXA,EAAEC,iBACFN,EAAKP,MAAMJ,KAAKkB,eAAe,SAACC,EAAKC,GACjC,IAAKD,EAED,GAAGC,EAAO2lB,IAAIpmB,EAAKP,MAAMlO,KAAKlE,iCAAiC4C,OAAO,CAIlE,IAHA,IAAIo2B,EAAI,GACJC,EAAan2B,OAAAc,EAAA,EAAAd,CAAI6P,EAAKP,MAAMlO,KAAKlE,kCACjCk5B,EAAED,EAAar2B,OAAO,EAClB4b,EAAEpL,EAAO2lB,GAAGva,EAAE,EAAEA,IAAI,CACxB0a,GAAI,EACJ,IAAInK,EAAIhE,KAAKC,MAAMD,KAAKoO,SAAWD,GACnCF,EAAIha,KAAKia,EAAalK,GAAGvX,KACzByhB,EAAatH,OAAO5C,EAAE,GAE1Bpc,EAAKP,MAAMgnB,oBAAoBJ,GAC/BrmB,EAAKc,SAAS,CACV4lB,cAAe,SAInBvoB,GAAM,QAAQ,SAAS,iDApCrB6B,EA0ClB2mB,WAAa,SAAA3xB,GAOT,MAAO,CACHuM,MANFnN,EAAAC,EAAAC,cAAA,QAAMI,UAAU,eACVN,EAAAC,EAAAC,cAAC0N,GAAA,QAAD,CAAQuH,MAAM,SAAS1B,QAAS,WAAK7H,EAAK0b,UAAU1mB,EAAK6P,MAAOna,KAAK,OAAOmX,MAAO,CAAC3O,WAAW,0EAA0E0C,MAAM,aAAckS,KAAK,UACjM9S,EAAK7D,MAKV+S,MAAOlP,EAAK6P,MAnDF7E,EAuDlB0b,UAAU,SAACC,GACP3b,EAAKc,SAAS,CACV8a,iBAAiBD,EACjBF,UAAS,KA1DCzb,EA6DlBwb,aAAa,WACTxb,EAAKc,SAAS,CACV2a,UAAS,KA/DCzb,EAmElB4mB,aAAe,SAACC,EAAYC,EAAWC,GACnC/mB,EAAKP,MAAMgnB,oBAAoBI,IAlE/B7mB,EAAKjQ,MAAM,CACPi3B,YAAW,EACXN,cAAa,EACb9K,iBAAiB,KACjBH,UAAS,GAEbzb,EAAKP,MAAMwnB,WAAWjnB,EAAKP,MAAMxT,MARnB+T,oFAYdhD,KAAKyC,MAAMynB,yBAAyBlqB,KAAKyC,MAAMlO,KAAKrF,gBAAgBK,8CA4D/D,IACGyU,EAAsBhE,KAAKyC,MAAMJ,KAAjC2B,kBACR,OACI5M,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAC0Y,GAAA,QAAD,KACI5Y,EAAAC,EAAAC,cAAC2Y,GAAA,QAAD,CAAKC,KAAM,EAAGrL,MAAO,CAACzO,QAAQ,aAC1BgB,EAAAC,EAAAC,cAAA,OAAKI,UAAS,8BAAA1D,OAAmD,WAAnBgM,KAAKyC,MAAMxT,KAAkB,WAAa,UACpFmI,EAAAC,EAAAC,cAAC6M,GAAA,QAAD,CAAMC,SAAUpE,KAAKoD,cACjBhM,EAAAC,EAAAC,cAAC6M,GAAA,QAAKG,KAAN,CAAWC,MAAM,yBAAyBC,aAAW,GAChDR,EAAkB,KAAM,CACrBS,MAAO,CAAC,CAAEC,UAAU,EAAMb,QAAS,kCADtCG,CAGG5M,EAAAC,EAAAC,cAACiZ,GAAA,EAAD,CAAa1L,MAAO,CAACvC,MAAM,QAAUwC,YAAY,iBAAiB2D,IAAK,GAAIC,IAAK,OAGxFtR,EAAAC,EAAAC,cAAC6M,GAAA,QAAKG,KAAN,KACIlN,EAAAC,EAAAC,cAAC0N,GAAA,QAAD,CAAQ7U,KAAK,UAAU8U,SAAS,SAASC,OAAK,EAACwL,UAAW1Q,KAAKjN,MAAM22B,cAArE,2BAQhBtyB,EAAAC,EAAAC,cAAC2Y,GAAA,QAAD,CAAKC,KAAM,GAAIrL,MAAO,CAACzO,QAAQ,SAC3BgB,EAAAC,EAAAC,cAAC6yB,GAAA,EAAD,CACIzZ,SAA6B,WAAnB1Q,KAAKyC,MAAMxT,KACrBme,OAAQ,SAAAjC,GAAM,OAAIA,EAAOtD,KACzBmF,WAAYhN,KAAKyC,MAAMlO,KAAKlE,iCAC5BgJ,UAAW,CACPiJ,MAAO,MACP3L,OAAQ,KAEZkzB,WAAY7pB,KAAKyC,MAAMlO,KAAKrF,gBAAgBM,cAC5Cmc,OAAQ3L,KAAK2pB,WACb1gB,SAAUjJ,KAAK4pB,iBAK3BxyB,EAAAC,EAAAC,cAAC+V,GAAA,EAAD,CACIK,gBAAgB,EAChBpL,MAAM,MACNuC,MAAO,CAAC4I,IAAI,QACZ5d,MAAM,mBACN2b,QAASxL,KAAKjN,MAAM0rB,SACpBnR,KAAMtN,KAAKwe,aACXhR,SAAUxN,KAAKwe,aACfxnB,OAAQ,MAERI,EAAAC,EAAAC,cAAC8yB,GAAD,CAAuBzL,IAAK3e,KAAKjN,MAAM6rB,4BA3HrBxZ,aAkIhCilB,GAAyB/kB,WAAKC,OAAO,CAAExT,KAAM,cAApBuT,CAAoC6jB,IAMpD3jB,eAJS,SAAAzS,GAAK,MAAK,CAC9BwB,KAAOxB,EAAMwB,OAGsB,CACnC8uB,cACAC,6BACA4G,yBTpHoC,SAAC5jB,GAAD,OAAO,SAAArF,GAC3CtB,GAAW,CACPe,IAAG,GAAA1M,OAAMmH,GAAKa,mBACd2E,KAAK,CACDyN,QAAU9H,KAGjB3C,KAAK,SAACC,GAEAA,EAASjD,KAAKa,QACbP,EAAS,CACL9Q,KAAM,mCACNwD,QAASiQ,EAASjD,KAAKA,QAI3BQ,GAAM,QAAQ,SAASyC,EAASjD,KAAKkD,SACrC5C,EAAS,CACL9Q,KAAM,mCACNwD,QAAS,QAIpBoQ,MAAM,SAACrC,GACJP,GAAM,QAAQ,SAAS,gBACvBF,EAAS,CACL9Q,KAAM,mCACNwD,QAAS,SS0FjB81B,oBT1I+B,SAACnjB,GAAD,OAAO,SAAArF,GACtCA,EAAS,CACL9Q,KAAM,kCACNwD,QAAS2S,MSwIbgkB,4BTpIuC,SAAChkB,GAAD,OAAM,SAAArF,GAC7CA,EAAS,CACL9Q,KAAM,kCACNwD,QAAQ2S,MSkIZ2jB,WT9HsB,SAAC3jB,GAAD,OAAM,SAAArF,GAC5BA,EAAS,CACL9Q,KAAO,8BACPwD,QAAQ2S,OSqHDd,CAOZ6kB,IAIGtK,eACF,SAAAA,EAAYtd,GAAM,IAAA2J,EAAA,OAAAjZ,OAAA4M,EAAA,EAAA5M,CAAA6M,KAAA+f,IACd3T,EAAAjZ,OAAA8P,GAAA,EAAA9P,CAAA6M,KAAA7M,OAAA+P,GAAA,EAAA/P,CAAA4sB,GAAA5c,KAAAnD,KAAMyC,KACD1P,MAAM,CACPktB,UAAS,EACTC,SAAS,MAJC9T,oFAQC,IAAA2F,EAAA/R,KACfA,KAAK8D,SAAS,CACVmc,UAAS,IAEbrgB,GAAK,CACDc,IAAKvF,GAAKoC,iCACVoD,KAAM,CACFge,IAAK3e,KAAKyC,MAAMkc,OAErBhb,KAAK,SAACC,GAIDA,EAASjD,KAAKa,QACduQ,EAAKjO,SAAS,CACVoc,SAAUtc,EAASjD,KAAKA,KAAK,KAIjCQ,GAAM,QAAS,UAAWyC,EAASjD,KAAKkD,SAE5CkO,EAAKjO,SAAS,CACVmc,UAAU,MAEflc,MAAM,SAACrC,GACNqQ,EAAKjO,SAAS,CACVmc,UAAU,IAKd9e,GAAM,QAAS,UAAW,mDAK9B,IAAMgS,EAAM,CAAC,IAAI,IAAI,IAAI,IAAI,KACzBC,EAAWpT,KAAKjN,MAAMmtB,SAC1B,OAAgB,OAAb9M,EAEKhc,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKI,UAAU,+BACXN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,uBACV0b,EAAWjf,MAEfif,EAAW1D,QACRtY,EAAAC,EAAAC,cAAA,OAAKI,UAAU,iCACXN,EAAAC,EAAAC,cAAA,OAAKuD,IAAI,WAAWnD,UAAU,uBAAuBiD,IAAKyY,EAAW1D,WAEvE,KAENtY,EAAAC,EAAAC,cAAA,WACK8b,EAAWrf,QAAQ+D,IAAI,SAACwO,EAAEuI,GACvB,OACIzX,EAAAC,EAAAC,cAAA,OAAKW,IAAK4W,GACNzX,EAAAC,EAAAC,cAAC0Y,GAAA,QAAD,CAAK7f,KAAK,OAAO4K,QAAQ,SAASrD,UAAU,0BACxCN,EAAAC,EAAAC,cAAC2Y,GAAA,QAAD,CAAKC,KAAM,GAEH5J,EAAElS,SAASgD,EAAAC,EAAAC,cAAC0N,GAAA,QAAD,CAAQtN,UAAU,QAAQ6U,MAAM,UAAU4G,EAAKtE,IAAazX,EAAAC,EAAAC,cAAC0N,GAAA,QAAD,CAAQ7U,KAAK,UAAUoc,MAAM,UAAU4G,EAAKtE,KAI1HvI,EAAEiJ,OACCnY,EAAAC,EAAAC,cAAC2Y,GAAA,QAAD,CAAKC,KAAM,EAAGrL,MAAO,CAACzO,QAAQ,QAC1BgB,EAAAC,EAAAC,cAAA,OAAKuD,IAAI,UAAUnD,UAAU,uBAAuBiD,IAAK2L,EAAEiJ,UAG/D,KAEHjJ,EAAEiJ,OACCnY,EAAAC,EAAAC,cAAC2Y,GAAA,QAAD,CAAKC,KAAM,IAAK5J,EAAEgJ,SAElBlY,EAAAC,EAAAC,cAAC2Y,GAAA,QAAD,CAAKC,KAAM,IAAK5J,EAAEgJ,gBAelDlY,EAAAC,EAAAC,cAAA,OAAKI,UAAU,oBACXN,EAAAC,EAAAC,cAAC0a,GAAA,EAAD,CAAUC,QAAM,IAChB7a,EAAAC,EAAAC,cAAC0a,GAAA,EAAD,CAAUC,QAAM,YAlGA9M,IAAMC,WC7JlCsM,GAAYC,KAAZD,QA0BR,IAIelM,eAJS,SAAAzS,GAAK,MAAK,CAC9BwB,KAAOxB,EAAMwB,OAGsB,CACnC8uB,cACAC,8BAFW9d,CA5Bf,SAAwB/C,GACpB,IAAM8nB,EAAgBnzB,EAAAC,EAAAC,cAAC0N,GAAA,QAAD,4BAA6BvC,EAAMlO,KAAKrF,gBAAgBM,cAAcyD,QAE5F,OACImE,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAC4a,GAAA,EAAD,CAAMC,iBAAiB,IAAIqY,mBAAoBD,GAC3CnzB,EAAAC,EAAAC,cAACmzB,GAAD,CAASrY,IAAI,mBAAmBna,IAAI,KAChCb,EAAAC,EAAAC,cAACozB,GAAD,CAAwBz7B,KAAK,YAEjCmI,EAAAC,EAAAC,cAACmzB,GAAD,CAASrY,IAAI,qBAAqBna,IAAI,KAClCb,EAAAC,EAAAC,cAACozB,GAAD,CAAwBz7B,KAAK,aAIrCmI,EAAAC,EAAAC,cAAA,OAAKuN,MAAO,CAAEvC,MAAO,OAAQlM,QAAS,SAClCgB,EAAAC,EAAAC,cAAC0N,GAAA,QAAD,CAAQH,MAAO,CAAE8lB,MAAO,SAAWx6B,KAAK,UAAU0a,QAAS,kBAAMpI,EAAM4gB,WAAW,KAAlF,YCjBHuH,GAAiC,SAACjqB,GAAD,OAAU,SAAAM,GACpDA,EAAS,CACL9Q,KAAM,qCACNwD,QAASgN,MAKJkqB,GAA2B,kBAAM,SAAA5pB,GAC1CA,EAAS,CACL9Q,KAAM,8CACNoD,UAAU,EACVC,SAAU,KAGdmM,GAAW,CACPe,IAAG,GAAA1M,OAAKmH,GAAKgD,wBAEhBwF,KAAK,SAACC,GACCA,EAASjD,KAAKa,QACdP,EAAS,CACL9Q,KAAM,8CACNoD,UAAU,EACVC,SAAUoQ,EAASjD,KAAKxO,aAI5BgP,GAAM,QAAS,SAAUyC,EAASjD,KAAKkD,SACvC5C,EAAS,CACL9Q,KAAM,8CACNoD,UAAU,EACVC,SAAU,QAIrBuQ,MAAM,SAACrC,GACJP,GAAM,QAAS,SAAU,gBACzBF,EAAS,CACL9Q,KAAM,8CACNoD,UAAU,EACVC,SAAU,SChBd6Y,GAAU9T,KAAV8T,MAEFye,eACF,SAAAA,EAAYroB,GAAM,IAAAO,EAAA,OAAA7P,OAAA4M,EAAA,EAAA5M,CAAA6M,KAAA8qB,IACd9nB,EAAA7P,OAAA8P,GAAA,EAAA9P,CAAA6M,KAAA7M,OAAA+P,GAAA,EAAA/P,CAAA23B,GAAA3nB,KAAAnD,KAAMyC,KAcVW,aAAe,SAAAC,GACXA,EAAEC,kBAhBYN,EAoBlB4kB,QAAU,SAACvkB,GACPL,EAAKP,MAAMsoB,UAAU1nB,EAAEqH,OAAO9D,SAC9B5D,EAAKc,SAAS,CAAE8C,QAASvD,EAAEqH,OAAO9D,WAtBpB5D,EA0BlB4mB,aAAe,SAACC,EAAYC,EAAWC,GACnC/mB,EAAKP,MAAMuoB,0BAA0BnB,IA3BvB7mB,EA+BlB2mB,WAAa,SAAA3xB,GAcT,MAAO,CACHuM,MAbFnN,EAAAC,EAAAC,cAAA,QAAMI,UAAU,eACVN,EAAAC,EAAAC,cAAC0N,GAAA,QAAD,CACIuH,MAAM,SACN1B,QAAS,WAAK7H,EAAK0b,UAAU1mB,EAAK6P,MAClChD,MAAO,CAAC3O,WAAW,0EAA0E0C,MAAM,aACnGlL,KAAK,OACLod,KAAK,UAER9S,EAAKnI,OAMVqX,MAAOlP,EAAK6P,MA/CF7E,EAmDlB0b,UAAY,SAACC,GACT3b,EAAKc,SAAS,CACV8a,iBAAiBD,EACjBF,UAAS,KAtDCzb,EA0DlBwb,aAAa,WACTxb,EAAKc,SAAS,CACV2a,UAAS,KA5DCzb,EAiElB8kB,YAAc,SAAAzkB,GACVA,EAAEC,iBACFN,EAAKP,MAAMJ,KAAKkB,eAAe,SAACC,EAAKC,GAC5BD,IACDhP,QAAQC,IAAIgP,GAEZT,EAAKP,MAAMwoB,eAAexnB,EAAO+iB,UAEjCxjB,EAAKP,MAAM4gB,WAAW,OAvE9BrgB,EAAKjQ,MAAQ,CACT6T,SAAS,EACTojB,YAAW,EACXN,cAAa,EACb9K,iBAAiB,KACjBH,UAAS,GAPCzb,oFAYdhD,KAAKyC,MAAMooB,4DAkEN,IAAAze,EAAApM,KACGgE,EAAsBhE,KAAKyC,MAAMJ,KAAjC2B,kBAER,OACI5M,EAAAC,EAAAC,cAACuhB,EAAA,SAAD,KACIzhB,EAAAC,EAAAC,cAAA,OAAKuN,MAAO,CAAEzO,QAAS,oBAAqBkM,MAAO,OAAQuK,UAAW,WAClEzV,EAAAC,EAAAC,cAAC4zB,GAAD,CAAOte,MAAO,GAAd,8BAGJxV,EAAAC,EAAAC,cAAA,OAAKI,UAAU,aACXN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,OACXN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,aACXN,EAAAC,EAAAC,cAACmZ,GAAA,QAAD,CAAUxH,SAAUjJ,KAAK4nB,SAAzB,sEAOZxwB,EAAAC,EAAAC,cAAA,OAAKI,UAAU,aACXN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,OACXN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,aACdsI,KAAKjN,MAAM6T,QACRxP,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAC6yB,GAAA,EAAD,CACI/c,OAAQ,SAAAjC,GAAM,OAAIA,EAAOtD,KACzBmF,WAAYhN,KAAKyC,MAAM1N,OAAO1G,kBAC9BgL,UAAW,CACPiJ,MAAO,MACP3L,OAAQ,KAEZkzB,WAAY7pB,KAAKyC,MAAMlO,KAAKhE,YAAYf,cACxCmc,OAAQ3L,KAAK2pB,WACb1gB,SAAUjJ,KAAK4pB,eAGnBxyB,EAAAC,EAAAC,cAAC6M,GAAA,QAAD,CACIC,SAAUpE,KAAK8nB,YACfzjB,aAAa,OAEbjN,EAAAC,EAAAC,cAAC6M,GAAA,QAAKG,KAAN,CAAWC,MAAM,4CAA6CC,aAAW,GACpER,EAAkB,WAAY,CAC3BiE,aAAejI,KAAKyC,MAAMlO,KAAKhE,YAAYlB,aAC3CoV,MAAO,CAAC,CAAEC,UAAU,EAAMb,QAAS,sCAFtCG,CAIG5M,EAAAC,EAAAC,cAACiZ,GAAA,EAAD,CAAa9H,IAAK,GAAI5D,MAAO,CAACvC,MAAM,QAASwC,YAAY,0BAIjE1N,EAAAC,EAAAC,cAAC6M,GAAA,QAAKG,KAAN,KACIlN,EAAAC,EAAAC,cAAA,OAAKuN,MAAO,CAAEvC,MAAO,OAAQlM,QAAS,SAClCgB,EAAAC,EAAAC,cAAC0N,GAAA,QAAD,CACIH,MAAO,CAAE8lB,MAAO,SAChBx6B,KAAK,UACL8U,SAAS,SACTC,OAAK,GAJT,YAahB9N,EAAAC,EAAAC,cAAA,WACC,SACDF,EAAAC,EAAAC,cAAA,WAEAF,EAAAC,EAAAC,cAAA,OAAKI,UAAU,aACXN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,OACXN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,aACXN,EAAAC,EAAAC,cAAC0N,GAAA,QAAD,CACI6F,QAAS,kBAAMuB,EAAK3J,MAAM4gB,WAAW,IACrClzB,KAAK,UACL8U,SAAS,SAASC,OAAK,GAH3B,eAgBxB9N,EAAAC,EAAAC,cAAC+V,GAAA,EAAD,CACIK,gBAAgB,EAChBpL,MAAM,MACNuC,MAAO,CAAC4I,IAAI,QACZ5d,MAAM,mBACN2b,QAASxL,KAAKjN,MAAM0rB,SACpBnR,KAAMtN,KAAKwe,aACXhR,SAAUxN,KAAKwe,aACfxnB,OAAQ,eA9KJoO,aAwLlB+lB,GAAa7lB,WAAKC,OAAO,CAAExT,KAAM,cAApBuT,CAAoCwlB,IAOxCtlB,eALS,SAAAzS,GAAK,MAAK,CAC9BwB,KAAMxB,EAAMwB,KACZQ,OAAQhC,EAAMgC,SAGsB,CACpCsuB,cACA0H,UZhJqB,SAACpqB,GAAD,OAAS,SAAAM,GAC9BA,EAAS,CACL9Q,KAAO,8BACPwD,QAASgN,MY8IbkqB,4BACAG,0BZhIqC,SAACrqB,GAAD,OAAU,SAAAM,GAC/CA,EAAS,CACL9Q,KAAM,wCACNwD,QAASgN,MY8HbyqB,kCZzH6C,SAACzqB,GAAD,OAAS,SAAAM,GACtDA,EAAS,CACL9Q,KAAM,yCACNwD,QAAQgN,MYuHZsqB,eZ5I0B,SAACtqB,GAAD,OAAS,SAAAM,GAGnCA,EAAS,CACL9Q,KAAO,+BACPwD,QAASgN,OYiIF6E,CAOZ2lB,yBCzNK9e,GAAU9T,KAAV8T,MAEFgf,eACF,SAAAA,EAAY5oB,GAAM,IAAAO,EAAA,OAAA7P,OAAA4M,EAAA,EAAA5M,CAAA6M,KAAAqrB,IACdroB,EAAA7P,OAAA8P,GAAA,EAAA9P,CAAA6M,KAAA7M,OAAA+P,GAAA,EAAA/P,CAAAk4B,GAAAloB,KAAAnD,KAAMyC,KAMV6oB,WAAa,WACT3rB,GAAW,CACPe,IAAKvF,GAAKkB,YACVsE,KAAM,CACFxQ,KAAM6S,EAAKP,MAAMlO,KAAKrF,gBAAgBC,SACtCU,MAAOmT,EAAKP,MAAMlO,KAAKrF,gBAAgBE,UACvC+C,UAAW6Q,EAAKP,MAAMlO,KAAKrF,gBAAgBM,cAC3Cg3B,SAAUxjB,EAAKP,MAAMlO,KAAKrF,gBAAgBG,aAC1CkzB,SAAUvf,EAAKP,MAAMlO,KAAKrF,gBAAgBK,YAC1CuY,aAAc9E,EAAKP,MAAMlO,KAAKrF,gBAAgBI,iBAC9CG,UAAWuT,EAAKP,MAAMlO,KAAKrF,gBAAgBO,UAC3CC,QAASsT,EAAKP,MAAMlO,KAAKrF,gBAAgBQ,QAEzCC,WAAYqT,EAAKP,MAAMlO,KAAK5E,WAC5Bq4B,SAAShlB,EAAKP,MAAMlO,KAAK3E,YAAYC,MACrC07B,eAAgBvoB,EAAKP,MAAMlO,KAAK3E,YAAYE,YAC5Cm4B,YAAajlB,EAAKP,MAAMlO,KAAK3E,YAAYM,SACzCg4B,QAASllB,EAAKP,MAAMlO,KAAK3E,YAAYO,KACrCq7B,UAAWxoB,EAAKP,MAAMlO,KAAK3E,YAAYQ,WAEvCE,UAAW0S,EAAKP,MAAMlO,KAAKjE,UAC3Bm7B,gBAAiBzoB,EAAKP,MAAMlO,KAAKhE,YAAYf,cAC7Ck8B,eAAgB1oB,EAAKP,MAAMlO,KAAKhE,YAAYlB,gBAGnDsU,KAAK,SAACC,GAECA,EAASjD,KAAKa,SACdL,GAAM,UAAW,mCAAoC,qCACrDsK,WAAW,WACPzI,EAAKc,SAAS,CACVxS,OAAQsS,EAASjD,KAAKrP,UAE3B,MAGH6P,GAAM,QAAS,SAAUyC,EAASjD,KAAKkD,WAE5CE,MAAM,SAACP,GAENrC,GAAM,QAAS,SAAU,mBA7C7B6B,EAAKjQ,MAAQ,CACTzB,OAAQ,MAHE0R,yEAoDd,OAAGhD,KAAKjN,MAAMzB,OACH8F,EAAAC,EAAAC,cAAC2M,EAAA,EAAD,CAAUC,GAAE,4BAAAlQ,OAA8BgM,KAAKjN,MAAMzB,UAIxD8F,EAAAC,EAAAC,cAAA,WACK0I,KAAKyC,MAAMlO,KAAK5E,WACbyH,EAAAC,EAAAC,cAAA,OAAKuN,MAAO,CAACjL,eAAgB,SACzBxC,EAAAC,EAAAC,cAACib,GAAA,EAAD,CACIzH,KAAK,QACLjb,MAAM,gBACN4iB,OAAQ,EACRqR,OAAO,WACP/W,UAAU,GAEV3V,EAAAC,EAAAC,cAACib,GAAA,EAAajO,KAAd,CAAmB4L,KAAM,EAAG3L,MAAM,aAC7BvE,KAAKyC,MAAMlO,KAAK3E,YAAYC,OAGjCuH,EAAAC,EAAAC,cAACib,GAAA,EAAajO,KAAd,CACI4L,KAAM,EACN3L,MAAM,kBACNM,MAAO,CAACjL,eAAgB,SAEvB+xB,KAAW3rB,KAAKyC,MAAMlO,KAAK3E,YAAYE,cAG5CsH,EAAAC,EAAAC,cAACib,GAAA,EAAajO,KAAd,CAAmB4L,KAAM,EAAG3L,MAAM,eAAeM,MAAO,CAACjL,eAAgB,SACpEoG,KAAKyC,MAAMlO,KAAK3E,YAAYM,UAGjCkH,EAAAC,EAAAC,cAACib,GAAA,EAAajO,KAAd,CAAmB4L,KAAM,EAAG3L,MAAM,WAAWM,MAAO,CAACjL,eAAgB,SAChEoG,KAAKyC,MAAMlO,KAAK3E,YAAYO,MAGjCiH,EAAAC,EAAAC,cAACib,GAAA,EAAajO,KAAd,CAAmB4L,KAAM,EAAG3L,MAAM,cAAcM,MAAO,CAACjL,eAAgB,SACpExC,EAAAC,EAAAC,cAACoxB,GAAA,aAAD,CACIK,YAAY,EACZJ,cAAe3oB,KAAKyC,MAAMlO,KAAK3E,YAAYQ,WAC3C04B,QAAS,SAAApnB,GAAK,OAAIlN,QAAQC,IAAIiN,OAItCtK,EAAAC,EAAAC,cAAA,aAECF,EAAAC,EAAAC,cAAA,YAGbF,EAAAC,EAAAC,cAAC2C,GAAA,EAAD,MAEA7C,EAAAC,EAAAC,cAACs0B,GAAD,CAAOhf,MAAO,EAAG/H,MAAO,CAACgI,UAAW,WAApC,uBAEC7M,KAAKyC,MAAMlO,KAAKrF,gBAAgBM,cAAcsI,IAAI,SAACwO,EAAEuI,GAClD,OAAOzX,EAAAC,EAAAC,cAACu0B,GAAD,CAAG5zB,IAAK4W,EAAE,EAAGhH,IAAKvB,EAAG8iB,GAAIva,EAAE,MAEtCzX,EAAAC,EAAAC,cAAA,OAAKuN,MAAO,CAACvC,MAAM,OAAOlM,QAAQ,SAC9BgB,EAAAC,EAAAC,cAAC0N,GAAA,QAAD,CAAQH,MAAO,CAAC8lB,MAAM,SAAUx6B,KAAK,UAAU0a,QAAS7K,KAAKsrB,YAA7D,wBA7GQnmB,IAAMC,WAwHhC8gB,GAAkB,SAAAnzB,GAAK,MAAK,CAC9BwB,KAAOxB,EAAMwB,OAGFiR,eAAQ0gB,GAAgB,KAAxB1gB,CAA8B6lB,IA0C7C,IAAIQ,GAAIrmB,YAAQ0gB,GAAgB,KAAxB1gB,CAxCR,SAAsB/C,GAClB,IAAIoF,EAAMpF,EAAMoF,IACZuhB,EAAK3mB,EAAM2mB,GACX0C,EAAMrpB,EAAMlO,KAAKlE,iCAAiC07B,OAAO,SAACC,GAC1D,OAAOA,EAAKnkB,KAAOA,IAKnBokB,EAAK,CAAC,IAAK,IAAK,IAAK,IAAK,KAE9B,OACI70B,EAAAC,EAAAC,cAAA,OAAKuN,MAAO,CAAE/K,aAAc,SACxB1C,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKuN,MAAO,CAAEvC,MAAO,SACjBlL,EAAAC,EAAAC,cAAA,KAAGuN,MAAO,CAAE8lB,MAAO,SAAnB,gBAA2CvB,EAA3C,KACAhyB,EAAAC,EAAAC,cAAA,KAAGuN,MAAO,CAAE8lB,MAAO,UAAnB,UAAsCmB,EAAI,GAAGjc,YAEjDzY,EAAAC,EAAAC,cAAA,OAAKuN,MAAO,CAAEzO,QAAS,aACnBgB,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAC+b,GAAD,KACKyY,EAAI,GAAG33B,MAEX23B,EAAI,GAAGpc,QAAUtY,EAAAC,EAAAC,cAAA,OAAKuD,IAAI,WAAWF,IAAKmxB,EAAI,GAAGpc,UAAc,OAGxEtY,EAAAC,EAAAC,cAAC0Y,GAAA,QAAD,KACK8b,EAAI,GAAG/3B,QAAQ+D,IAAI,SAACwO,EAAGuI,GACpB,OACIzX,EAAAC,EAAAC,cAAC2Y,GAAA,QAAD,CAAKhY,IAAK4W,EAAGqB,KAAM,GAAIrL,MAAO,CAAEzO,QAAS,aACrCgB,EAAAC,EAAAC,cAAA,SAAI20B,EAAGpd,GAAP,OADJ,IACsBzX,EAAAC,EAAAC,cAAC+b,GAAD,KAAW/M,EAAEgJ,SAC9BhJ,EAAEiJ,OAASnY,EAAAC,EAAAC,cAAA,OAAKuD,IAAI,SAASF,IAAK2L,EAAEiJ,SAAa,YC1JtE2c,GAASC,KAATD,KACA7f,GAAU9T,KAAV8T,MAED+f,kMAECpsB,KAAKyC,MAAM4D,wDAIX,IAAMwO,EAAU7U,KAAKyC,MAAMlO,KAAKvF,YAAc,EAC9CgR,KAAKyC,MAAM4gB,WAAWxO,oCAGlB,IAAA7R,EAAAhD,KACAqsB,EAAW,GAkBf,OAfIA,EADgC,IAAhCrsB,KAAKyC,MAAMlO,KAAKvF,YACPoI,EAAAC,EAAAC,cAACg1B,GAAD,MAE4B,IAAhCtsB,KAAKyC,MAAMlO,KAAKvF,YACZoI,EAAAC,EAAAC,cAACi1B,GAAD,MAE4B,IAAhCvsB,KAAKyC,MAAMlO,KAAKvF,YACVoI,EAAAC,EAAAC,cAACk1B,GAAD,MAE0B,IAAhCxsB,KAAKyC,MAAMlO,KAAKvF,YACZoI,EAAAC,EAAAC,cAACm1B,GAAD,MAGAr1B,EAAAC,EAAAC,cAACo1B,GAAD,MAITt1B,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKuN,MAAO,CAACzO,QAAQ,oBAAoBkM,MAAM,OAAOuK,UAAU,WAC5DzV,EAAAC,EAAAC,cAACq1B,GAAD,CAAO/f,MAAO,GAAd,0BAEJxV,EAAAC,EAAAC,cAAC6uB,GAAA,EAAD,CAAOzuB,UAAU,uBAAuBmd,QAAS7U,KAAKyC,MAAMlO,KAAKvF,aAC5Dm3B,GAAMruB,IAAI,SAAAE,GAAI,OACXZ,EAAAC,EAAAC,cAAC40B,GAAD,CAAMj0B,IAAKD,EAAKnI,MAAOA,MAAOmI,EAAKnI,WAG3CuH,EAAAC,EAAAC,cAAA,OAAKI,UAAU,wBACV20B,EACDj1B,EAAAC,EAAAC,cAAA,WACC0I,KAAKyC,MAAMlO,KAAKvF,YAAc,GAC3BoI,EAAAC,EAAAC,cAAA,OAAKI,UAAU,gBACXN,EAAAC,EAAAC,cAAC0N,GAAA,QAAD,CAAQ6F,QAAS,kBAAM7H,EAAK4pB,SAA5B,sBA5CLxnB,aA2DRI,eAJS,SAAAzS,GAAK,MAAK,CAC9BwB,KAAOxB,EAAMwB,OAGsB,CACnC8uB,cACAhd,2BAFWb,CAGZ4mB,qBCdY3xB,OAjEf,SAAiBgI,GACf,IAAMoqB,EAAW,CACfz2B,QAAS,WACTse,SAAU,OACVoY,WAAY,OACZ1zB,OAAQ,OAGV,OACEhC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,oBAAkBy1B,IAAI,kBAEpB31B,EAAAC,EAAAC,cAAA,aAAWsV,MAAM,KACfxV,EAAAC,EAAAC,cAAC0N,GAAA,QAAD,CAAQH,MAAOgoB,EAAU18B,KAAK,WAC5BiH,EAAAC,EAAAC,cAAA,KAAGI,UAAU,qBAIjBN,EAAAC,EAAAC,cAAA,eACEF,EAAAC,EAAAC,cAAC0N,GAAA,QAAD,CAAQH,MAAOgoB,EAAU18B,KAAK,WAC5BiH,EAAAC,EAAAC,cAAA,KAAGI,UAAU,kBAIjBN,EAAAC,EAAAC,cAAA,iBACEF,EAAAC,EAAAC,cAAC0N,GAAA,QAAD,CAAQH,MAAOgoB,EAAU18B,KAAK,WAC5BiH,EAAAC,EAAAC,cAAA,KAAGI,UAAU,oBAIjBN,EAAAC,EAAAC,cAAA,gBACEF,EAAAC,EAAAC,cAAC0N,GAAA,QAAD,CAAQH,MAAOgoB,EAAU18B,KAAK,WAC5BiH,EAAAC,EAAAC,cAAA,KAAGI,UAAU,yBAIjBN,EAAAC,EAAAC,cAAA,eACEF,EAAAC,EAAAC,cAAC0N,GAAA,QAAD,CAAQH,MAAOgoB,EAAU18B,KAAK,WAC5BiH,EAAAC,EAAAC,cAAA,KAAGI,UAAU,kBAIjBN,EAAAC,EAAAC,cAAA,gBACEF,EAAAC,EAAAC,cAAC0N,GAAA,QAAD,CAAQH,MAAOgoB,EAAU18B,KAAK,WAC5BiH,EAAAC,EAAAC,cAAA,KAAGI,UAAU,mBAIjBN,EAAAC,EAAAC,cAAA,yBACEF,EAAAC,EAAAC,cAAC0N,GAAA,QAAD,CAAQH,MAAOgoB,EAAU18B,KAAK,WAC5BiH,EAAAC,EAAAC,cAAA,KAAGI,UAAU,qBAIjBN,EAAAC,EAAAC,cAAA,uBACEF,EAAAC,EAAAC,cAAC0N,GAAA,QAAD,CAAQH,MAAOgoB,EAAU18B,KAAK,WAC5BiH,EAAAC,EAAAC,cAAA,KAAGI,UAAU,wBChCnBs1B,eACF,SAAAA,EAAYvqB,GAAM,IAAAO,EAAA,OAAA7P,OAAA4M,EAAA,EAAA5M,CAAA6M,KAAAgtB,IACdhqB,EAAA7P,OAAA8P,GAAA,EAAA9P,CAAA6M,KAAA7M,OAAA+P,GAAA,EAAA/P,CAAA65B,GAAA7pB,KAAAnD,KAAMyC,KAeVW,aAAe,SAAAC,GACXA,EAAEC,iBACFN,EAAKP,MAAMJ,KAAKuF,wBAAwB,SAACpE,EAAKC,GAErCD,GACD7D,GAAW,CACPe,IAAIvF,GAAK+C,uBACTyC,KAAK,CACD9Q,MAAM4T,EAAO5T,MACbwpB,UAAW5V,EAAO4V,UAClB4T,SAASxpB,EAAOwpB,SAChBpa,WAAWpP,EAAOoP,WAClBqa,UAAUzpB,EAAOypB,UACjBC,YAAa1pB,EAAO0pB,eAG3BxpB,KAAK,SAACC,GAKH,GAJAZ,EAAKc,SAAS,CACV0L,QAAO,KAGR5L,EAASjD,KAAKa,QAQb,OAFAwB,EAAKP,MAAMmoB,gCAA+B,GAC1C5nB,EAAKP,MAAMJ,KAAK0N,cACT5O,GAAM,UAAU,WAAWyC,EAASjD,KAAKkD,SAPhDb,EAAKP,MAAMmoB,gCAA+B,GAC1CzpB,GAAM,UAAU,UAAWyC,EAASjD,KAAKkD,SACzCb,EAAKP,MAAMooB,6BAQlB9mB,MAAM,SAACrC,GAIJ,OAFAsB,EAAKP,MAAMJ,KAAK0N,cAET5O,GAAM,QAAQ,SAAS,qBAlD1C6B,EAAKjQ,MAAQ,CACT+T,gBAAgB,EAChB0I,QAAQ,EACR1f,YAAa,IAEjBkT,EAAK4mB,aAAe5mB,EAAK4mB,aAAanN,KAAlBtpB,OAAAi6B,GAAA,EAAAj6B,CAAA6P,IAPNA,6EAWLsW,GACTtZ,KAAK8D,SAAS,CAAChU,YAAawpB,EAAM5O,OAAOxD,yCA8CpC,IACGlD,EAAsBhE,KAAKyC,MAAMJ,KAAjC2B,kBACAuC,EAAWC,WAAXD,OACAE,EAAaC,WAAbD,SAER,OACIrP,EAAAC,EAAAC,cAACuhB,EAAA,SAAD,KACIzhB,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAC6M,GAAA,QAAD,CAAMC,SAAUpE,KAAKoD,cACjBhM,EAAAC,EAAAC,cAAC0Y,GAAA,QAAD,KACI5Y,EAAAC,EAAAC,cAAC2Y,GAAA,QAAD,CAAKC,KAAM,IACP9Y,EAAAC,EAAAC,cAAC6M,GAAA,QAAKG,KAAN,CAAWC,MAAM,gBAAgBC,aAAW,GACvCR,EAAkB,QAAS,CACpBS,MAAO,CAAC,CAAEC,UAAU,EAAMb,QAAS,gCAD1CG,CAGG5M,EAAAC,EAAAC,cAACqN,GAAA,QAAD,UAMhBvN,EAAAC,EAAAC,cAAC0Y,GAAA,QAAD,KACI5Y,EAAAC,EAAAC,cAAC2Y,GAAA,QAAD,CAAKC,KAAM,IACP9Y,EAAAC,EAAAC,cAAC6M,GAAA,QAAKG,KAAN,CAAWC,MAAM,oBAAoBC,aAAW,GAC3CR,EAAkB,YAAa,CAC5BS,MAAO,CAAC,CAAEC,UAAU,EAAMb,QAAS,2BADtCG,CAGG5M,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAC+1B,GAAD,MACAj2B,EAAAC,EAAAC,cAACmP,EAAD,CACIhW,GAAG,iBACH0Y,KAAM,EACNF,SAAUjJ,KAAK4pB,oBAQvCxyB,EAAAC,EAAAC,cAAC0Y,GAAA,QAAD,KACI5Y,EAAAC,EAAAC,cAAC2Y,GAAA,QAAD,CAAKC,KAAM,IACP9Y,EAAAC,EAAAC,cAAC+b,GAAD,KAAWrT,KAAKjN,MAAMjD,eAI9BsH,EAAAC,EAAAC,cAAC0Y,GAAA,QAAD,KACI5Y,EAAAC,EAAAC,cAAC2Y,GAAA,QAAD,CAAKC,KAAM,IACP9Y,EAAAC,EAAAC,cAAC6M,GAAA,QAAKG,KAAN,CAAWC,MAAM,eAAeC,aAAW,GACtCR,EAAkB,cAAe,CAC9BS,MAAO,CAAC,CAAEC,UAAU,EAAMb,QAAS,gCADtCG,CAGG5M,EAAAC,EAAAC,cAACiZ,GAAA,EAAD,CAAa9H,IAAK,EAAG5D,MAAO,CAAEvC,MAAO,cAMrDlL,EAAAC,EAAAC,cAAC0Y,GAAA,QAAD,KACI5Y,EAAAC,EAAAC,cAAC2Y,GAAA,QAAD,CAAKC,KAAM,IACP9Y,EAAAC,EAAAC,cAAC6M,GAAA,QAAKG,KAAN,CAAWC,MAAM,aAAaC,aAAW,GACpCR,EAAkB,YAAa,CAC5BS,MAAO,CAAC,CAAEC,UAAU,EAAMb,QAAS,8BADtCG,CAGG5M,EAAAC,EAAAC,cAACiZ,GAAA,EAAD,CAAa9H,IAAK,EAAG5D,MAAO,CAAEvC,MAAO,cAMrDlL,EAAAC,EAAAC,cAAC0Y,GAAA,QAAD,KACI5Y,EAAAC,EAAAC,cAAC2Y,GAAA,QAAD,CAAKC,KAAM,IACP9Y,EAAAC,EAAAC,cAAC6M,GAAA,QAAKG,KAAN,CAAWC,MAAM,aAAaC,aAAW,GACpCR,EAAkB,aAAc,CAC7BS,MAAO,CAAC,CAAEC,UAAU,EAAMb,QAAS,8BADtCG,CAGG5M,EAAAC,EAAAC,cAAC4Q,GAAA,QAAD,CACIrD,MAAO,CAAEvC,MAAM,QACfwC,YAAY,qBAEZ1N,EAAAC,EAAAC,cAACiP,EAAD,CAAQW,MAAM,QAAd,QACA9P,EAAAC,EAAAC,cAACiP,EAAD,CAAQW,MAAM,UAAd,UACA9P,EAAAC,EAAAC,cAACiP,EAAD,CAAQW,MAAM,QAAd,aAOpB9P,EAAAC,EAAAC,cAAC0Y,GAAA,QAAD,KACI5Y,EAAAC,EAAAC,cAAC2Y,GAAA,QAAD,CAAKC,KAAM,IACP9Y,EAAAC,EAAAC,cAAC6M,GAAA,QAAKG,KAAN,CAAWC,MAAM,WAAWC,aAAW,GAClCR,EAAkB,WAAY,CACvBS,MAAO,CAAC,CAAEC,UAAU,EAAMb,QAAS,oBAD1CG,CAGG5M,EAAAC,EAAAC,cAACqN,GAAA,QAAD,UAMhBvN,EAAAC,EAAAC,cAAC0Y,GAAA,QAAD,KACI5Y,EAAAC,EAAAC,cAAC2Y,GAAA,QAAD,CAAKC,KAAM,IACP9Y,EAAAC,EAAAC,cAAC6M,GAAA,QAAKG,KAAN,KACIlN,EAAAC,EAAAC,cAAC0N,GAAA,QAAD,CACI7U,KAAK,UACL8U,SAAS,SACTyL,SAAU1Q,KAAKjN,MAAM+T,eACrBqG,QAASnN,KAAKjN,MAAMyc,OACpBtK,OAAK,GALT,gCAnKVE,aA6LpBuL,GAAkBrL,WAAKC,OAAO,CAAExT,KAAM,eAApBuT,CAAqC0nB,IAE9CxnB,eARS,SAAAzS,GAAK,MAAK,CAC9Be,QAASf,EAAMe,QACfT,MAAON,EAAMM,MACb0B,OAAQhC,EAAMgC,SAKsB,CACpC61B,kCACAC,6BAFWrlB,CAGZmL,IC9MKe,GAAYC,KAAZD,QACArF,GAAgB9T,KAAhB8T,MACA5F,IADgBlO,KAATyf,KACMtR,WAAbD,UAqOOmL,GAnOS,SAACnP,GAAU,IAAAwV,EACLC,mBAAS,CAC/BznB,GAAIgS,EAAMhS,GACV0c,SAAS,EACTnM,QAAS,KAJkBuX,EAAAplB,OAAAqlB,GAAA,EAAArlB,CAAA8kB,EAAA,GACxBllB,EADwBwlB,EAAA,GACjB+H,EADiB/H,EAAA,GAAAG,EAOCR,mBAAS,IAPVS,EAAAxlB,OAAAqlB,GAAA,EAAArlB,CAAAulB,EAAA,GAOxBN,EAPwBO,EAAA,GAOd2U,EAPc3U,EAAA,GAUzB4U,EAAa9qB,EAAMhS,GAVM+vB,EAYCtI,mBAAS,CACrC/K,SAAS,EACTzL,MAAO,GACP0W,SAAU,GACVoV,UAAW,GACX7oB,MAAO,GACP8oB,OAAQ,KAlBmBhN,EAAAttB,OAAAqlB,GAAA,EAAArlB,CAAAqtB,EAAA,GAYxBkN,EAZwBjN,EAAA,GAYdkN,EAZclN,EAAA,GAqD/BC,oBAAU,WA/BN/gB,GAAW,CACPe,IAAIvF,GAAKiD,4BACTuC,KAAK,CACD4sB,WAAYx6B,EAAMtC,MAGzBkT,KAAK,SAACC,GACH,IAAGA,EAASjD,KAAKa,QAgBb,OAAOL,GAAM,UAAU,WAAWyC,EAASjD,KAAKkD,SAfhDypB,EAAY1pB,EAASjD,KAAKyX,UAC1BuV,EAAYx6B,OAAAC,EAAA,EAAAD,CAAA,GACLJ,EADI,CAEPy6B,UAAW5pB,EAASjD,KAAK6sB,aAG7B/hB,WAAW,WACP6U,EAASntB,OAAAC,EAAA,EAAAD,CAAA,GACFJ,EADC,CAEJoa,SAAS,MAEd,OAOVpJ,MAAM,SAACrC,GACJ,OAAOP,GAAM,QAAQ,SAAS,mBAMnC,IAEH,IAoFMysB,EAAmB,SAAA77B,GAAI,OAAI,SAAAunB,GAC7BqU,EAAYx6B,OAAAC,EAAA,EAAAD,CAAA,GAAKu6B,EAANv6B,OAAA4G,EAAA,EAAA5G,CAAA,GAAiBpB,EAAOunB,EAAM5O,OAAOxD,WAGpD,OACI9P,EAAAC,EAAAC,cAACuhB,EAAA,SAAD,KACIzhB,EAAAC,EAAAC,cAAC0a,GAAA,EAAD,CAAU7E,QAASpa,EAAMoa,QAAS8E,QAAM,EAAC/P,QAAM,GAC3C9K,EAAAC,EAAAC,cAAC4a,GAAA,EAAD,CAAMC,iBAAiB,IAAIlJ,SAAU,SAAC5F,MAIlCjM,EAAAC,EAAAC,cAACu2B,GAAD,CAASzb,IAAKhb,EAAAC,EAAAC,cAAA,YAAMF,EAAAC,EAAAC,cAAC5J,EAAA,QAAD,CAAMyC,KAAK,SAAjB,cAA6C8H,IAAI,KAC3Db,EAAAC,EAAAC,cAACib,GAAA,EAAD,CACIxF,UAAQ,EACRld,MAAM,GACN2iB,QAAM,EACN1H,KAAK,QACL2H,OAAQ,CAAEC,IAAK,EAAGC,GAAI,EAAGC,GAAI,EAAGxa,GAAI,EAAGD,GAAI,EAAGD,GAAI,IAElDd,EAAAC,EAAAC,cAACib,GAAA,EAAajO,KAAd,CAAmBC,MAAM,eAAexR,EAAMtC,IAE9C2G,EAAAC,EAAAC,cAACib,GAAA,EAAajO,KAAd,CAAmBC,MAAM,qBACrBnN,EAAAC,EAAAC,cAAC+b,GAAD,KACK+E,EAASiB,cAS1BjiB,EAAAC,EAAAC,cAACu2B,GAAD,CAASzb,IAAKhb,EAAAC,EAAAC,cAAA,YAAMF,EAAAC,EAAAC,cAAC5J,EAAA,QAAD,CAAMyC,KAAK,SAAjB,aAA4C8H,IAAI,KAC9Db,EAAAC,EAAAC,cAAA,OAAKI,UAAU,8DACXN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,YACXN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,cACXN,EAAAC,EAAAC,cAAA,QAAMI,UAAU,eAAhB,SACAN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,eACXN,EAAAC,EAAAC,cAACw2B,GAAD,CACI3kB,KAAM,EACNF,SAAU2kB,EAAiB,cAM3Cx2B,EAAAC,EAAAC,cAAA,OAAKI,UAAU,YACXN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,cACXN,EAAAC,EAAAC,cAAA,QAAMI,UAAU,eAAhB,UACAN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,eACXN,EAAAC,EAAAC,cAACw2B,GAAD,CACI3kB,KAAM,EACNF,SAAU2kB,EAAiB,eAM3Cx2B,EAAAC,EAAAC,cAAA,OAAKI,UAAU,YACXN,EAAAC,EAAAC,cAAC0N,GAAA,QAAD,CACI7U,KAAK,UACL0a,QAxFX,SAACyO,GAGd,IAAIyU,EAFJzU,EAAMhW,iBAINyqB,EAAW,CACPC,aAAcN,EAAS/oB,MACvBspB,cAAeP,EAASD,QAG5B9tB,GAAW,CACPe,IAAG,GAAA1M,OAAImH,GAAKkD,uBAAT,KAAArK,OAAmCu5B,GACtC5sB,KAAMotB,IAETpqB,KAAK,SAACC,GACH,IAAGA,EAASjD,KAAKa,QAIb,OAAOL,GAAM,UAAU,WAAWyC,EAASjD,KAAKkD,SAHhD1C,GAAM,UAAU,UAAWyC,EAASjD,KAAKkD,WAMhDE,MAAM,SAACrC,GACJ,OAAOP,GAAM,QAAQ,SAAS,8BA+Dd,SASR/J,EAAAC,EAAAC,cAAC2C,GAAA,EAAD,MACA7C,EAAAC,EAAAC,cAAA,WAEAF,EAAAC,EAAAC,cAAA,OAAKI,UAAU,aACXN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,aACXN,EAAAC,EAAAC,cAAA,MAAII,UAAU,mCAvJb,WACrB,GAAIg2B,EAASF,UAAUv6B,OAAQ,CAC3B,IAAI4b,EAAI,EACR,OAAO6e,EAASF,UAAU11B,IAAI,SAAC41B,GAE3B,OAAOt2B,EAAAC,EAAAC,cAAA,MACCI,UAAU,YACVmN,MAAO,CAACqpB,WAAY,OAAQvD,MAAO,QAAStxB,UAAW,QACvDpB,IAAKy1B,EAASj9B,IAElB2G,EAAAC,EAAAC,cAAA,OAAKI,UAAU,OAEXN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,YACXN,EAAAC,EAAAC,cAAA,QAAMI,UAAU,eAAhB,aAAyCmX,MAG7CzX,EAAAC,EAAAC,cAAA,OAAKI,UAAU,YACXN,EAAAC,EAAAC,cAAA,kBADJ,IACiBF,EAAAC,EAAAC,cAAA,WACbF,EAAAC,EAAAC,cAACw2B,GAAD,CACI5mB,MAAOwmB,EAAS/oB,MAChB+L,SAAS,UAIjBtZ,EAAAC,EAAAC,cAAA,OAAKI,UAAU,YACXN,EAAAC,EAAAC,cAAA,mBADJ,IACkBF,EAAAC,EAAAC,cAAA,WACdF,EAAAC,EAAAC,cAACw2B,GAAD,CACI5mB,MAAOwmB,EAASD,OAChB/c,SAAS,UAIjBtZ,EAAAC,EAAAC,cAAA,OAAKI,UAAU,YACXN,EAAAC,EAAAC,cAAA,mBADJ,IACkBF,EAAAC,EAAAC,cAAA,WACdF,EAAAC,EAAAC,cAAC0N,GAAA,QAAD,CACI7U,KAAK,UACLoc,MAAM,SACN7e,KAAK,gBAQzB,OAAO0J,EAAAC,EAAAC,cAAA,WACHF,EAAAC,EAAAC,cAAC62B,GAAD,CAAOvhB,MAAO,EAAG/H,MAAO,CAAEqpB,WAAY,SAAtC,4BA0GiBE,WCxElB5oB,eANS,SAAAzS,GAAK,MAAK,CAC9Be,QAASf,EAAMe,QACfT,MAAON,EAAMM,MACb0B,OAAQhC,EAAMgC,SAGqB,CACnC61B,kCACAC,6BAFWrlB,CAtJM,SAAC/C,GAAU,IAAAwV,EAEFC,mBAAS,CAC/B1E,kBAAoB,KACpBC,6BAA4B,IAJJ8E,EAAAplB,OAAAqlB,GAAA,EAAArlB,CAAA8kB,EAAA,GAErBllB,EAFqBwlB,EAAA,GAEd+H,EAFc/H,EAAA,GA0B5BmI,oBAAU,WACNje,EAAMooB,4BACP,IAEH,IAIMtd,EAAW,SAAAlK,GACbZ,EAAMmoB,gCAA+B,IAQnCte,EAAU,CACZ,CACIzc,MAAO,gBACPma,UAAW,QACX/R,IAAK,QACLqK,MAAO,OAEX,CACIzS,MAAO,WACPma,UAAW,WACX/R,IAAK,WACLqK,MAAO,OAEX,CACIzS,MAAO,aACPma,UAAW,aACX/R,IAAK,aACLqK,MAAO,OAEX,CACIzS,MAAO,SACPoI,IAAK,MACL+R,UAAW,MACX1H,MAAO,MACPqJ,OAAQ,SAAC1T,GAAD,OACJb,EAAAC,EAAAC,cAAC0N,GAAA,QAAD,CACI7U,KAAK,UACLoc,MAAM,SACN1B,QAAS,kBA/DCpa,EA+DoBwH,OA9D1CqoB,EAAS,SAAC9R,EAAcC,GACtB,MAAM,CACJ+E,kBAAkB/iB,EAClBgjB,6BAA4B,KAJX,IAAChjB,GAgEV/C,KAAK,mBAMrB,OACI0J,EAAAC,EAAAC,cAACuhB,EAAA,SAAD,KACIzhB,EAAAC,EAAAC,cAAA,OAAKI,UAAU,aACXN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,OACXN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,YACXN,EAAAC,EAAAC,cAAC0N,GAAA,QAAD,CACI7U,KAAK,UACLzC,KAAK,OACLmX,MAAO,CAAC/K,aAAa,QACrB+Q,QAzDN,SAAC5b,GACfwT,EAAMmoB,gCAA+B,KAoDrB,4BAUJxzB,EAAAC,EAAAC,cAAA,OAAKI,UAAU,eAIvBN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,aACXN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,OACXN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,aACXN,EAAAC,EAAAC,cAACwV,GAAA,EAAD,CACIC,UAAU,EACVT,QAASA,EACTU,WAAYvK,EAAM1N,OAAO1G,kBACzByc,KAAK,SACLmC,WAAY,CAAEC,SAAU,GACxBC,QAAS1K,EAAM1N,OAAO3G,qBACtBgf,OAAO,WAOvBhW,EAAAC,EAAAC,cAAC+V,GAAA,EAAD,CACIxd,MAAM,sBACNgV,MAAO,CAAC4I,IAAK,OAAOrX,QAAQ,MAAMJ,gBAAgB,oBAClDsM,MAAM,MACNkJ,QAAS/I,EAAM1N,OAAOpC,sBACtB2a,KAAM,kBAAMC,GACZC,SAlFS,SAAAnK,GACjBZ,EAAMmoB,gCAA+B,IAkF7B5zB,OAAQ,GACR0W,gBAAgB,GAEhBtW,EAAAC,EAAAC,cAAC+2B,GAAD,OAIJj3B,EAAAC,EAAAC,cAAC+V,GAAA,EAAD,CACI7B,QAASzY,EAAM0gB,4BACf5jB,MAAM,mBACN2d,SAlHc,WACtB8S,EAAS,SAAC9R,EAAcC,GACtB,MAAM,CACJ+E,kBAAkB,KAClBC,6BAA4B,MA+GxB5O,MAAO,CAAC4I,IAAK,OAAOrX,QAAQ,MAAMJ,gBAAgB,oBAClDsM,MAAM,MACNoL,gBAAgB,EAChB1W,OAAQ,IAERI,EAAAC,EAAAC,cAACg3B,GAAD,CAAiB79B,GAAIsC,EAAMygB,wDC1G5BhO,eAJS,SAAAzS,GAAK,MAAK,CAC9Be,QAAUf,EAAMe,UAGmB,CACnCua,qBADW7I,CAnCD,SAAC/C,GAMX,OAJAie,oBAAU,WACNje,EAAM4L,oBACP,IAGCjX,EAAAC,EAAAC,cAACuhB,EAAA,SAAD,KACIzhB,EAAAC,EAAAC,cAACwpB,GAAAzpB,EAAD,CACIxH,MAAM,gBACNyc,QAAS,CACL,CAAEzc,MAAO,gBAAiBkxB,MAAO,OACjC,CAAElxB,MAAO,OAAQkxB,MAAO,QACxB,CAAElxB,MAAO,QAASkxB,MAAO,UAG7BpgB,KAAM8B,EAAM3O,QAAQhF,WAEpBiF,QAAS,CACLytB,WAAW,EACXC,cAAc,EACdC,YAAa,CACT1rB,gBAAiB,UACjB4C,MAAO,cCvBzB21B,GAAuBjpB,WAAKC,OAAO,CAAExT,KAAM,iBAApBuT,CAAA,SAAAkpB,GAAA,SAAAC,IAAA,OAAAt7B,OAAA4M,EAAA,EAAA5M,CAAA6M,KAAAyuB,GAAAt7B,OAAA8P,GAAA,EAAA9P,CAAA6M,KAAA7M,OAAA+P,GAAA,EAAA/P,CAAAs7B,GAAAl5B,MAAAyK,KAAAhN,YAAA,OAAAG,OAAAu7B,GAAA,EAAAv7B,CAAAs7B,EAAAD,GAAAr7B,OAAAw7B,EAAA,EAAAx7B,CAAAs7B,EAAA,EAAAx2B,IAAA,SAAAiP,MAAA,WAGhB,IAAA0nB,EACuC5uB,KAAKyC,MAA3C+I,EADDojB,EACCpjB,QAASgC,EADVohB,EACUphB,SAAUqhB,EADpBD,EACoBC,SACnB7qB,EAFD4qB,EAC8BvsB,KAC7B2B,kBACR,OACE5M,EAAAC,EAAAC,cAAC+V,GAAA,EAAD,CACE7B,QAASA,EACT3b,MAAM,qBACN6c,OAAO,MACPc,SAAUA,EACVF,KAAMuhB,GAENz3B,EAAAC,EAAAC,cAAC6M,GAAA,QAAD,CAAM2f,OAAO,YACX1sB,EAAAC,EAAAC,cAAC6M,GAAA,QAAKG,KAAN,CAAWC,MAAM,OAAOC,aAAW,GAChCR,EAAkB,OAAQ,CACzBS,MAAO,CAAC,CAAEC,UAAU,EAAMb,QAAS,4BADpCG,CAEE5M,EAAAC,EAAAC,cAACqN,GAAA,QAAD,QAGLvN,EAAAC,EAAAC,cAAC6M,GAAA,QAAKG,KAAN,CAAWC,MAAM,QAAQC,aAAW,GACjCR,EAAkB,QAAS,CAC1BS,MAAO,CACH,CACIC,UAAU,EACVb,QAAS,2BAEb,CACI1T,KAAM,QACN0T,QAAS,oCARlBG,CAWE5M,EAAAC,EAAAC,cAACqN,GAAA,QAAD,cAjCY8pB,EAAA,CAEbtpB,IAAMC,YAyChB0pB,eACJ,SAAAA,EAAYrsB,GAAM,IAAAO,EAAA,OAAA7P,OAAA4M,EAAA,EAAA5M,CAAA6M,KAAA8uB,IAChB9rB,EAAA7P,OAAA8P,GAAA,EAAA9P,CAAA6M,KAAA7M,OAAA+P,GAAA,EAAA/P,CAAA27B,GAAA3rB,KAAAnD,KAAMyC,KAMRmf,UAAY,WACV5e,EAAKc,SAAS,CAAE0H,SAAS,KARTxI,EAWlBwb,aAAe,WACbxb,EAAKc,SAAS,CAAE0H,SAAS,KAZTxI,EAgBlB+rB,aAAe,WAAM,IACX1sB,EAASW,EAAKgsB,QAAQvsB,MAAtBJ,KAERA,EAAKkB,eAAe,SAACC,EAAKC,GACnBD,GACH7D,GAAW,CACPe,IAAKvF,GAAK4D,UACV4B,KAAM,CACF5O,KAAM0R,EAAO1R,KACb2R,MAAOD,EAAOC,SAGrBC,KAAK,SAACC,GACAA,EAASjD,KAAKa,UACfL,GAAM,UAAW,UAAWyC,EAASjD,KAAKkD,SAC1CxB,EAAK0N,cACL/M,EAAKP,MAAM4L,mBACXrL,EAAKc,SAAS,CAAE0H,SAAS,OAG9BzH,MAAM,SAACrC,GACJ,OAAOP,GAAM,QAAQ,SAAS,qBArCtB6B,EA2ClBisB,YAAc,SAAAD,GACZhsB,EAAKgsB,QAAUA,GA1CfhsB,EAAKjQ,MAAM,CACTyY,SAAS,GAHKxI,yEAgDhB,OACE5L,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC0N,GAAA,QAAD,CAAQ7U,KAAK,UAAU0a,QAAS7K,KAAK4hB,WAArC,oBAIAxqB,EAAAC,EAAAC,cAACi3B,GAAD,CACEW,oBAAqBlvB,KAAKivB,YAC1BzjB,QAASxL,KAAKjN,MAAMyY,QACpBgC,SAAUxN,KAAKwe,aACfqQ,SAAU7uB,KAAK+uB,uBA3DK5pB,IAAMC,WAmErBI,eAAQ,KAAK,CAC1B6I,qBADa7I,CAEZspB,ICvGKziB,YAAgB9T,KAAhB8T,OA+LO7G,IA/LSjN,KAATyf,KA+LAxS,YAJS,SAAAzS,GAAK,MAAK,CAChCa,KAAOb,EAAMa,OAGyB,KAAzB4R,CA7LC,SAAC/C,GAAU,IAAAwV,EACCC,mBAAS,CACjCiX,QAAS,GACThiB,SAAS,IAHcoL,EAAAplB,OAAAqlB,GAAA,EAAArlB,CAAA8kB,EAAA,GAClBllB,EADkBwlB,EAAA,GACX+H,EADW/H,EAAA,GAAAG,EAMOR,mBAAS,IANhBS,EAAAxlB,OAAAqlB,GAAA,EAAArlB,CAAAulB,EAAA,GAMlB0W,EANkBzW,EAAA,GAMR0W,EANQ1W,EAAA,GAAA6H,EAOOtI,mBAAS,GAPhBuI,EAAAttB,OAAAqlB,GAAA,EAAArlB,CAAAqtB,EAAA,GAOlB8O,EAPkB7O,EAAA,GAOR8O,EAPQ9O,EAAA,GA0DzB,OANAC,oBAAW,WAzCTJ,EAAS,CACPnT,SAAS,IAGXxN,GAAW,CACTe,IAAG,GAAA1M,OAAKmH,GAAK0D,qBAEd8E,KAAK,SAACC,GACH,IAAIA,EAASjD,KAAKa,QAOhB,OAAOL,GAAM,UAAW,WAAYyC,EAASjD,KAAKkD,SANlDyc,EAAS,CACP6O,QAASvrB,EAASjD,KAAKA,KACvBwM,SAAS,MAOhBpJ,MAAM,SAACrC,GACJ,OAAOP,GAAM,QAAS,SAAU,kBAKpCxB,GAAW,CACTe,IAAG,GAAA1M,OAAKmH,GAAK2D,iBAEd6E,KAAK,SAACC,GACH,IAAIA,EAASjD,KAAKa,QAKhB,OAAOL,GAAM,UAAW,WAAYyC,EAASjD,KAAKkD,SAJlDwrB,EAAYzrB,EAASjD,KAAKA,MAC1B4uB,EAAY3rB,EAASjD,KAAK6T,SAM/BzQ,MAAM,SAACrC,GACN,OAAOP,GAAM,QAAS,SAAU,mBAOjC,IAID/J,EAAAC,EAAAC,cAACuhB,EAAA,SAAD,KAEEzhB,EAAAC,EAAAC,cAACk4B,GAAD,CAAO5iB,MAAO,GAAd,WACWnK,EAAM7O,KAAK9F,YAAYiE,MAGlCqF,EAAAC,EAAAC,cAAC2C,GAAA,EAAD,MAEA7C,EAAAC,EAAAC,cAAA,OAAKI,UAAU,aACbN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,OACbN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,YACbN,EAAAC,EAAAC,cAACyf,GAAA,QAAD,KACE3f,EAAAC,EAAAC,cAACm4B,GAAA,EAAD,CACE5/B,MAAM,4BACNqX,MAAOkoB,EAASn8B,WAKtBmE,EAAAC,EAAAC,cAAA,OAAKI,UAAU,YACXN,EAAAC,EAAAC,cAACyf,GAAA,QAAD,KACE3f,EAAAC,EAAAC,cAACm4B,GAAA,EAAD,CACE5/B,MAAM,2BACNqX,MAAOooB,MAKfl4B,EAAAC,EAAAC,cAAA,OAAKI,UAAU,YACXN,EAAAC,EAAAC,cAACyf,GAAA,QAAD,KACE3f,EAAAC,EAAAC,cAACm4B,GAAA,EAAD,CACE5/B,MAAM,yBACNqX,MAAO,SAOnB9P,EAAAC,EAAAC,cAAC2C,GAAA,EAAD,MAGA7C,EAAAC,EAAAC,cAAA,OAAKI,UAAU,aACbN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,OACbN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,YAAYmN,MAAO,CAAEsU,UAAW,QAASC,UAAW,WACjEhiB,EAAAC,EAAAC,cAACk4B,GAAD,CAAO5iB,MAAO,GAAd,sCACC7Z,EAAMoa,QAAU/V,EAAAC,EAAAC,cAACo4B,GAAA,EAAD,MAEft4B,EAAAC,EAAAC,cAACmwB,GAAA,QAAD,CACEkI,WAAW,aACX3iB,WAAYoiB,EACZzF,WAAY,SAAA3xB,GAAI,OACdZ,EAAAC,EAAAC,cAACmwB,GAAA,QAAKnjB,KAAN,KACElN,EAAAC,EAAAC,cAACmwB,GAAA,QAAKnjB,KAAKsrB,KAAX,CACE//B,MAAOmI,EAAKnI,MACZC,YAAasH,EAAAC,EAAAC,cAAA,qCAA4BF,EAAAC,EAAAC,cAAA,cAASU,EAAK63B,eAUvEz4B,EAAAC,EAAAC,cAAC2C,GAAA,EAAD,MAEA7C,EAAAC,EAAAC,cAAA,OAAKI,UAAU,aACbN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,OACbN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,YACbN,EAAAC,EAAAC,cAACw4B,GAAD,OAEF14B,EAAAC,EAAAC,cAAA,OAAKI,UAAU,eAMnBN,EAAAC,EAAAC,cAAA,WAEAF,EAAAC,EAAAC,cAAA,OAAKI,UAAU,aACbN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,OACbN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,aACbN,EAAAC,EAAAC,cAACy4B,GAAD,SAKN34B,EAAAC,EAAAC,cAAC2C,GAAA,EAAD,MAEA7C,EAAAC,EAAAC,cAACk4B,GAAD,CAAO5iB,MAAO,GAAd,yBAEAxV,EAAAC,EAAAC,cAAA,OAAKI,UAAU,aACbN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,OACbN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,YAAYmN,MAAO,CAAEsU,UAAW,QAASC,UAAW,WACjEhiB,EAAAC,EAAAC,cAACk4B,GAAD,CAAO5iB,MAAO,GAAd,mCAEC7Z,EAAMoa,QAAU/V,EAAAC,EAAAC,cAACo4B,GAAA,EAAD,MAEft4B,EAAAC,EAAAC,cAACmwB,GAAA,QAAD,CACAkI,WAAW,aACX3iB,WAAYja,EAAMo8B,QAClBxF,WAAY,SAAA3xB,GAAI,OACdZ,EAAAC,EAAAC,cAACmwB,GAAA,QAAKnjB,KAAN,KACElN,EAAAC,EAAAC,cAACmwB,GAAA,QAAKnjB,KAAKsrB,KAAX,CACE1tB,OACA9K,EAAAC,EAAAC,cAAC4K,GAAA,EAAD,CAAQvH,IAAK3C,EAAK6P,IAAImoB,MACtBngC,MAAOmI,EAAK6P,IAAIzB,MAChBtW,YAAasH,EAAAC,EAAAC,cAAA,oCAA2BF,EAAAC,EAAAC,cAAA,cAASU,EAAK63B,mBCxL3D,SAASI,KACpB,OACI74B,EAAAC,EAAAC,cAACuhB,EAAA,SAAD,KACIzhB,EAAAC,EAAAC,cAAC+nB,GAAA,EAAD,CACIxY,OAAO,MACPhX,MAAM,MACN+vB,SAAS,iDCcDrnB,KAAhB8T,UAAO2L,GAASzf,KAATyf,KAETkY,eACF,SAAAA,EAAYztB,GAAM,IAAAO,EAAA,OAAA7P,OAAA4M,EAAA,EAAA5M,CAAA6M,KAAAkwB,IACdltB,EAAA7P,OAAA8P,GAAA,EAAA9P,CAAA6M,KAAA7M,OAAA+P,GAAA,EAAA/P,CAAA+8B,GAAA/sB,KAAAnD,KAAMyC,KAQVW,aAAe,SAAAC,GACXA,EAAEC,iBAEFN,EAAKP,MAAMJ,KAAKuF,wBAAwB,SAACpE,EAAKC,GACrCD,GACD7D,GAAW,CACPe,IAAG,GAAA1M,OAAKmH,GAAKK,aACbmF,KAAM,CACFkH,IAAK7E,EAAKP,MAAM7O,KAAK9F,YAAY+Z,IACjCC,aAAcrE,EAAOqE,aACrB5F,OAAQc,EAAKjQ,MAAM6H,KACnBmN,IAAKtE,EAAO0sB,SAGnBxsB,KAAK,SAACC,GACH,IAAIA,EAASjD,KAAKa,QAId,OAAOL,GAAM,UAAW,WAAYyC,EAASjD,KAAKkD,SAHlD1C,GAAM,UAAW,UAAWyC,EAASjD,KAAKkD,WAMjDE,MAAM,SAACrC,GACJ,OAAOP,GAAM,QAAS,SAAU,qBAhC9B6B,EAuClBuE,aAAe,SAACC,GACZxE,EAAKc,SAAS,SAAC2D,EAAGC,GACd,MAAO,CACH9M,KAAO4M,EAAE7Z,KAAF,GAAAqG,OAAWwT,EAAE7Z,MAAO,KAC3BmZ,gBAAe,MA3CT9D,EAgDlB2E,IAAM,WACF3E,EAAKc,SAAS,CACVgD,gBAAe,KAhDnB9D,EAAKjQ,MAAM,CACP6H,KAAMoI,EAAKP,MAAM7O,KAAK9F,YAAYoU,OAClCsN,QAAO,EACP1I,gBAAe,GALL9D,yEAsDT,IACGgB,EAAsBhE,KAAKyC,MAAMJ,KAAjC2B,kBAGAyC,GADWD,WAAXD,OACaG,WAAbD,UAEJ2B,EAAqB,CACrBrW,KAAM,OACNuB,OAAM,GAAAU,OAAKmH,GAAKE,MAAVrH,OAAiBmH,GAAKiB,YAAtB,WAAApI,OAA2CyL,GAAKC,gBACtD2I,SAAU,WAGd,OACIjR,EAAAC,EAAAC,cAACuhB,EAAA,SAAD,KACIzhB,EAAAC,EAAAC,cAAC84B,GAAD,yBACAh5B,EAAAC,EAAAC,cAAC2C,GAAA,EAAD,MAEA7C,EAAAC,EAAAC,cAAA,OAAKqD,IAAKqF,KAAKyC,MAAM7O,KAAK9F,YAAYoU,OAAQrH,IAAI,SAElDzD,EAAAC,EAAAC,cAAC2C,GAAA,EAAD,MACI7C,EAAAC,EAAAC,cAAC6M,GAAA,QAAD,CAAOC,SAAUpE,KAAKoD,cAClBhM,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAC0Y,GAAA,QAAD,KACI5Y,EAAAC,EAAAC,cAAC2Y,GAAA,QAAD,CAAKC,KAAM,IACP9Y,EAAAC,EAAAC,cAAC6M,GAAA,QAAKG,KAAN,CAAWC,MAAM,oBAAqBC,aAAW,GAC5CR,EAAkB,eAAgB,CAC/BiE,aAAejI,KAAKyC,MAAM7O,KAAK9F,YAAYga,aAC3CrD,MAAO,CAAC,CAAE6D,YAAY,KAFzBtE,CAGE5M,EAAAC,EAAAC,cAACqN,GAAA,QAAD,UAKfvN,EAAAC,EAAAC,cAAC0Y,GAAA,QAAD,KACI5Y,EAAAC,EAAAC,cAAC2Y,GAAA,QAAD,CAAKC,KAAM,IACP9Y,EAAAC,EAAAC,cAAC6M,GAAA,QAAKG,KAAN,CAAWC,MAAM,gCAAgCC,aAAW,GACvDR,EAAkB,QAAS,CACxBiE,aAAejI,KAAKyC,MAAM7O,KAAK9F,YAAYia,KAD9C/D,CAGG5M,EAAAC,EAAAC,cAACmP,EAAD,CAAU0C,KAAM,QAMhC/R,EAAAC,EAAAC,cAAC0Y,GAAA,QAAD,KACI5Y,EAAAC,EAAAC,cAAC2Y,GAAA,QAAD,CAAKC,KAAM,GAAIrL,MAAO,CAACzO,QAAU,aAC7BgB,EAAAC,EAAAC,cAAC6M,GAAA,QAAKG,KAAN,CAAWC,MAAM,qBAChBP,EAAkB,SAAlBA,CACG5M,EAAAC,EAAAC,cAAC8R,GAAA,EAADjW,OAAAkW,OAAA,GACQjB,EADR,CAEIkB,aAActJ,KAAK2H,IACnB4B,SAAUvJ,KAAKuH,aACfiC,UAAWxJ,KAAKuH,eAEhBnQ,EAAAC,EAAAC,cAAC0N,GAAA,QAAD,KACI5N,EAAAC,EAAAC,cAAC5J,EAAA,QAAD,CAAMyC,KAAK,WADf,gBAShBiH,EAAAC,EAAAC,cAAC0Y,GAAA,QAAD,KACI5Y,EAAAC,EAAAC,cAAC2Y,GAAA,QAAD,CAAKC,KAAM,IACP9Y,EAAAC,EAAAC,cAAC6M,GAAA,QAAKG,KAAN,KACIlN,EAAAC,EAAAC,cAAC0N,GAAA,QAAD,CACI7U,KAAK,UACL8U,SAAS,SACTyL,SAAU1Q,KAAKjN,MAAM+T,eACrBqG,QAASnN,KAAKjN,MAAMyc,OACpBtK,OAAK,GALT,eAepB9N,EAAAC,EAAAC,cAAC2C,GAAA,EAAD,cAzIEmL,aAqJhBirB,GAAU/qB,WAAKC,OAAO,CAAExT,KAAM,eAApBuT,CAAqC4qB,IAEtC1qB,eAPS,SAAAzS,GAAK,MAAK,CAC9BM,MAAQN,EAAMM,MACdO,KAAMb,EAAMa,OAKwB,KAAzB4R,CAA+B6qB,IC/JxCC,gNACFv9B,MAAQ,CACNw9B,cAAc,KAGhBntB,aAAe,SAAAC,GACbA,EAAEC,iBACFN,EAAKP,MAAMJ,KAAKuF,wBAAwB,SAACpE,EAAKC,GACvCD,GACH7D,GAAW,CACTe,IAAG,GAAA1M,OAAKmH,GAAK8D,gBACb0B,KAAM,CACJ6vB,gBAAiB/sB,EAAOoR,QACxB4b,YAAahtB,EAAO7C,YAGvB+C,KAAK,SAACC,GACH,IAAIA,EAASjD,KAAKa,QAKd,OAAOL,GAAM,UAAW,WAAYyC,EAASjD,KAAKkD,SAJlDb,EAAKP,MAAMJ,KAAK0N,cAChB5O,GAAM,UAAW,UAAWyC,EAASjD,KAAKkD,WAMjDE,MAAM,SAACrC,GACJ,OAAOP,GAAM,QAAS,SAAU,uBAM1C0H,kBAAoB,SAAAxF,GAAK,IACf6D,EAAU7D,EAAEqH,OAAZxD,MACRlE,EAAKc,SAAS,CAAEysB,aAAcvtB,EAAKjQ,MAAMw9B,gBAAkBrpB,OAG7DF,uBAAyB,SAACC,EAAMC,EAAOC,GAAa,IAC1C9E,EAASW,EAAKP,MAAdJ,KACJ6E,GAASA,IAAU7E,EAAK+E,cAAc,YACxCD,EAAS,iDAETA,OAIJE,uBAAyB,SAACJ,EAAMC,EAAOC,GAAa,IAC1C9E,EAASW,EAAKP,MAAdJ,KACJ6E,GAASlE,EAAKjQ,MAAMw9B,cACtBluB,EAAKkB,eAAe,CAAC,WAAY,CAAE+D,OAAO,IAE5CH,8EAGO,IACCnD,EAAsBhE,KAAKyC,MAAMJ,KAAjC2B,kBACAqI,EAAU9T,KAAV8T,MAER,OACEjV,EAAAC,EAAAC,cAACuhB,EAAA,SAAD,KACIzhB,EAAAC,EAAAC,cAAC+U,EAAD,CAAOO,MAAO,GAAd,oBACAxV,EAAAC,EAAAC,cAAC6M,GAAA,QAAD,CAAMC,SAAUpE,KAAKoD,cACjBhM,EAAAC,EAAAC,cAAC0Y,GAAA,QAAD,KACI5Y,EAAAC,EAAAC,cAAC2Y,GAAA,QAAD,CAAKC,KAAM,IACP9Y,EAAAC,EAAAC,cAAC6M,GAAA,QAAKG,KAAN,CAAWC,MAAM,yBAAyBC,aAAW,GAChDR,EAAkB,UAAW,CAC9BS,MAAO,CACH,CACAC,UAAU,EACVb,QAAS,uCAET,CACA8E,UAAW3I,KAAKqH,0BAPnBrD,CAUE5M,EAAAC,EAAAC,cAACqN,GAAA,QAAMI,SAAP,UAKf3N,EAAAC,EAAAC,cAAC0Y,GAAA,QAAD,KACI5Y,EAAAC,EAAAC,cAAC2Y,GAAA,QAAD,CAAKC,KAAM,IACP9Y,EAAAC,EAAAC,cAAC6M,GAAA,QAAKG,KAAN,CAAWC,MAAM,qBAAqBC,aAAW,GAC5CR,EAAkB,WAAY,CAC/BS,MAAO,CACH,CACAC,UAAU,EACVb,QAAS,+BAET,CACA8E,UAAW3I,KAAKqH,0BAPnBrD,CAUE5M,EAAAC,EAAAC,cAACqN,GAAA,QAAMI,SAAP,UAKf3N,EAAAC,EAAAC,cAAC0Y,GAAA,QAAD,KACI5Y,EAAAC,EAAAC,cAAC2Y,GAAA,QAAD,CAAKC,KAAM,IACP9Y,EAAAC,EAAAC,cAAC6M,GAAA,QAAKG,KAAN,CAAWC,MAAM,mBAAmBC,aAAW,GAC1CR,EAAkB,UAAW,CAC9BS,MAAO,CACH,CACAC,UAAU,EACVb,QAAS,iCAET,CACA8E,UAAW3I,KAAKgH,0BAPnBhD,CAUE5M,EAAAC,EAAAC,cAACqN,GAAA,QAAMI,SAAP,CAAgB6D,OAAQ5I,KAAK6I,wBAK5CzR,EAAAC,EAAAC,cAAC0Y,GAAA,QAAD,KACI5Y,EAAAC,EAAAC,cAAC2Y,GAAA,QAAD,CAAKC,KAAM,IACP9Y,EAAAC,EAAAC,cAAC6M,GAAA,QAAKG,KAAN,KACIlN,EAAAC,EAAAC,cAAC0N,GAAA,QAAD,CAAQ7U,KAAK,UAAU8U,SAAS,SAASC,OAAK,GAA9C,uBAShB9N,EAAAC,EAAAC,cAAC2C,GAAA,EAAD,cAhIgBkL,IAAMC,WAwIjBsrB,GAFWprB,WAAKC,OAAO,CAAExT,KAAM,YAApBuT,CAAkCgrB,ICzI/CK,GATE,WACb,OACIv5B,EAAAC,EAAAC,cAACuhB,EAAA,SAAD,KACIzhB,EAAAC,EAAAC,cAACs5B,GAAD,MACAx5B,EAAAC,EAAAC,cAACu5B,GAAD,iFCkBJC,GAAmCC,KAAnCD,OAAQE,GAA2BD,KAA3BC,MAAOC,GAAoBF,KAApBE,QAASC,GAAWH,KAAXG,OAE1BC,eACF,SAAAA,EAAY1uB,GAAM,IAAAO,EAAA,OAAA7P,OAAA4M,EAAA,EAAA5M,CAAA6M,KAAAmxB,IACdnuB,EAAA7P,OAAA8P,GAAA,EAAA9P,CAAA6M,KAAA7M,OAAA+P,GAAA,EAAA/P,CAAAg+B,GAAAhuB,KAAAnD,KAAMyC,KAOVsE,OAAS,WACL/D,EAAKc,SAAS,CACZstB,WAAYpuB,EAAKjQ,MAAMq+B,aAVXpuB,EAclBquB,OAAS,WACL5xB,GAAKa,cACL9K,OAAOtF,SAAS6I,KAAO,KAdvBiK,EAAKjQ,MAAM,CACPu+B,gBAAiBtuB,EAAKP,MAAM7O,KAAK/F,WACjCujC,WAAW,GAJDpuB,qFAmBE,IAAAoJ,EAAApM,KAEZI,EAAIX,GAAKC,eACVM,KAAKjN,MAAMu+B,kBAGNlxB,GAAS,cAAJA,EACTX,GAAKoB,UAAUT,GAAGuD,KAAK,SAACC,GAEpBwI,EAAK3J,MAAM1B,MAAM6C,EAASjD,KAAK/M,MAC/BwY,EAAKtI,SAAS,CACVwtB,iBAAiB,IAGrB,IAAIC,EAASnlB,EAAK3J,MAAM+uB,MAAMjyB,OAAOxL,QAEjC+3B,EAAM1f,EAAK3J,MAAM7O,KAAK5F,YAAYyjC,KAAK,SAACC,EAAG7iB,GAC3C,GAAI6iB,EAAE/jC,OAAF,SAAAqG,OAAoBu9B,GACpB,OAAOG,IAIXC,EAAKvlB,EAAK3J,MAAM7O,KAAK5F,YAAY4jC,QAAQ9F,IAEjC,IAAR6F,EACAn8B,OAAOtF,SAAS6I,KAAhB,GAAA/E,OAA0BoY,EAAK3J,MAAM7O,KAAK5F,YAAY,GAAGL,MAGzDye,EAAK3J,MAAMovB,kBAAkBtW,OAAOoW,MAEzC5tB,MAAM,SAACrC,GACNP,GAAM,UAAW,WAAY,iBAC7B1B,GAAKa,cACL9K,OAAOtF,SAAS6I,KAAO,MAI3BvD,OAAOtF,SAAS,sCAMpB,IAAIm8B,EAAW,KACf,GAAqC,iBAAlCrsB,KAAKyC,MAAM+uB,MAAMjyB,OAAOxL,QACvBs4B,EAAWj1B,EAAAC,EAAAC,cAACw6B,GAAD,WAEV,GAAqC,iBAAlC9xB,KAAKyC,MAAM+uB,MAAMjyB,OAAOxL,QAC5Bs4B,EAAWj1B,EAAAC,EAAAC,cAACy6B,GAAD,WAEV,GAAqC,kBAAlC/xB,KAAKyC,MAAM+uB,MAAMjyB,OAAOxL,QAC5Bs4B,EAAWj1B,EAAAC,EAAAC,cAAC06B,GAAD,WAEV,GAAqC,cAAlChyB,KAAKyC,MAAM+uB,MAAMjyB,OAAOxL,QAC5Bs4B,EAAWj1B,EAAAC,EAAAC,cAAC26B,GAAD,WAEV,GAAqC,SAAlCjyB,KAAKyC,MAAM+uB,MAAMjyB,OAAOxL,QAC5Bs4B,EAASj1B,EAAAC,EAAAC,cAAC46B,GAAD,WAER,GAAqC,YAAlClyB,KAAKyC,MAAM+uB,MAAMjyB,OAAOxL,QAC5Bs4B,EAASj1B,EAAAC,EAAAC,cAAC66B,GAAD,WAER,GAAqC,aAAlCnyB,KAAKyC,MAAM+uB,MAAMjyB,OAAOxL,QAC5Bs4B,EAASj1B,EAAAC,EAAAC,cAAC86B,GAAD,WAER,GAAqC,gBAAlCpyB,KAAKyC,MAAM+uB,MAAMjyB,OAAOxL,QAAwB,CACpD,IAAIwL,EAAS8yB,KAAYC,MAAMtyB,KAAKyC,MAAMvS,SAASqiC,QAEnDlG,EAASj1B,EAAAC,EAAAC,cAACk7B,GAAgBjzB,QAG1B8sB,EADsC,aAAlCrsB,KAAKyC,MAAM+uB,MAAMjyB,OAAOxL,QACnBqD,EAAAC,EAAAC,cAACm7B,GAAD,MAGAr7B,EAAAC,EAAAC,cAAC24B,GAAD,MAGb,OACI74B,EAAAC,EAAAC,cAACwsB,GAAA,EAAD,KACI1sB,EAAAC,EAAAC,cAAC05B,GAAD,CACI0B,QAAS,KACTC,aAAW,EACXvB,UAAWpxB,KAAKjN,MAAMq+B,WAGtBh6B,EAAAC,EAAAC,cAAA,OAAKI,UAAU,UACXN,EAAAC,EAAAC,cAAA,OAAKqD,IAAKyH,KAAMvH,IAAI,eAAenD,UAAU,YAGjDN,EAAAC,EAAAC,cAACs7B,GAAA,EAAD,CACIC,oBAAqB,CAAC7yB,KAAKyC,MAAM7O,KAAK7F,aACtCkB,KAAK,SACL2G,MAAM,QAGFoK,KAAKyC,MAAM7O,KAAK5F,YAAY8J,IAAI,SAACwO,EAAEuI,GAC/B,OACIzX,EAAAC,EAAAC,cAACs7B,GAAA,EAAKtuB,KAAN,CAAWrM,IAAK4W,GACZzX,EAAAC,EAAAC,cAAC5J,EAAA,QAAD,CAAMyC,KAAMmW,EAAE5Y,OACd0J,EAAAC,EAAAC,cAAA,YAAOgP,EAAE7Y,SACT2J,EAAAC,EAAAC,cAACw7B,EAAA,EAAD,CAAM5uB,GAAIoC,EAAE3Y,YAOpCyJ,EAAAC,EAAAC,cAACwsB,GAAA,EAAD,KACI1sB,EAAAC,EAAAC,cAACw5B,GAAD,CACIjsB,MAAO,CAAEtK,SAAU,QAAS+H,MAAO,QAASywB,YAAa,OAAQC,OAAQ,OAAQ98B,WAAY,SAE7FkB,EAAAC,EAAAC,cAAC5J,EAAA,QAAD,CACIgK,UAAU,UACVvH,KAAM6P,KAAKjN,MAAMq+B,UAAY,eAAiB,cAC9CvmB,QAAS7K,KAAK+G,OACdlC,MAAO,CAACjM,MAAM,OAAO8b,SAAS,UAElCtd,EAAAC,EAAAC,cAAA,MAAII,UAAU,qBACVN,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAC27B,GAAA57B,EAAD,CAAY67B,MAAO,KAGvB97B,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAC4K,GAAA,EAAD,CACIvH,IAAKqF,KAAKyC,MAAM7O,KAAK9F,YAAYoU,OACjCrH,IAAKmF,KAAKyC,MAAM7O,KAAK9F,YAAYga,gBAIzC1Q,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAC8pB,GAAA,EAAD,CAAStI,UAAU,SAASjpB,MAAM,WAC9BuH,EAAAC,EAAAC,cAAC0N,GAAA,QAAD,CACI7U,KAAK,UACLoc,MAAM,SACN1B,QAAS7K,KAAKqxB,OACd35B,UAAU,iBAEVN,EAAAC,EAAAC,cAAC5J,EAAA,QAAD,CAAMyC,KAAK,gBAO/BiH,EAAAC,EAAAC,cAAC25B,GAAD,CACIpsB,MAAO,CACPzL,OAAQ,YACRhD,QAAS,GACTE,UAAU,OACVJ,WAAY,OACZi9B,UAAW,UAGX/7B,EAAAC,EAAAC,cAAA,OAAKuN,MAAO,CAAEvC,MAAM,SACf+pB,IAGTj1B,EAAAC,EAAAC,cAAC45B,GAAD,CAAQrsB,MAAO,CAAEgI,UAAW,SAAU3W,WAAY,SAAlD,+BAC6B,IAAI8C,MAAOC,wBAlLpCkM,IAAMC,WA8LfI,eAJS,SAAAzS,GAAK,MAAK,CAC9Ba,KAAOb,EAAMa,OAGsB,CACnCi+B,kBC5N6B,SAACvrB,GAAD,OAAM,SAAArF,GACnCA,EAAS,CACN9Q,KAAO,sBACPwD,QAAU2S,MD0NbvF,SACAG,WAHWsE,CAIZ2rB,cErLK5qB,0CAAWC,WAAXD,QACA8F,GAAU9T,KAAV8T,MACAykB,GAAmCC,KAAnCD,OAAQI,GAA2BH,KAA3BG,OAEVkC,IAFqCrC,KAAnBC,MAAmBD,KAAZE,oBAG3B,SAAAmC,EAAY3wB,GAAM,IAAAO,EAAA,OAAA7P,OAAA4M,EAAA,EAAA5M,CAAA6M,KAAAozB,IACdpwB,EAAA7P,OAAA8P,GAAA,EAAA9P,CAAA6M,KAAA7M,OAAA+P,GAAA,EAAA/P,CAAAigC,GAAAjwB,KAAAnD,KAAMyC,KAcV4wB,cAAgB,WACZ,IAAI9zB,EAAS8yB,KAAYC,MAAMtvB,EAAKP,MAAMvS,SAASqiC,QAEnD3yB,GAAK,CACDc,IAAMvF,GAAK8C,gBACX0C,KAAM,CACFrP,OAAQiO,EAAOjO,UAGtBqS,KAAK,SAAChD,GACCA,EAAKA,KAAKa,SACVwB,EAAKc,SAAS,CACVwvB,WAAW,EACXC,QAAS5yB,EAAKA,KAAK6yB,MAGnB7yB,EAAKA,KAAK6yB,IAAIhI,WACdxoB,EAAKc,SAAS,CACV2vB,WAAW,KAKnBzwB,EAAKc,SAAS,CACVwvB,WAAW,MAItBvvB,MAAM,SAACrC,GACJlN,QAAQC,IAAIiN,MA5CFsB,EA+DlBI,aAAe,SAAAC,GACXA,EAAEC,iBACFN,EAAKP,MAAMJ,KAAKkB,eAAe,SAACC,EAAKC,GAC5BD,GACD5D,GAAK,CACDc,IAAKvF,GAAKqB,0BACVmE,KAAM,CACF5O,KAAM0R,EAAO1R,KACbC,QAASyR,EAAOC,MAChBzR,QAAO,GAAA+B,OAAKyP,EAAOmB,QAAZ5Q,OAAqByP,EAAOxR,SACnC6V,aAAcrE,EAAOqE,aACrBxW,OAAQ0R,EAAKjQ,MAAMzB,OACnBpB,SAAUuT,EAAOvT,SACjBwjC,OAAQ1wB,EAAKjQ,MAAM2gC,OACnBC,OAAQ3wB,EAAKjQ,MAAM3C,WACnBwjC,MAAO5wB,EAAKjQ,MAAM8gC,SAGzBlwB,KAAK,SAAChD,GACCA,EAAKA,KAAKa,QACVwB,EAAKc,SAAS,CACVgwB,QAAQ,EACRlgC,KAAM+M,EAAKA,KAAK/M,QAIpBoP,EAAKP,MAAMJ,KAAK0N,cAChB5O,GAAM,QAAS,SAAUR,EAAKA,KAAKkD,YAExCE,MAAM,SAACrC,GAENsB,EAAKP,MAAMJ,KAAK0N,cAChB5O,GAAM,QAAS,SAAU,qBA/FvB6B,EAqGlB+wB,WAAa,WACTn0B,GAAK,CACDc,IAAKvF,GAAKsB,iCACVkE,KAAM,CACFlQ,GAAIuS,EAAKjQ,MAAMa,KAAKiU,OAG3BlE,KAAK,SAACC,GACCA,EAASjD,KAAKa,QACdL,GAAM,UAAW,WAAY,qCAG7BA,GAAM,QAAS,SAAUyC,EAASjD,KAAKkD,WAG9CE,MAAM,SAACrC,GAEJP,GAAM,QAAS,SAAU,mBAtHf6B,EA2HlBgxB,UAAY,kBACR58B,EAAAC,EAAAC,cAACuhB,EAAA,SAAD,KACIzhB,EAAAC,EAAAC,cAAC28B,GAAA,EAAD,KACI78B,EAAAC,EAAAC,cAAA,QAAM48B,QAAQ,UACd98B,EAAAC,EAAAC,cAAA,aAAQ0L,EAAKjQ,MAAMwgC,QAAQY,SAASrsB,aAApC,MAAqD9E,EAAKjQ,MAAMwgC,QAAQvL,SAAxE,2DAGJ5wB,EAAAC,EAAAC,cAAA,OAAKI,UAAU,kBAAkBmN,MAAO,CAACzO,QAAS,IAAKg+B,SAAU,WAC7Dh9B,EAAAC,EAAAC,cAAA,OAAKI,UAAU,OACXN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,aACXN,EAAAC,EAAAC,cAACwsB,GAAA,EAAD,KACI1sB,EAAAC,EAAAC,cAAC+8B,GAAD,CAAQxvB,MAAO,CAAElO,OAAQ,UACrBS,EAAAC,EAAAC,cAACg9B,GAAD,CAAOzvB,MAAO,CACVjM,MAAO,OACPtC,UAAW,QAEXsW,MAAO,GAEN5J,EAAKjQ,MAAMwgC,QAAQY,SAASrsB,aANjC,MAMkD9E,EAAKjQ,MAAMwgC,QAAQvL,eAQzF5wB,EAAAC,EAAAC,cAAA,OAAKI,UAAU,kBAAkBmN,MAAO,CAACzO,QAAS,IAAKg+B,SAAU,WAC7Dh9B,EAAAC,EAAAC,cAAA,OAAKI,UAAU,OACXN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,aACXN,EAAAC,EAAAC,cAAA,OAAKuN,MAAO,CAAEvO,UAAW,aAKvCc,EAAAC,EAAAC,cAAA,OAAKI,UAAU,aACbN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,OAEbN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,YACbN,EAAAC,EAAAC,cAAA,OACIuN,MAAO,CACLzL,OAAQ,MACRyT,UAAW,UACXzW,QAAS,MACTwD,eAAgB,SAChBC,WAAY,QACZ06B,WAAY,gCAGb5I,KAAW3oB,EAAKjQ,MAAMwgC,QAAQhI,kBAOrCn0B,EAAAC,EAAAC,cAAA,OAAKI,UAAU,YACXN,EAAAC,EAAAC,cAAA,OACEuN,MAAO,CACLzL,OAAQ,MACRQ,eAAgB,SAChBC,WAAY,QACZ26B,QAAS,OACTD,WAAY,gCAGdn9B,EAAAC,EAAAC,cAAA,MAAIuN,MAAO,CAAExL,UAAW,SACpBjC,EAAAC,EAAAC,cAAA,MAAIuN,MAAO,CAAEzO,QAAS,QAClBgB,EAAAC,EAAAC,cAAA,+BACAF,EAAAC,EAAAC,cAAA,WAFJ,IAEY0L,EAAKjQ,MAAMwgC,QAAQY,SAASpsB,KAGxC3Q,EAAAC,EAAAC,cAAA,MAAIuN,MAAO,CAAEzO,QAAS,QAClBgB,EAAAC,EAAAC,cAAA,OACIgL,MAAO,IACP3H,IAAKqI,EAAKjQ,MAAMwgC,QAAQY,SAASjyB,UAIzC9K,EAAAC,EAAAC,cAAA,MAAIuN,MAAO,CAAEzO,QAAS,QAClBgB,EAAAC,EAAAC,cAAA,uBADJ,IACuB0b,IAAOhQ,EAAKjQ,MAAMwgC,QAAQkB,eAAevhB,OAAO,gBADvE,MAC2FF,IAAOhQ,EAAKjQ,MAAMwgC,QAAQkB,eAAeC,WAGpIt9B,EAAAC,EAAAC,cAAA,MAAIuN,MAAO,CAAEzO,QAAS,QAClBgB,EAAAC,EAAAC,cAAC5J,EAAA,QAAD,CAAMyC,KAAK,gBADf,IACiC6S,EAAKjQ,MAAMwgC,QAAQtL,aAGpD7wB,EAAAC,EAAAC,cAAA,MAAIuN,MAAO,CAAEzO,QAAS,QAClBgB,EAAAC,EAAAC,cAAC0N,GAAA,QAAD,CAAQjM,KAAK,SAAS5I,KAAK,UAAUoc,MAAM,QAAQzB,KAAK,SAAxD,iBAlNN9H,EAmOlB2xB,aAAe,SAACntB,IACM,IAAdA,EAAEhG,SACFqC,KAAQrC,QAAR,qCAGJwB,EAAKc,SAAS,SAAC2D,EAAIC,GACf,MAAO,CACHgsB,OAAQlsB,EAAE7Z,KAAF,GAAAqG,OAAWwT,EAAE7Z,MAAO,KAC5B8lC,WAAW,MAzOnBzwB,EAAKjQ,MAAQ,CACT+gC,QAAO,EACPxiC,OAAO,KACPsC,KAAK,KACL0/B,WAAW,EACXC,QAAS,GACTG,OAAQ,KACRtjC,WAAY,GACZqjC,WAAW,EACXI,MAAO,MAXG7wB,oFAiDd,IAAIzD,EAAS8yB,KAAYC,MAAMtyB,KAAKyC,MAAMvS,SAASqiC,QAEnD/9B,QAAQC,IAAI8K,GAEZS,KAAK8D,SAAS,CACVxS,OAAOiO,EAAOjO,OACduiC,MAAOt0B,EAAOgL,MAGlBvK,KAAKqzB,iDAsLA,IAAAjnB,EAAApM,KACGgE,EAAsBhE,KAAKyC,MAAMJ,KAAjC2B,kBAEFgE,EAAiBhE,EAAkB,SAAU,CAC/CiE,aAAc,MACdxD,MAAO,CAAC,CAAEC,UAAU,EAAMb,QAAS,oCAFhBG,CAInB5M,EAAAC,EAAAC,cAAC4Q,GAAA,QAAD,CAAQrD,MAAO,CAAEvC,MAAO,KACtBlL,EAAAC,EAAAC,cAACs9B,GAAD,CAAQ1tB,MAAM,OAAd,SAIA2tB,EAAc,CAChB9iC,KAAM,OACNuB,OAAM,GAAAU,OAAKmH,GAAKE,MAAVrH,OAAiBmH,GAAKyD,eAC5ByJ,SAAU,WAGd,OACIjR,EAAAC,EAAAC,cAACuhB,EAAA,SAAD,KACIzhB,EAAAC,EAAAC,cAAA,OAAKI,UAAU,qBAGXsI,KAAKjN,MAAMugC,UAAYtzB,KAAKg0B,YAAc,KAG9C58B,EAAAC,EAAAC,cAAA,OAAK7G,GAAG,UAER2G,EAAAC,EAAAC,cAAA,OAAKI,UAAU,aACXN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,OACXN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,UACXN,EAAAC,EAAAC,cAACg9B,GAAD,CAAO1nB,MAAO,EAAG/H,MAAO,CAAEgI,UAAW,WAArC,kBAKZzV,EAAAC,EAAAC,cAAA,OAAKI,UAAU,+BACdsI,KAAKjN,MAAM+gC,OACR18B,EAAAC,EAAAC,cAAA,OAAKI,UAAU,2BACXN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,aACXN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,OACXN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,UACXN,EAAAC,EAAAC,cAAC6M,GAAA,QAAD,CACIC,SAAUpE,KAAKoD,aACfiB,aAAa,MACb3M,UAAU,cAEVN,EAAAC,EAAAC,cAAC0Y,GAAA,QAAD,KACI5Y,EAAAC,EAAAC,cAAC2Y,GAAA,QAAD,CAAKC,KAAM,GAAIrL,MAAO,CAAEzO,QAAS,QAC7BgB,EAAAC,EAAAC,cAAC6M,GAAA,QAAKG,KAAN,CAAWC,MAAM,OAAOC,aAAW,GAC9BR,EAAkB,OAAQ,CACvBS,MAAO,CAAC,CAAEC,UAAU,EAAMb,QAAS,4BADtCG,CAGG5M,EAAAC,EAAAC,cAACqN,GAAA,QAAD,CACIC,OAAQxN,EAAAC,EAAAC,cAAC5J,EAAA,QAAD,CAAMyC,KAAK,OAAO0U,MAAO,CAAEjM,MAAO,qBAC1CkM,YAAY,YAM5B1N,EAAAC,EAAAC,cAAC2Y,GAAA,QAAD,CAAKC,KAAM,GAAIrL,MAAO,CAAEzO,QAAS,QAC7BgB,EAAAC,EAAAC,cAAC6M,GAAA,QAAKG,KAAN,CAAWC,MAAM,QAAQC,aAAW,GAC/BR,EAAkB,QAAS,CACxBS,MAAO,CAAC,CACJtU,KAAM,QACN0T,QAAS,kCAEb,CACIa,UAAU,EACVb,QAAS,+BAPhBG,CAUG5M,EAAAC,EAAAC,cAACqN,GAAA,QAAD,CACIC,OAAQxN,EAAAC,EAAAC,cAAC5J,EAAA,QAAD,CAAMyC,KAAK,OAAO0U,MAAO,CAAEjM,MAAO,qBAC1CkM,YAAY,gBAM5B1N,EAAAC,EAAAC,cAAC2Y,GAAA,QAAD,CAAKC,KAAM,GAAIrL,MAAO,CAAEzO,QAAS,QAC7BgB,EAAAC,EAAAC,cAAC6M,GAAA,QAAKG,KAAN,CAAWC,MAAM,eAAeC,aAAW,GACtCR,EAAkB,UAAW,CAC1BS,MAAO,CAAC,CACJC,UAAU,EACVb,QAAS,mCAEb,CACI0E,IAAK,GACL1E,QAAS,0CAPhBG,CASE5M,EAAAC,EAAAC,cAACqN,GAAA,QAAD,CAAO6D,YAAaR,EAAgBS,IAAK,GAAIC,IAAK,OAGzDtR,EAAAC,EAAAC,cAAC6M,GAAA,QAAKG,KAAN,CAAWC,MAAM,yCAAyCC,aAAW,GAChER,EAAkB,eAAgB,CAC/BS,MAAO,CAAC,CACJC,UAAU,EACVb,QAAS,yCAHhBG,CAMG5M,EAAAC,EAAAC,cAACqN,GAAA,QAAD,CACIC,OAAQxN,EAAAC,EAAAC,cAAC5J,EAAA,QAAD,CAAMyC,KAAK,SAAS0U,MAAO,CAAEjM,MAAO,qBAC5CkM,YAAY,oBAM5B1N,EAAAC,EAAAC,cAAC2Y,GAAA,QAAD,CAAKC,KAAM,GAAIrL,MAAO,CAAEzO,QAAS,QAC7BgB,EAAAC,EAAAC,cAAC6M,GAAA,QAAKG,KAAN,CAAWC,MAAM,UAAUC,aAAW,GACjCR,EAAkB,WAAY,CAC3BS,MAAO,CAAC,CAAEC,UAAU,EAAMb,QAAS,gCADtCG,CAGG5M,EAAAC,EAAAC,cAACqN,GAAA,QAAD,CACIC,OAAQxN,EAAAC,EAAAC,cAAC5J,EAAA,QAAD,CAAMyC,KAAK,OAAO0U,MAAO,CAAEjM,MAAO,qBAC1CkM,YAAY,eAO5B1N,EAAAC,EAAAC,cAAC2Y,GAAA,QAAD,CAAKC,KAAM,IACP9Y,EAAAC,EAAAC,cAAC6M,GAAA,QAAKG,KAAN,CAAWC,MAAM,iBACZP,EAAkB,SAAU,CACzBS,MAAO,CAAC,CAAEC,UAAU,EAAMb,QAAS,+BADtCG,CAGG5M,EAAAC,EAAAC,cAAC8R,GAAA,EAADjW,OAAAkW,OAAA,GACQwrB,EADR,CAEItrB,SAAUvJ,KAAK20B,aACfnrB,UAAWxJ,KAAK20B,eAEhBv9B,EAAAC,EAAAC,cAAC0N,GAAA,QAAD,KACI5N,EAAAC,EAAAC,cAAC5J,EAAA,QAAD,CAAMyC,KAAK,WADf,eAQhBiH,EAAAC,EAAAC,cAAC2Y,GAAA,QAAD,CAAKC,KAAM,GAAIrL,MAAO,CAAErO,WAAY,SAChCY,EAAAC,EAAAC,cAAC6M,GAAA,QAAKG,KAAN,KACIlN,EAAAC,EAAAC,cAAC0N,GAAA,QAAD,CACIH,MAAO,CAAEvC,MAAO,QAChBnS,KAAK,UACL8U,SAAS,SACTvN,UAAU,MACVgZ,SAAU1Q,KAAKjN,MAAM0gC,WALzB,gBAchBr8B,EAAAC,EAAAC,cAAC2C,GAAA,EAAD,MAGI+F,KAAKjN,MAAMwgC,QAAQ/H,UAAYp0B,EAAAC,EAAAC,cAAA,WAC3BF,EAAAC,EAAAC,cAACoxB,GAAA,aAAD,CACIK,YAAY,EACZJ,cAAe3oB,KAAKjN,MAAMwgC,QAAQ/H,UAClC7qB,KAAMX,KAAKjN,MAAM3C,WACjBw4B,OAAQ,SAAAI,GAEJ5c,EAAKtI,SAAS,CACV1T,WAAY44B,EACZyK,WAAW,KAGnB3K,QAAS,SAAApnB,GAAK,OAAIlN,QAAQC,IAAIiN,MAGlCtK,EAAAC,EAAAC,cAAA,0DAEK,SAQ7BF,EAAAC,EAAAC,cAAA,OAAKI,UAAU,kCACXN,EAAAC,EAAAC,cAACg9B,GAAD,CAAOzvB,MAAO,CAAEjM,MAAO,QAAUgU,MAAO,GAAxC,4GAE8D5M,KAAKjN,MAAMa,KAAK5B,QAF9E,4DAUZoF,EAAAC,EAAAC,cAAA,OACII,UAAU,kBACVmN,MAAO,CAACzO,QAAS,IAAKg+B,SAAU,SAAU99B,UAAW,SAErDc,EAAAC,EAAAC,cAAA,OAAKI,UAAU,OACXN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,aACXN,EAAAC,EAAAC,cAACwsB,GAAA,EAAD,KACI1sB,EAAAC,EAAAC,cAACw9B,GAAD,CAAQjwB,MAAO,CAAEgI,UAAW,WAA5B,aACczV,EAAAC,EAAAC,cAAA,OAAKqD,IAAKC,KAAMC,IAAI,QAAQnD,UAAU,SAChDN,EAAAC,EAAAC,cAAA,WAFJ,8BAG4B,IAAI0B,MAAOC,2BAhcjCmM,cA4cnB2vB,GADSzvB,WAAKC,OAAO,CAAExT,KAAM,wBAApBuT,CAA8C8tB,WCpctE,IAIe5tB,eAJS,SAAAzS,GAAK,MAAK,CAC9B4B,QAAU5B,EAAM4B,UAGmB,CACnCqgC,ctC2CyB,SAACnvB,EAAIC,EAAIC,GAAT,OAAgB,SAAA9E,GAEzCA,EAAS,CACL9Q,KAAM,qBACNwD,SAAS,IAGbiM,GAAK,CACDc,IAAG,GAAA1M,OAAKmH,GAAK8B,iBACb0D,KAAM,CACFrP,OAAQuU,EACR+R,OAAQ9R,KAEbnC,KAAK,SAACC,GAEAA,EAASjD,KAAKa,SACfL,GAAM,QAAS,SAAUyC,EAASjD,KAAKkD,SAG3CkC,IAEA9E,EAAS,CACL9Q,KAAM,qBACNwD,SAAS,MAEdoQ,MAAM,SAACrC,GAENT,EAAS,CACL9Q,KAAM,qBACNwD,SAAS,IAEbwN,GAAM,QAAS,SAAU,oBsCzE7B8Z,kBAFWzV,CAlDf,SAAqB/C,GAAO,IAAAwV,EACEC,oBAAS,GADXK,EAAAplB,OAAAqlB,GAAA,EAAArlB,CAAA8kB,EAAA,GACjBllB,EADiBwlB,EAAA,GACV+H,EADU/H,EAAA,GAQxB,OACInhB,EAAAC,EAAAC,cAACuhB,EAAA,SAAD,KACIzhB,EAAAC,EAAAC,cAAA,OAAKI,UAAU,oBACXN,EAAAC,EAAAC,cAAA,OAAKqD,IAAKC,KAAMC,IAAI,eAAenD,UAAU,UAGjDN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,6BACXN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,0BACXN,EAAAC,EAAAC,cAAA,2BACAF,EAAAC,EAAAC,cAAA,mDACAF,EAAAC,EAAAC,cAAA,8CACAF,EAAAC,EAAAC,cAAA,iFAEIF,EAAAC,EAAAC,cAAA,mBAFJ,uDAIAF,EAAAC,EAAAC,cAAA,iEACAF,EAAAC,EAAAC,cAAA,oEACAF,EAAAC,EAAAC,cAAA,6EACAF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAACmZ,GAAA,QAAD,CAAUxH,SAxB9B,SAAkB5F,GAEdid,EAASjd,EAAEqH,OAAO9D,WAsBF,oDAEJxP,EAAAC,EAAAC,cAAA,OAAKI,UAAU,0BACV3E,EACGqE,EAAAC,EAAAC,cAAC0N,GAAA,QAAD,CACAH,MAAO,CAAE8lB,MAAO,SAChBx6B,KAAK,UAAUzC,KAAK,cACpBmd,QAAS,WAAQpI,EAAMuyB,cAAcvyB,EAAM9N,QAAQrD,OAAQmR,EAAM9N,QAAQpD,UAAW,WAAQkR,EAAMwY,cAAcxY,EAAM9N,QAAQrD,OAAQmR,EAAM9N,QAAQpD,cAAiB4b,QAAS1K,EAAM9N,QAAQvD,kBAH5L,WAMQ,WCxC9B6jC,GAAY,oFAelB,IAOezvB,eAPS,SAAAzS,GAAK,MAAK,CAC9B4B,QAAU5B,EAAM4B,UAMmB,KAAxB6Q,CApBf,SAAiB/C,GACb,OACIrL,EAAAC,EAAAC,cAAA,OAAKI,UAAU,8BACXN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,0BACXN,EAAAC,EAAAC,cAAA,OAAKuD,IAAI,YAAYF,IAAKs6B,GAAWv9B,UAAU,0BAC/CN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,sCACXN,EAAAC,EAAAC,cAAA,SAAImL,EAAM9N,QAAQ7C,eAAeC,sBCN/CmjC,uLAEE,OACI99B,EAAAC,EAAAC,cAAA,OAAKI,UAAU,yBACXN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,uBACXN,EAAAC,EAAAC,cAAC0Y,GAAA,QAAD,CAAKnL,MAAO,CAAEzO,QAAS,QAClB4J,KAAKyC,MAAM9N,QAAQvC,QAAQ0F,IAAI,SAACwO,EAAGuI,GAChC,OACIzX,EAAAC,EAAAC,cAAC2Y,GAAA,QAAD,CAAKhY,IAAK4W,EAAGqB,KAAM,EAAGrL,MAAO,CAAEzO,QAAS,SACpCgB,EAAAC,EAAAC,cAAC69B,GAAD,CAAMxW,IAAKrY,EAAE8uB,WAAYnmB,IAAK3I,EAAE+uB,WAAYC,KAAMhvB,EAAEivB,SAAUnM,GAAIva,iBAT7EzJ,aA4EzB,IAAM8gB,GAAkB,SAAAnzB,GAAK,MAAK,CAC9B4B,QAAU5B,EAAM4B,UAGhBwgC,GAAO3vB,YAAQ0gB,GAAiB,CAChC1K,mBADOhW,CA3DX,SAAc/C,GACV,OAAGA,EAAM6yB,KACF7yB,EAAMwM,IAED7X,EAAAC,EAAAC,cAACk+B,GAAA,EAAD,CAAO99B,UAAU,KAAKw7B,MAAO97B,EAAAC,EAAAC,cAAC5J,EAAA,QAAD,CAAMyC,KAAK,OAAQyF,MAAM,SAASiP,MAAO,CAAEjM,MAAO,cAC3ExB,EAAAC,EAAAC,cAAC0N,GAAA,QAAD,CACI6F,QAAS,kBAAMpI,EAAM+Y,eAAe/Y,EAAM2mB,KAC1CvkB,MAAO,CAAE3O,WAAY,UAAW0C,MAAO,SAEtC6J,EAAM2mB,GAAK,IAOpBhyB,EAAAC,EAAAC,cAACk+B,GAAA,EAAD,CAAO99B,UAAU,KAAKw7B,MAAO97B,EAAAC,EAAAC,cAAC5J,EAAA,QAAD,CAAMyC,KAAK,OAAOyF,MAAM,SAASiP,MAAO,CAAEjM,MAAO,cAC1ExB,EAAAC,EAAAC,cAAC0N,GAAA,QAAD,CACI6F,QAAS,kBAAMpI,EAAM+Y,eAAe/Y,EAAM2mB,KAC1CvkB,MAAO,CAAE3O,WAAY,UAAW0C,MAAO,SAEtC6J,EAAM2mB,GAAK,IAOzB3mB,EAAMwM,IAED7X,EAAAC,EAAAC,cAAC0N,GAAA,QAAD,CACI6F,QAAS,kBAAMpI,EAAM+Y,eAAe/Y,EAAM2mB,KAC1C1xB,UAAU,KACVmN,MAAO,CAAE3O,WAAY,UAAW0C,MAAO,SAEtC6J,EAAM2mB,GAAK,GAMhBhyB,EAAAC,EAAAC,cAAC0N,GAAA,QAAD,CACI6F,QAAS,kBAAMpI,EAAM+Y,eAAe/Y,EAAM2mB,KAC1C1xB,UAAU,KACVmN,MAAO,CAAE3O,WAAY,UAAW0C,MAAO,SAEtC6J,EAAM2mB,GAAK,KAiBjB5jB,eAAQ0gB,GAAgB,KAAxB1gB,CAA8B0vB,IClFvCO,eAEF,SAAAA,EAAYhzB,GAAM,IAAAO,EAAA,OAAA7P,OAAA4M,EAAA,EAAA5M,CAAA6M,KAAAy1B,IACdzyB,EAAA7P,OAAA8P,GAAA,EAAA9P,CAAA6M,KAAA7M,OAAA+P,GAAA,EAAA/P,CAAAsiC,GAAAtyB,KAAAnD,KAAMyC,KAUVizB,QAAS,WACL91B,GAAK,CACDc,IAAG,GAAA1M,OAAImH,GAAKkC,UACZsD,KAAK,CACDrP,OAAQ0R,EAAKP,MAAM9N,QAAQrD,OAC3BsmB,OAAO5U,EAAKP,MAAM9N,QAAQpD,aAGjCoS,KAAK,SAACC,GACH,IAAGA,EAASjD,KAAKa,QAIb,OAAOL,GAAM,QAAQ,SAASyC,EAASjD,KAAKkD,SAH5Cb,EAAKP,MAAMwY,cAAcjY,EAAKP,MAAM9N,QAAQrD,OAAO0R,EAAKP,MAAM9N,QAAQpD,aAK3EwS,MAAM,SAACrC,GACN,OAAOP,GAAM,QAAQ,SAAS,YA3BpB6B,EAgClB2yB,OAAS,WACL,IAAIC,EAAIC,YAAY,WAEhB,IAAItM,EAAIvmB,EAAKjQ,MAAM+iC,aACf10B,EAAI4B,EAAKjQ,MAAMgjC,aAEV,GAALxM,GAAe,GAALnoB,GACV40B,cAAcJ,GACd5yB,EAAK0yB,YAGI,GAALt0B,GACAA,EAAI,GACJmoB,GAAQ,GAGRnoB,GAAQ,EAEZ4B,EAAKc,SAAS,CACVgyB,aAAcvM,EACdwM,aAAc30B,MAGvB,MArDH4B,EAAKjQ,MAAM,CACP+iC,aAAa9yB,EAAKP,MAAM9N,QAAQ/C,OAChCmkC,aAAa/yB,EAAKP,MAAM9N,QAAQ9C,QAJtBmR,oFAQdhD,KAAK21B,0FAqDL,OACIv+B,EAAAC,EAAAC,cAAA,OAAKI,UAAU,iBACXN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,mBACVsI,KAAKjN,MAAM+iC,aADhB,MACiC91B,KAAKjN,MAAMgjC,sBAlExC3wB,aA6ELI,eAJS,SAAAzS,GAAK,MAAK,CAC9B4B,QAAU5B,EAAM4B,UAGmB,CACnChD,czC/DyB,SAAC2U,GAAD,OAAO,SAAArF,GAChCA,EAAS,CACL9Q,KAAM,sByC6DI8qB,kBADHzV,CAEZiwB,IC1EGQ,gNAEFP,QAAS,WACL91B,GAAK,CACDc,IAAG,GAAA1M,OAAImH,GAAKkC,UACZsD,KAAK,CACDrP,OAAQ0R,EAAKP,MAAM9N,QAAQrD,OAC3BsmB,OAAO5U,EAAKP,MAAM9N,QAAQpD,aAE/BoS,KAAK,SAACC,GACL,IAAGA,EAASjD,KAAKa,QAKb,OAAOL,GAAM,QAAQ,SAASyC,EAASjD,KAAKkD,SAH5Cb,EAAKP,MAAMwY,cAAcjY,EAAKP,MAAM9N,QAAQrD,OAAO0R,EAAKP,MAAM9N,QAAQpD,aAK3EwS,MAAM,SAACrC,GACN,OAAOP,GAAM,QAAQ,SAAS,qFAKlC,OACI/J,EAAAC,EAAAC,cAAA,OAAKI,UAAW,iCAAmD,YAAlBsI,KAAKyC,MAAMxT,KAAiB,OAAO,UAChFmI,EAAAC,EAAAC,cAAC1D,GAAD,MACAwD,EAAAC,EAAAC,cAAC4+B,GAAD,MACA9+B,EAAAC,EAAAC,cAAC6+B,GAAD,MACA/+B,EAAAC,EAAAC,cAAA,OAAKI,UAAU,sBACXN,EAAAC,EAAAC,cAACkV,GAAA,EAAD,CACI3c,MAAM,+BACN8c,UAAW3M,KAAK01B,QAChBhpB,OAAO,MACPD,WAAW,MAEXrV,EAAAC,EAAAC,cAAC0N,GAAA,QAAD,CAAQ7U,KAAK,WAAb,oBAnCAgV,IAAMC,WAgDfI,eAJS,SAAAzS,GAAK,MAAK,CAC9B4B,QAAU5B,EAAM4B,UAGmB,CACnCsmB,kBADWzV,CAEZywB,cC9CGG,eACF,SAAAA,EAAY3zB,GAAM,IAAAO,EAAA,OAAA7P,OAAA4M,EAAA,EAAA5M,CAAA6M,KAAAo2B,IACdpzB,EAAA7P,OAAA8P,GAAA,EAAA9P,CAAA6M,KAAA7M,OAAA+P,GAAA,EAAA/P,CAAAijC,GAAAjzB,KAAAnD,KAAMyC,KAqFV4zB,YAAc,WACVz2B,GAAK,CACDc,IAAG,GAAA1M,OAAKmH,GAAKiC,gBACbuD,KAAM,CACFrP,OAAQ0R,EAAKP,MAAM9N,QAAQrD,OAC3BsmB,OAAQ5U,EAAKP,MAAM9N,QAAQpD,UAC3BotB,IAAK3b,EAAKP,MAAM9N,QAAQxC,UAAU6Q,EAAKP,MAAM9N,QAAQzC,qBAAqB2V,IAC1EyuB,UAAWtzB,EAAKjQ,MAAMX,WAE3BuR,KAAK,SAACC,GACL,IAAIA,EAASjD,KAAKa,QAYd,OADAwB,EAAKP,MAAMwY,cAAcjY,EAAKP,MAAM9N,QAAQrD,OAAQ0R,EAAKP,MAAM9N,QAAQpD,WAChE4P,GAAM,QAAS,SAAUyC,EAASjD,KAAKkD,SAV9C,IAAIzD,EAACjN,OAAAc,EAAA,EAAAd,CAAO6P,EAAKP,MAAM9N,QAAQvC,SAC/BgO,EAAE4C,EAAKP,MAAM9N,QAAQzC,qBAArBiB,OAAAC,EAAA,EAAAD,CAAA,GACOiN,EAAE4C,EAAKP,MAAM9N,QAAQzC,qBAD5B,CAEIqkC,aAAcvzB,EAAKjQ,MAAMX,QACzBijC,YAAY,IAEhBryB,EAAKP,MAAM+zB,eAAep2B,KAO/B2D,MAAM,SAACP,GACN,OAAOrC,GAAM,QAAS,SAAU,mBAhHtB6B,EAsHlByzB,SAAW,WACHzzB,EAAKP,MAAM9N,QAAQzC,oBAAsB,GACzC8Q,EAAKP,MAAM+Y,eAAexY,EAAKP,MAAM9N,QAAQzC,oBAAsB,IAxHzD8Q,EA4HlB0zB,KAAO,WACC1zB,EAAKjQ,MAAM4jC,gBACX3zB,EAAKqzB,cACDrzB,EAAKP,MAAM9N,QAAQzC,oBAAsB8Q,EAAKP,MAAM9N,QAAQxC,UAAUc,OAAS,GAC/E+P,EAAKP,MAAM+Y,eAAexY,EAAKP,MAAM9N,QAAQzC,oBAAsB,IAInE8Q,EAAKP,MAAM9N,QAAQzC,oBAAsB8Q,EAAKP,MAAM9N,QAAQxC,UAAUc,OAAS,GAC/E+P,EAAKP,MAAM+Y,eAAexY,EAAKP,MAAM9N,QAAQzC,oBAAsB,IArI7D8Q,EA0IlBsyB,KAAO,WACH,IAAIsB,EAAEzjC,OAAAc,EAAA,EAAAd,CAAO6P,EAAKP,MAAM9N,QAAQvC,SAC5BwjC,EAAIgB,EAAG5zB,EAAKP,MAAM9N,QAAQzC,qBAC9B0jC,EAAEL,UAAYvyB,EAAKP,MAAM9N,QAAQvC,QAAQ4Q,EAAKP,MAAM9N,QAAQzC,qBAAqBqjC,SACjFqB,EAAG5zB,EAAKP,MAAM9N,QAAQzC,qBAAuB0jC,EAC7C5yB,EAAKP,MAAM+zB,eAAeI,IA/IZ5zB,EAkJlB6zB,eAAe,SAAChxB,EAAGC,EAAGC,GAClB,IAAI+wB,EAAS9zB,EAAKP,MAAM9N,QAAQxC,UAAU6Q,EAAKP,MAAM9N,QAAQzC,qBAAqB4gB,SAClF,GAAGhN,EAAG,CACF,GAAG9C,EAAKjQ,MAAMgkC,SAASD,EACnB,OAAO31B,GAAM,QAAQ,SAAS,iDAG9B,IAAI61B,EAAG7jC,OAAAc,EAAA,EAAAd,CAAO6P,EAAKjQ,MAAMgB,SACzBijC,EAAInxB,GAAJ1S,OAAAC,EAAA,EAAAD,CAAA,GACO6jC,EAAInxB,GADX,CAEIe,SAAQ,IAEZ,IAAIqwB,EAAG9jC,OAAAc,EAAA,EAAAd,CAAO6P,EAAKjQ,MAAMX,SACzB6kC,EAAI5nB,KAAKtJ,GAEN/C,EAAKjQ,MAAMgkC,SAASD,EAAS,EAC5B9zB,EAAKc,SAAS,SAACozB,EAAQC,GACnB,MAAQ,CACJR,gBAAgB,EAChBI,OAAQG,EAAOH,OAAS,EACxBhjC,QAASijC,EACT5kC,QAAS6kC,KAKjBj0B,EAAKc,SAAS,SAACozB,EAAQC,GACnB,MAAQ,CACJJ,OAAQG,EAAOH,OAAS,EACxBhjC,QAASijC,EACT5kC,QAAS6kC,SAOzB,EACAD,EAAG7jC,OAAAc,EAAA,EAAAd,CAAO6P,EAAKjQ,MAAMgB,UAEjB8R,GAAJ1S,OAAAC,EAAA,EAAAD,CAAA,GACO6jC,EAAInxB,GADX,CAEIe,SAAQ,IAIZ,IAAI7O,GADJk/B,EAAG9jC,OAAAc,EAAA,EAAAd,CAAO6P,EAAKjQ,MAAMX,UACPw/B,QAAQ7rB,GACtBkxB,EAAIjV,OAAOjqB,EAAO,GAClBiL,EAAKc,SAAS,SAACozB,EAAQC,GACnB,MAAQ,CACJR,gBAAgB,EAChBI,OAAQG,EAAOH,OAAS,EACxBhjC,QAASijC,EACT5kC,QAAS6kC,OApMlBj0B,EAAKP,MAAM9N,QAAQvC,QAAQ4Q,EAAKP,MAAM9N,QAAQzC,qBAAqBqkC,aAAatjC,SAAS+P,EAAKP,MAAM9N,QAAQxC,UAAU6Q,EAAKP,MAAM9N,QAAQzC,qBAAqB4gB,SAC7J9P,EAAKjQ,MAAM,CACP4jC,gBAAe,EACf5iC,QAAQiP,EAAKP,MAAM9N,QAAQxC,UAAU6Q,EAAKP,MAAM9N,QAAQzC,qBAAqB6B,QAC7E3B,QAAQ4Q,EAAKP,MAAM9N,QAAQvC,QAAQ4Q,EAAKP,MAAM9N,QAAQzC,qBAAqBqkC,aAC3EQ,OAAO,EACP1a,aAAc,EACdN,MAAM,GAIV/Y,EAAKjQ,MAAM,CACP4jC,gBAAe,EACf5iC,QAAQiP,EAAKP,MAAM9N,QAAQxC,UAAU6Q,EAAKP,MAAM9N,QAAQzC,qBAAqB6B,QAC7E3B,QAAQ4Q,EAAKP,MAAM9N,QAAQvC,QAAQ4Q,EAAKP,MAAM9N,QAAQzC,qBAAqBqkC,aAC3EQ,OAAO,EACP1a,aAAc,EACdN,MAAM,GApBA/Y,qFA2BE,IAAAoJ,EAAApM,KACZic,EAAU,EAGdC,KAAEC,UAAUC,WAAW,SAAA/Y,GACnB4Y,IACA7P,EAAKtI,SAAS,CACVuY,aAAcJ,EACdF,MAAM,IAGNE,EAAU,GAAGznB,QAAQC,IAAI,YAKjCynB,KAAEC,UAAUG,MAAM,WACFJ,KAAEC,UAGRI,GAAG,iBAAkB,SAAUlZ,GAEjC,OADAA,EAAEC,kBACK,MAKf4Y,KAAE,WACEA,KAAElc,MAAMyc,KAAK,cAAe,SAASpZ,GACjCA,EAAEC,qBAIVtD,KAAK8D,SAAS,SAACozB,EAAOC,GAClB,IAAI/2B,EAAE,EAEFgB,EAAI81B,EAAOnjC,QAAQ+D,IAAI,SAACwO,EAAEuI,GAC1B,IAAI,IAAIkG,EAAG,EAAEA,EAAGmiB,EAAO9kC,QAAQa,OAAO8hB,IAClC,GAAGmiB,EAAO9kC,QAAQ2iB,KAAMzO,EAAEuB,IAGtB,OADAzH,GAAG,EACHjN,OAAAC,EAAA,EAAAD,CAAA,GACOmT,EADP,CAEIM,SAAQ,IAIpB,OAAAzT,OAAAC,EAAA,EAAAD,CAAA,GACOmT,EADP,CAEIM,SAAQ,MAGhB,MAAO,CACHmwB,OAAO32B,EACPrM,QAASqN,sCA4Hb,IAAA2Q,EAAA/R,KAEAkP,EAAO,CAAC,IAAK,IAAK,IAAK,IAAK,KAChC,OACI9X,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACgmB,GAAAjmB,EAAD,CACI0kB,KAAM/b,KAAKjN,MAAMgpB,KACjBlsB,MAAM,IACN+b,KAAK,gEACLe,UAAW,kBAAMoF,EAAKjO,SAAS,CAAEiY,MAAM,OAG3C3kB,EAAAC,EAAAC,cAAA,OAAKI,UAAU,6BACXN,EAAAC,EAAAC,cAAC0Y,GAAA,QAAD,KACI5Y,EAAAC,EAAAC,cAAC2Y,GAAA,QAAD,CAAKC,KAAM,GACP9Y,EAAAC,EAAAC,cAAC0N,GAAA,QAAD,CAAQH,MAAO,CAAE3O,WAAY,UAAW0C,MAAO,QAAU2T,MAAM,UAC1DvM,KAAKyC,MAAM9N,QAAQzC,oBAAsB,IAIlDkF,EAAAC,EAAAC,cAAC2Y,GAAA,QAAD,CAAKC,KAAM,IACP9Y,EAAAC,EAAAC,cAAC8/B,GAAA,QAAMC,MAAP,CAAaxyB,MAAO,CAAC8lB,MAAM,UACvBvzB,EAAAC,EAAAC,cAAC8/B,GAAA,QAAMt8B,OAAP,CACI+J,MAAO,CAAE3O,WAAY,UAAW0C,MAAO,SAE4C,IAAlFoH,KAAKyC,MAAM9N,QAAQxC,UAAU6N,KAAKyC,MAAM9N,QAAQzC,qBAAqB4gB,SAAiB,qBAAuB,wBAGlH1b,EAAAC,EAAAC,cAAC8/B,GAAA,QAAMt8B,OAAP,CACI+J,MAAO,CAAE3O,WAAY,UAAW0C,MAAO,SAD3C,WAGaoH,KAAKyC,MAAM9N,QAAQxC,UAAU6N,KAAKyC,MAAM9N,QAAQzC,qBAAqB2d,cAOxE,WAAlB7P,KAAKyC,MAAMxT,KACPmI,EAAAC,EAAAC,cAAC0N,GAAA,QAAD,CAAQ6F,QAAS7K,KAAKyC,MAAM60B,eAAgBzyB,MAAO,CAAE3O,WAAY,UAAW0C,MAAO,OAAQ+xB,MAAO,UAAlG,QAGH,KAELvzB,EAAAC,EAAAC,cAAA,OAAKI,UAAU,+BACXN,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,MAAIuN,MAAO,CAAE0vB,WAAY,6BACrBn9B,EAAAC,EAAAC,cAAC+b,GAAD,KACKrT,KAAKyC,MAAM9N,QAAQxC,UAAU6N,KAAKyC,MAAM9N,QAAQzC,qBAAqBiC,QAKjF6L,KAAKyC,MAAM9N,QAAQxC,UAAU6N,KAAKyC,MAAM9N,QAAQzC,qBAAqBwd,QAClEtY,EAAAC,EAAAC,cAAA,OAAKI,UAAU,wCACXN,EAAAC,EAAAC,cAAA,OAAKuD,IAAI,iBAAiBF,IAAKqF,KAAKyC,MAAM9N,QAAQxC,UAAU6N,KAAKyC,MAAM9N,QAAQzC,qBAAqBwd,QAAShY,UAAU,gCACpH,MAIfN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,gCACXN,EAAAC,EAAAC,cAAC0Y,GAAA,QAAD,KACKhQ,KAAKjN,MAAMgB,QAAQ+D,IAAI,SAACwO,EAAEuI,GACvB,OACIzX,EAAAC,EAAAC,cAAC2Y,GAAA,QAAD,CAAKC,KAAM,GAAIjY,IAAK4W,EAAGnX,UAAU,iBAC7BN,EAAAC,EAAAC,cAAC2Y,GAAA,QAAD,CAAKC,KAAM,GAAIrL,MAAO,CAAEgI,UAAW,SAC/BzV,EAAAC,EAAAC,cAAA,MACIuN,MAAO,CACHxL,UAAW,OACXjD,QAAS,IAGbgB,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAC2Y,GAAA,QAAD,CAAKC,KAAM,GACNhB,EAAKL,GAAI,MAEdzX,EAAAC,EAAAC,cAAC2Y,GAAA,QAAD,CAAKC,KAAM,GAAIrL,MAAO,CAAE3O,WAAY,OAAQ0C,MAAO,SAC/CxB,EAAAC,EAAAC,cAACmZ,GAAA,QAAD,CACI7J,QAASN,EAAEM,QACXqC,SAAU,SAAC5F,GAAQ0O,EAAK8kB,eAAehoB,EAAGxL,EAAEqH,OAAO9D,QAASN,EAAEuB,OAE9DzQ,EAAAC,EAAAC,cAAA,MAAIuN,MAAO,CAAE0vB,WAAY,6BACpBjuB,EAAEgJ,WAKflY,EAAAC,EAAAC,cAAC2Y,GAAA,QAAD,CAAKC,KAAM,GACP9Y,EAAAC,EAAAC,cAAA,OAAKI,UAAU,qCACV4O,EAAEiJ,OAASnY,EAAAC,EAAAC,cAAA,OAAKuD,IAAI,iBAAiBnD,UAAU,6BAA6BiD,IAAK2L,EAAEiJ,SAAa,gBAa7InY,EAAAC,EAAAC,cAAA,OAAKI,UAAU,iCACXN,EAAAC,EAAAC,cAAC0N,GAAA,QAAOqyB,MAAR,KAC8C,IAAzCr3B,KAAKyC,MAAM9N,QAAQzC,oBAChB,KAEAkF,EAAAC,EAAAC,cAAC0N,GAAA,QAAD,CAAQH,MAAO,CAAC3O,WAAW,UAAU0C,MAAM,QAASiS,QAAS7K,KAAKy2B,UAC9Dr/B,EAAAC,EAAAC,cAAC5J,EAAA,QAAD,CAAMyC,KAAK,SADf,YAKJiH,EAAAC,EAAAC,cAAC0N,GAAA,QAAD,CAAQ7U,KAAK,UAAU0a,QAAS7K,KAAKs1B,MAC7Bl+B,EAAAC,EAAAC,cAAC5J,EAAA,QAAD,CAAMyC,KAAK,SACT6P,KAAKyC,MAAM9N,QAAQvC,QAAQ4N,KAAKyC,MAAM9N,QAAQzC,qBAAqBqjC,SAAyB,kBAAhB,iBAErFv1B,KAAKyC,MAAM9N,QAAQzC,sBAAsB8N,KAAKyC,MAAM9N,QAAQxC,UAAUc,OAAO,EAC1E,KAEAmE,EAAAC,EAAAC,cAAC0N,GAAA,QAAD,CAAQH,MAAO,CAAC3O,WAAW,UAAU0C,MAAM,QAASiS,QAAS7K,KAAK02B,MAC7D12B,KAAKjN,MAAM4jC,eAAe,cAAe,OAC1Cv/B,EAAAC,EAAAC,cAAC5J,EAAA,QAAD,CAAMyC,KAAK,WAGlB6P,KAAKyC,MAAM9N,QAAQzC,sBAAsB8N,KAAKyC,MAAM9N,QAAQxC,UAAUc,OAAO,GAAK+M,KAAKjN,MAAM4jC,eAC1Fv/B,EAAAC,EAAAC,cAAC0N,GAAA,QAAD,CAAQH,MAAO,CAAC3O,WAAW,UAAU0C,MAAM,QAASiS,QAAS,WAAKkH,EAAKskB,gBAAvE,OAEIj/B,EAAAC,EAAAC,cAAC5J,EAAA,QAAD,CAAMyC,KAAK,WACL,eA9UTgV,IAAMC,WA4VpBI,eAJS,SAAAzS,GAAK,MAAK,CAC9B4B,QAAU5B,EAAM4B,UAGmB,CACnC6mB,kBACAgb,e3C9J0B,SAAC3wB,GAC3B,MAAO,CACH1V,KAAM,kCACNwD,QAASkS,I2C4JboV,kBAHWzV,CAIZ4wB,IC3WGmB,mMAGEv3B,KAAKyC,MAAM+0B,0BAA0Bx3B,KAAKyC,MAAM9N,QAAQrD,QACxD0O,KAAKyC,MAAMg1B,4BAA4Bz3B,KAAKyC,MAAM9N,QAAQrD,OAAO0O,KAAKyC,MAAM9N,QAAQpD,4CAIpF,OACI6F,EAAAC,EAAAC,cAAA,OAAKI,UAAU,mBACXN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,6BACVsI,KAAKyC,MAAM9N,QAAQvC,QAAQa,OAAO,GAAK+M,KAAKyC,MAAM9N,QAAQxC,UAAUc,OAAO,EACxEmE,EAAAC,EAAAC,cAACogC,GAAD,CACIzoC,KAAM+Q,KAAKyC,MAAMxT,KACjBqoC,eAAgBt3B,KAAKyC,MAAM60B,eAC3Br/B,IAAK+H,KAAKyC,MAAM9N,QAAQzC,sBACvB,cAhBNkT,aA6BRI,eAJS,SAAAzS,GAAK,MAAK,CAC9B4B,QAAU5B,EAAM4B,UAGmB,CACnC6iC,0B5CqGqC,SAACha,GAAD,OAAS,SAAAvc,GAC9CrB,GAAK,CACDc,IAAG,GAAA1M,OAAKmH,GAAK+B,6BACbyD,KAAM,CACFlQ,GAAI+sB,KAET7Z,KAAK,SAACC,GAEDA,EAASjD,KAAKa,QACdP,EAAS,CACL9Q,KAAM,gCACNwD,QAASiQ,EAASjD,KAAKA,OAI3BQ,GAAM,QAAS,SAAUyC,EAASjD,KAAKkD,WAE5CE,MAAM,SAACrC,GAENP,GAAM,QAAS,SAAU,oB4CvH7Bs2B,4B5C4HuC,SAACja,EAAKC,GAAN,OAAc,SAAAxc,GACrDrB,GAAK,CACDc,IAAG,GAAA1M,OAAKmH,GAAKgC,gCACbwD,KAAM,CACFrP,OAAQksB,EACR5F,OAAQ6F,KAEb9Z,KAAK,SAACC,GACL,GAAIA,EAASjD,KAAKa,QAAS,CAEvB,IAAI8E,EAAI1C,EAASjD,KAAKA,KAAKvO,QAAQ0F,IAAI,SAACwO,EAAGuI,GACvC,OAA8B,IAA1BvI,EAAEiwB,aAAatjC,OACRE,OAAAC,EAAA,EAAAD,CAAA,GACAmT,EADP,CAEIivB,UAAU,EACVF,YAAY,IAITliC,OAAAC,EAAA,EAAAD,CAAA,GACAmT,EADP,CAEIivB,UAAU,EACVF,YAAY,MAKxBp0B,EAAS,CACL9Q,KAAM,kCACNwD,QAAS2S,SAIbnF,GAAM,QAAS,SAAUyC,EAASjD,KAAKkD,WAE5CE,MAAM,SAACrC,GAENP,GAAM,QAAS,SAAU,qB4CnKlBqE,CAGZ+xB,eC/BH,SAASI,KAAsB,IAAAC,EACwBpiC,OACnD,MAAO,CACH8M,MAHuBs1B,EACnBC,WAGJlhC,OAJuBihC,EACAE,aAqBhB,SAASC,GAAUt1B,GAAO,IAAAu1B,EAdzC,WAA+B,IAAA/f,EACqBC,mBAASyf,MAD9Bpf,EAAAplB,OAAAqlB,GAAA,EAAArlB,CAAA8kB,EAAA,GACpBggB,EADoB1f,EAAA,GACF2f,EADE3f,EAAA,GAW3B,OARAmI,oBAAU,WACN,SAASyX,IACLD,EAAoBP,MAGxB,OADAniC,OAAO+kB,iBAAiB,SAAU4d,GAC3B,kBAAM3iC,OAAO4iC,oBAAoB,SAAUD,KACnD,IAEIF,EAImBI,GAAV/1B,GADqB01B,EAC7BrhC,OAD6BqhC,EACrB11B,OADqBoW,EAEVR,oBAAS,GAFCS,EAAAxlB,OAAAqlB,GAAA,EAAArlB,CAAAulB,EAAA,GAE9BlN,EAF8BmN,EAAA,GAEtB2f,EAFsB3f,EAAA,GAKjC4f,EAAO,kBAAID,GAAW,IAE1B,OAAGh2B,EAAM,IAEDlL,EAAAC,EAAAC,cAAA,OAAKI,UAAU,0BACXN,EAAAC,EAAAC,cAACkhC,GAAD,CAAUvpC,KAAMqT,EAAM,IAAI,UAAU,SAAUg1B,eAAgBiB,IAC9DnhC,EAAAC,EAAAC,cAACmhC,GAAD,CAAWxpC,KAAMqT,EAAM,IAAI,UAAU,YAOzClL,EAAAC,EAAAC,cAAA,OAAKI,UAAU,0BACXN,EAAAC,EAAAC,cAACkhC,GAAD,CAAUvpC,KAAMqT,EAAM,IAAI,UAAU,SAAUg1B,eAAgBiB,IAE9DnhC,EAAAC,EAAAC,cAACxE,GAAA,EAAD,CACIjD,MAAM,OACNipB,UAAU,QACV4f,UAAU,EACVC,QArBJ,kBAAIL,GAAW,IAsBX9sB,QAASA,EACTlJ,MAAM,QAENlL,EAAAC,EAAAC,cAACmhC,GAAD,CAAWxpC,KAAMqT,EAAM,IAAI,UAAU,iBCvCjD+J,GAAU9T,KAAV8T,MAEFusB,eACF,SAAAA,EAAYn2B,GAAM,IAAAO,EAAA7P,OAAA4M,EAAA,EAAA5M,CAAA6M,KAAA44B,GACd51B,EAAA7P,OAAA8P,GAAA,EAAA9P,CAAA6M,KAAA7M,OAAA+P,GAAA,EAAA/P,CAAAylC,GAAAz1B,KAAAnD,KAAMyC,IACN,IAAIlD,EAAS8yB,KAAYC,MAAMtvB,EAAKP,MAAMvS,SAASqiC,QAFrC,OAIdvvB,EAAKjQ,MAAQ,CACT8oB,YAAYtc,GAEhByD,EAAKP,MAAMo2B,eAAet5B,EAAOjO,OAAOiO,EAAOhO,WAPjCyR,oFAYdhD,KAAKyC,MAAMq2B,iBAAiB94B,KAAKjN,MAAM8oB,YAAYtqB,WACnDyO,KAAKyC,MAAMwY,cAAcjb,KAAKjN,MAAM8oB,YAAYvqB,OAAO0O,KAAKjN,MAAM8oB,YAAYtqB,4CAK9E,OAAGyO,KAAKyC,MAAM9N,QAAQlD,iBAAmBuO,KAAKyC,MAAM9N,QAAQnD,gBAEpD4F,EAAAC,EAAAC,cAAA,OAAKI,UAAU,oBACXN,EAAAC,EAAAC,cAAC0a,GAAA,EAAD,CAAUC,QAAM,IAChB7a,EAAAC,EAAAC,cAAC0a,GAAA,EAAD,CAAUC,QAAM,KAMrBjS,KAAKyC,MAAM9N,QAAQtD,WACXmE,OAAOtF,SAAS6I,KAAhB,GAKJiH,KAAKyC,MAAM9N,QAAQhD,cAEdyF,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAC8oB,GAAD,OAMLpgB,KAAKyC,MAAM9N,QAAQ7D,cAEdsG,EAAAC,EAAAC,cAACuhB,EAAA,SAAD,KACIzhB,EAAAC,EAAAC,cAAA,OAAKI,UAAU,oBACXN,EAAAC,EAAAC,cAAA,OAAKqD,IAAKC,KAAMC,IAAI,eAAenD,UAAU,UAGjDN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,uCACXN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,qCACXN,EAAAC,EAAAC,cAACyhC,GAAD,CAAOrhC,UAAU,4CAA4CmN,MAAO,CAAEjM,MAAO,QAAUgU,MAAO,GAA9F,0BAC2BxV,EAAAC,EAAAC,cAAA,eAQvC0I,KAAKyC,MAAM9N,QAAQ9D,WAgBhBmP,KAAKyC,MAAM9N,QAAQjD,eAEd0F,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACygC,GAAD,OAMJ3gC,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAC0hC,GAAD,OAxBR5hC,EAAAC,EAAAC,cAACuhB,EAAA,SAAD,KACKzhB,EAAAC,EAAAC,cAAA,OAAKI,UAAU,oBACZN,EAAAC,EAAAC,cAAA,OAAKqD,IAAKC,KAAMC,IAAI,eAAenD,UAAU,UAGjDN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,uCACXN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,qCACXN,EAAAC,EAAAC,cAACyhC,GAAD,CAAOrhC,UAAU,4CAA4CmN,MAAO,CAACjM,MAAM,QAASgU,MAAO,GAA3F,wGAvEnBxH,aAyGVI,eAJS,SAAAzS,GAAK,MAAK,CAC9B4B,QAAU5B,EAAM4B,UAGmB,CACnCmkC,iB9ClG4B,SAACxyB,GAAD,OAAO,SAAArF,GACnCrB,GAAK,CACDc,IAAKvF,GAAK4B,sBACV4D,KAAM,CACFkH,IAAKvB,KAEV3C,KAAK,SAACC,GAEDA,EAASjD,KAAKa,QACdP,EAAS,CACL9Q,KAAM,0BACNwD,QAASiQ,EAASjD,KAAKA,OAI3BQ,GAAM,QAAS,SAAUyC,EAASjD,KAAKkD,a8CoF/Cg1B,e9CjH0B,SAAChzB,EAAIC,GAC/B,MAAQ,CACJ3V,KAAM,2BACNoD,SAAUsS,EACVrS,SAAUsS,I8C8GdmV,iBACAQ,mBAJWjW,CAKZozB,IChGYK,OApBf,WACE,OACE7hC,EAAAC,EAAAC,cAAC4hC,EAAA,EAAD,CAAUhkC,MAAOA,GACfkC,EAAAC,EAAAC,cAACw7B,EAAA,EAAD,KACE17B,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC2M,EAAA,EAAD,CAAOk1B,OAAK,EAACC,KAAK,IAAI1gC,UAAW2gC,IACjCjiC,EAAAC,EAAAC,cAAC2M,EAAA,EAAD,CAAOk1B,OAAK,EAACC,KAAK,cAAc1gC,UAAW4gC,KAC3CliC,EAAAC,EAAAC,cAAC2M,EAAA,EAAD,CAAOk1B,OAAK,EAACC,KAAK,QAAQ1gC,UAAW4gC,KACrCliC,EAAAC,EAAAC,cAAC2M,EAAA,EAAD,CAAOk1B,OAAK,EAACC,KAAK,QAAQ1gC,UAAWy4B,KACrC/5B,EAAAC,EAAAC,cAAC2M,EAAA,EAAD,CAAOm1B,KAAK,iBAAiB1gC,UAAWy4B,KACxC/5B,EAAAC,EAAAC,cAAC2M,EAAA,EAAD,CAAOk1B,OAAK,EAACC,KAAK,sBAAsB1gC,UAAWq8B,KACnD39B,EAAAC,EAAAC,cAAC2M,EAAA,EAAD,CAAOk1B,OAAK,EAACC,KAAK,sBAAsB1gC,UAAWkgC,SCdzCW,QACW,cAA7B/jC,OAAOtF,SAASspC,UAEe,UAA7BhkC,OAAOtF,SAASspC,UAEhBhkC,OAAOtF,SAASspC,SAAShI,MACvB,2DCZNxe,MAASoT,UAAU,UAEnBqT,IAAS9tB,OAAOvU,EAAAC,EAAAC,cAACoiC,GAAD,MAASvd,SAASwd,eAAe,SDyH3C,kBAAmBC,WACrBA,UAAUC,cAAcvd,MAAM3Y,KAAK,SAAAm2B,GACjCA,EAAaC,mGELnB9tC,EAAOC,QAAQ,CAACoqB,QA9HF,CACE,0BACA,0BACA,0BACA,0BACA,2BACA,0BACA,0BACA,0BACA,0BACA,0BACA,2BACA,0BACA,0BACA,0BACA,0BACA,0BACA,2BACA,0BACA,0BACA,0BACA,0BACA,0BACA,2BACA,0BACA,0BACA,0BACA,0BACA,0BACA,2BACA,0BACA,0BACA,0BACA,0BACA,0BACA,2BACA,0BACA,0BACA,0BACA,0BACA,0BACA,2BACA,0BACA,0BACA,0BACA,0BACA,0BACA,2BACA,0BACA,0BACA,0BACA,0BACA,0BACA,2BACA,0BACA,0BACA,0BACA,0BACA,0BACA,2BACA,2BAkEQC,YA/DL,CACH,wBACA,wBACA,wBACA,wBACA,yBACA,wBACA,wBACA,wBACA,wBACA,wBACA,yBACA,wBACA,wBACA,wBACA,wBACA,wBACA,yBACA,wBACA,wBACA,wBACA,wBACA,wBACA,yBACA,wBACA,wBACA,wBACA,wBACA,wBACA,yBACA,wBACA,wBACA,wBACA,wBACA,wBACA,yBACA,wBACA,wBACA,wBACA,wBACA,wBACA,yBACA,wBACA,wBACA,wBACA,wBACA,wBACA,yBACA,wBACA,wBACA,wBACA,wBACA,wBACA,yBACA,wBACA,wBACA,wBACA,wBACA,wBACA,yBACA,qEC3HhBtqB,EAAAC,QAAiBC,EAAAC,EAAuB,uDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB","file":"static/js/main.c72cd068.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.cc171c63.png\";","import { TOOGLE_NAVIGATION } from '../actions/types';\r\n\r\n\r\nconst initialState = {\r\n    navigationCollapsed : true\r\n}\r\n\r\nexport default (state = initialState, action )=>{\r\n    switch(action.type){\r\n        case TOOGLE_NAVIGATION:\r\n            return {\r\n                ...state,\r\n                navigationCollapsed : !state.navigationCollapsed\r\n            }  \r\n        default:\r\n            return state;\r\n    }\r\n}","const initialState = {\r\n    TrainermodalOpened : false,\r\n    TrainerconfirmDirty: false,\r\n    Trainermode : 'Register',\r\n    trainerId : null,\r\n    TrainersearchText : '',\r\n    trainerTableLoadingStatus:false,\r\n    trainerEditFormLoadingStatus:false,\r\n    trainerTableData:[],\r\n    trainerdetails:{},\r\n    subjectTableData : [] ,\r\n    SubjectmodalOpened : false,\r\n    SubjectconfirmDirty: false,\r\n    Subjectmode : 'New Topic',\r\n    SubjectId : null,\r\n    SubjectsearchText : '',\r\n    SubjectTableLoading : false, \r\n    subjectDetails :{}    \r\n}\r\n\r\nexport default (state = initialState, action )=>{\r\n    switch(action.type){\r\n        case 'CHANGE_TRAINER_MODAL_STATE':\r\n            return {\r\n                ...state,\r\n                TrainermodalOpened : action.payload1,\r\n                trainerId : action.payload2,\r\n                Trainermode : action.payload3,\r\n                trainerdetails : action.payload4\r\n\r\n            }\r\n        case 'CHANGE_TRAINER_FORM_CONFIRMDIRTY':\r\n            return {\r\n                ...state,\r\n                TrainerconfirmDirty : action.payload\r\n            }\r\n        case 'CHANGE_TRAINER_SEARCH_TEXT':\r\n                return {\r\n                    ...state,\r\n                    TrainersearchText : action.payload\r\n                }\r\n        case 'CHANGE_TRAINER_TABLE_LOADING_STATUS':\r\n                return {\r\n                    ...state,\r\n                    trainerTableLoadingStatus : action.payload1,\r\n                    trainerTableData : action.payload2,\r\n\r\n                }\r\n        case 'CHANGE_SUBJECT_MODAL_STATE':\r\n            return {\r\n                ...state,\r\n                SubjectmodalOpened : action.payload1,\r\n                SubjectId : action.payload2,\r\n                Subjectmode : action.payload3,\r\n                subjectDetails : action.payload4\r\n            }\r\n        case 'CHANGE_SUBJECT_FORM_CONFIRMDIRTY':\r\n            return {\r\n                ...state,\r\n                SubjectconfirmDirty : action.payload\r\n            }\r\n        case 'CHANGE_SUBJECT_SEARCH_TEXT':\r\n                return {\r\n                    ...state,\r\n                    SubjectsearchText : action.payload\r\n                }\r\n        case 'CHANGE_SUBJECT_TABLE_LOADING_STATUS':\r\n                return {\r\n                    ...state,\r\n                    SubjectTableLoading : action.payload1,\r\n                    subjectTableData :action.payload2\r\n                }\r\n        default:\r\n            return state;\r\n    }\r\n}","export const ADMIN_PERMISSIONS = [\r\n    {\r\n        display: 'Welcome',\r\n        icon: 'home',\r\n        link: '/user/home'\r\n    },\r\n    {\r\n        display: 'All Trainers',\r\n        icon: 'user',\r\n        link: '/user/listtrainers'\r\n    },\r\n    {\r\n        display: 'All Categories',\r\n        icon: 'book',\r\n        link: '/user/listsubjects'\r\n    },\r\n    {\r\n        display: 'All Programming Questions',\r\n        icon: 'code',\r\n        link: '/user/listcode'\r\n    },\r\n    {\r\n        display: 'All Questions',\r\n        icon: 'question',\r\n        link: '/user/listquestions'\r\n    },\r\n    {\r\n        display: 'Settings',\r\n        icon: 'setting',\r\n        link: '/user/settings'\r\n    },\r\n];\r\n\r\nexport const TRAINER_PERMISSIONS = [\r\n    {\r\n        display: 'Welcome',\r\n        icon: 'home',\r\n        link: '/user/home'\r\n    },\r\n    {\r\n        display: 'All Categories',\r\n        icon: 'book',\r\n        link: '/user/listsubjects'\r\n    },\r\n    {\r\n        display: 'All MCQ Questions',\r\n        icon: 'question',\r\n        link: '/user/listquestions'\r\n    },\r\n    {\r\n        display: 'All Programming Questions',\r\n        icon: 'code',\r\n        link: '/user/listcode'\r\n    },\r\n    {\r\n        display: 'All Assessments',\r\n        icon: 'bars',\r\n        link: '/user/listtests'\r\n    },\r\n    {\r\n        display: 'New Assessments',\r\n        icon: 'plus-circle',\r\n        link: '/user/newtest'\r\n    },\r\n    {\r\n        display: 'Conduct Assessments',\r\n        icon: 'appstore',\r\n        link: '/user/conducttest'\r\n    },\r\n    {\r\n        display: 'Settings',\r\n        icon: 'setting',\r\n        link: '/user/settings'\r\n    },\r\n];","import { ADMIN_PERMISSIONS, TRAINER_PERMISSIONS} from '../services/userOption';\r\n\r\nconst initialState = {\r\n    isLoggedIn : false,\r\n    userDetails : {},\r\n    activeRoute:'0',\r\n    userOptions:[]\r\n}\r\n\r\nexport default (state = initialState, action )=>{\r\n    switch(action.type){\r\n        case 'CHANGE_ACTIVE_URL':\r\n            return {\r\n                ...state,\r\n                activeurl : action.payload\r\n            }\r\n        case 'CHANGE_ACTIVE_ROUTE':\r\n            return {\r\n                ...state,\r\n                activeRoute : action.payload\r\n            }\r\n        case 'LOGIN':\r\n            if(action.payload.type==='ADMIN'){\r\n                return {\r\n                    ...state,\r\n                    isLoggedIn : true,\r\n                    userDetails:{\r\n                        ...action.payload\r\n                    },\r\n                    userOptions : ADMIN_PERMISSIONS                    \r\n                }\r\n            }\r\n            else{\r\n                return {\r\n                    ...state,\r\n                    isLoggedIn : true,\r\n                    userDetails:{\r\n                        ...action.payload\r\n                    },\r\n                    userOptions : TRAINER_PERMISSIONS\r\n                }\r\n            }\r\n            \r\n        case 'LOGOUT':\r\n            return {\r\n                ...state,\r\n                isLoggedIn : false,\r\n                userDetails :{\r\n\r\n                }\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","const initialState = {\r\n    NewQuestionmodalOpened : false,\r\n    AllQuestionconfirmDirty: false,\r\n    QuestionsearchText : '',\r\n    QuestionTableLoading : false, \r\n    QuestionTableData : [],\r\n    selectedSubjects:[],\r\n    QuestionFormData:{},\r\n    fifthoptioAddButtonVisible:true,\r\n    TestTableLoading:false,\r\n    TestTableData:[],\r\n    DataActiveTestDetails : {\r\n        testDetailsId : null,\r\n        testquestions :[]\r\n    },\r\n    referTable: [],\r\n};\r\n\r\n\r\nexport default (state = initialState, action )=>{\r\n    switch(action.type){\r\n        case 'CHANGE_QUESTION_MODAL_STATE':\r\n            return {\r\n                ...state,\r\n                NewQuestionmodalOpened : action.payload1,\r\n            }\r\n        case 'CHANGE_QUESTION_FORM_CONFIRMDIRTY':\r\n            return {\r\n                ...state,\r\n                AllQuestionconfirmDirty : action.payload\r\n            }\r\n        case 'CHANGE_QUESTION_SEARCH_TEXT':\r\n            return {\r\n                ...state,\r\n                QuestionsearchText : action.payload\r\n            }\r\n        case 'CHANGE_QUESTION_TABLE_LOADING_STATUS':\r\n            return {\r\n                ...state,\r\n                QuestionTableLoading : action.payload1,\r\n                QuestionTableData : action.payload2\r\n            }\r\n        case 'ADD_FIFTH_OPTION':\r\n            return {\r\n                ...state,\r\n                QuestionFormData:{\r\n                    ...state.QuestionFormData,\r\n                    options:[\r\n                        ...state.QuestionFormData.options,\r\n                        {\r\n                            image :null,\r\n                            body : null,\r\n                            isAnswer :false\r\n                        }\r\n                    ]\r\n                },\r\n                fifthoptioAddButtonVisible:false\r\n            }\r\n        case 'CHANGE_SELECTED_SUBJECT':\r\n            return {\r\n                ...state,\r\n                selectedSubjects : action.payload\r\n            }\r\n        case 'CHANGE_QUESTION_FORM_DATA':\r\n            return{\r\n                ...state,\r\n                QuestionFormData : action.payload\r\n            }\r\n        case 'CHANGE_TEST_DETAILS_MODAL_STATE':\r\n            return {\r\n                ...state,\r\n                TestDetailsmodalOpened : action.payload1,\r\n                DataActiveTestDetails :{\r\n                    ...state.DataActiveTestDetails,\r\n                    testDetailsId : action.payload2\r\n                }\r\n            }\r\n        case 'CHANGE_TEST_SEARCH_TEXT':\r\n            return {\r\n                ...state,\r\n                TestsearchText : action.payload\r\n            }\r\n        case 'CHANGE_TEST_TABLE_LOADING_STATUS':\r\n            return {\r\n                ...state,\r\n                TestTableLoading : action.payload1,\r\n                TestTableData :action.payload2\r\n            }\r\n        case 'CHANGE_CURRENT_ACTIVE_TEST_QUESTION':\r\n            return{\r\n                ...state,\r\n                DataActiveTestDetails:{\r\n                    ...state.DataActiveTestDetails,\r\n                    testquestions:action.payload\r\n                }\r\n            }\r\n        case 'UPDATE_REFER_TABLE':\r\n            return {\r\n                ...state,\r\n                referTable: action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","const initialState = {\r\n    greet: 'Hi',\r\n    currentStep: 0,\r\n    mode: \"random\",\r\n    newtestFormData: {\r\n        testType: null,\r\n        testTitle: '',\r\n        testDuration: 60,\r\n        OrganisationName: null,\r\n        testSubject: [],\r\n        testQuestions: [],\r\n        startTime: null,\r\n        endTime: null\r\n    },\r\n    addjobpost: false,\r\n    jobPostData: {\r\n        title: '',\r\n        description: null,\r\n        maxApplicants: 100,\r\n        maxPositions: 30,\r\n        skillsets: [],\r\n        location: null,\r\n        type: \"Full Time\",\r\n        customdata: {},\r\n    },\r\n    questionsAvailablebasedonSubject: [],\r\n    addcoding: false,\r\n    codingtData: {\r\n        testQuestions: [],\r\n        testDuration: 10\r\n    },\r\n    codingquestionsAvailablebasedonSubject: [],\r\n};\r\n\r\n\r\nexport default (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'CHANGE_ACTIVE_STEP':\r\n            return {\r\n                ...state,\r\n                currentStep: action.payload\r\n            }\r\n        case 'CHANGE_BASIC_NEW_TEST_DETAILS':\r\n            return {\r\n                ...state,\r\n                newtestFormData: {\r\n                    ...state.newtestFormData,\r\n                    ...action.payload\r\n                }\r\n            }\r\n        case 'FETCH_QUESTIONS_BASED_ON_SUBJECT':\r\n            return {\r\n                ...state,\r\n                questionsAvailablebasedonSubject: action.payload\r\n            }\r\n        case 'ADD_QUESTION_TO_QUESTION_QUEUSE':\r\n            return {\r\n                ...state,\r\n                newtestFormData: {\r\n                    ...state.newtestFormData,\r\n                    testQuestions: action.payload\r\n                }\r\n            }\r\n        case 'REMOVE_QUESTION_FROM_MAIN_QUEUE':\r\n            return {\r\n                ...state,\r\n                questionsAvailablebasedonSubject: action.payload\r\n            }\r\n        case 'CHANGE_MODE_QUESTION_SELECT':\r\n            return {\r\n                ...state,\r\n                mode: action.payload\r\n            }\r\n        case 'ADD_JOB_DATA':\r\n            return{\r\n                ...state,\r\n                addjobpost:  action.payload1,\r\n                jobPostData: action.payload2,\r\n            }\r\n        case 'ADD_CODING_QUESTION_CHECKER':\r\n            return{\r\n                ...state,\r\n                addcoding:  action.payload\r\n            }\r\n        case 'ADD_CODING_QUESTION_DURATION':\r\n            console.log(action.payload);\r\n            return{\r\n                ...state,\r\n                codingtData: {\r\n                    ...state.codingtData,\r\n                    testDuration: action.payload\r\n                }\r\n            }\r\n        case 'ADD_CODING_QUESTION_TO_QUESTION_QUEUE':\r\n            return {\r\n                ...state,\r\n                codingtData: {\r\n                    ...state.codingtData,\r\n                    testQuestions: action.payload\r\n                },\r\n            }\r\n        case 'REMOVE_CODING_QUESTION_FROM_MAIN_QUEUE':\r\n            return {\r\n                ...state,\r\n                codingquestionsAvailablebasedonSubject: action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    };\r\n};","const initialState = { \r\n    id : null,\r\n    testRegisterLink:'',\r\n    basictestdetails:{\r\n        isRegistrationavailable:false,\r\n        testbegins:false,\r\n        testconducted:false,\r\n        isResultgenerated: false,\r\n        start: null,\r\n        end: null,\r\n    },\r\n    registeredCandidates:[],\r\n    questionsOfTest:[]\r\n}\r\n\r\nexport default (state = initialState, action )=>{\r\n    switch(action.type){\r\n        case 'SET_CONDUCT_TEST_ID':\r\n            return {\r\n                ...state ,\r\n                id:action.payload\r\n            }\r\n        case 'SET_TEST_REGISTER_LINK':\r\n            return {\r\n                ...state ,\r\n                testRegisterLink:action.payload\r\n            }\r\n        case 'UPDATE_TEST_BASIC_DETAILS':\r\n            return{\r\n                ...state,\r\n                basictestdetails:action.payload\r\n            }\r\n        case 'CHANGE_TEST_ISREGISTRATION_AVAILABLE':\r\n            return{\r\n                ...state,\r\n                basictestdetails:{\r\n                    ...state.basictestdetails,\r\n                    isRegistrationavailable:action.payload\r\n                }\r\n            }\r\n        case 'CHANGE_BEGIN_TEST_STATUS':\r\n            return{\r\n                ...state,\r\n                basictestdetails:action.payload\r\n            }\r\n        case 'CHANGE_CANDIDATES_OF_TEST':\r\n            return{\r\n                ...state,\r\n                registeredCandidates:action.payload\r\n            }\r\n        case 'CHANGE_QUESTIONS_OF_TEST':\r\n            return{\r\n                ...state,\r\n                questionsOfTest :action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","const initialState = {\r\n    proceedingToTest:false,\r\n    invalidUrl:false,\r\n    testid:null,\r\n    traineeid:null,\r\n    initialloading1:true,\r\n    initialloading2:true,\r\n    testbegins : true,\r\n    startedWriting:true,\r\n    testconducted:false,\r\n    LocaltestDone:true,\r\n    m_left:0,\r\n    s_left:0,\r\n    traineeDetails:{\r\n        name:\"\",\r\n        emailid:\"\",\r\n        contact:\"\"\r\n    },\r\n    activeQuestionIndex:0,\r\n    questions:[],\r\n    answers:[],\r\n    hasGivenFeedBack:false,\r\n    loadcoding: true,\r\n    codingData: [],\r\n    Iscoding: false,\r\n    codingsubmitted: null,\r\n    codingStartTime: null\r\n}\r\n\r\n\r\nexport default (state = initialState, action )=>{\r\n    switch(action.type){\r\n        case 'SET_HAS_GIVEN_FEEDBACK':\r\n            return{\r\n                ...state,\r\n                hasGivenFeedBack:action.payload\r\n            }\r\n        case 'SET_TRAINEE_TEST_DETAILS':\r\n            return{\r\n                ...state,\r\n                testid:action.payload1,\r\n                traineeid:action.payload2,\r\n            }\r\n        case 'FETCH_TEST_FLAG':\r\n            return{\r\n                ...state,\r\n                testbegins: action.payload1,\r\n                startedWriting: action.payload2,\r\n                testconducted: action.payload3,\r\n                LocaltestDone: action.payload4,\r\n                m_left: action.payload5,\r\n                s_left: action.payload6,\r\n                Iscoding: action.payload7,\r\n                codingsubmitted: false,\r\n                initialloading1:false\r\n            }\r\n        case 'INVALID_TEST_URL':\r\n            return{\r\n                ...state,\r\n                invalidUrl:true\r\n            }\r\n        case 'TEST_DONE_LOCAL':\r\n            return {\r\n                ...state,\r\n                LocaltestDone : true\r\n            }\r\n        case 'PROCEEDING_TO_TEST':\r\n            return{\r\n                ...state,\r\n                proceedingToTest:action.payload\r\n            }\r\n        case 'SWITCH_QUESTION':\r\n            return {\r\n                ...state,\r\n                activeQuestionIndex:action.payload\r\n            }\r\n        case 'FETCH_LOGGED_IN_TRAINEE':\r\n            return{\r\n                ...state,\r\n                initialloading2:false,\r\n                traineeDetails:action.payload\r\n            }\r\n        case 'UPDATE_TRAINEE_TEST_QUESTIONS':\r\n            return{\r\n                ...state,\r\n                questions:action.payload\r\n            }\r\n        case 'UPDATE_TRAINEE_TEST_ANSWERSHEET':\r\n            return{\r\n                ...state,\r\n                answers:action.payload\r\n            }\r\n        case 'CODING_DATA':\r\n            return{\r\n                ...state,\r\n                loadcoding: action.payload1,\r\n                codingData: action.payload2\r\n            }\r\n        case 'START_CODING':\r\n            return{\r\n                ...state,\r\n                codingStartTime: action.payload\r\n            }\r\n        case 'SUBMIT_CODING':\r\n            return{\r\n                ...state,\r\n                codingsubmitted: action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};","const initialState = {\n    NewQuestionModalState: false,\n    QuestionTableLoading : false, \n    QuestionTableData : [],\n    assessmentDuration: 0\n};\n\nexport default (state = initialState, action) => {\n    switch(action.type){\n        case 'CHANGE_CODING_QUESTION_MODAL_STATE':\n            return {\n                ...state,\n                NewQuestionModalState : action.payload,\n            }\n        case 'CHANGE_CODING_QUESTION_TABLE_LOADING_STATUS':\n            return {\n                ...state,\n                QuestionTableLoading : action.payload1,\n                QuestionTableData : action.payload2\n            }\n        default:\n            return state;\n    }\n};","import { combineReducers } from 'redux';\r\n\r\nimport openDrawer from './opendrawer';\r\nimport adminAction from './admin';\r\nimport userAction from './loggedinuser'\r\nimport trainerAction from './trainer';\r\nimport testAction from './test';\r\nimport conductTest from './conductTest';\r\nimport trainee from './trainee';\r\nimport coding from './coding';\r\n\r\nexport default combineReducers({\r\n    drawer: openDrawer,\r\n    admin: adminAction,\r\n    user: userAction,\r\n    trainer: trainerAction,\r\n    test: testAction,\r\n    conduct: conductTest,\r\n    trainee: trainee,\r\n    coding: coding\r\n});","export const TOOGLE_NAVIGATION = 'TOOGLE_NAVIGATION';\r\n\r\n","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport rootReducer from './reducers/index';\r\n\r\nconst initialState = {};\r\nconst middleware = [thunk];\r\n\r\n// Development\r\nconst store = createStore(\r\n    rootReducer, \r\n    initialState,\r\n    compose(\r\n        applyMiddleware(...middleware),\r\n        (window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__()) || compose\r\n    )\r\n);\r\n\r\n// Production\r\n// const store = createStore(\r\n//     rootReducer, \r\n//     initialState, \r\n//     applyMiddleware(...middleware)\r\n// );\r\n\r\nexport default store;","import React from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Button from '@material-ui/core/Button';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport { Icon } from 'antd';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    icon: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    heroContent: {\r\n        backgroundColor: theme.palette.background.paper,\r\n        padding: theme.spacing(8, 0, 6),\r\n    },\r\n    heroButtons: {\r\n        marginTop: theme.spacing(4),\r\n    },\r\n    cardGrid: {\r\n        paddingTop: theme.spacing(8),\r\n        paddingBottom: theme.spacing(8),\r\n    },\r\n    card: {\r\n        height: '100%',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n    },\r\n    cardMedia: {\r\n        paddingTop: '56.25%', // 16:9\r\n    },\r\n    cardContent: {\r\n        flexGrow: 1,\r\n    },\r\n    footer: {\r\n        backgroundColor: theme.palette.background.paper,\r\n        padding: theme.spacing(6),\r\n    },\r\n}));\r\n\r\nconst cards = [\r\n    {\r\n        title: 'MCQ / MSQ',\r\n        icon: 'file-done',\r\n        description: 'Create assessments automatically and manually with our huge question library',\r\n    },\r\n    {\r\n        title: 'Codeplayer',\r\n        icon: 'code',\r\n        description: 'Coding Platform and Online Judge Platform',\r\n    },\r\n    {\r\n        title: 'Auto Proctored',\r\n        icon: 'desktop',\r\n        description: 'Remote based hiring using AI and ML',\r\n    },\r\n    {\r\n        title: 'Invite Candidates',\r\n        icon: 'cloud-download',\r\n        description: 'Import and Export Candidates. Invite candidates',\r\n    },\r\n    {\r\n        title: 'Analysis',\r\n        icon: 'area-chart',\r\n        description: 'View detailed reports and in-depth analysis of each candidates performance',\r\n    },\r\n    {\r\n        title: 'Support',\r\n        icon: 'phone',\r\n        description: 'Support via phone and email and much more.',\r\n    },\r\n];\r\n\r\nexport default function Album() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <CssBaseline />\r\n      \r\n      <main>\r\n        <Container className={classes.cardGrid} maxWidth=\"md\">\r\n          {/* End hero unit */}\r\n          <Grid container spacing={4}>\r\n            {cards.map((card, index) => (\r\n              <Grid item key={index} xs={12} sm={6} md={4}>\r\n                <Card className={classes.card}>\r\n                  <CardContent className={classes.cardContent}>\r\n                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                        <Icon type={card.icon} />{'  '} {card.title}\r\n                    </Typography>\r\n                    <Typography>\r\n                      {card.description}\r\n                    </Typography>\r\n                  </CardContent>\r\n                </Card>\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n        </Container>\r\n      </main>\r\n    </React.Fragment>\r\n  );\r\n};","import React, { Fragment } from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Button from '@material-ui/core/Button';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Grid from '@material-ui/core/Grid';\r\n// import StarIcon from '@material-ui/icons/StarBorder';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Link from '@material-ui/core/Link';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport Box from '@material-ui/core/Box';\r\nimport { Col, Row, Icon } from 'antd';\r\n\r\nimport './home.css';\r\nimport logo from '../../../assets/gnius.png';\r\nimport Features from './Features';\r\n\r\nfunction Copyright() {\r\n    return (\r\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n            {'Copyright © '}\r\n            <Link color=\"inherit\" href=\"/\">\r\n                <b>gnius Talent Solution</b>\r\n            </Link>{' '}\r\n            {new Date().getFullYear()}\r\n            {'.'}\r\n        </Typography>\r\n    );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    '@global': {\r\n        ul: {\r\n            margin: 0,\r\n            padding: 0,\r\n            listStyle: 'none',\r\n        },\r\n    },\r\n    appBar: {\r\n        backgroundColor: '#ffe3fe',\r\n    },\r\n    toolbar: {\r\n        flexWrap: 'wrap',\r\n    },\r\n    toolbarTitle: {\r\n        flexGrow: 1,\r\n    },\r\n    link: {\r\n        margin: theme.spacing(1, 1.5),\r\n    },\r\n    heroContent: {\r\n        padding: theme.spacing(8, 0, 6),\r\n    },\r\n    cardHeader: {\r\n        backgroundColor: '#fdbaf8'\r\n    },\r\n    cardPricing: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'baseline',\r\n        marginBottom: theme.spacing(2),\r\n    },\r\n    footer: {\r\n        borderTop: `1px solid ${theme.palette.divider}`,\r\n        marginTop: theme.spacing(8),\r\n        paddingTop: theme.spacing(3),\r\n        paddingBottom: theme.spacing(3),\r\n        [theme.breakpoints.up('sm')]: {\r\n            paddingTop: theme.spacing(6),\r\n            paddingBottom: theme.spacing(6),\r\n        },\r\n    },\r\n}));\r\n\r\n\r\nconst footers = [\r\n    {\r\n        title: 'Company',\r\n        description: ['Team', 'Contact us', 'Location'],\r\n    },\r\n    {\r\n        title: 'Features',\r\n        description: ['Blog', 'Developer stuff'],\r\n    },\r\n    {\r\n        title: 'Resources',\r\n        description: ['Guide', 'Handbook', 'Knowledge Base'],\r\n    },\r\n    {\r\n        title: 'Legal',\r\n        description: ['Privacy policy', 'Terms of use', 'Refund Policy'],\r\n    },\r\n];\r\n\r\nexport default function Pricing() {\r\n  const classes = useStyles();\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <CssBaseline />\r\n            <AppBar position=\"static\" color=\"default\" elevation={0} className={classes.appBar}>\r\n                <Toolbar className={classes.toolbar}>\r\n                    <Typography variant=\"h6\" color=\"inherit\" noWrap className={classes.toolbarTitle}>\r\n                        <img src={logo} alt=\"company logo\" className=\"logo\" />\r\n                    </Typography>\r\n                    <Button href=\"/auth/login\" color=\"primary\" variant=\"outlined\" className={classes.link}>\r\n                        <Icon type=\"lock\" /> {'   '}Recruiter Login\r\n                    </Button>\r\n                </Toolbar>\r\n            </AppBar>\r\n\r\n            <Container maxWidth=\"sm\" component=\"main\" className={classes.heroContent}>\r\n                <Typography component=\"h1\" variant=\"h2\" align=\"center\" color=\"textPrimary\" gutterBottom>\r\n                    Features\r\n                </Typography>\r\n                \r\n                <Typography variant=\"h5\" align=\"center\" color=\"textSecondary\" component=\"p\">\r\n                An Online Pre Employment Assessment Software to help organizations in their end to end recruitment and to select the right candidate based on their skill.\r\n                </Typography>\r\n            </Container>\r\n\r\n            <Features />\r\n\r\n            {/* Hero unit */}\r\n            <Container maxWidth=\"sm\" component=\"main\" className={classes.heroContent}>\r\n                <Typography component=\"h1\" variant=\"h2\" align=\"center\" color=\"textPrimary\" gutterBottom>\r\n                    Pricing\r\n                </Typography>\r\n            </Container>\r\n\r\n            <Container maxWidth=\"sm\" component=\"main\" className={classes.heroContent}>\r\n                <Typography component=\"h5\" variant=\"h5\" align=\"center\" color=\"textPrimary\" gutterBottom>\r\n                    Contact us at contact@gnius.in for pricing\r\n                </Typography>\r\n            </Container>\r\n            {/* End hero unit */}\r\n\r\n            \r\n            \r\n            \r\n            {/* Footer */}\r\n            <Container maxWidth=\"md\" component=\"footer\" className={classes.footer}>\r\n                <Grid container spacing={4} justify=\"space-evenly\">\r\n                    {footers.map((footer) => (\r\n                        <Grid item xs={6} sm={3} key={footer.title}>\r\n                            <Typography variant=\"h6\" color=\"textPrimary\" gutterBottom>\r\n                                {footer.title}\r\n                            </Typography>\r\n                            <ul>\r\n                                {footer.description.map((item) => (\r\n                                    <li key={item}>\r\n                                        <Link href=\"#\" variant=\"subtitle1\" color=\"textSecondary\">\r\n                                            {item}\r\n                                        </Link>\r\n                                    </li>\r\n                                ))}\r\n                            </ul>\r\n                        </Grid>\r\n                    ))}\r\n                </Grid>\r\n                <Box mt={5}>\r\n                    <Copyright />\r\n                </Box>\r\n            </Container>\r\n            {/* End footer */}\r\n        </React.Fragment>\r\n    );\r\n};","const envoirnment = process.env.NODE_ENV;\r\n\r\nconst apis = {\r\n    BASE_LOCAL_URL:envoirnment==='development'?'http://localhost:3000':'',\r\n    BASE : envoirnment==='development'?'http://localhost:5000':'',\r\n    LOGIN : \"/api/v1/login/\",\r\n    GETDETAILSUSER : \"/api/v1/user/details\",\r\n    UPDATE_USER: '/api/v1/user/update/details',\r\n    GET_ALL_TRAINER :'/api/v1/admin/trainer/details/all',\r\n    GET_SINGLE_TRAINER_DETAILS : '/api/v1/admin/trainer/details',\r\n    CREATE_TRAINER : '/api/v1/admin/trainer/create',\r\n    DELETE_TRAINER : '/api/v1/admin/trainer/remove',\r\n    \r\n    GET_ALL_SUBJECTS : '/api/v1/subject/details/all',\r\n    GET_SINGLE_SUBJECT_DETAILS : '/api/v1/subject/details',\r\n    CREATE_SUBJECT : '/api/v1/subject/create',\r\n    GET_ALL_QUESTIONS : '/api/v1/questions/details/all',\r\n    DELETE_QUESTION:'/api/v1/questions/delete',\r\n    FETCH_SINGLE_QUESTION:'/api/v1/questions/details',\r\n    CREATE_QUESTIONS :'/api/v1/questions/create',\r\n    FILE_UPLOAD:'/api/v1/upload',\r\n    \r\n    CREATE_TEST : '/api/v1/test/create',\r\n    GET_ALL_TESTS:'/api/v1/test/details/all',\r\n    GET_SINGLE_TEST:'/api/v1/test/trainer/details',\r\n    REGISTER_TRAINEE_FOR_TEST:'/api/v1/trainee/enter',\r\n    RESEND_TRAINER_REGISTRATION_LINK: '/api/v1/trainee/resend/testlink',\r\n    GET_SINGLE_TEST_DETAILS_BASIC:'/api/v1/test/basic/details',\r\n    \r\n    STOP_REGISTRATION :'/api/v1/trainer/registration/stop',\r\n    START_TEST_BY_TRAINER:'/api/v1/test/begin',\r\n    GET_TEST_CANDIDATES :'/api/v1/test/candidates',\r\n    GET_TEST_QUESTIONS :'/api/v1/test/questions',\r\n    FETCH_TRAINEE_DETAILS:'/api/v1/trainee/details',    \r\n    FETCH_TRAINEE_TEST_DETAILS:'/api/v1/trainee/flags',\r\n    \r\n    PROCEED_TO_TEST:'/api/v1/trainee/answersheet',\r\n    FETCH_TRAINEE_TEST_QUESTION:'/api/v1/trainee/paper/questions',\r\n    FETCH_TRAINEE_TEST_ANSWERSHEET:'/api/v1/trainee/chosen/options',\r\n    UPDATE_ANSWERS:'/api/v1/trainee/update/answer',\r\n    END_TEST : '/api/v1/trainee/end/test',\r\n    FETCH_OWN_RESULT:'/api/v1/final/results',\r\n    FETCH_SINGLE_QUESTION_BY_TRAINEE:'/api/v1/trainee/get/question',\r\n    END_TEST_BY_TRAINER:'/api/v1/test/end',\r\n    FEEDBACK_STATUS_CHECK:'/api/v1/trainee/feedback/status',\r\n    GIVE_FEEDBACK:'/api/v1/trainee/feedback',\r\n    \r\n    GET_STATS:'/api/v1/test/candidates/details',\r\n    GET_EXCEL:'/api/v1/trainer/result/download',\r\n    MAX_MARKS_FETCH:'/api/v1/test/max/marks',\r\n    GET_FEEDBACKS:'/api/v1/trainer/get/feedbacks',\r\n    CHECK_TEST_NAME: '/api/v1/test/new/name/check',\r\n\r\n    IMPORT_CANDIDATES: '/api/v1/test/candidates/import',\r\n    GET_JOB_DETAILS:'/api/v1/trainee/jobpost/details',\r\n    \r\n    CREATE_CODING_QUESTION: '/api/v1/coding/create/question',\r\n    LIST_CODING_QUESTION: '/api/v1/coding/list/question',\r\n    GET_CODING_QUESTION_DETAILS: '/api/v1/coding/list/testcase',\r\n    CREATE_CODING_TESTCASE: '/api/v1/coding/create/testcase',\r\n    GET_CODING_QUESTION_DATA: '/api/v1/trainee/coding/contest/question',\r\n    POST_SUBMISSION: '/api/v1/trainee/coding/contest/submission',\r\n\r\n    CODING_SECTION_START: '/api/v1/trainee/coding/start/section',\r\n    CODING_SECTION_SUBMIT: '/api/v1/trainee/coding/submit/section',\r\n    CODING_SECTION_GET: '/api/v1/trainee/coding/section/details',\r\n    CODING_SUBMISSION_GET: '/api/v1/test/leaderboard',\r\n    UPLOAD_RESUME: '/api/v1/upload/resume',\r\n    GET_QUESTION_STAT: '/api/v1/stats/sub',\r\n    GET_TEST_STAT: '/api/v1/stats/test',\r\n    ADD_REFER: '/api/v1/refer/add',\r\n    LIST_REFER: '/api/v1/refer/list',\r\n    RESET_PASSWORD: '/api/v1/user/update/password'\r\n};\r\n\r\nexport default apis;\r\n\r\n/*\r\nconst apis={\r\n    BASE_LOCAL_URL:'http://localhost:3000',\r\n    BASE : \"http://localhost:5000\",\r\n    LOGIN : \"/api/v1/login/\",\r\n    GETDETAILSUSER : \"/api/v1/user/details\",\r\n    GET_ALL_TRAINER :'/api/v1/admin/trainer/details/all',\r\n    GET_SINGLE_TRAINER_DETAILS : '/api/v1/admin/trainer/details',\r\n    CREATE_TRAINER : '/api/v1/admin/trainer/create',\r\n    DELETE_TRAINER : '/api/v1/admin/trainer/remove',\r\n    GET_ALL_SUBJECTS : '/api/v1/subject/details/all',\r\n    GET_SINGLE_SUBJECT_DETAILS : '/api/v1/subject/details',\r\n    CREATE_SUBJECT : '/api/v1/subject/create',\r\n    GET_ALL_QUESTIONS : '/api/v1/questions/details/all',\r\n    DELETE_QUESTION:'/api/v1/questions/delete',\r\n    FETCH_SINGLE_QUESTION:'/api/v1/questions/details',\r\n    CREATE_QUESTIONS :'/api/v1/questions/create',\r\n    FILE_UPLOAD:'/api/v1/upload',\r\n    CREATE_TEST : '/api/v1/test/create',\r\n    GET_ALL_TESTS:'/api/v1/test/details/all',\r\n    GET_SINGLE_TEST:'/api/v1/test/trainer/details',\r\n    REGISTER_TRAINEE_FOR_TEST:'/api/v1/trainee/enter',\r\n    RESEND_TRAINER_REGISTRATION_LINK: '/api/v1/trainee/resend/testlink',\r\n    GET_SINGLE_TEST_DETAILS_BASIC:'/api/v1/test/basic/details',\r\n    STOP_REGISTRATION :'/api/v1/trainer/registration/stop',\r\n    START_TEST_BY_TRAINER:'/api/v1/test/begin',\r\n    GET_TEST_CANDIDATES :'/api/v1/test/candidates',\r\n    GET_TEST_QUESTIONS :'/api/v1/test/questions',\r\n    FETCH_TRAINEE_DETAILS:'/api/v1/trainee/details',\r\n    FETCH_TRAINEE_TEST_DETAILS:'/api/v1/trainee/flags',\r\n    PROCEED_TO_TEST:'/api/v1/trainee/answersheet',\r\n    FETCH_TRAINEE_TEST_QUESTION:'/api/v1/trainee/paper/questions',\r\n    FETCH_TRAINEE_TEST_ANSWERSHEET:'/api/v1/trainee/chosen/options',\r\n    UPDATE_ANSWERS:'/api/v1/trainee/update/answer',\r\n    END_TEST : '/api/v1/trainee/end/test',\r\n    FETCH_OWN_RESULT:'/api/v1/final/results',\r\n    FETCH_SINGLE_QUESTION_BY_TRAINEE:'/api/v1/trainee/get/question',\r\n    END_TEST_BY_TRAINER:'/api/v1/test/end',\r\n    FEEDBACK_STATUS_CHECK:'/api/v1/trainee/feedback/status',\r\n    GIVE_FEEDBACK:'/api/v1/trainee/feedback',\r\n    GET_STATS:'/api/v1/test/candidates/details',\r\n    GET_EXCEL:'/api/v1/trainer/result/download',\r\n    MAX_MARKS_FETCH:'/api/v1/test/max/marks'\r\n}*/","import auth from './AuthServices';\r\nimport apis from './Apis';\r\nconst axios = require('axios');\r\n\r\nexport const SecureGet = (p)=>{\r\n    return axios({\r\n        method:'get',\r\n        baseURL : apis.BASE,\r\n        ...p,\r\n        params: {\r\n            ...p.params,\r\n            Token : auth.retriveToken()\r\n        }\r\n    })\r\n}\r\n\r\nexport const Get =(p)=>{\r\n    return axios({\r\n        method:'get',\r\n        baseURL : apis.BASE,\r\n        ...p,\r\n    })\r\n}\r\n\r\n\r\nexport const SecurePost =(p)=>{\r\n    return axios({\r\n        method:'post',\r\n        baseURL : apis.BASE,\r\n        ...p,\r\n        params: {\r\n            ...p.params,\r\n            Token : auth.retriveToken()\r\n        }\r\n    })\r\n}\r\n\r\nexport const Post =(p)=>{\r\n    return axios({\r\n        baseURL : apis.BASE,\r\n        method:'post',\r\n        ...p,\r\n    })\r\n}\r\n\r\n\r\n\r\n","import apis from \"./Apis\";\r\nimport { Get, Post} from './axiosCall';\r\n\r\n\r\nclass AuthService{\r\n    constructor(){\r\n        this.token=null;\r\n        // console.log(apis.BASE);\r\n        // console.log(apis.BASE_LOCAL_URL);\r\n    }\r\n    \r\n    retriveToken = ()=>{\r\n        return localStorage.getItem('Token')\r\n    }\r\n\r\n    storeToken = (t)=>{\r\n        localStorage.setItem('Token', t);\r\n    }\r\n\r\n    deleteToken = ()=>{\r\n        localStorage.removeItem('Token');\r\n    }\r\n\r\n    LoginAuth = (u,p)=>{\r\n        return Post({\r\n            url:apis.LOGIN,\r\n            data:{\r\n                emailid : u,\r\n                password : p\r\n            }\r\n        })    \r\n    }\r\n\r\n    FetchAuth = (t)=>{\r\n        return Get({\r\n            url : apis.GETDETAILSUSER,\r\n            params : {\r\n                Token : t\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default new AuthService();\r\n","import auth from '../services/AuthServices';\r\n\r\nexport const login = (details)=> dispatch =>{\r\n    dispatch({\r\n       type : 'LOGIN',\r\n       payload : details\r\n    });\r\n};\r\n\r\n\r\nexport const logout = () => dispatch => {\r\n    dispatch({\r\n        type: 'LOGOUT',\r\n        payload1: 'Manual Logout'\r\n    });\r\n};\r\n\r\n\r\nexport const wakeUp = ()=> dispatch =>{\r\n    var t = auth.retriveToken() || null;\r\n    if(t && t!=='undefined'){\r\n        auth.wakeUp(t).then((res) => {\r\n            // console.log(`Wakeup success ${res}`)\r\n            dispatch({\r\n                type: 'LOGIN',\r\n                payload1: t,\r\n                payload2: res.data.user\r\n            });\r\n        })\r\n        .catch((err) => {\r\n            // console.log(`Wakeup error ${err}`)\r\n            if (err) {\r\n                dispatch({\r\n                    type: 'LOGOUT',\r\n                    payload1: 'Token Expired'\r\n                });\r\n            }\r\n        });\r\n    }\r\n    else{\r\n        dispatch({\r\n            type: 'LOGOUT',\r\n            payload1: 'No Token'\r\n        });\r\n    }\r\n}","import { Modal } from 'antd';\r\n\r\nexport default function Alert(s='warning',h,b) {\r\n    if(s==='success'){\r\n        return (\r\n            Modal.success({\r\n                title: h,\r\n                content:b,\r\n            })\r\n        )\r\n    }\r\n    else if(s==='error'){\r\n        return (\r\n            Modal.error({\r\n                title: h,\r\n                content:b,\r\n            })\r\n        )\r\n    }\r\n    else{\r\n        return (\r\n            Modal.warning({\r\n                title: h,\r\n                content:b,\r\n            })\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Paper from '@material-ui/core/Paper';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst Copyright = () => {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        Your Website\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: '100vh',\n  },\n  image: {\n    backgroundImage: 'url(https://res.cloudinary.com/gniusedu/image/upload/v1627711688/Welcome_Back_1_dmmkxu.png)',\n    backgroundRepeat: 'no-repeat',\n    backgroundColor:\n      theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\n    backgroundSize: 'cover',\n    backgroundPosition: 'center',\n  },\n  paper: {\n    margin: theme.spacing(8, 4),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center'\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nexport default function SignInSide(props) {\n  const classes = useStyles();\n\n  return (\n    <Grid container component=\"main\" className={classes.root}>\n      <CssBaseline />\n      <Grid item xs={false} sm={4} md={7} className={classes.image} />\n      <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\n        <div className={classes.paper}>\n          \n          <Avatar className={classes.avatar}>\n            <LockOutlinedIcon />\n          </Avatar>\n\n          <Typography component=\"h1\" variant=\"h5\">\n            Recruiter Login\n          </Typography>\n          \n          {props.children}\n          \n        </div>\n      </Grid>\n    </Grid>\n  );\n};\n","import React from \"react\";\r\nimport { Form, Input, Icon, Button } from 'antd';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { login, logout } from '../../../actions/loginAction';\r\nimport auth from '../../../services/AuthServices';\r\nimport Alert from '../../common/alert';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nimport SignIn from './SignInSide';\r\n\r\nimport './login.css';\r\n\r\nclass Login extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            isLoggedIn :false\r\n        }\r\n    }\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        this.props.form.validateFields((err, values) => {\r\n            if (!err) {\r\n                // console.log('Received values of form: ', values);\r\n                auth\r\n                .LoginAuth(values.email,values.password)\r\n                .then((response)=>{\r\n                    // console.log(response);\r\n                    if(response.data.success){\r\n                        this.props.login(response.data.user)\r\n                        auth.storeToken(response.data.token);\r\n                        this.setState({\r\n                            isLoggedIn : true\r\n                        })\r\n                    }\r\n                    else{\r\n                        return Alert('error','Error!', response.data.message);\r\n                    }\r\n                })\r\n                .catch((error)=>{\r\n                    // console.log(error);\r\n                    return Alert('error','Error!','Server Error');\r\n                })              \r\n            }\r\n        });\r\n    };\r\n\r\n    render(){\r\n        const { getFieldDecorator } = this.props.form;\r\n        if(this.state.isLoggedIn){\r\n            return <Redirect to={this.props.user.userOptions[0].link} />\r\n        }\r\n        else{\r\n            return(\r\n                <SignIn>\r\n                        <Form\r\n                            onSubmit={this.handleSubmit}\r\n                            autoComplete=\"off\"\r\n                        >\r\n                            <Form.Item label=\"Email\" hasFeedback>\r\n                                {getFieldDecorator('email', {\r\n                                    rules: [\r\n                                        {\r\n                                            type: 'email',\r\n                                            message: 'The input is not valid E-mail!',\r\n                                        },\r\n                                        {\r\n                                            required: true,\r\n                                            message: 'Please input your E-mail!',\r\n                                        },\r\n                                    ],\r\n                                })(<Input \r\n                                    prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                                    placeholder=\"Email\"/>)}\r\n                            </Form.Item>\r\n                            \r\n                            <Form.Item label=\"Password\" hasFeedback>\r\n                                {getFieldDecorator('password', {\r\n                                    rules: [\r\n                                        { \r\n                                            required: true, message: 'Please input your Password!' \r\n                                        }\r\n                                    ],\r\n                                })(\r\n                                    <Input.Password\r\n                                    prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                                    placeholder=\"Password\"\r\n                                    />,\r\n                                )}\r\n                            </Form.Item>\r\n\r\n                            <Form.Item>\r\n                                <Button type=\"primary\" htmlType=\"submit\" block>\r\n                                    Login\r\n                                </Button>\r\n                            </Form.Item>\r\n                        </Form>\r\n                </SignIn>\r\n            );\r\n        };\r\n    };\r\n};\r\n\r\nconst LoginForm = Form.create({ name: 'login' })(Login);\r\n\r\nconst mapStateToProps = state => ({\r\n    user : state.user\r\n});\r\n\r\nexport default connect(mapStateToProps,{\r\n    login, \r\n    logout\r\n})(LoginForm);","import React from 'react';\r\nimport './header.css'; \r\nimport main from './logo.png';\r\n\r\nfunction HomepageHeader(props) {\r\n    return (\r\n        <div>\r\n            <div className=\"header-container-2\">\r\n                <img src={main} alt=\"company logo\" className=\"logo\" />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HomepageHeader;","import React from 'react';\r\nimport './homepage.css';\r\nimport { connect } from 'react-redux';\r\nimport Login from '../login/login';\r\nimport HomepageHeader from '../header/header'; \r\nimport auth from '../../../services/AuthServices';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\n\r\nfunction Homepage(props) {\r\n  if(auth.retriveToken() && auth.retriveToken()!=='undefined'){\r\n    // console.log('Logged In');\r\n    return <Redirect to='/user/home' />\r\n  }\r\n  else{\r\n    // console.log('Not Logged In');\r\n    return (\r\n      <div>\r\n          <div className=\"parallax\">\r\n            <HomepageHeader/>\r\n            <Login />\r\n          </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  user : state.user\r\n});\r\n\r\nexport default connect(mapStateToProps,{\r\n  \r\n})(Homepage);\r\n","import apis from '../services/Apis';\r\nimport Alert from '../components/common/alert';\r\nimport { SecureGet } from '../services/axiosCall';\r\n\r\nexport const ChangeTrainerModalState = (d1,d2,d3)=> dispatch =>{\r\n    if(d3==='Save Changes'){\r\n        SecureGet({\r\n            url : `${apis.GET_SINGLE_TRAINER_DETAILS}/${d2}`\r\n        }).then((response)=>{\r\n            // console.log(response);\r\n            if(response.data.success){\r\n                dispatch({\r\n                    type : 'CHANGE_TRAINER_MODAL_STATE',\r\n                    payload1 : true,\r\n                    payload2 : d2,\r\n                    payload3 : 'Save Changes',\r\n                    payload4: {\r\n                        ...response.data.data[0],\r\n                        contact :response.data.data[0].contact.slice(3),\r\n                        prefix:response.data.data[0].contact.slice(0,3),\r\n                    }\r\n                })\r\n            }\r\n            else{\r\n                return Alert('warning','Warning!',response.data.message);\r\n            }\r\n        }).catch((error)=>{\r\n            return Alert('error','Error!','Server Error');\r\n        })\r\n    }\r\n    else{\r\n        dispatch({\r\n            type : 'CHANGE_TRAINER_MODAL_STATE',\r\n            payload1 : d1,\r\n            payload2 : d2,\r\n            payload3 : d3,\r\n            payload4: {\r\n                name : null,\r\n                emailid:null,\r\n                contact :null,\r\n                prefix:null,\r\n                password:null,\r\n                confirmpassword : null\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const ChangeTrainerConfirmDirty = (d)=> dispatch =>{\r\n    dispatch({\r\n       type : 'CHANGE_TRAINER_FORM_CONFIRMDIRTY',\r\n       payload : d\r\n    })\r\n}\r\n\r\n\r\nexport const ChangeTrainerSearchText = (d)=> dispatch =>{\r\n    dispatch({\r\n       type : 'CHANGE_TRAINER_SEARCH_TEXT',\r\n       payload : d\r\n    })\r\n}\r\n\r\nexport const ChangeTrainerTableData = ()=> dispatch =>{\r\n    dispatch({\r\n        type : 'CHANGE_TRAINER_TABLE_LOADING_STATUS',\r\n        payload1 : true,\r\n        payload2 : []\r\n    })\r\n    SecureGet({\r\n        url:  `${apis.GET_ALL_TRAINER}`\r\n    }).then((response)=>{\r\n        // console.log(response);\r\n        if(response.data.success){\r\n            dispatch({\r\n                type : 'CHANGE_TRAINER_TABLE_LOADING_STATUS',\r\n                payload1 : false,\r\n                payload2 : response.data.data\r\n            })\r\n        }\r\n        else{\r\n            Alert('error','Error!',response.data.message);\r\n            dispatch({\r\n                type : 'CHANGE_TRAINER_TABLE_LOADING_STATUS',\r\n                payload1 : false,\r\n                payload2 : []\r\n            })\r\n        }\r\n      }).catch((error)=>{\r\n        Alert('error','Error!','Server Error');\r\n        dispatch({\r\n            type : 'CHANGE_TRAINER_TABLE_LOADING_STATUS',\r\n            payload1 : false,\r\n            payload2 : []\r\n        })\r\n    })\r\n}\r\n\r\nexport const ChangeSubjectModalState = (d1,d2,d3)=> dispatch =>{\r\n    if(d3==='Save Changes'){\r\n        SecureGet({\r\n            url : `${apis.GET_SINGLE_SUBJECT_DETAILS}/${d2}`\r\n        }).then((response)=>{\r\n            if(response.data.success){\r\n                dispatch({\r\n                    type : 'CHANGE_SUBJECT_MODAL_STATE',\r\n                    payload1 : true,\r\n                    payload2 : d2,\r\n                    payload3 : 'Save Changes',\r\n                    payload4: response.data.data[0]\r\n                })\r\n            }\r\n            else{\r\n                return Alert('warning','Warning!',response.data.message);\r\n            }\r\n        }).catch((error)=>{\r\n            return Alert('error','Error!','Server Error');\r\n        })\r\n    }\r\n    else{\r\n        dispatch({\r\n            type : 'CHANGE_SUBJECT_MODAL_STATE',\r\n            payload1 : d1,\r\n            payload2 : d2,\r\n            payload3 : d3,\r\n            payload4: {\r\n                topic : null\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const ChangeSubjectConfirmDirty = (d)=> dispatch =>{\r\n    dispatch({\r\n       type : 'CHANGE_SUBJECT_FORM_CONFIRMDIRTY',\r\n       payload : d\r\n    })\r\n}\r\n\r\n\r\nexport const ChangeSubjectSearchText = (d)=> dispatch =>{\r\n    dispatch({\r\n       type : 'CHANGE_SUBJECT_SEARCH_TEXT',\r\n       payload : d\r\n    })\r\n}\r\n\r\nexport const ChangeSubjectTableData = (d)=> dispatch =>{\r\n    // console.log('fetchng subjects');\r\n    dispatch({\r\n       type : 'CHANGE_SUBJECT_TABLE_LOADING_STATUS',\r\n       payload1 : true,\r\n       payload2 :[]\r\n    })\r\n    SecureGet({\r\n        url:  `${apis.GET_ALL_SUBJECTS}`\r\n    }).then((response)=>{\r\n        // console.log(response);\r\n        if(response.data.success){\r\n            dispatch({\r\n                type : 'CHANGE_SUBJECT_TABLE_LOADING_STATUS',\r\n                payload1 : false,\r\n                payload2 : response.data.data\r\n            })\r\n        }\r\n        else{\r\n            Alert('error','Error!',response.data.message);\r\n            dispatch({\r\n                type : 'CHANGE_SUBJECT_TABLE_LOADING_STATUS',\r\n                payload1 : false,\r\n                payload2 : []\r\n            })\r\n        }\r\n      }).catch((error)=>{\r\n        Alert('error','Error!','Server Error');\r\n        dispatch({\r\n            type : 'CHANGE_SUBJECT_TABLE_LOADING_STATUS',\r\n            payload1 : false,\r\n            payload2 : []\r\n        })\r\n    })\r\n\r\n}\r\n","import React, { Component } from 'react'\r\nimport './newtrainer.css';\r\nimport {\r\n    Form,\r\n    Input,\r\n    Button,\r\n    Select,\r\n    Switch,\r\n    Icon,\r\n    Upload\r\n} from 'antd';\r\n\r\nimport { SecurePost } from '../../../services/axiosCall';\r\nimport apis from '../../../services/Apis';\r\nimport auth from '../../../services/AuthServices';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n    ChangeTrainerConfirmDirty,\r\n    ChangeTrainerModalState,\r\n    ChangeTrainerTableData\r\n} from '../../../actions/adminAction';\r\nimport Alert from '../../../components/common/alert';\r\n\r\nconst { Option } = Select;\r\nconst { TextArea } = Input;\r\n\r\nclass NewTrainer extends Component {\r\n    state = {\r\n        checked: this.props.admin.trainerdetails.status,\r\n        logo: null,\r\n        submitDisabled:false\r\n    };\r\n\r\n    toggle = () => {\r\n        this.setState({\r\n            checked: !this.state.checked,\r\n        });\r\n    };\r\n    \r\n    compareToFirstPassword = (rule, value, callback) => {\r\n        const form = this.props.form;\r\n        if (value && value !== form.getFieldValue('password')) {\r\n            callback('passwords are not same !');\r\n        } else {\r\n            callback();\r\n        }\r\n    };\r\n\r\n    validateToNextPassword = (rule, value, callback) => {\r\n        const form = this.props.form;\r\n        if (value && this.props.admin.TrainerconfirmDirty) {\r\n            form.validateFields(['confirm'], { force: true });\r\n        }\r\n        callback();\r\n    };\r\n\r\n    changeqImage = (f)=>{\r\n        this.setState((ps,pp)=>{\r\n            return({\r\n                logo:(f.link ?`${f.link}`:null),\r\n                submitDisabled:false\r\n            });\r\n        });\r\n    };\r\n\r\n    upl=()=>{\r\n        this.setState({\r\n            submitDisabled:true\r\n        });\r\n    };\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        this.props.form.validateFieldsAndScroll((err, values) => {\r\n            if (!err) {\r\n                // console.log('Received values of form: ', values);\r\n                SecurePost({\r\n                    url: `${apis.CREATE_TRAINER}`,\r\n                    data: {\r\n                        _id: this.props.admin.trainerId,\r\n                        name: values.name,\r\n                        password: values.password,\r\n                        emailid: values.emailid,\r\n                        contact: values.prefix + values.contact,\r\n                        status: this.state.checked,\r\n                        organisation: values.organisation,\r\n                        avatar: this.state.logo,\r\n                        bio: values.bio\r\n                    }\r\n                })\r\n                .then((response) => {\r\n                    if (response.data.success) {\r\n                        this.props.ChangeTrainerModalState(false, null, 'Register');\r\n                        Alert('success', 'Success', response.data.message);\r\n                        this.props.ChangeTrainerTableData();\r\n                    }\r\n                    else {\r\n                        // console.log(response.data);\r\n                        this.props.ChangeTrainerModalState(false, null, 'Register');\r\n                        return Alert('warning', 'Warning!', response.data.message);\r\n                    }\r\n                }).catch((error) => {\r\n                    this.props.ChangeTrainerModalState(false, null, 'Register');\r\n                    return Alert('error', 'Error!', 'Server Error');\r\n                });\r\n            }\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { getFieldDecorator } = this.props.form;\r\n\r\n        const prefixSelector = getFieldDecorator('prefix', {\r\n            initialValue: this.props.admin.trainerdetails.prefix || '+91',\r\n            rules: [{ required: true, message: 'Please enter contact no prefix' }],\r\n          })(\r\n            <Select style={{ width: 70 }}>\r\n              <Option value=\"+91\">+91</Option>\r\n            </Select>,\r\n        );\r\n\r\n        var QuestionImageprops = {\r\n            name: 'file',\r\n            action: `${apis.BASE}${apis.FILE_UPLOAD}?Token=${auth.retriveToken()}`,\r\n            listType: 'picture',\r\n        };\r\n\r\n        return (\r\n            <div className=\"register-trainer-form\">\r\n                <div className=\"register-trainer-form-body\">\r\n                    <Form  onSubmit={this.handleSubmit} autoComplete=\"off\">\r\n                        <Form.Item label=\"Name\" hasFeedback className=\"input-admin-trainer\">\r\n                            {getFieldDecorator('name', {\r\n                                initialValue : this.props.admin.trainerdetails.name,\r\n                                rules: [{ required: true, message: 'Please input your name!', whitespace: true }],\r\n                            })(<Input />)}\r\n                        </Form.Item>\r\n                    \r\n                        { !this.props.admin.trainerId ? <Form.Item label=\"E-mail\" hasFeedback className=\"input-admin-trainer\">\r\n                            {getFieldDecorator('emailid', {\r\n                                initialValue : this.props.admin.trainerdetails.emailid,\r\n                                rules: [\r\n                                    {\r\n                                        type: 'email',\r\n                                        message: 'The input is not valid E-mail!',\r\n                                    },\r\n                                    {\r\n                                        required: true,\r\n                                        message: 'Please input your E-mail!',\r\n                                    },\r\n                                ],\r\n                            })(<Input />)}\r\n                        </Form.Item> : null }\r\n\r\n                        <Form.Item label=\"Phone Number\" className=\"input-admin-trainer\">\r\n                            {getFieldDecorator('contact', {\r\n                                initialValue : this.props.admin.trainerdetails.contact,\r\n                                rules: [\r\n                                    { \r\n                                        required: true, \r\n                                        message: 'Please input your phone number!' \r\n                                    },\r\n                                    {\r\n                                        len:10,\r\n                                        message:'Contact number must be 10 digit long'\r\n                                    }],\r\n                            })(<Input addonBefore={prefixSelector} min={10} max={10} />)}\r\n                        </Form.Item>\r\n\r\n                        { !this.props.admin.trainerId ? <div><Form.Item label=\"Password\" hasFeedback className=\"input-admin-trainer\">\r\n                                {getFieldDecorator('password', {\r\n                                    initialValue : this.props.admin.trainerdetails.password,\r\n                                    rules: [\r\n                                        {\r\n                                            required: true,\r\n                                            message: 'Please input your password!',\r\n                                        },\r\n                                        {\r\n                                            validator: this.validateToNextPassword,\r\n                                        },\r\n                                    ],\r\n                                })(<Input.Password />)}\r\n                            </Form.Item>\r\n                        \r\n                            <Form.Item label=\"Confirm Password\" hasFeedback className=\"input-admin-trainer\">\r\n                                {getFieldDecorator('confirm', {\r\n                                    initialValue : this.props.admin.trainerdetails.confirmpassword,\r\n                                    rules: [\r\n                                    {\r\n                                        required: true,\r\n                                        message: 'Please confirm your password!',\r\n                                    },\r\n                                    {\r\n                                        validator: this.compareToFirstPassword,\r\n                                    },\r\n                                    ],\r\n                                })(<Input.Password onBlur={this.handleConfirmBlur} />)}\r\n                            </Form.Item>\r\n                        </div> : null}\r\n                        \r\n                        <Form.Item label=\"status\" className=\"input-admin-trainer\">\r\n                            {getFieldDecorator('status')(\r\n                                <Switch\r\n                                    checkedChildren={<Icon type=\"check\" />}\r\n                                    unCheckedChildren={<Icon type=\"close\" />}\r\n                                    checked={this.state.checked}\r\n                                    onChange={this.toggle}\r\n                                />\r\n                            )}\r\n                        </Form.Item>\r\n                        \r\n                        {/* Organisation Details */}\r\n                        <Form.Item label=\"Organisation Name\" hasFeedback className=\"input-admin-trainer\">\r\n                            {getFieldDecorator('organisation', {\r\n                                initialValue : this.props.admin.trainerdetails.organisation,\r\n                                rules: [{ required: true, message: 'Please input organisation name!', whitespace: true }],\r\n                            })(<Input />)}\r\n                        </Form.Item>\r\n\r\n                        <Form.Item label=\"Write About Your Organisation\" className=\"input-admin-trainer\" hasFeedback>\r\n                            {getFieldDecorator('bio', {\r\n                                initialValue : this.props.admin.trainerdetails.bio,\r\n                                rules: [{ required: true, message: 'Please Enter Company Details or About!' }],\r\n                            })(\r\n                                <TextArea rows={5} />\r\n                            )}\r\n                        </Form.Item>\r\n\r\n                        <Form.Item label=\"Organisation Logo\" className=\"input-admin-trainer\">\r\n                            <Upload \r\n                                {...QuestionImageprops}\r\n                                beforeUpload={this.upl}\r\n                                onRemove={this.changeqImage}\r\n                                onSuccess={this.changeqImage}\r\n                            >\r\n                                <Button>\r\n                                    <Icon type=\"upload\" /> Upload\r\n                                </Button>\r\n                            </Upload>\r\n                        </Form.Item>\r\n\r\n                        <Form.Item>\r\n                            <Button type=\"primary\" htmlType=\"submit\" block>\r\n                                {this.props.admin.Trainermode}\r\n                            </Button>\r\n                        </Form.Item>\r\n                    </Form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    admin : state.admin\r\n});\r\n\r\nconst NewTrainerForm = Form.create({ name: 'register' })(NewTrainer);\r\n\r\nexport default connect(mapStateToProps,{\r\n    ChangeTrainerConfirmDirty,\r\n    ChangeTrainerModalState,\r\n    ChangeTrainerTableData\r\n})(NewTrainerForm);\r\n\r\n","import React, { Component } from 'react';\r\nimport { Table, Input, Button, Icon, Typography, Divider, Modal, Popconfirm } from 'antd';\r\nimport Highlighter from 'react-highlight-words';\r\nimport { connect } from 'react-redux';\r\nimport { \r\n    ChangeTrainerSearchText,\r\n    ChangeTrainerTableData,\r\n    ChangeTrainerModalState\r\n} from '../../../actions/adminAction';\r\nimport './alltrainer.css'\r\nimport Alert from '../../../components/common/alert';\r\nimport {SecurePost} from '../../../services/axiosCall';\r\nimport apis from '../../../services/Apis';\r\nimport NewTrainerForm from '../newTrainer/newtrainer';\r\n\r\n\r\nclass AllTrainer extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state={\r\n      TrainertableLoading : false\r\n    }\r\n  }\r\n\r\n  openModal = (id,mode)=>{\r\n    this.props.ChangeTrainerModalState(true,id,mode);\r\n  }\r\n\r\n  closeModal = ()=>{\r\n    this.props.ChangeTrainerModalState(false,null,'Register');\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.props.ChangeTrainerTableData();\r\n  }\r\n\r\n  deleteTrainer = (id)=>{\r\n    SecurePost({\r\n      url : `${apis.DELETE_TRAINER}`,\r\n      data : {\r\n          _id : id\r\n      }\r\n    }).then((response)=>{\r\n      if(response.data.success){\r\n        Alert('success','Success',response.data.message);\r\n        this.props.ChangeTrainerTableData();\r\n      }\r\n      else{\r\n        return Alert('warning','Warning!',response.data.message);\r\n      }\r\n    }).catch((error)=>{\r\n      return Alert('error','Error!','Server Error');\r\n    })\r\n  }\r\n\r\n    getColumnSearchProps = dataIndex => ({\r\n        filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => (\r\n          <div style={{ padding: 8 }}>\r\n            <Input\r\n              ref={node => {\r\n                this.searchInput = node;\r\n              }}\r\n              placeholder={`Search ${dataIndex}`}\r\n              value={selectedKeys[0]}\r\n              onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\r\n              onPressEnter={() => this.handleSearch(selectedKeys, confirm)}\r\n              style={{ width: 188, marginBottom: 8, display: 'block' }}\r\n            />\r\n            <Button\r\n              type=\"primary\"\r\n              onClick={() => this.handleSearch(selectedKeys, confirm)}\r\n              icon=\"search\"\r\n              size=\"small\"\r\n              style={{ width: 90, marginRight: 8 }}\r\n            >\r\n              Search\r\n            </Button>\r\n            <Button onClick={() => this.handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>\r\n              Reset\r\n            </Button>\r\n          </div>\r\n        ),\r\n        filterIcon: filtered => (\r\n          <Icon type=\"search\" style={{ color: filtered ? '#1890ff' : undefined }} />\r\n        ),\r\n        onFilter: (value, record) =>\r\n          record[dataIndex]\r\n            .toString()\r\n            .toLowerCase()\r\n            .includes(value.toLowerCase()),\r\n        onFilterDropdownVisibleChange: visible => {\r\n          if (visible) {\r\n            setTimeout(() => this.searchInput.select());\r\n          }\r\n        },\r\n        render: text => (\r\n          <Highlighter\r\n            highlightStyle={{ backgroundColor: '#ffc069', padding: 0 }}\r\n            searchWords={[this.props.admin.TrainersearchText]}\r\n            autoEscape\r\n            textToHighlight={text.toString()}\r\n          />\r\n        ),\r\n      });\r\n    \r\n      handleSearch = (selectedKeys, confirm) => {\r\n        confirm();\r\n        this.props.ChangeTrainerSearchText(selectedKeys[0])\r\n      };\r\n    \r\n      handleReset = clearFilters => {\r\n        clearFilters();\r\n        this.props.ChangeTrainerSearchText('')\r\n      };\r\n\r\n    render() {\r\n      const { Title } = Typography;\r\n      const columns = [\r\n        {\r\n          title: 'Name',\r\n          dataIndex: 'name',\r\n          key: 'name',\r\n          width: '25%',\r\n          ...this.getColumnSearchProps('name'),\r\n        },\r\n        {\r\n          title: 'Email Id',\r\n          dataIndex: 'emailid',\r\n          key: 'emailid',\r\n          width: '25%',\r\n          ...this.getColumnSearchProps('emailid'),\r\n        },\r\n        {\r\n          title: 'Contact Number',\r\n          dataIndex: 'contact',\r\n          key: 'contact',\r\n          ...this.getColumnSearchProps('contact'),\r\n        },\r\n        {\r\n          title: 'Action',\r\n          key: '_id',\r\n          dataIndex: '_id',\r\n          render: (key) => (\r\n            <span>\r\n              <Button type=\"primary\" shape=\"circle\" icon=\"edit\" onClick={()=>this.openModal(key,'Save Changes')}/>\r\n                <Divider type=\"vertical\" />\r\n                <Popconfirm\r\n                  title=\"Are you sure？\"\r\n                  cancelText=\"No\"\r\n                  okText=\"Yes\"\r\n                  onConfirm={()=>{this.deleteTrainer(key)}}\r\n                  icon={<Icon type=\"delete\" style={{ color: 'red' }} />}\r\n                >\r\n                  <Button type=\"danger\" shape=\"circle\" icon=\"delete\" />\r\n                </Popconfirm>\r\n              \r\n            </span>\r\n          ),\r\n        },\r\n      ];\r\n        return (\r\n            <div className=\"admin-table-container\">\r\n              <Button type=\"primary\" icon=\"user-add\" style={{marginBottom:'10px'}} onClick={()=>this.openModal(null,'Register')}>\r\n                Add New\r\n              </Button> \r\n              <div className=\"register-trainer-form-header\">\r\n                <Title level={4} style={{color:'#fff',textAlign:'center'}}>List of Trainer</Title>\r\n              </div>\r\n              <Table \r\n                bordered={true} \r\n                columns={columns} \r\n                dataSource={this.props.admin.trainerTableData} \r\n                size=\"medium\" \r\n                pagination={{ pageSize: 5 }}\r\n                loading={this.props.admin.trainerTableLoadingStatus}\r\n                rowKey=\"_id\" \r\n              />;\r\n              <Modal\r\n                visible={this.props.admin.TrainermodalOpened}\r\n                title={false}\r\n                onOk={this.handleOk}\r\n                onCancel={this.closeModal}\r\n                style={{top :'20px',padding:'0px',backgroundColor:'rgb(155,175,190)'}}\r\n                width=\"40%\"\r\n                destroyOnClose={true}\r\n                footer={[\r\n                  \r\n                ]}\r\n              >\r\n                <NewTrainerForm />\r\n              </Modal>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    admin : state.admin\r\n});\r\n\r\nexport default connect(mapStateToProps,{\r\n    ChangeTrainerSearchText,\r\n    ChangeTrainerTableData,\r\n    ChangeTrainerModalState\r\n})(AllTrainer);","import React, { Component } from 'react'\r\nimport './newtopic.css';\r\nimport {\r\n    Form,\r\n    Input,\r\n    Button\r\n} from 'antd';\r\nimport { connect } from 'react-redux';\r\nimport {SecurePost} from '../../../services/axiosCall';\r\nimport apis from '../../../services/Apis';\r\nimport Alert from '../../../components/common/alert';\r\nimport { \r\n    ChangeSubjectConfirmDirty,\r\n    ChangeSubjectTableData,\r\n    ChangeSubjectModalState\r\n} from '../../../actions/adminAction';\r\n\r\nclass NewTopics extends Component {\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        this.props.form.validateFieldsAndScroll((err, values) => {\r\n            if (!err) {\r\n                // console.log('Received values of form: ', values);\r\n                SecurePost({\r\n                    url: `${apis.CREATE_SUBJECT}`,\r\n                    data: {\r\n                        _id: this.props.admin.SubjectId,\r\n                        topic: values.topic\r\n                    }\r\n                }).then((response) => {\r\n                    if (response.data.success) {\r\n                        this.props.ChangeSubjectModalState(false, null, 'New Topic');\r\n                        Alert('success', 'Success', response.data.message);\r\n                        this.props.ChangeSubjectTableData();\r\n                    }\r\n                    else {\r\n                        this.props.ChangeSubjectModalState(false, null, 'New Topic');\r\n                        return Alert('warning', 'Warning!', response.data.message);\r\n                    }\r\n                }).catch((error) => {\r\n                    this.props.ChangeSubjectModalState(false, null, 'New Topic');\r\n                    return Alert('error', 'Error!', 'Server Error');\r\n                });\r\n            }\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { getFieldDecorator } = this.props.form;\r\n        return (\r\n            <div className=\"register-subject-form\" >\r\n                <div className=\"register-trainer-form-body\">\r\n                    <Form  onSubmit={this.handleSubmit}>\r\n                        <Form.Item label=\"Topic Name\" hasFeedback className=\"input-admin-trainer\">\r\n                            {getFieldDecorator('topic', {\r\n                                initialValue : this.props.admin.subjectDetails.topic,\r\n                                rules: [{ required: true, message: 'Please input topic name!', whitespace: true }],\r\n                            })(<Input />)}\r\n                        </Form.Item>\r\n                        \r\n                        <Form.Item>\r\n                            <Button type=\"primary\" htmlType=\"submit\" block>\r\n                                {this.props.admin.Subjectmode}\r\n                            </Button>\r\n                        </Form.Item>\r\n                    </Form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    admin : state.admin\r\n});\r\n\r\nconst NewSubjectForm = Form.create({ name: 'register' })(NewTopics);\r\n\r\nexport default connect(mapStateToProps,{\r\n    ChangeSubjectConfirmDirty,\r\n    ChangeSubjectTableData,\r\n    ChangeSubjectModalState\r\n})(NewSubjectForm);\r\n\r\n","import React, { Component } from 'react';\r\nimport { Table, Input, Button, Icon, Typography,  Modal } from 'antd';\r\nimport Highlighter from 'react-highlight-words';\r\nimport { connect } from 'react-redux';\r\nimport { \r\n    ChangeSubjectSearchText,\r\n    ChangeSubjectTableData,\r\n    ChangeSubjectModalState\r\n} from '../../../actions/adminAction';\r\nimport './alltopics.css'\r\nimport NewSubjectForm from '../newTopics/newtopics';\r\n\r\n\r\n\r\nclass AllTopics extends Component {\r\n\r\n  openModal = (id,mode)=>{\r\n    this.props.ChangeSubjectModalState(true,id,mode);\r\n  }\r\n  \r\n  closeModal = ()=>{\r\n    this.props.ChangeSubjectModalState(false,null,'New Topic');\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.props.ChangeSubjectTableData();\r\n  }\r\n\r\n    getColumnSearchProps = dataIndex => ({\r\n        filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => (\r\n          <div style={{ padding: 8 }}>\r\n            <Input\r\n              ref={node => {\r\n                this.searchInput = node;\r\n              }}\r\n              placeholder={`Search ${dataIndex}`}\r\n              value={selectedKeys[0]}\r\n              onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\r\n              onPressEnter={() => this.handleSearch(selectedKeys, confirm)}\r\n              style={{ width: 188, marginBottom: 8, display: 'block' }}\r\n            />\r\n            <Button\r\n              type=\"primary\"\r\n              onClick={() => this.handleSearch(selectedKeys, confirm)}\r\n              icon=\"search\"\r\n              size=\"small\"\r\n              style={{ width: 90, marginRight: 8 }}\r\n            >\r\n              Search\r\n            </Button>\r\n            <Button onClick={() => this.handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>\r\n              Reset\r\n            </Button>\r\n          </div>\r\n        ),\r\n        filterIcon: filtered => (\r\n          <Icon type=\"search\" style={{ color: filtered ? '#1890ff' : undefined }} />\r\n        ),\r\n        onFilter: (value, record) =>\r\n          record[dataIndex]\r\n            .toString()\r\n            .toLowerCase()\r\n            .includes(value.toLowerCase()),\r\n        onFilterDropdownVisibleChange: visible => {\r\n          if (visible) {\r\n            setTimeout(() => this.searchInput.select());\r\n          }\r\n        },\r\n        render: text => (\r\n          <Highlighter\r\n            highlightStyle={{ backgroundColor: '#ffc069', padding: 0 }}\r\n            searchWords={[this.props.admin.SubjectsearchText]}\r\n            autoEscape\r\n            textToHighlight={text.toString()}\r\n          />\r\n        ),\r\n      });\r\n    \r\n      handleSearch = (selectedKeys, confirm) => {\r\n        confirm();\r\n        this.props.ChangeSubjectSearchText(selectedKeys[0])\r\n      };\r\n    \r\n      handleReset = clearFilters => {\r\n        clearFilters();\r\n        this.props.ChangeSubjectSearchText('')\r\n      };\r\n\r\n    render() {\r\n      const { Title } = Typography;\r\n      const columns = [\r\n        {\r\n          title: 'Name',\r\n          dataIndex: 'topic',\r\n          key: 'topic',\r\n          width: '70%',\r\n          ...this.getColumnSearchProps('topic'),\r\n        },\r\n        {\r\n          title: 'Action',\r\n          key: '_id',\r\n          dataIndex: '_id',\r\n          render: (key) => (\r\n            <span>\r\n              <Button type=\"primary\" shape=\"circle\" icon=\"edit\" onClick={()=>this.openModal(key,'Save Changes')}/>\r\n            </span>\r\n          ),\r\n        },\r\n      ];\r\n        return (\r\n            <div className=\"admin-table-container\">\r\n              <Button type=\"primary\" icon=\"file-text\" style={{marginBottom:'10px'}} onClick={()=>this.openModal(null,'New Topic')}>\r\n                Add New\r\n              </Button> \r\n              <div className=\"register-trainer-form-header\">\r\n                <Title level={4} style={{color:'#fff',textAlign:'center'}}>List of Categories</Title>\r\n              </div>\r\n              <Table \r\n                bordered={true} \r\n                columns={columns} \r\n                dataSource={this.props.admin.subjectTableData} \r\n                size=\"medium\" \r\n                pagination={{ pageSize: 5 }}\r\n                loading={this.props.admin.SubjectTableLoading}\r\n                rowKey=\"_id\"\r\n              />;\r\n              <Modal\r\n                visible={this.props.admin.SubjectmodalOpened}\r\n                title={false}\r\n                onOk={this.handleOk}\r\n                onCancel={this.closeModal}\r\n                style={{top :'20px',padding:'0px',backgroundColor:'rgb(155,175,190)'}}\r\n                destroyOnClose={true}\r\n                footer={[\r\n                  \r\n                ]}\r\n              >\r\n                <NewSubjectForm />\r\n              </Modal>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    admin : state.admin\r\n});\r\n\r\nexport default connect(mapStateToProps,{\r\n    ChangeSubjectSearchText,\r\n    ChangeSubjectTableData,\r\n    ChangeSubjectModalState\r\n})(AllTopics);","import apis from '../services/Apis';\r\nimport Alert from '../components/common/alert';\r\nimport { SecurePost } from '../services/axiosCall';\r\n\r\nexport const ChangeQuestionModalState = (d1) => dispatch => {\r\n    dispatch({\r\n        type : 'CHANGE_QUESTION_MODAL_STATE',\r\n        payload1 : d1,\r\n    });\r\n};\r\n\r\nexport const ChangeQuestionConfirmDirty = (d) => dispatch =>{\r\n    dispatch({\r\n       type : 'CHANGE_QUESTION_FORM_CONFIRMDIRTY',\r\n       payload : d\r\n    });\r\n};\r\n\r\n\r\nexport const ChangeQuestionSearchText = (d)=> dispatch =>{\r\n    dispatch({\r\n       type : 'CHANGE_QUESTION_SEARCH_TEXT',\r\n       payload : d\r\n    })\r\n}\r\n\r\nexport const ChangeQuestionTableData = (d) => dispatch => {\r\n    dispatch({\r\n        type: 'CHANGE_QUESTION_TABLE_LOADING_STATUS',\r\n        payload1: true,\r\n        payload2: []\r\n    });\r\n\r\n    SecurePost({\r\n        url: `${apis.GET_ALL_QUESTIONS}`,\r\n        data: {\r\n            subject: d\r\n        }\r\n    })\r\n    .then((response) => {\r\n        if (response.data.success) {\r\n            dispatch({\r\n                type: 'CHANGE_QUESTION_TABLE_LOADING_STATUS',\r\n                payload1: false,\r\n                payload2: response.data.data\r\n            });\r\n        }\r\n        else {\r\n            Alert('error', 'Error!', response.data.message);\r\n            dispatch({\r\n                type: 'CHANGE_QUESTION_TABLE_LOADING_STATUS',\r\n                payload1: false,\r\n                payload2: []\r\n            });\r\n        }\r\n    })\r\n    .catch((error) => {\r\n        Alert('error', 'Error!', 'Server Error');\r\n        dispatch({\r\n            type: 'CHANGE_QUESTION_TABLE_LOADING_STATUS',\r\n            payload1: false,\r\n            payload2: []\r\n        });\r\n    });\r\n};\r\n\r\nexport const ChangeSelectedSubjects = (d) => dispatch => {\r\n    dispatch({\r\n        type: 'CHANGE_SELECTED_SUBJECT',\r\n        payload: d\r\n    });\r\n};\r\n\r\nexport const ChangeQuestionFormData = (d) => dispatch => {\r\n    dispatch({\r\n        type: 'CHANGE_QUESTION_FORM_DATA',\r\n        payload: d\r\n    });\r\n};\r\n\r\nexport const AddFifthOptionInQuestion = () => dispatch => {\r\n    dispatch({\r\n        type: 'ADD_FIFTH_OPTION'\r\n    });\r\n};\r\n\r\nexport const ChangeTestDetailsModalState = (d1, d2) => dispatch => {\r\n    dispatch({\r\n        type: 'CHANGE_TEST_DETAILS_MODAL_STATE',\r\n        payload1: d1,\r\n        payload2: d2\r\n    });\r\n};\r\n\r\nexport const ChangeTestSearchText = (d) => dispatch => {\r\n    dispatch({\r\n        type: 'CHANGE_TEST_SEARCH_TEXT',\r\n        payload: d\r\n    });\r\n};\r\n\r\nexport const ChangeTestTableData = () => dispatch => {\r\n    dispatch({\r\n        type: 'CHANGE_TEST_TABLE_LOADING_STATUS',\r\n        payload1: true,\r\n        payload2: []\r\n    });\r\n\r\n    SecurePost({\r\n        url: `${apis.GET_ALL_TESTS}`,\r\n    }).then((response) => {\r\n        // console.log(response.data);\r\n        if (response.data.success) {\r\n            dispatch({\r\n                type: 'CHANGE_TEST_TABLE_LOADING_STATUS',\r\n                payload1: false,\r\n                payload2: response.data.data\r\n            });\r\n        }\r\n        else {\r\n            Alert('error', 'Error!', response.data.message);\r\n            dispatch({\r\n                type: 'CHANGE_TEST_TABLE_LOADING_STATUS',\r\n                payload1: false,\r\n                payload2: []\r\n            });\r\n        }\r\n    }).catch((error) => {\r\n        // console.log(error);\r\n        Alert('error', 'Error!', 'Server Error');\r\n        dispatch({\r\n            type: 'CHANGE_TEST_TABLE_LOADING_STATUS',\r\n            payload1: false,\r\n            payload2: []\r\n        });\r\n    });\r\n};\r\n\r\nexport const updateQuestiosnActiveTest = (d) => {\r\n    return {\r\n        type: 'CHANGE_CURRENT_ACTIVE_TEST_QUESTION',\r\n        payload: d\r\n    };\r\n};\r\n\r\n// Update Refer Table\r\nexport const UpdateReferTable = () => dispatch => {\r\n    SecurePost({\r\n        url: apis.LIST_REFER\r\n    })\r\n    .then((response) => {\r\n        if(response.data.success){\r\n            dispatch({\r\n                type: 'UPDATE_REFER_TABLE',\r\n                payload: response.data.data\r\n            });\r\n        }\r\n    })\r\n    .catch((error) => {\r\n        return Alert('error','Error!','Server Error');\r\n    });\r\n};","import React, { Component } from 'react'\r\nimport './newquestion.css';\r\nimport {\r\n    Form,\r\n    Input,\r\n    Button,\r\n    Select,\r\n    Row,\r\n    Col,\r\n    Checkbox,\r\n    Modal,\r\n    Upload,\r\n    Icon,\r\n    InputNumber \r\n} from 'antd';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { \r\n    ChangeQuestionConfirmDirty,\r\n    ChangeQuestionTableData,\r\n    ChangeQuestionModalState\r\n} from '../../../actions/trainerAction';\r\n\r\nimport { SecurePost } from '../../../services/axiosCall';\r\nimport apis from '../../../services/Apis';\r\nimport Alert from '../../../components/common/alert';\r\nimport auth from '../../../services/AuthServices';\r\n\r\nclass NewQuestion extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            questionDetails:{\r\n                questionimage:null,\r\n                options :[\r\n                    {\r\n                        image :null,\r\n                        body : null,\r\n                        isAnswer :false\r\n                    },\r\n                    {\r\n                        image :null,\r\n                        body : null,\r\n                        isAnswer :false\r\n                    },\r\n                    {\r\n                        image :null,\r\n                        body : null,\r\n                        isAnswer :false\r\n                    },\r\n                    {\r\n                        image :null,\r\n                        body : null,\r\n                        isAnswer :false\r\n                    }\r\n                ] ,  \r\n            },\r\n            adding:false,\r\n            submitDisabled:false,\r\n            fifthoptioAddButtonVisible:true\r\n        }\r\n        \r\n    }\r\n\r\n    addfifthOption = (e)=>{\r\n        this.setState((previousState,previousProps)=>{\r\n            return({\r\n                fifthoptioAddButtonVisible:false,\r\n                questionDetails:{\r\n                    ...previousState.questionDetails,\r\n                    options:[\r\n                        ...previousState.questionDetails.options,\r\n                        {\r\n                            image :null,\r\n                            body : null,\r\n                            isAnswer :false\r\n                        }\r\n                    ]\r\n                }\r\n            })\r\n        })\r\n    }\r\n\r\n    Customalert = ()=>{\r\n        Modal.confirm({\r\n            title: 'Confirm',\r\n            content: 'empty option can not be set as answer',\r\n            okText: 'I understand',\r\n            cancelText: null,\r\n        });\r\n    }\r\n    \r\n\r\n\r\n\r\n    OptionTextChange =(e,i)=>{\r\n        var newOptions = [...this.state.questionDetails.options]\r\n        newOptions[i]={\r\n            ...this.state.questionDetails.options[i],\r\n            body : e.target.value\r\n        }\r\n        if((newOptions[i].image==='undefined' || newOptions[i].image===undefined || newOptions[i].image===null || newOptions[i].image==='null') && \r\n            (newOptions[i].body==='undefined' || newOptions[i].body===undefined || newOptions[i].body==='null' || newOptions[i].body==='' || newOptions[i].body===null)){\r\n                newOptions[i]={\r\n                    ...this.state.questionDetails.options[i],\r\n                    isAnswer : false\r\n                }\r\n                this.setState((ps,pp)=>{\r\n                    return({\r\n                        questionDetails:{\r\n                            ...ps.questionDetails,\r\n                            options:newOptions\r\n                        }\r\n                    })\r\n                })\r\n        }\r\n        this.setState((ps,pp)=>{\r\n            return({\r\n                questionDetails:{\r\n                    ...ps.questionDetails,\r\n                    options:newOptions\r\n                }\r\n            })\r\n        })     \r\n    }\r\n\r\n    AnswerOptionSwitch = (e,i)=>{\r\n        if((this.state.questionDetails.options[i].body!=='' && this.state.questionDetails.options[i].body!==null)\r\n            || (this.state.questionDetails.options[i].image!==null && this.state.questionDetails.options[i].image!=='undefined' && this.state.questionDetails.options[i].image!==undefined)\r\n        ){\r\n            var newOptions = [...this.state.questionDetails.options]\r\n            newOptions[i]={\r\n                ...this.state.questionDetails.options[i],\r\n                isAnswer : e.target.checked\r\n            }\r\n            this.setState((ps,pp)=>{\r\n                return({\r\n                    questionDetails:{\r\n                        ...ps.questionDetails,\r\n                        options:newOptions\r\n                    }\r\n                })\r\n            })\r\n            \r\n        }\r\n        else{   \r\n            this.Customalert()\r\n            return;\r\n        }\r\n        \r\n    }\r\n\r\n    OptionImageonChange = (f,i)=>{\r\n        var newOptions = [...this.state.questionDetails.options]\r\n        if(!f){\r\n            delete newOptions[i].image\r\n            newOptions[i].image=null\r\n        }\r\n        else{\r\n            newOptions[i]={\r\n                ...this.state.questionDetails.options[i],\r\n                image :`${apis.BASE}/${f.link}`\r\n            }\r\n        }\r\n        this.setState({\r\n            submitDisabled:false\r\n        })\r\n        if((newOptions[i].image==='undefined' || newOptions[i].image===undefined || newOptions[i].image===null || newOptions[i].image==='null') && \r\n            (newOptions[i].body==='undefined' || newOptions[i].body===undefined || newOptions[i].body==='null' || newOptions[i].body==='' || newOptions[i].body===null)){\r\n                newOptions[i]={\r\n                    ...this.state.questionDetails.options[i],\r\n                    isAnswer : false\r\n                }\r\n        }\r\n        this.setState((ps,pp)=>{\r\n            return({\r\n                questionDetails:{\r\n                    ...ps.questionDetails,\r\n                    options:newOptions\r\n                }\r\n            })\r\n        })\r\n    }\r\n\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        this.props.form.validateFieldsAndScroll((err, values) => {\r\n            // console.log(values);\r\n            if (!err) {\r\n                var f=1;\r\n                var ans=0;\r\n                var opts=[]\r\n                // console.log('Received values of form: ', values);\r\n                this.state.questionDetails.options.forEach((element,i) => {\r\n                    opts.push({\r\n                        optbody:element.body,\r\n                        optimg:element.image,\r\n                        isAnswer:element.isAnswer\r\n                    });\r\n                    if((element.image==='undefined' || element.image===undefined || element.image===null || element.image==='null')&&(element.body==='' ||element.body===null || element.body==='null' || element.body==='undefined' || element.body===undefined )){\r\n                        f=0;\r\n                    }\r\n                    if(element.isAnswer){\r\n                        ans=ans+1\r\n                    }\r\n                })\r\n                if(f){\r\n                    if(!ans){\r\n                        Alert('warning','Warning!','There must be atleast one right answer');\r\n                    }\r\n                    else{\r\n                        this.setState({\r\n                            adding:true\r\n                        });\r\n                        SecurePost({\r\n                            url:apis.CREATE_QUESTIONS,\r\n                            data:{\r\n                                body:values.questionbody,\r\n                                options:opts,\r\n                                quesimg:this.state.questionDetails.questionimage,\r\n                                subject:values.subject,\r\n                                explanation:values.explanation,\r\n                                weightage:values.waitage,\r\n                            }\r\n                        }).then((response)=>{\r\n                            // console.log(response);\r\n                            this.setState({\r\n                                adding:false\r\n                            });\r\n                            if(response.data.success){\r\n                                this.props.ChangeQuestionModalState(false);\r\n                                Alert('success','Success',response.data.message);\r\n                                this.props.ChangeQuestionTableData(this.props.trainer.selectedSubjects);\r\n                            }\r\n                            else{\r\n                                this.props.ChangeQuestionModalState(false);\r\n                                this.props.form.resetFields();\r\n                                return Alert('warning','Warning!',response.data.message);\r\n                            }\r\n\r\n                        }).catch((error)=>{\r\n                            // console.log(error);\r\n                            this.props.form.resetFields();\r\n                            this.setState({\r\n                                adding:false,\r\n                                questionDetails:{\r\n                                    questionimage:null,\r\n                                    options :[\r\n                                        {\r\n                                            image :null,\r\n                                            body : null,\r\n                                            isAnswer :false\r\n                                        },\r\n                                        {\r\n                                            image :null,\r\n                                            body : null,\r\n                                            isAnswer :false\r\n                                        },\r\n                                        {\r\n                                            image :null,\r\n                                            body : null,\r\n                                            isAnswer :false\r\n                                        },\r\n                                        {\r\n                                            image :null,\r\n                                            body : null,\r\n                                            isAnswer :false\r\n                                        }\r\n                                    ] ,  \r\n                                }\r\n                            });\r\n                            this.props.ChangeQuestionModalState(false);\r\n                            return Alert('error','Error!','Server Error');\r\n                        })\r\n                        \r\n                    }\r\n                }\r\n                else{\r\n                    Alert('warning','Warning!','Please fill all the options');\r\n                }\r\n            }\r\n        });\r\n    };\r\n\r\n    changeqImage = (f)=>{\r\n        this.setState((ps,pp)=>{\r\n            return({\r\n                questionDetails:{\r\n                    ...ps.questionDetails,\r\n                    questionimage:(f.link ?`${apis.BASE}/${f.link}`:null)\r\n                },\r\n                submitDisabled:false\r\n            })\r\n        })\r\n    }\r\n\r\n    upl=()=>{\r\n        this.setState({\r\n            submitDisabled:true\r\n        })\r\n    }\r\n\r\n    render() {\r\n        // console.log(this.state)\r\n        const { getFieldDecorator } = this.props.form;\r\n        const { Option } = Select;\r\n        const { TextArea } = Input;\r\n        var QuestionImageprops = {\r\n            name: 'file',\r\n            action: `${apis.BASE}${apis.FILE_UPLOAD}?Token=${auth.retriveToken()}`,\r\n            listType: 'picture',\r\n        };\r\n        \r\n        return (\r\n            <div className=\"register-subject-form\" >\r\n                <div className=\"register-trainer-form-body\">\r\n                    <Form  onSubmit={this.handleSubmit}>\r\n                        <div>\r\n                            <Row>\r\n                                <Col span={8}>\r\n                                    <Form.Item label=\"Subject\" hasFeedback>\r\n                                        {getFieldDecorator('subject', {\r\n                                            rules: [{ required: true, message: 'Please select any subject!' }],\r\n                                        })(\r\n                                            <Select\r\n                                                showSearch\r\n                                                style={{ width:'100%'}}\r\n                                                placeholder=\"Select a subject\"\r\n                                                optionFilterProp=\"s\"\r\n                                            >\r\n                                                {\r\n                                                    this.props.admin.subjectTableData.map((d,i)=><Option key={d._id} s={d.topic} value={d._id}>{d.topic}</Option>)\r\n                                                }\r\n                                            </Select>\r\n                                        )}\r\n                                    </Form.Item>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row>\r\n                                <Col span={18}>\r\n                                    <Form.Item label=\"Question\" hasFeedback>\r\n                                        {getFieldDecorator('questionbody', {\r\n                                            rules: [{ required: true, message: 'Please type question!' }],\r\n                                        })(\r\n                                            <TextArea rows={5} />\r\n                                        )}\r\n                                    </Form.Item>\r\n                                </Col>\r\n                                <Col span={6} style={{padding : '0px 20px'}}>\r\n                                    <Form.Item label=\"Question Image\">\r\n                                        <Upload {...QuestionImageprops} beforeUpload={this.upl} onRemove={this.changeqImage} onSuccess={this.changeqImage}>\r\n                                            <Button>\r\n                                                <Icon type=\"upload\" /> Upload\r\n                                            </Button>\r\n                                        </Upload>\r\n                                    </Form.Item>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row>\r\n                                <Col span={18}>\r\n                                    <Form.Item label=\"Explanation\" hasFeedback>\r\n                                        {getFieldDecorator('explanation', {\r\n                                            rules: [{ required: true, message: 'Please type Explanation for the answers!' }],\r\n                                        })(\r\n                                            <TextArea onChange={this.ExplanationChange} rows={3} />\r\n                                        )}\r\n                                    </Form.Item>\r\n                                </Col>\r\n                                <Col offset={2} span={4}>\r\n                                    <Form.Item label=\"Weightage\" hasFeedback>\r\n                                        {getFieldDecorator('waitage', {\r\n                                            rules: [{ required: true, message: 'Please enter the marks' }],\r\n                                        })(\r\n                                            <InputNumber min={1} max={2}  />\r\n                                        )}\r\n                                    </Form.Item>\r\n                                </Col>\r\n                            </Row>\r\n                            <div style={{paddingTop:'20px'}}>\r\n                                {\r\n                                    this.state.questionDetails.options.map((option,i)=>{\r\n                                        return(\r\n                                            <Row key={i} className=\"\">\r\n                                                <Col offset={1} span={13}>\r\n                                                    <Form.Item label={`option${i+1}`}>\r\n                                                        <TextArea value={this.state.questionDetails.options[i].body} onChange={ (e)=>this.OptionTextChange(e,i)} rows={3} />\r\n                                                    </Form.Item>\r\n                                                </Col>\r\n                                                <Col offset={2} span={6} style={{textAlign:'center'}}>\r\n                                                    <Form.Item label={`Option${i+1} Image`}>\r\n                                                        <Upload {...QuestionImageprops} beforeUpload={this.upl} onRemove={(f)=>this.OptionImageonChange(null,i)} onSuccess={(f)=>this.OptionImageonChange(f,i)}>\r\n                                                            <Button>\r\n                                                                <Icon type=\"upload\" /> Upload\r\n                                                            </Button>\r\n                                                        </Upload>\r\n                                                    </Form.Item>\r\n                                                </Col>\r\n                                                <Col span={2} style={{padding : '55px 10px'}}>\r\n                                                    <Form.Item>\r\n                                                        <Checkbox checked={this.state.questionDetails.options[i].isAnswer} onChange={(e)=>this.AnswerOptionSwitch(e,i)} ></Checkbox>\r\n                                                    </Form.Item>\r\n                                                </Col>\r\n                                            </Row>                                                \r\n                                        )\r\n                                    })\r\n                                }\r\n                            </div>\r\n                            <Row>\r\n                                <Col span={12}>\r\n                                    { this.state.fifthoptioAddButtonVisible ? <Button type=\"primary\" onClick={(e)=>this.addfifthOption(e)}>Add 5th option</Button> : null}\r\n                                </Col>\r\n                            </Row>\r\n                            <Row>\r\n                                <Col offset={20}  span={4}>\r\n                                    <Form.Item>\r\n                                        <Button type=\"primary\" htmlType=\"submit\" disabled={this.state.submitDisabled} loading={this.state.adding} block>\r\n                                            Create Question\r\n                                        </Button>\r\n                                    </Form.Item>\r\n                                </Col>\r\n                            </Row>\r\n                            \r\n                        </div>\r\n                    </Form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    trainer : state.trainer,\r\n    admin : state.admin\r\n});\r\n\r\n\r\n\r\nconst NewQuestionForm = Form.create({ name: 'newQuestion' })(NewQuestion);\r\n\r\nexport default connect(mapStateToProps,{\r\n    ChangeQuestionConfirmDirty,\r\n    ChangeQuestionModalState,\r\n    ChangeQuestionTableData\r\n})(NewQuestionForm);\r\n\r\n","import React from 'react';\r\nimport ReactMarkdown from 'react-markdown';\r\nimport gfm from 'remark-gfm';\r\nimport {Prism as SyntaxHighlighter} from 'react-syntax-highlighter';\r\nimport {InlineMath, BlockMath} from 'react-katex';\r\nimport math from 'remark-math';\r\nimport 'katex/dist/katex.min.css';\r\n\r\nconst renderers = {\r\n  inlineMath: ({value}) => <InlineMath math={value} />,\r\n  math: ({value}) => <BlockMath math={value} />,\r\n  code: ({language, value}) => {\r\n    return <SyntaxHighlighter language={language} children={value} />\r\n  }\r\n};\r\n\r\nconst Markdown = (props) => {\r\n  return (\r\n    <ReactMarkdown renderers={renderers} plugins={[gfm,math]} {...props} />\r\n  )\r\n};\r\n\r\nexport default Markdown;","import React, { Component } from 'react';\r\nimport { Skeleton,Row, Col, Icon, Tabs,Descriptions,Button    } from 'antd';\r\nimport './questiondetails.css';\r\nimport apis from '../../../services/Apis';\r\nimport { SecureGet } from '../../../services/axiosCall';\r\nimport moment from 'moment';\r\nimport Markdown from '../../../utils/Markdown';\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nexport default class QuestionDetails extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            loading : true,\r\n            details:null\r\n        }\r\n    }\r\n\r\n    tabChange = (key)=>{\r\n        // console.log(key)\r\n    }\r\n\r\n    componentDidMount(){\r\n        var ID = this.props.id;\r\n\r\n        SecureGet({\r\n            url: `${apis.FETCH_SINGLE_QUESTION}/${ID}`,\r\n        }).then((response) => {\r\n            // console.log(response.data.data[0]);\r\n            this.setState({\r\n                details: response.data.data[0],\r\n                loading: false\r\n            })\r\n        }).catch((error) => {\r\n            // console.log(error);\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Skeleton loading={this.state.loading} active avatar>\r\n                    <Tabs defaultActiveKey=\"1\" onChange={(e) => this.tabChange(e)}>\r\n                        <TabPane tab={<span><Icon type=\"home\" />Basic Info</span>} key=\"1\">\r\n                            <Tab1 id={this.props.id} details={this.state.details} />\r\n                        </TabPane>\r\n                        <TabPane tab={<span><Icon type=\"question-circle\" />Question</span>} key=\"2\">\r\n                            <Tab2 details={this.state.details} />\r\n                        </TabPane>\r\n                    </Tabs>\r\n                </Skeleton>\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\n\r\nfunction Tab1(props) {\r\n    return (\r\n        <div>\r\n            <Descriptions bordered title=\"\" border size=\"small\" column={{ xxl: 1, xl: 1, lg: 1, md: 1, sm: 1, xs: 1 }}>\r\n                <Descriptions.Item label=\"Question Id\">{props.id}</Descriptions.Item>\r\n                <Descriptions.Item label=\"Subject\">{props.details.subject.topic}</Descriptions.Item>\r\n                <Descriptions.Item label=\"Difficulty\">{props.details.difficulty}</Descriptions.Item>\r\n                <Descriptions.Item label=\"No of Right Answers\">{props.details.anscount}</Descriptions.Item>\r\n                <Descriptions.Item label=\"Weightage\">{props.details.weightage}</Descriptions.Item>\r\n                <Descriptions.Item label=\"Created By\">{props.details.createdBy.name}</Descriptions.Item>\r\n                <Descriptions.Item label=\"Created on\">{moment(props.details.createdAt).format(\"DD/ MM/YYYY , hh:mm:ss\")}</Descriptions.Item>\r\n            </Descriptions>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nfunction Tab2(props){\r\n    const optn = ['A', 'B', 'C', 'D', 'E'];\r\n    const Optiondata = props.details;\r\n    // console.log(`details : ${Optiondata}`);\r\n\r\n    return (\r\n        <div className=\"mainQuestionDetailsContaine\">\r\n            <div className=\"questionDetailsBody\">\r\n                <Markdown>\r\n                    {Optiondata.body}\r\n                </Markdown>\r\n            </div>\r\n            \r\n            {Optiondata.quesimg ?\r\n                <div className=\"questionDetailsImageContainer\">\r\n                    <img alt=\"unable to load\" className=\"questionDetailsImage\" src={Optiondata.quesimg} />\r\n                </div>\r\n                : null\r\n            }\r\n            <div>\r\n                {Optiondata.options.map((d, i) => {\r\n                    return (\r\n                        <div key={i}>\r\n                            <Row type=\"flex\" justify=\"center\" className=\"QuestionDetailsOptions\">\r\n                                <Col span={2}>\r\n                                    {\r\n                                        d.isAnswer ? <Button className=\"green\" shape=\"circle\">{optn[i]}</Button> : <Button type=\"primary\" shape=\"circle\">{optn[i]}</Button>\r\n                                    }\r\n                                    \r\n                                </Col>\r\n                                {d.optimg ?\r\n                                    <Col span={6} style={{ padding: '5px' }}>\r\n                                        <img alt=\"unable to load\" className=\"questionDetailsImage\" src={d.optimg} />\r\n                                    </Col>\r\n                                    :\r\n                                    null\r\n                                }\r\n                                {d.optimg ?\r\n                                    <Col span={14}>{d.optbody}</Col>\r\n                                    :\r\n                                    <Col span={20}>{d.optbody}</Col>\r\n                                }\r\n                            </Row>\r\n                           \r\n                        </div>\r\n                    )\r\n                })}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n","import React, { Component } from 'react';\r\nimport { Table, Input, Button, Icon, Typography,Popconfirm,Divider, Modal, Select, Row, Col  } from 'antd';\r\nimport Highlighter from 'react-highlight-words';\r\nimport { connect } from 'react-redux';\r\nimport { \r\n  ChangeQuestionModalState,\r\n  ChangeQuestionTableData,\r\n  ChangeQuestionSearchText,\r\n  ChangeSelectedSubjects\r\n} from '../../../actions/trainerAction';\r\nimport { \r\n  ChangeSubjectTableData\r\n} from '../../../actions/adminAction';\r\nimport './allquestion.css'\r\nimport Alert from '../../../components/common/alert';\r\nimport {SecurePost} from '../../../services/axiosCall';\r\nimport apis from '../../../services/Apis';\r\nimport NewQuestionForm from '../newquestion/newquestion';\r\nimport QuestionDetails from '../questionDetails/questiondetails';\r\n\r\nclass AllQuestions extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state={\r\n      questiondetailsId : null,\r\n      questiondetailsModelVisible:false\r\n    }\r\n  }\r\n  \r\n  OpendetailsModal = (id)=>{\r\n    this.setState((previousState,previousProps)=>{\r\n      return{\r\n        questiondetailsId:id,\r\n        questiondetailsModelVisible:true\r\n      }\r\n    })\r\n  }\r\n  ClosedetailsModal = ()=>{\r\n    this.setState((previousState,previousProps)=>{\r\n      return{\r\n        questiondetailsId:null,\r\n        questiondetailsModelVisible:false\r\n      }\r\n    })\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.props.ChangeSubjectTableData();\r\n    this.props.ChangeQuestionTableData(this.props.trainer.selectedSubjects);\r\n  }\r\n\r\n  openNewModal = (mode)=>{\r\n    this.props.ChangeQuestionModalState(true);\r\n  }\r\n\r\n  closeNewModal = ()=>{\r\n    this.props.ChangeQuestionModalState(false);\r\n  }\r\n\r\n  handleSubjectChange =(s)=>{\r\n    this.props.ChangeSelectedSubjects(s);\r\n    this.props.ChangeQuestionTableData(s);\r\n  }\r\n\r\n  deleteQuestion = (id)=>{\r\n    SecurePost({\r\n      url : `${apis.DELETE_QUESTION}`,\r\n      data : {\r\n          _id : id\r\n      }\r\n    }).then((response)=>{\r\n      if(response.data.success){\r\n        Alert('success','Success',response.data.message);\r\n        this.props.ChangeQuestionTableData(this.props.trainer.selectedSubjects);\r\n      }\r\n      else{\r\n        return Alert('warning','Warning!',response.data.message);\r\n      }\r\n    }).catch((error)=>{\r\n      return Alert('error','Error!','Server Error');\r\n    })\r\n  }\r\n\r\n    getColumnSearchProps = dataIndex => ({\r\n        filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => (\r\n          <div style={{ padding: 8 }}>\r\n            <Input\r\n              ref={node => {\r\n                this.searchInput = node;\r\n              }}\r\n              placeholder={`Search ${dataIndex}`}\r\n              value={selectedKeys[0]}\r\n              onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\r\n              onPressEnter={() => this.handleSearch(selectedKeys, confirm)}\r\n              style={{ width: 188, marginBottom: 8, display: 'block' }}\r\n            />\r\n            <Button\r\n              type=\"primary\"\r\n              onClick={() => this.handleSearch(selectedKeys, confirm)}\r\n              icon=\"search\"\r\n              size=\"small\"\r\n              style={{ width: 90, marginRight: 8 }}\r\n            >\r\n              Search\r\n            </Button>\r\n            <Button onClick={() => this.handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>\r\n              Reset\r\n            </Button>\r\n          </div>\r\n        ),\r\n        filterIcon: filtered => (\r\n          <Icon type=\"search\" style={{ color: filtered ? '#1890ff' : undefined }} />\r\n        ),\r\n        onFilter: (value, record) =>\r\n          record[dataIndex]\r\n            .toString()\r\n            .toLowerCase()\r\n            .includes(value.toLowerCase()),\r\n        onFilterDropdownVisibleChange: visible => {\r\n          if (visible) {\r\n            setTimeout(() => this.searchInput.select());\r\n          }\r\n        },\r\n        render: text => (\r\n          <Highlighter\r\n            highlightStyle={{ backgroundColor: '#ffc069', padding: 0 }}\r\n            searchWords={[this.props.trainer.QuestionsearchText]}\r\n            autoEscape\r\n            textToHighlight={text.toString()}\r\n          />\r\n        ),\r\n      });\r\n    \r\n      handleSearch = (selectedKeys, confirm) => {\r\n        confirm();\r\n        this.props.ChangeQuestionSearchText(selectedKeys[0])\r\n      };\r\n    \r\n      handleReset = clearFilters => {\r\n        clearFilters();\r\n        this.props.ChangeQuestionSearchText('')\r\n      };\r\n\r\n    render() {\r\n      const { Title } = Typography;\r\n\r\n      const columns = [\r\n        {\r\n          title: 'Subject',\r\n          dataIndex: 'subject.topic',\r\n          key: 'subject.topic',\r\n          width: '15%',\r\n        },\r\n        {\r\n          title: 'Question',\r\n          dataIndex: 'body',\r\n          key: 'body',\r\n          width: '50%',\r\n          ...this.getColumnSearchProps('body'),\r\n        },\r\n        {\r\n          title: 'Created By',\r\n          dataIndex: 'createdBy.name',\r\n          key: 'createdBy.name',\r\n          width: '15%'\r\n        },\r\n        {\r\n          title: 'Action',\r\n          key: '_id',\r\n          dataIndex: '_id',\r\n          width: '15%',\r\n          render: (key) => (\r\n            <span>\r\n              <Button \r\n                type=\"primary\" \r\n                shape=\"circle\" \r\n                onClick={()=>this.OpendetailsModal(key)} \r\n                icon=\"info-circle\" \r\n              />\r\n            </span>\r\n          ),\r\n        },\r\n      ];\r\n        return (\r\n            <div className=\"admin-table-container\">\r\n              <div>\r\n                <Row>\r\n\r\n                  <Col span={12}>\r\n                    <Button \r\n                      type=\"primary\" \r\n                      icon=\"question-circle\" \r\n                      style={{marginBottom:'10px'}} \r\n                      onClick={()=>this.openNewModal('Add New Question')}\r\n                    >\r\n                      Add New MCQ/MSQ Question\r\n                    </Button>\r\n                  </Col>\r\n\r\n                  <Col span={12}>\r\n                    <Select\r\n                      mode=\"multiple\"\r\n                      placeholder=\"Select one or more subjects\"\r\n                      defaultValue={this.props.trainer.selectedSubjects}\r\n                      onChange={this.handleSubjectChange}\r\n                      style={{ width: '100%' }}\r\n                      allowClear={true}\r\n                      optionFilterProp=\"s\"\r\n                    >\r\n                      {this.props.admin.subjectTableData.map(item => (\r\n                        <Select.Option key={item._id} value={item._id} s={item.topic}>\r\n                          {item.topic}\r\n                        </Select.Option>\r\n                      ))}\r\n                    </Select>\r\n                  </Col>\r\n                </Row>\r\n              </div>\r\n              \r\n              <div className=\"register-trainer-form-header\">\r\n                <Title level={4} style={{color:'#fff',textAlign:'center'}}>\r\n                  List of MCQ/MSQ Questions\r\n                </Title>\r\n              </div>\r\n              \r\n              <Table \r\n                bordered={true} \r\n                columns={columns} \r\n                dataSource={this.props.trainer.QuestionTableData} \r\n                size=\"medium\" \r\n                pagination={{ pageSize: 5 }}\r\n                loading={this.props.trainer.QuestionTableLoading}\r\n                rowKey=\"_id\" \r\n              />\r\n\r\n              <Modal\r\n                visible={this.props.trainer.NewQuestionmodalOpened}\r\n                title=\"New Question\"\r\n                onCancel={this.closeNewModal}\r\n                style={{top :'20px',padding:'0px',backgroundColor:'rgb(155,175,190)'}}\r\n                width=\"90%\"\r\n                destroyOnClose={true}\r\n                footer={[]}\r\n              >\r\n                <NewQuestionForm />\r\n              </Modal>\r\n\r\n              <Modal\r\n                visible={this.state.questiondetailsModelVisible}\r\n                title=\"Question Details\"\r\n                onCancel={this.ClosedetailsModal}\r\n                style={{top :'20px',padding:'0px',backgroundColor:'rgb(155,175,190)'}}\r\n                width=\"70%\"\r\n                destroyOnClose={true}\r\n                footer={[]}\r\n              >\r\n                <QuestionDetails id={this.state.questiondetailsId} / >\r\n              </Modal>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    trainer : state.trainer,\r\n    admin : state.admin\r\n});\r\n\r\nexport default connect(mapStateToProps,{\r\n  ChangeQuestionModalState,\r\n  ChangeQuestionTableData,\r\n  ChangeQuestionSearchText,\r\n  ChangeSelectedSubjects,\r\n  ChangeSubjectTableData\r\n})(AllQuestions);","import React, { Component } from 'react'\r\nimport apis from '../../../services/Apis';\r\nimport { SecurePost } from '../../../services/axiosCall';\r\nimport Alert from '../../common/alert';\r\nimport { Button, Row, Col, Typography } from 'antd';\r\nimport Markdown from '../../../utils/Markdown';\r\nimport './conducttes.css';\r\n\r\nconst { Title } = Typography;\r\n\r\nexport default class Questions extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            loading: false,\r\n            total: 0\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.refreshquestionList();\r\n    }   \r\n\r\n    refreshquestionList = ()=>{\r\n        this.setState({\r\n            loading: true\r\n        });\r\n        \r\n        SecurePost({\r\n            url: `${apis.GET_TEST_QUESTIONS}`,\r\n            data: {\r\n                id: this.props.id\r\n            }\r\n        }).then((response) => {\r\n            // console.log(response);\r\n            if (response.data.success) {\r\n                this.props.updateQuestiosnTest(response.data.data);\r\n            }\r\n            else {\r\n                Alert('error', 'Error!', response.data.message)\r\n            }\r\n            this.setState({\r\n                loading: false\r\n            })\r\n        }).catch((error) => {\r\n            // console.log(error);\r\n            Alert('error', 'Error!', 'Server Error')\r\n            this.setState({\r\n                loading: false\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const aMap = ['A', 'B', 'C', 'D', 'E'];\r\n        var sum = 0;\r\n\r\n        return (\r\n            <div>\r\n                <Row>\r\n                    <Col span={24}>\r\n                        <h6 style={{fontSize: '14px'}}>\r\n                            Total Marks: {'  '}\r\n                            {\r\n                                this.props.questionsOfTest.reduce((accumulator, current) => accumulator + current.weightage, 0)\r\n                            }\r\n                        </h6>\r\n                    </Col>\r\n                </Row>\r\n                \r\n                {\r\n                    this.props.questionsOfTest.map((d, i) => {\r\n                        \r\n                        return(\r\n                            <div key={i} style={{ paddingBottom: '50px' }}>\r\n                                \r\n                                <Row>\r\n                                    <Col span={1}>\r\n                                        <Button type=\"primary\" shape=\"circle\" >{i+1}</Button>\r\n                                    </Col>\r\n                                    <Col span={d.quesimg?6:0}>\r\n                                        <img alt=\"unable to load\" src={d.quesimg} style={{width:'100%'}}/>\r\n                                    </Col>\r\n                                    <Col span={d.quesimg?16:22} style={{padding:'10px'}}>\r\n                                        <Markdown>{d.body}</Markdown>\r\n                                    </Col>\r\n                                    <Col span={1}>\r\n                                        Marks:{d.weightage}\r\n                                    </Col>\r\n                                    <Col offset={1} span={23}>\r\n                                        <Row>\r\n                                            {d.options.map((dd,ii)=>{\r\n                                                return(\r\n                                                    <Col key={ii} span={12} style={{paddingBottom:'30px'}}>\r\n                                                        <Row>\r\n                                                            <Col span={1}>\r\n                                                            {\r\n                                                                dd.isAnswer?<Button className=\"green\" shape=\"circle\">{aMap[ii]}</Button>:<Button type=\"primary\" shape=\"circle\">{aMap[ii]}</Button>\r\n                                                            }\r\n                                                            </Col>\r\n                                                            <Col offset={1} span={dd.optimg?8:0}>\r\n                                                                <img alt=\"unable to load\" src={dd.optimg} style={{width:'100%'}} />\r\n                                                            </Col>\r\n                                                            <Col offset={1} span={dd.optimg?12:21}>\r\n                                                                <p>{dd.optbody}</p>\r\n                                                            </Col>\r\n                                                        </Row>\r\n                                                    </Col>\r\n                                                )\r\n                                            })}\r\n                                        </Row>\r\n                                    </Col>\r\n                                </Row>\r\n\r\n                            </div> \r\n                        )\r\n                    })\r\n                }\r\n                \r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport './testdetails.css';\r\nimport { Card,Row,Col  } from 'antd';\r\nimport { Bar, Doughnut } from 'react-chartjs-2';\r\nimport {bgcolor,bordercolor} from '../../../services/bgcolor';\r\n\r\nexport default class Stats extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            id:this.props.id,\r\n            stats:this.props.stats,\r\n            Scorelable:[],\r\n            Scoredata:[],\r\n            bgColor1:[],\r\n            borcolor1:[],\r\n            maxmMarks:this.props.maxmMarks,\r\n            passData:[0,0],\r\n            passLable:['Fail','Pass'],\r\n            stat:['91% to 100%','81% to 90%','71% to 80%','61% to 70%','50% to 60%','Below 50%'],\r\n            statdata:[0,0,0,0,0,0]\r\n        } \r\n    }\r\n    \r\n    componentWillMount(){\r\n        let {bgColor1,borcolor1}=this.state;\r\n        var maxi=-1;\r\n        let p=0;\r\n        let f=0;\r\n        let p90_100=0;\r\n        let p80_90=0;\r\n        let p70_80=0;\r\n        let p60_70=0;\r\n        let p50_60=0;\r\n        let below50=0;\r\n        var pc=0;\r\n        this.state.stats.map((d, i) => {\r\n            pc = (d.score / this.state.maxmMarks) * 100;\r\n            if (pc >= 91) {\r\n                p90_100++;\r\n            }\r\n            else if (pc >= 81) {\r\n                p80_90++;\r\n            }\r\n            else if (pc >= 71) {\r\n                p70_80++;\r\n            }\r\n            else if (pc >= 61) {\r\n                p60_70++;\r\n            }\r\n            else if (pc >= 50) {\r\n                p50_60++;\r\n            }\r\n            else {\r\n                below50++;\r\n            }\r\n\r\n            if (d.score >= this.state.maxmMarks / 2) {\r\n                p++;\r\n            }\r\n            else {\r\n                f++;\r\n            }\r\n            if (d.score > maxi) {\r\n                maxi = d.score\r\n            }\r\n        });\r\n        var dp =[];\r\n        var label = [];\r\n        \r\n        for(let i=0;i<=maxi;i++){\r\n            dp.push(0);\r\n            label.push(i);\r\n            bgColor1.push(bgcolor[i]);\r\n            borcolor1.push(bordercolor[i]);\r\n\r\n        };\r\n        \r\n        this.state.stats.map((d, i) => {\r\n            dp[d.score]++;\r\n        });\r\n\r\n        this.setState({\r\n            Scorelable: label,\r\n            Scoredata: dp,\r\n            bgColor1: bgColor1,\r\n            borcolor1: borcolor1,\r\n            passData: [f, p],\r\n            statdata: [p90_100, p80_90, p70_80, p60_70, p50_60, below50]\r\n        });\r\n    }\r\n\r\n    render() {\r\n        let barData={\r\n            labels:this.state.Scorelable,\r\n            datasets:[{\r\n                label: 'Scores',\r\n                data: this.state.Scoredata,\r\n                backgroundColor:this.state.bgColor1,\r\n                borderColor:this.state.borcolor1,\r\n                borderWidth: 1\r\n            }]\r\n        }\r\n        let DoughNutData1={\r\n            labels:this.state.passLable,\r\n            datasets:[{\r\n                label: 'Pass/Fail',\r\n                data: this.state.passData,\r\n                backgroundColor:[bgcolor[0],bgcolor[1]],\r\n                borderColor:[bordercolor[0],bordercolor[1]],\r\n                borderWidth: 1\r\n            }]\r\n        }\r\n        let DoughNutData2={\r\n            labels:this.state.stat,\r\n            datasets:[{\r\n                label: 'Percentage wise category',\r\n                data: this.state.statdata,\r\n                backgroundColor:[bgcolor[0],bgcolor[1],bgcolor[2],bgcolor[3],bgcolor[4],bgcolor[5]],\r\n                borderColor:[bordercolor[0],bordercolor[1],bordercolor[2],bordercolor[3],bordercolor[4],bordercolor[5]],\r\n                borderWidth: 1\r\n            }]\r\n        }\r\n        return (\r\n            <div>\r\n                <div>\r\n                    <Card >\r\n                        <div className=\"download-section\">\r\n                            <b>Download the test result excel sheet.</b>\r\n                            <a href={this.props.file} target=\"_blank\" className=\"download-xlsx\">Download</a>\r\n                        </div>\r\n                    </Card>\r\n                </div> \r\n                <div style={{marginTop:'10px'}}>\r\n                    <Card >\r\n                        <div style={{padding:'10px 10px 0px 10px'}}>\r\n                            <b>Score vs No of students.</b>\r\n                        </div>\r\n                        <div style={{padding:'0px 10px 10px 10px'}}>\r\n                            <Bar\r\n                                data={barData}\r\n                                options={{ maintainAspectRatio: false }}\r\n                            />\r\n                        </div>\r\n                    </Card>\r\n                </div>\r\n                <div style={{marginTop:'10px'}}>\r\n                    <Card >\r\n                        <Row>\r\n                            <Col span={12}>\r\n                                <div style={{padding:'10px 10px 0px 10px'}}>\r\n                                    <b>Pass/Fail.</b>\r\n                                </div>\r\n                                <div style={{padding:'0px 10px 10px 10px'}}>\r\n                                    <Doughnut data={DoughNutData1} />\r\n                                </div>\r\n                            </Col>\r\n                            <Col span={12}>\r\n                                <div style={{padding:'10px 10px 0px 10px'}}>\r\n                                    <b>Percentage wise category.</b>\r\n                                </div>\r\n                                <div style={{padding:'0px 10px 10px 10px'}}>\r\n                                    <Doughnut data={DoughNutData2} />\r\n                                </div>\r\n                            </Col>\r\n                        </Row>\r\n                        \r\n                    </Card>\r\n                </div>                \r\n            </div>\r\n        )\r\n    };\r\n};\r\n","import React from 'react';\r\nimport { Table, Tag, Card, Typography } from 'antd';\r\n\r\nconst { Title } = Typography;\r\n\r\nexport default function Trainee(props) {\r\n    let maxMarks = props.maxmMarks || 2;\r\n\r\n    const columns = [\r\n        {\r\n            title: 'Name',\r\n            dataIndex: 'userid.name',\r\n            key: 'userid.name'\r\n        },\r\n        {\r\n            title: 'Email Id',\r\n            dataIndex: 'userid.emailid',\r\n            key: 'userid.emailid',\r\n        },\r\n        {\r\n            title: 'Contact No',\r\n            dataIndex: 'userid.contact',\r\n            key: 'userid.contact',\r\n        },\r\n        {\r\n            title: 'Organisation',\r\n            dataIndex: 'userid.organisation',\r\n            key: 'userid.organisation',\r\n        },\r\n        {\r\n            title:'Score',\r\n            dataIndex: 'score',\r\n            key: 'score',\r\n        },\r\n        {\r\n            title:'Status',\r\n            dataIndex:'score',\r\n            key: '_id',\r\n            render: tag => (\r\n                <span>\r\n                    <Tag color={tag >= maxMarks/2 ? 'green' : 'red'} key={tag}>\r\n                        {tag >= maxMarks/2 ? 'Pass' : 'Fail'}\r\n                    </Tag>\r\n                </span>\r\n            )\r\n        }\r\n    ];\r\n    return (\r\n        <div>\r\n            <Card>\r\n                <div className=\"download-section\">\r\n                    <Title level={4}>\r\n                        MCQ Assessment Result\r\n                    </Title>\r\n\r\n                    <Table \r\n                        pagination={false} \r\n                        rowKey=\"_id\" \r\n                        columns={columns} \r\n                        dataSource={props.stats}\r\n                    />\r\n                </div>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Card, Rate, Comment, Avatar } from 'antd';\r\n\r\nexport default function FeedBacks(props) {\r\n    // console.log(props.feedbacks);\r\n    return (\r\n        <div>\r\n            <Card>\r\n                <div className=\"download-section\">\r\n                    <h3>\r\n                        <b>Feedbacks</b>\r\n                    </h3>\r\n\r\n                    <div>\r\n                        {props.feedbacks.map((d,i)=>{\r\n                            return(\r\n                                <Card key={i} style={{marginBottom:'10px'}}>\r\n                                    <Comment\r\n                                        author={`${d.userid.name} - ${d.userid.organisation} `}\r\n                                        avatar={\r\n                                            <Avatar\r\n                                                src=\"https://res.cloudinary.com/gniusedu/image/upload/v1616994666/gnius-jpg_aspibu.jpg\"\r\n                                                alt={d.userid.name}\r\n                                            />\r\n                                        }\r\n                                        content={\r\n                                            <span>\r\n                                                <Rate size=\"small\" disabled defaultValue={d.rating} />\r\n                                                <p>\r\n                                                    {d.feedback}\r\n                                                </p>\r\n                                            </span>\r\n                                        }\r\n                                    />\r\n                                </Card>\r\n                            ) \r\n                        })}\r\n                    </div>\r\n                </div>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, Fragment, useEffect } from \"react\";\nimport AceEditor from \"react-ace\";\nimport { Typography, Button, notification, Icon } from 'antd';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\n\nimport \"ace-builds/src-noconflict/mode-java\";\nimport \"ace-builds/src-noconflict/mode-c_cpp\";\nimport \"ace-builds/src-noconflict/mode-python\";\nimport \"ace-builds/src-noconflict/mode-javascript\";\n\nimport \"ace-builds/src-noconflict/theme-github\";\nimport \"ace-builds/src-noconflict/theme-monokai\";\n\nimport { SecurePost } from '../../../../services/axiosCall';\nimport apis from '../../../../services/Apis';\nimport Markdown from '../../../../utils/Markdown';\n\nconst { Title, Text } = Typography;\nconst key = 'updatable';\n\nconst CodeEditor = (props) => {\n  const [question, setQuestion] = useState({\n    loading: false,\n    error: \"\",\n    evaluating: false,\n    question: \"\",\n    name: \"\",\n    language: \"\",\n    code: \"\",\n    editorMode: \"c_cpp\",\n    fontSize: 16,\n    testcaseshow: false \n  });\n\n  const [score, setscore] = useState([]);\n\n  // useEffect(() => {}, []);\n\n\n  const handleCodeChange = (ncode) => {\n    setQuestion({ ...question, code: ncode });\n    // console.log(ncode);\n  };\n  \n  const handleMode = (event) => {\n    let lang = event.target.value;\n  \n    let req_mode = \"c_cpp\";\n    \n    if (lang === '48') {\n      req_mode = \"c_cpp\"\n    }\n\n    if (lang === '52') {\n        req_mode = \"c_cpp\"\n    }\n\n    else if (lang ==='62') {\n      req_mode = \"java\"\n    }\n\n    else if (lang === '70') {\n      req_mode = \"python\"\n    }\n\n    else if (lang ==='71') {\n      req_mode = \"python\"\n    }\n\n    setQuestion({ ...question, editorMode: req_mode, language: lang })\n  };\n\n    // Submit Code For Evaluation\n    const submitCode = (event) => {\n        event.preventDefault();\n        setQuestion({ ...question, \n            error: \"\", \n            evaluating: true, \n            testcaseshow: false \n        });\n\n        // Submit\n        SecurePost({\n            url:apis.POST_SUBMISSION,\n            data:{\n                testId: props.test.testid,\n                traineeId: props.test.traineeid,\n                startTime: props.trainee.codingStartTime,\n                que_id: props.data._id,\n                source_code: question.code, \n                language_id: question.language,\n            }\n        })\n        .then((response) => {\n            setQuestion({ \n                ...question, \n                error: \"\", \n                evaluating: false, \n                testcaseshow: true \n            });\n\n            setscore(response.data.score);\n\n            // console.log(response.data.score);\n        })\n        .catch((error) => {\n            setQuestion({ \n                ...question, \n                error: \"\", \n                evaluating: false, \n                testcaseshow: true \n            });\n        });\n    };\n\n    const isEvaluating = (placement) => {\n        if(question.evaluating) {\n            return notification.info({\n                message: `Evaluating`,\n                description: 'We are evaluating your solution. Please Wait',\n                placement\n            });\n        }\n    };\n\n    const showResult = () => {\n        let i = 1;\n        return score.map((data) => {\n            return <div className=\"container\">\n            <div className=\"row\">\n                <div className=\"col-lg-6\">\n                    <b>Test Case - #</b>{i++}\n                </div>\n                \n                <div className=\"col-lg-6\">\n                    <b>Status - </b>{data} {'   '}\n                    {data === 'Passed' ? \n                        <Icon type=\"check-circle\" theme=\"twoTone\" twoToneColor=\"#52c41a\" />\n                        : <Icon type=\"close-circle\" theme=\"twoTone\" twoToneColor=\"#ff0000\" />\n                    }\n                </div>\n            </div>\n        </div>    \n        });\n    };\n\n  return (\n    <Fragment>\n\n        <div className=\"container\">\n            <div className=\"row\">\n                <div className=\"col-lg-12\">\n                    <div style={{marginTop: '10px'}} ></div>\n                </div>\n            </div>\n        </div>\n\n        {isEvaluating('bottomRight')}\n\n        <div className=\"container\">\n            <div className=\"row\">\n                {/* Left */}\n                <div className=\"col-lg-6\">\n                    \n                    <Text>\n                        Problem Id - {props.data._id}\n                    </Text>\n\n                    <Title level={4}>Problem Statement</Title>\n\n                    <div style={{ maxHeight: '500px', overflowY: 'scroll' }} >\n                        <Markdown>\n                            {props.data.statement}\n                        </Markdown>\n                    </div>\n\n                </div>\n                \n                {/* Right */}\n                <div className=\"col-lg-6\">\n\n                <select \n                    className=\"custom-select\" \n                    style={{marginTop: '10px', marginBottom: '10px', width: '50%'}}  \n                    onChange={handleMode}\n                >\n                    <option value=\"\" selected>Select Language</option>\n\n                    <option value=\"48\">C (GCC 7.4.0)</option>\n                    <option value=\"52\">C++ (GCC 7.4.0)</option>\n                    <option value=\"62\">Java (OpenJDK 13.0.1)</option>\n                    <option value=\"70\">Python (2.7.17)</option>\n                    <option value=\"71\">Python (3.8.1)</option>\n                </select>\n\n                <AceEditor\n                    mode={question.editorMode}\n                    theme=\"monokai\"\n                    name=\"editor\"\n                    fontSize={question.fontSize}\n                    editorProps={{ $blockScrolling: Infinity }}\n                    commands={[{   // commands is array of key bindings.\n                        name: 'pastline', //name for the key binding.\n                        bindKey: { win: 'Ctrl-V', mac: 'Command-V' }, //key combination used for the command.\n                        exec: function (editor) {\n                            // console.log(editor)\n                            const editorEvents = ['dragenter', 'dragover', 'dragend', 'dragstart', 'dragleave', 'drop'];\n                            for (const events of editorEvents) {\n                                // console.log(events)\n                                editor.container.addEventListener(events, function (e) { e.stopPropagation(); }, true);\n                            }\n                        }\n                    }]}\n                    onChange={handleCodeChange}\n                    value={question.code}\n                />\n\n                <div style={{marginTop: '10px', marginBottom: '10px'}}></div>\n\n                <Button \n                    type=\"primary\"\n                    onClick={submitCode}\n                    disabled={question.evaluating}\n                >\n                    Submit\n                </Button>\n\n                </div>\n            </div>\n        </div>\n\n        {question.testcaseshow ? \n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-lg-12\">\n                        <div style={{marginTop: '20px', textAlign: 'center'}}>\n                            <Title level={4}>Results</Title>\n\n                            <div style={{height: '100px', marginBottom:'30px', border: '2px solid #77acf1', width: '100%'}} >\n                                {score.length > 0 ? <div style={{ maxHeight: '100px', overflowY: 'scroll' }} >{showResult()}</div> : null}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div> \n            :\n            null\n        }\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = state => ({\n    trainee: state.trainee\n});\n\nexport default connect(mapStateToProps, null)(CodeEditor);","import apis from '../services/Apis';\r\nimport Alert from '../components/common/alert';\r\nimport { Post } from '../services/axiosCall';\r\n\r\nlet parse_time = (d) => {\r\n    // console.log(`${d}I am called`)\r\n    var m_left = Math.floor(d / 60);\r\n    var s_left = Number(String(d % 60).slice(0, 2));\r\n    return {\r\n        m_left: m_left,\r\n        s_left: s_left\r\n    }\r\n};\r\n\r\n\r\nexport const setTestDetsils = (d1, d2) => {\r\n    return ({\r\n        type: 'SET_TRAINEE_TEST_DETAILS',\r\n        payload1: d1,\r\n        payload2: d2\r\n    })\r\n};\r\n\r\nexport const LocaltestDone = (d) => dispatch => {\r\n    dispatch({\r\n        type: 'TEST_DONE_LOCAL'\r\n    });\r\n};\r\n\r\nexport const fetchTraineedata = (d) => dispatch => {\r\n    Post({\r\n        url: apis.FETCH_TRAINEE_DETAILS,\r\n        data: {\r\n            _id: d\r\n        }\r\n    }).then((response) => {\r\n        // console.log(response);\r\n        if (response.data.success) {\r\n            dispatch({\r\n                type: 'FETCH_LOGGED_IN_TRAINEE',\r\n                payload: response.data.data\r\n            });\r\n        }\r\n        else {\r\n            Alert('error', 'Error!', response.data.message);\r\n        }\r\n    });\r\n};\r\n\r\n\r\nexport const fetchTestdata =(d1,d2)=>dispatch=>{\r\n    Post({\r\n        url:apis.FETCH_TRAINEE_TEST_DETAILS,\r\n        data:{\r\n            testid:d1,\r\n            traineeid:d2\r\n        }\r\n    }).then((response)=>{\r\n        // console.log(response.data);\r\n        if(response.data.success){\r\n            if(response.data.data.completed || !response.data.data.startedWriting){\r\n                dispatch({\r\n                    type:'FETCH_TEST_FLAG',\r\n                    payload1: response.data.data.testbegins,\r\n                    payload2: response.data.data.startedWriting,\r\n                    payload3: response.data.data.testconducted,\r\n                    payload4: response.data.data.completed,\r\n                    payload5: 0,\r\n                    payload6: 0,\r\n                    payload7: response.data.data.addcoding\r\n                })\r\n            }\r\n            else{\r\n                let t = parse_time(response.data.data.pending);\r\n                dispatch({\r\n                    type: 'FETCH_TEST_FLAG',\r\n                    payload1: response.data.data.testbegins,\r\n                    payload2: response.data.data.startedWriting,\r\n                    payload3: response.data.data.testconducted,\r\n                    payload4: response.data.data.completed,\r\n                    payload5: t.m_left,\r\n                    payload6: t.s_left,\r\n                    payload7: response.data.data.addcoding\r\n                });\r\n            }\r\n            \r\n        }\r\n        else{\r\n            dispatch({\r\n                type: 'invalidUrl',\r\n            });\r\n        }\r\n    })\r\n    .catch((err) => {\r\n        dispatch({\r\n            type: 'invalidUrl',\r\n        });\r\n    });\r\n}\r\n\r\n\r\nexport const ProceedtoTest = (d1, d2, d3) => dispatch => {\r\n    // console.log(`Hello from ins${d1},${d2}`)\r\n    dispatch({\r\n        type: 'PROCEEDING_TO_TEST',\r\n        payload: true\r\n    });\r\n\r\n    Post({\r\n        url: `${apis.PROCEED_TO_TEST}`,\r\n        data: {\r\n            testid: d1,\r\n            userid: d2\r\n        }\r\n    }).then((response) => {\r\n        // console.log(response);\r\n        if (!response.data.success) {\r\n            Alert('error', 'Error!', response.data.message);\r\n        }\r\n\r\n        d3();\r\n\r\n        dispatch({\r\n            type: 'PROCEEDING_TO_TEST',\r\n            payload: false\r\n        });\r\n    }).catch((error) => {\r\n        // console.log(error)\r\n        dispatch({\r\n            type: 'PROCEEDING_TO_TEST',\r\n            payload: false\r\n        })\r\n        Alert('error', 'Error!', \"Server error\");\r\n    });\r\n};\r\n\r\n\r\nexport const fetchTraineeTestQuestions = (tid) => dispatch => {\r\n    Post({\r\n        url: `${apis.FETCH_TRAINEE_TEST_QUESTION}`,\r\n        data: {\r\n            id: tid\r\n        }\r\n    }).then((response) => {\r\n        // console.log(response.data);\r\n        if (response.data.success) {\r\n            dispatch({\r\n                type: 'UPDATE_TRAINEE_TEST_QUESTIONS',\r\n                payload: response.data.data\r\n            })\r\n        }\r\n        else {\r\n            Alert('error', 'Error!', response.data.message);\r\n        }\r\n    }).catch((error) => {\r\n        // console.log(error);\r\n        Alert('error', 'Error!', \"Server error\");\r\n    });\r\n};\r\n\r\n\r\nexport const fetchTraineeTestAnswerSheet = (tid, uid) => dispatch => {\r\n    Post({\r\n        url: `${apis.FETCH_TRAINEE_TEST_ANSWERSHEET}`,\r\n        data: {\r\n            testid: tid,\r\n            userid: uid\r\n        }\r\n    }).then((response) => {\r\n        if (response.data.success) {\r\n            // console.log(response.data.data);\r\n            var d = response.data.data.answers.map((d, i) => {\r\n                if (d.chosenOption.length === 0) {\r\n                    return ({\r\n                        ...d,\r\n                        isMarked: false,\r\n                        isAnswered: false\r\n                    })\r\n                }\r\n                else {\r\n                    return ({\r\n                        ...d,\r\n                        isMarked: false,\r\n                        isAnswered: true\r\n                    });\r\n                }\r\n            });\r\n\r\n            dispatch({\r\n                type: 'UPDATE_TRAINEE_TEST_ANSWERSHEET',\r\n                payload: d\r\n            });\r\n        }\r\n        else {\r\n            Alert('error', 'Error!', response.data.message);\r\n        }\r\n    }).catch((error) => {\r\n        // console.log(error);\r\n        Alert('error', 'Error!', \"Server error\");\r\n    });\r\n};\r\n\r\nexport const switchQuestion = (d1) => {\r\n    return {\r\n        type: 'SWITCH_QUESTION',\r\n        payload: d1\r\n    };\r\n};\r\n\r\nexport const updateIsMarked = (d1) => {\r\n    return {\r\n        type: 'UPDATE_TRAINEE_TEST_ANSWERSHEET',\r\n        payload: d1\r\n    };\r\n};\r\n\r\nexport const FeedbackStatus = (s) => {\r\n    return {\r\n        type: 'SET_HAS_GIVEN_FEEDBACK',\r\n        payload: s\r\n    };\r\n};\r\n\r\nexport const LoadCodingQuestion = (load, data) => {\r\n    return {\r\n        type: 'CODING_DATA',\r\n        payload1: load,\r\n        payload2: data\r\n    };\r\n};\r\n\r\n// Post Coding Section Start\r\nexport const startCoding = (tid, uid) => dispatch => {\r\n    Post({\r\n        url: `${apis.CODING_SECTION_START}`,\r\n        data: {\r\n            testId: tid,\r\n            traineeId: uid\r\n        }\r\n    })\r\n    .then((response) => {\r\n        if (response.data.success) {\r\n            // ... startTime\r\n            dispatch({\r\n                type: 'START_CODING',\r\n                payload: response.data.data.startTime\r\n            });\r\n        }\r\n        else {\r\n            Alert('error', 'Error!', response.data.message);\r\n        }\r\n    })\r\n    .catch((error) => {\r\n        Alert('error', 'Error!', \"Server error\");\r\n    });\r\n};\r\n\r\n// Post Coding Section Submit Data\r\nexport const submitCoding = (tid, uid) => dispatch => {\r\n    Post({\r\n        url: `${apis.CODING_SECTION_SUBMIT}`,\r\n        data: {\r\n            testId: tid,\r\n            traineeId: uid\r\n        }\r\n    })\r\n    .then((response) => {\r\n        if (response.data.success) {\r\n            dispatch({\r\n                type: 'SUBMIT_CODING',\r\n                payload: true\r\n            });\r\n        }\r\n        else {\r\n            Alert('error', 'Error!', response.data.message);\r\n        }\r\n    })\r\n    .catch((error) => {\r\n        Alert('error', 'Error!', \"Server error\");\r\n    });\r\n};\r\n\r\n// Get Coding Section Submit Data\r\nexport const getsubmitCoding = (tid, uid) => dispatch => {\r\n    Post({\r\n        url: `${apis.CODING_SECTION_GET}`,\r\n        data: {\r\n            testId: tid,\r\n            traineeId: uid\r\n        }\r\n    })\r\n    .then((response) => {\r\n        if (response.data.success) {\r\n            dispatch({\r\n                type: 'SUBMIT_CODING',\r\n                payload: response.data.message\r\n            });\r\n        }\r\n        else {\r\n            dispatch({\r\n                type: 'SUBMIT_CODING',\r\n                payload: response.data.message\r\n            });\r\n        }\r\n    })\r\n    .catch((error) => {\r\n        console.log(error);\r\n    });\r\n};\r\n","import React, { Fragment } from 'react';\nimport { Tabs, Skeleton, Button, Popconfirm, Icon } from 'antd';\nimport CountDown from 'ant-design-pro/lib/CountDown';\nimport queryString from 'query-string';\nimport { connect } from 'react-redux';\nimport $ from 'jquery';\nimport SweetAlert from 'sweetalert-react';\nimport 'sweetalert/dist/sweetalert.css';\n\nimport CodeEditor from './CodeEditor';\nimport { SecurePost } from '../../../../services/axiosCall';\nimport apis from '../../../../services/Apis';\nimport Alert from '../../../../components/common/alert';\nimport {\n    LoadCodingQuestion,\n    submitCoding,\n    startCoding\n} from '../../../../actions/traineeAction';\nimport './code.css';\n\nconst { TabPane } = Tabs;\nvar time = 0;\n\nclass Index extends React.Component {\n    constructor(props) {\n      super(props);\n\n      let params = {\n        testid: this.props.trainee.testid,\n        traineeid: this.props.trainee.traineeid\n      }\n      \n      this.state = {\n        mode: 'left',\n        testDetails: params,\n        testTime: 0,\n        show: false\n      };\n    }\n\n    // On Page Load\n    componentDidMount(){\n        const testId = this.props.trainee.testid;\n        const traineeId = this.props.trainee.traineeid;\n\n        this.props.startCoding(this.props.trainee.testid,this.props.trainee.traineeid); // Store Starting Time\n\n        var counter = 0; // mouse leave counter\n\n        // Mouse Leave Window Tracker\n        $(document).mouseleave(e => {\n            counter++;\n            this.setState({\n                leavecounter: counter,\n                show: true\n            });\n            \n            if (counter > 3) console.log('Submit');\n        });        \n\n        // Disable Copy Paste\n        $(document).ready(function () {\n            var ambit = $(document);\n        \n            // Disable Cut + Copy + Paste (input)\n            ambit.on('copy paste cut', function (e) {\n                e.preventDefault(); //disable cut,copy,paste\n                return false;\n            });\n\n\n            $('#codeditor').on(\"cut copy paste\", function(e) {\n                alert('copy paste not allowed!');\n                e.preventDefault();\n            });\n        });\n          \n        // Disable Right Click\n        $(function() {\n            $(this).bind(\"contextmenu\", function(e) {\n                e.preventDefault();\n            });\n        }); \n\n        this.setState({loading: true});\n\n        // Timer Start\n        if(localStorage.getItem('time') === null){\n            localStorage.setItem('time', new Date());\n        }\n        else {\n            time = localStorage.getItem('time');\n        }\n\n        SecurePost({\n            url:apis.GET_CODING_QUESTION_DATA,\n            data:{\n                testId: testId,\n            }\n        })\n        .then((response) => {\n            if(response.data.success){\n                this.props.LoadCodingQuestion(false,response.data.questions);\n                this.setState({testTime: response.data.time});\n            }\n            else{\n                return Alert('warning','Warning!',response.data.message);\n            }\n        })\n        .catch((error) => {\n            return Alert('error','Error!','Server Error');\n        });\n    };\n\n    handleModeChange = e => {\n        const mode = e.target.value;\n        this.setState({ mode });\n    };\n  \n    render() {\n      const { mode, testTime } = this.state;\n\n      // Time Tracker\n      \n      let targetTime = 0;\n\n      time = localStorage.getItem('time');\n      \n      if (time === 0) targetTime = new Date().getTime() + testTime*60000;\n      else targetTime = new Date(time).getTime()+ testTime*60000;\n\n      return (\n        <Fragment>\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-lg-12\">\n                        <div style={{marginTop: '20px'}}></div>\n                    </div>\n                </div>\n            </div>\n\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-lg-12\">\n                        <Skeleton loading={this.props.trainee.loadcoding} active avatar>\n                            \n                        <div style={{height: '80px'}} >\n                            <div className=\"container\">\n                                <div className=\"row\">\n                                    <div className=\"col-lg-6\">\n                                        <ul id=\"menu\">\n                                            <li>\n                                                <Icon style={{fontSize: '40px'}} type=\"code\" />\n                                            </li>\n\n                                            <li>\n                                                \n                                            </li>\n                                                \n                                            <li>\n                                                Timer :\n                                            </li>\n\n                                            <li>\n                                                <CountDown \n                                                    style={{ fontSize: 30 }} \n                                                    target={targetTime}\n                                                    onEnd={() => this.props.submitCoding(this.props.trainee.testid,this.props.trainee.traineeid)}\n                                                />\n                                            </li>\n                                        </ul>\n                                    </div>\n\n                                    <div className=\"col-lg-6\">\n                                        <Popconfirm\n                                            title=\"Are you sure to end the test\"\n                                            onConfirm={() => {\n                                                this.props.submitCoding(this.props.trainee.testid,this.props.trainee.traineeid);\n                                                localStorage.removeItem('time');\n                                            }}\n                                            okText=\"Yes\"\n                                            cancelText=\"No\"\n                                        >\n                                            <Button type=\"primary\">\n                                                Submit Section\n                                            </Button>\n                                        </Popconfirm>\n                                    </div>\n\n                                </div>\n                            </div>\n                        </div>\n\n                            <div style={{marginBottom: '50px'}} ></div>\n                            \n                            <Tabs defaultActiveKey=\"0\" tabPosition={mode} style={{ height: '100%' }}>\n                                {[...Array.from({ length: this.props.trainee.codingData.length }, (v, i) => i)].map(i => (\n                                    <TabPane tab={`Problem-${i+1}`} key={i}>\n\n                                        Problem {i+1}\n                                        \n                                        <br />\n                                        <CodeEditor \n                                            key={i} \n                                            data={this.props.trainee.codingData[i]} \n                                            test={this.state.testDetails} \n                                        />\n                                        \n                                    </TabPane>\n                                ))}\n                            </Tabs>\n                        </Skeleton>\n                    </div>\n                </div>\n            </div>\n            \n            <SweetAlert\n                show={this.state.show}\n                title=\" \"\n                text=\"Please Don't leave this tab, Untill you submit the assessment\"\n                onConfirm={() => this.setState({ show: false })}\n            />\n            \n        </Fragment>\n      );\n    }\n};\n\nconst mapStateToProps = state => ({\n    trainee: state.trainee\n});\n\nexport default connect(mapStateToProps, {\n    LoadCodingQuestion,\n    submitCoding,\n    startCoding\n})(Index);\n\n\n\n","import React, { Component } from 'react';\r\nimport { Rate, Input, Button, Col, Row, Typography, Divider } from 'antd';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { Post } from '../../../services/axiosCall';\r\nimport apis from '../../../services/Apis';\r\nimport Alert from '../../common/alert';\r\nimport { FeedbackStatus } from '../../../actions/traineeAction';\r\nimport './answer.css';\r\n\r\nconst { TextArea } = Input;\r\nconst { Title, Text } = Typography;\r\n\r\nclass Feedback extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            star: 0,\r\n            comment: \"excellent\",\r\n            loading: false\r\n        }\r\n    }\r\n\r\n    handleStarChange=(star)=>{\r\n        // console.log(star);\r\n        this.setState({ star:star });\r\n    } \r\n    onCommentChange=(comment)=>{\r\n        this.setState({ comment:comment.target.value });\r\n    }\r\n\r\n    submitFeedback=()=>{\r\n        this.setState({ loading: true });\r\n        let { star, comment } = this.state;\r\n        \r\n        if(star!==0 && comment.length>0){\r\n            Post({\r\n                url: apis.GIVE_FEEDBACK,\r\n                data: {\r\n                    testid: this.props.trainee.testid,\r\n                    userid: this.props.trainee.traineeid,\r\n                    rating: star,\r\n                    feedback: comment\r\n                }\r\n            })\r\n            .then((response) => {\r\n                if (response.data.success) {\r\n                    this.setState({ loading: false })\r\n                    Alert('success', 'Success', 'Thanks for your feedback');\r\n                    this.props.FeedbackStatus(true)\r\n                }\r\n                else {\r\n                    this.setState({ loading: false })\r\n                    Alert('error', 'Failed', response.data.message);\r\n                }\r\n            }).catch((error) => {\r\n                // console.log(error);\r\n                Alert('error', 'Failed', 'Server Error');\r\n                this.setState({ loading: false })\r\n            });\r\n        }\r\n        else {\r\n            // ...\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const desc = ['terrible', 'bad', 'normal', 'good', 'wonderful'];\r\n        return (\r\n            <Row>\r\n                <Col span={24}>\r\n                    <div\r\n                        style={{ width: '40%', margin: '25px', textAlign: 'left', padding: '10px' }}\r\n                    >\r\n                        <Title level={3}>Feedback Form</Title>\r\n                        <div className=\"pp\">\r\n                            <span>\r\n                                <Text>Please rate your experience</Text> <br />\r\n                                <Rate tooltips={desc} onChange={this.handleStarChange} value={this.state.star} />\r\n                                {this.state.star ? <span className=\"ant-rate-text\">{desc[this.state.star - 1]}</span> : ''}\r\n                            </span>\r\n                        </div>\r\n                        \r\n                        <Divider />\r\n\r\n                        <div className=\"pp\">\r\n                            <TextArea rows={2} onChange={this.onCommentChange} value={this.state.comment} />\r\n                        </div>\r\n                        \r\n                        <Divider />\r\n\r\n                        <div className=\"pp\">\r\n                            <Button type=\"primary\" onClick={this.submitFeedback} loading={this.state.loading}>Submit</Button>\r\n                        </div>\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n    trainee : state.trainee\r\n});\r\n\r\nexport default connect(mapStateToProps,{\r\n    FeedbackStatus\r\n})(Feedback);","import React from 'react';\r\nimport { Table, Icon, Tag, Skeleton, Descriptions, Modal, Button, Row, Col, Collapse } from 'antd';\r\nimport { Typography } from 'antd';\r\nimport { Result } from 'antd';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Coding from '../examPortal/coding/index';\r\n\r\nimport { Post, SecurePost } from '../../../services/axiosCall';\r\nimport apis from '../../../services/Apis';\r\nimport Alert from '../../common/alert';\r\nimport Feedback from '../answersheet/feedback';\r\n\r\nimport { \r\n    FeedbackStatus,\r\n    getsubmitCoding\r\n} from '../../../actions/traineeAction';\r\nimport Markdown from '../../../utils/Markdown';\r\n\r\nimport './answer.css';\r\nimport './answermobileview.css';\r\nimport './individualquestion_mobileview.css';\r\n\r\nconst { Title } = Typography;\r\nconst { Panel } = Collapse;\r\n\r\nclass Answer extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            loading:false,\r\n            data:[],\r\n            TotalScore:null,\r\n            Mvisible:false,\r\n            ActiveQuestionId:null\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        let traineeid = this.props.trainee.traineeid || this.props.user.userid._id;\r\n        let testid = this.props.trainee.testid || this.props.user.userid.testid;\r\n\r\n        // Get Submitted Coding Section Data\r\n        this.props.getsubmitCoding(this.props.trainee.testid, this.props.trainee.testid);\r\n\r\n        this.setState({\r\n            loading:true\r\n        });\r\n        \r\n        let p1 = Post({\r\n            url: apis.FETCH_OWN_RESULT,\r\n            data: {\r\n                userid: traineeid,\r\n                testid: testid\r\n            }\r\n        });\r\n        \r\n        let p2 = Post({\r\n            url:`${apis.FETCH_TRAINEE_TEST_QUESTION}`,\r\n            data:{\r\n                id:testid\r\n            }\r\n        });\r\n\r\n        let p3 = Post({\r\n            url: `${apis.FEEDBACK_STATUS_CHECK}`,\r\n            data: {\r\n                userid: traineeid,\r\n                testid: testid\r\n            }\r\n        });\r\n        \r\n        Promise.all([p1, p2, p3])\r\n            .then(d => {\r\n            \r\n            //console.log(d);\r\n            \r\n            this.setState({\r\n                loading:false\r\n            });\r\n\r\n            if(d[0].data.success && d[1].data.success){\r\n                let v = d[1].data.data;\r\n                let r = d[0].data.result.result.map((dd, i) => {\r\n                    return ({\r\n                        ...dd,\r\n                        ...v[i]\r\n                    });\r\n                });\r\n\r\n                // console.log(r);\r\n                \r\n                this.setState({\r\n                    data: r,\r\n                    TotalScore: d[0].data.result.score\r\n                });\r\n\r\n                if(d[2].data.success){\r\n                    this.props.FeedbackStatus(d[2].data.status);\r\n                }\r\n            }\r\n            else{\r\n                Alert('error','Error!',`${d[0].data.success ? \"\":d[0].data.message} and ${d[1].data.success ? \"\":d[1].data.message}`)\r\n            }\r\n        })\r\n        .catch((err) => {\r\n            // console.log(err)\r\n            this.setState({\r\n                loading:false\r\n            });\r\n            Alert('error','Error!',\"Server Error\")\r\n        })\r\n    }\r\n\r\n    handleCancel=()=>{\r\n        this.setState({\r\n            Mvisible: false\r\n        });\r\n    }\r\n\r\n    OpenModel = (qid) => {\r\n        this.setState({\r\n            ActiveQuestionId: qid,\r\n            Mvisible: true\r\n        })\r\n    };\r\n\r\n    callback = (key) => {\r\n        // console.log(key);\r\n    }\r\n\r\n    render(){\r\n        const columns = [\r\n            {\r\n                title: 'View Question',\r\n                key: 'action',\r\n                render: (text, record) => (\r\n                    <Button \r\n                        shape=\"circle\" \r\n                        icon=\"info\" \r\n                        type=\"primary\" \r\n                        size=\"small\" \r\n                        onClick={() => { this.OpenModel(text.qid) }}\r\n                    ></Button>\r\n                )\r\n            },\r\n            {\r\n                title: \"Question\",\r\n                dataIndex: 'body',\r\n                key: 'body'\r\n            },\r\n            {\r\n                title: 'Correct Answers',\r\n                key: 'correctAnswer',\r\n                dataIndex: 'correctAnswer',\r\n                render: tags => (\r\n                    <span>\r\n                        {tags.map(tag => {\r\n                            return (\r\n                                <Tag color=\"green\" key={tag}>\r\n                                    {tag.toUpperCase()}\r\n                                </Tag>\r\n                            );\r\n                        })}\r\n                    </span>\r\n                ),\r\n            },\r\n            {\r\n                title: 'Given Answers',\r\n                key: 'givenAnswer',\r\n                dataIndex: 'givenAnswer',\r\n                render: tags => (\r\n                    <span>\r\n                        {tags.map(tag => {\r\n                            return (\r\n                                <Tag color=\"blue\" key={tag}>\r\n                                    {tag.toUpperCase()}\r\n                                </Tag>\r\n                            );\r\n                        })}\r\n                    </span>\r\n                ),\r\n            },\r\n            {\r\n                title: 'Weightage',\r\n                dataIndex: 'weightage',\r\n                key: 'weightage',\r\n            },\r\n            {\r\n                title: \"Explanation\",\r\n                dataIndex: 'explanation',\r\n                key: 'explanation',\r\n            },\r\n            {\r\n                title: \"Status\",\r\n                dataIndex: 'iscorrect',\r\n                key: 'iscorrect',\r\n                render: tags => (\r\n                    <span>\r\n                        {\r\n                            tags ?\r\n                            \r\n                                <Icon type=\"check-circle\" theme=\"twoTone\" twoToneColor=\"#52c41a\" />\r\n                                :\r\n                                <Icon type=\"close-circle\" theme=\"twoTone\" twoToneColor=\"red\" />\r\n                        }\r\n                    </span>\r\n                    \r\n                )\r\n            }\r\n        ];\r\n\r\n        // let td = this.props.user.userid;\r\n        \r\n        return (\r\n            <div className=\"answer-table-outer\">\r\n                <div className=\"answer-table-wrapper\">\r\n                    {this.props.userData.isLoggedIn ?\r\n                        <div>\r\n                            <Title className=\"answer-table-heading\" level={4}>Result</Title>\r\n                            <Descriptions bordered title={null} border size=\"small\">\r\n                                <Descriptions.Item label=\"Name\">\r\n                                    {this.props.user.userid.name}\r\n                                </Descriptions.Item>\r\n                                \r\n                                <Descriptions.Item label=\"Email Id\">\r\n                                    {this.props.user.userid.emailid}\r\n                                </Descriptions.Item>\r\n\r\n                                <Descriptions.Item label=\"Contact\">\r\n                                    {this.props.user.userid.contact}\r\n                                </Descriptions.Item>\r\n                                \r\n                                <Descriptions.Item label=\"Score\">\r\n                                    {this.state.TotalScore}\r\n                                </Descriptions.Item>\r\n                            </Descriptions>\r\n                                        \r\n                            <br />\r\n\r\n                            <Collapse onChange={this.callback}>\r\n                                <Panel header=\"Candidate Response\" key=\"1\">\r\n                                    <Table\r\n                                        size=\"small\"\r\n                                        rowKey=\"qid\"\r\n                                        loading={this.state.loading}\r\n                                        columns={columns}\r\n                                        dataSource={this.state.data}\r\n                                        pagination={false}\r\n                                    />\r\n                                </Panel>\r\n                            </Collapse>\r\n                        </div> : null\r\n                    }\r\n                \r\n                    {\r\n                        this.props.userData.isLoggedIn ? null\r\n                            : this.props.trainee.hasGivenFeedBack ?\r\n                            <Row justify=\"space-around\" align=\"middle\">\r\n                                <Col xs={12} sm={12} md={12} lg={24} xl={24}>\r\n                                    <Result\r\n                                        status=\"success\"\r\n                                        title=\"Successfully You Have completed the assessment!\"\r\n                                        subTitle=\"Please Close the Window Now\"\r\n                                    />\r\n                                </Col>\r\n                            </Row> : \r\n                            <div>\r\n                                {/* Coding Section */}\r\n                                {\r\n                                    this.props.trainee.Iscoding ? \r\n                                    <div>\r\n                                        {\r\n                                            this.props.trainee.codingsubmitted ? <Feedback /> : <Coding /> \r\n                                        }\r\n                                    </div>\r\n                                    : <Feedback />\r\n                                }\r\n                            </div>\r\n                    }\r\n\r\n                    <Modal\r\n                        destroyOnClose={true}\r\n                        width=\"70%\"\r\n                        style={{top:'30px'}}\r\n                        title=\"Question details\"\r\n                        visible={this.state.Mvisible}\r\n                        onOk={this.handleCancel}\r\n                        onCancel={this.handleCancel}\r\n                        footer={null}\r\n                    >\r\n                        <SingleQuestionDetails qid={this.state.ActiveQuestionId} />\r\n                    </Modal>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n};\r\n\r\n// Single Question Details \r\nclass SingleQuestionDetails extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            fetching:false,\r\n            qdetails:null\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.setState({\r\n            fetching:true\r\n        })\r\n        Post({\r\n            url:apis.FETCH_SINGLE_QUESTION_BY_TRAINEE,\r\n            data:{\r\n                qid:this.props.qid\r\n            }\r\n        })\r\n        .then((response) => {\r\n            // console.log(response)\r\n            if(response.data.success){\r\n                this.setState({\r\n                    qdetails:response.data.data[0]\r\n                })\r\n            }\r\n            else{\r\n                Alert('error','Error !',response.data.message);\r\n            }\r\n            this.setState({\r\n                fetching:false\r\n            })\r\n        })\r\n        .catch((error) => {\r\n            this.setState({\r\n                fetching: false\r\n            });\r\n            // console.log(error)\r\n            Alert('error','Error !',\"Server Error\");\r\n        });\r\n    }\r\n    \r\n    render(){\r\n        const optn = ['A', 'B', 'C', 'D', 'E'];\r\n        let Optiondata = this.state.qdetails;\r\n        \r\n        if(Optiondata!==null){\r\n            return (\r\n                <div>\r\n                    <div className=\"mainQuestionDetailsContaine\">\r\n                        <div className=\"questionDetailsBody\">\r\n                            {Optiondata.body}\r\n                        </div>\r\n                        {Optiondata.quesimg?\r\n                            <div className=\"questionDetailsImageContainer\">\r\n                                <img alt=\"Unable to load\" className=\"questionDetailsImage\" src={Optiondata.quesimg} />  \r\n                            </div>\r\n                            : null\r\n                        }\r\n                        <div>\r\n                            {Optiondata.options.map((d,i)=>{\r\n                                return(\r\n                                    <div key={i}>\r\n                                        <Row type=\"flex\" justify=\"center\" className=\"QuestionDetailsOptions\">\r\n                                            <Col span={2}>\r\n                                                {\r\n                                                    d.isAnswer?<Button className=\"green\" shape=\"circle\">{optn[i]}</Button>:<Button type=\"primary\" shape=\"circle\">{optn[i]}</Button>\r\n                                                }\r\n                                                \r\n                                            </Col>\r\n                                            {d.optimg?\r\n                                                <Col span={6} style={{padding:'5px'}}>\r\n                                                    <img alt=\"Unable to load\" className=\"questionDetailsImage\" src={d.optimg} />\r\n                                                </Col>\r\n                                            :\r\n                                                null\r\n                                            }\r\n                                            {d.optimg?\r\n                                                <Col span={14}>\r\n                                                    <Markdown>{d.optbody}</Markdown>\r\n                                                </Col>\r\n                                            :\r\n                                                <Col span={20}>\r\n                                                    <Markdown>{d.optbody}</Markdown>\r\n                                                </Col>\r\n                                            }\r\n                                        </Row>\r\n                                    \r\n                                    </div>\r\n                                )\r\n                            })}\r\n                        </div>\r\n                    </div>\r\n    \r\n                </div>\r\n            )\r\n        }\r\n        else{\r\n            return(\r\n                <div className=\"skeletor-wrapper\">\r\n                    <Skeleton active />\r\n                    <Skeleton active />\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    userData: state.user,\r\n    trainee : state.trainee\r\n});\r\n\r\nexport default connect(mapStateToProps,{\r\n    FeedbackStatus,\r\n    getsubmitCoding\r\n})(Answer);","import React, { useState} from 'react';\r\nimport { Table, Tag, Card, Modal, Button } from 'antd';\r\nimport AnswerSheet from '../../trainee/answersheet/answer';\r\n\r\nexport default function Trainee (props){\r\n    return (\r\n        <div>\r\n            <Card>\r\n                <div className=\"download-section\">\r\n                    {props.stats.map(data => (\r\n                        <AnswerSheet user={data} key={data} />\r\n                    ))}\r\n                </div>\r\n            </Card>\r\n        </div>\r\n    )\r\n};\r\n","import React, { Fragment, useState, useEffect } from 'react';\nimport MaterialTable from 'material-table';\nimport { connect } from 'react-redux';\nimport moment from 'moment';\nimport { Input, Button, Typography, Tabs, Icon, Modal } from 'antd';\n\nimport AceEditor from \"react-ace\";\n\nimport \"ace-builds/src-noconflict/mode-java\";\nimport \"ace-builds/src-noconflict/mode-c_cpp\";\nimport \"ace-builds/src-noconflict/mode-python\";\nimport \"ace-builds/src-noconflict/mode-javascript\";\n\nimport \"ace-builds/src-noconflict/theme-github\";\nimport \"ace-builds/src-noconflict/theme-monokai\";\n\nimport Prism from \"prismjs\";\nimport \"prismjs/themes/prism-tomorrow.css\";\n\nimport { SecurePost } from '../../../services/axiosCall';\nimport apis from '../../../services/Apis';\nimport  Alert  from '../../common/alert';\n\nconst CodingResult = (props) => {\n  const [state, setstate] = useState({});\n  const [loading, setloading] = useState(false);\n  const [isModalVisible, setIsModalVisible] = useState(false);\n\n  // Modal\n  const showModal = () => {\n    setIsModalVisible(true);\n  };\n\n  const handleOk = () => {\n    setIsModalVisible(false);\n  };\n\n  const handleCancel = () => {\n    setIsModalVisible(false);\n  };\n\n  useEffect(() => {\n    Prism.highlightAll();\n\n    setloading(true);\n\n    SecurePost({\n      url: apis.CODING_SUBMISSION_GET,\n      data: {\n        testId: props.id\n      }\n    })\n    .then((response) => {\n      if(response.data.success){\n        setstate({\n          result: response.data.result,\n          submission: response.data.submission\n        });\n        setloading(false);\n      }\n    })\n    .catch((error)=>{\n      console.log(error);\n      return Alert('error','Error!','Server Error');\n    });\n  }, []);\n\n  // Show Code\n  const showcode = (data, lang) => {\n    let language = '';\n\n    if (lang === '48') {\n      language = \"c_cpp\"\n    }\n\n    if (lang === '52') {\n      language = \"c_cpp\"\n    }\n\n    else if (lang ==='62') {\n      language = \"java\"\n    }\n\n    else if (lang === '70') {\n      language = \"python\"\n    }\n\n    else if (lang ==='71') {\n      language = \"python\"\n    }\n\n    return <AceEditor\n        mode={language}\n        theme=\"monokai\"\n        readOnly=\"true\"\n        name=\"editor\"\n        fontSize=\"14\"\n        editorProps={{ $blockScrolling: Infinity }}        \n        value={data}\n      />\n  };\n\n  return (\n    <Fragment>\n      <MaterialTable\n        title=\"Coding Assessment Result\"\n        columns={[\n          { title: 'Id', field: 'user._id' },\n          { title: 'Name', field: 'user.name' },\n          { title: 'Email', field: 'user.emailid' },\n          { title: 'Question Id', field: 'question' },\n          {\n            title: 'Language',\n            render: rowData => {\n              let lang = rowData.lang;\n              \n              let language = \"c_cpp\";\n    \n              if (lang === '48') {\n                language = \"c_cpp\"\n              }\n              else if (lang === '52') {\n                language = \"c_cpp\"\n              }\n              else if (lang ==='62') {\n                language = \"java\"\n              }\n              else if (lang === '70') {\n                language = \"python\"\n              }\n              else if (lang ==='71') {\n                language = \"python\"\n              }\n              return language\n            }\n          },\n          { title: 'Score', field: 'score' },\n          { \n            title: 'Time Taken (in mins.)',\n            render: rowData => {\n              var a = moment(rowData.startTime);\n              var b = moment(rowData.submit_time);\n              return b.diff(a, 'minutes')\n            }\n          },\n          { \n            title: 'Start Time', \n            field: 'startTime',\n            render: rowData => moment(rowData.startTime).format('MMMM Do YYYY, h:mm:ss a')\n          },\n          { \n            title: 'Submit Time', \n            field: 'submit_time',\n            render: rowData => moment(rowData.submit_time).format('MMMM Do YYYY, h:mm:ss a')\n          },\n          { \n            title: 'Result', \n            field: 'result.str'\n          },\n\n          { title: 'Exceution Time', field: 'result.time' },\n          { title: 'Memory Used', field: 'result.memory' },\n        ]}\n\n        data={state.result}\n\n        detailPanel={[\n          {\n            tooltip: 'Show Code',\n            render: rowData => {\n              return (\n                <div\n                  style={{\n                    fontSize: 14,\n                    textAlign: 'center',\n                    color: 'black',\n                    backgroundColor: '#fff',\n                  }}\n                >\n                  {showcode(rowData.sourcecode, rowData.lang)}\n                </div>\n              )\n            },\n          }\n        ]}\n        options={{\n          filtering: true,\n          exportButton: true,\n          headerStyle: {\n            backgroundColor: '#01579b',\n            color: '#FFF'\n          }\n        }}\n      />\n\n      \n    </Fragment>\n  );\n};\n\nexport default CodingResult;\n","import React, { Component } from 'react'\r\nimport { Tabs, Icon, Descriptions,Skeleton, Tag, Input ,message, Modal, Button} from 'antd';\r\nimport { connect } from 'react-redux';\r\nimport moment from 'moment';\r\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\r\n\r\n\r\nimport Questions from '../conducttest/questions'\r\nimport {updateQuestiosnActiveTest } from '../../../actions/trainerAction';\r\nimport { SecurePost } from '../../../services/axiosCall';\r\nimport apis from '../../../services/Apis';\r\nimport  Alert  from '../../common/alert';\r\n\r\nimport './testdetails.css';\r\nimport Stats from './stats';\r\nimport Trainee from './trainee';\r\nimport FeedBacks from './feedbacks';\r\nimport Analysis from './Analysis';\r\nimport Coding from './CodingResult';\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nclass TestDetails extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            id:this.props.trainer.DataActiveTestDetails.testDetailsId,\r\n            testdetails:null,\r\n            stats:null,\r\n            file:null,\r\n            loading:true,\r\n            maxMarks:0,\r\n            mainlink:'',\r\n            feedbacks: [],\r\n            visible: false\r\n        }\r\n    }\r\n\r\n    showModal = () => {\r\n      this.setState({\r\n        visible: true,\r\n      });\r\n    };\r\n  \r\n    handleOk = e => {\r\n      // console.log(e);\r\n      this.setState({\r\n        visible: false,\r\n      });\r\n    };\r\n  \r\n    handleCancel = e => {\r\n      // console.log(e);\r\n      this.setState({\r\n        visible: false,\r\n      });\r\n    };\r\n\r\n    tabChange = (key) => {\r\n        // console.log(key)\r\n    };\r\n\r\n    componentDidMount(){\r\n        var link = window.location.href.split('/').splice(0,3);\r\n        var mainlink=\"\";\r\n        link.forEach((d,i)=>{\r\n            mainlink=mainlink+d+\"/\"\r\n        });\r\n        this.setState({mainlink});\r\n        var p1 = SecurePost({\r\n            url: `${apis.GET_SINGLE_TEST}`,\r\n            data: {\r\n                id: this.state.id\r\n            }\r\n        });\r\n\r\n        var p2 = SecurePost({\r\n            url: apis.GET_STATS,\r\n            data: {\r\n                testid: this.state.id\r\n            }\r\n        });\r\n\r\n        var p3 = SecurePost({\r\n            url: apis.GET_EXCEL,\r\n            data: {\r\n                id: this.state.id\r\n            }\r\n        });\r\n\r\n        var p4 = SecurePost({\r\n            url: apis.MAX_MARKS_FETCH,\r\n            data: {\r\n                testid: this.state.id\r\n            }\r\n        });\r\n\r\n        var p5 = SecurePost({\r\n            url: apis.GET_FEEDBACKS,\r\n            data: {\r\n                testid: this.state.id\r\n            }\r\n        });\r\n        \r\n        Promise.all([p1, p2, p3, p4, p5]).then((response) => {\r\n            // console.log(response);\r\n\r\n            if (response[0].data.success && response[1].data.success && response[2].data.success && response[3].data.success && response[4].data.success) {\r\n                this.setState({\r\n                    testdetails: response[0].data.data,\r\n                    stats: response[1].data.data,\r\n                    file: response[2].data.file,\r\n                    maxMarks: response[3].data.data,\r\n                    loading: false,\r\n                    feedbacks: response[4].data.data\r\n                });\r\n            }\r\n            else {\r\n                Alert('error', 'Error !', response[0].data.message + response[1].data.message + response[2].data.message)\r\n            }\r\n        }).catch((error) => {\r\n            // console.log(error);\r\n            Alert('error', 'Error !', 'Server Error.')\r\n        });\r\n    }\r\n    \r\n\r\n    render() {\r\n        if(this.state.loading){\r\n            return(\r\n                <div className=\"skeletor-wrapper\">\r\n                    <Skeleton active />\r\n                    <Skeleton active />\r\n                </div>\r\n            )\r\n        }\r\n        else{\r\n            let { testdetails, id } = this.state;\r\n\r\n            return (\r\n                <div>\r\n                    <Tabs defaultActiveKey=\"1\" onChange={ (e)=>this.tabChange(e)}>\r\n                        <TabPane tab={ <span><Icon type=\"home\" />Details</span> } key=\"1\">\r\n                            <Descriptions bordered title=\"\" border size=\"small\" column={{ xxl: 1, xl: 1, lg: 1, md: 1, sm: 1, xs: 1 }}>\r\n\r\n                                <Descriptions.Item label=\"Assessment Id\">\r\n                                    {this.props.trainer.DataActiveTestDetails.testDetailsId}\r\n                                </Descriptions.Item>\r\n\r\n                                <Descriptions.Item label=\"Assessment Link\">\r\n                                    <Input disabled={true} value={`${this.state.mainlink}user/conducttest?testid=${id}`} addonAfter={<CopyToClipboard text={`${this.state.mainlink}user/conducttest?testid=${id}`} onCopy={()=>message.success('Link Copied to clipboard')}>\r\n                                        <Icon type=\"copy\"/></CopyToClipboard>}/>\r\n                                </Descriptions.Item>\r\n\r\n                                <Descriptions.Item label=\"Assessment Name\">\r\n                                    {testdetails.title}\r\n                                </Descriptions.Item>\r\n\r\n                                <Descriptions.Item label=\"Assessment Type\">\r\n                                    {testdetails.type}\r\n                                </Descriptions.Item>\r\n\r\n                                <Descriptions.Item label=\"Subject\">\r\n                                    <span>\r\n                                    {testdetails.subjects.map((tag,i) => {\r\n                                        let color ='geekblue';\r\n                                        return (\r\n                                        <Tag color={color} key={tag._id}>\r\n                                            {tag.topic.toUpperCase()}\r\n                                        </Tag>\r\n                                        );\r\n                                    })}\r\n                                    </span>\r\n                                </Descriptions.Item>\r\n\r\n                                <Descriptions.Item label=\"Created on\">\r\n                                    {moment(testdetails.createdAt).format(\"DD/ MM/YYYY\")}\r\n                                </Descriptions.Item>\r\n                                \r\n                            </Descriptions>\r\n                        </TabPane>\r\n\r\n                        {testdetails.testconducted?\r\n                            <TabPane tab={ <span><Icon type=\"question-circle\" />Questions</span> } key=\"2\">\r\n                                <Questions id={this.props.trainer.DataActiveTestDetails.testDetailsId} questionsOfTest={this.props.trainer.DataActiveTestDetails.testquestions} updateQuestiosnTest={this.props.updateQuestiosnActiveTest}/>\r\n                            </TabPane>\r\n                        : null}\r\n                        \r\n                        {testdetails.testconducted?\r\n                            <TabPane tab={ <span><Icon type=\"user\" />Candidates</span> } key=\"3\">\r\n                                <Trainee maxmMarks={this.state.maxMarks} id={this.state.id} stats={this.state.stats}/>\r\n                            </TabPane>\r\n                        : null}\r\n                        \r\n                        \r\n                        {testdetails.testconducted?\r\n                            <TabPane tab={ <span><Icon type=\"pie-chart\" />Statistics</span> } key=\"4\">\r\n                                <Stats id={this.state.id} stats={this.state.stats} file={this.state.file} maxmMarks={this.state.maxMarks}/>\r\n                            </TabPane>\r\n                        : null}\r\n                        \r\n                        {testdetails.testconducted?\r\n                            <TabPane tab={ <span><Icon type=\"message\" />Feedbacks</span> } key=\"5\">\r\n                               <FeedBacks feedbacks={this.state.feedbacks}/>\r\n                            </TabPane>\r\n                        : null}\r\n                        \r\n                        {testdetails.testconducted?\r\n                            <TabPane tab={ <span><Icon type=\"bar-chart\" />Analysis</span> } key=\"6\">\r\n                               <Analysis maxmMarks={this.state.maxMarks} id={this.state.id} stats={this.state.stats} />\r\n                            </TabPane>\r\n                        :null}\r\n\r\n\r\n                        {testdetails.testconducted && testdetails.addcoding?\r\n                            <TabPane tab={ <span><Icon type=\"code\" />Coding</span> } key=\"7\">\r\n                               <Coding id={this.state.id} />\r\n                            </TabPane>\r\n                        : null}\r\n                    </Tabs>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    trainer : state.trainer\r\n});\r\n\r\nexport default connect(mapStateToProps,{\r\n    updateQuestiosnActiveTest\r\n})(TestDetails);\r\n","import React, { Component } from 'react';\r\nimport { Table, Input, Button, Icon, Typography, Modal,Tag   } from 'antd';\r\nimport Highlighter from 'react-highlight-words';\r\nimport { connect } from 'react-redux';\r\nimport { \r\n    ChangeTestSearchText,\r\n    ChangeTestTableData,\r\n    ChangeTestDetailsModalState\r\n} from '../../../actions/trainerAction';\r\nimport './alltest.css';\r\nimport moment from 'moment';\r\n\r\nimport TestDetails from '../testdetails/testdetails';\r\n\r\nclass AllTests extends Component {\r\n\r\n    openModal = (id)=>{\r\n        this.props.ChangeTestDetailsModalState(true,id);\r\n    }\r\n    \r\n    closeModal = ()=>{\r\n        this.props.ChangeTestDetailsModalState(false,null);\r\n    }\r\n    componentDidMount(){\r\n      this.props.ChangeTestTableData();\r\n    }\r\n\r\n    getColumnSearchProps = dataIndex => ({\r\n        filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => (\r\n          <div style={{ padding: 8 }}>\r\n            <Input\r\n              ref={node => {\r\n                this.searchInput = node;\r\n              }}\r\n              placeholder={`Search ${dataIndex}`}\r\n              value={selectedKeys[0]}\r\n              onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\r\n              onPressEnter={() => this.handleSearch(selectedKeys, confirm)}\r\n              style={{ width: 188, marginBottom: 8, display: 'block' }}\r\n            />\r\n            <Button\r\n              type=\"primary\"\r\n              onClick={() => this.handleSearch(selectedKeys, confirm)}\r\n              icon=\"search\"\r\n              size=\"small\"\r\n              style={{ width: 90, marginRight: 8 }}\r\n            >\r\n              Search\r\n            </Button>\r\n            <Button onClick={() => this.handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>\r\n              Reset\r\n            </Button>\r\n          </div>\r\n        ),\r\n        filterIcon: filtered => (\r\n          <Icon type=\"search\" style={{ color: filtered ? '#1890ff' : undefined }} />\r\n        ),\r\n        onFilter: (value, record) =>\r\n          record[dataIndex]\r\n            .toString()\r\n            .toLowerCase()\r\n            .includes(value.toLowerCase()),\r\n        onFilterDropdownVisibleChange: visible => {\r\n          if (visible) {\r\n            setTimeout(() => this.searchInput.select());\r\n          }\r\n        },\r\n        render: text => (\r\n          <Highlighter\r\n            highlightStyle={{ backgroundColor: '#ffc069', padding: 0 }}\r\n            searchWords={[this.props.trainer.TestsearchText]}\r\n            autoEscape\r\n            textToHighlight={text.toString()}\r\n          />\r\n        ),\r\n      });\r\n    \r\n      handleSearch = (selectedKeys, confirm) => {\r\n        confirm();\r\n        this.props.ChangeTestSearchText(selectedKeys[0])\r\n      };\r\n    \r\n      handleReset = clearFilters => {\r\n        clearFilters();\r\n        this.props.ChangeTestSearchText('')\r\n      };\r\n\r\n    render() {\r\n      const { Title } = Typography;\r\n      const columns = [\r\n        {\r\n          title: 'Name',\r\n          dataIndex: 'title',\r\n          key: 'title',\r\n          ...this.getColumnSearchProps('title'),\r\n        },\r\n        {\r\n          title: 'Type',\r\n          dataIndex: 'type',\r\n          key: 'type',\r\n          ...this.getColumnSearchProps('type'),\r\n        },\r\n        {\r\n          title: 'Subjects',\r\n          dataIndex: 'subjects',\r\n          key: 'subjects._id',\r\n          render: tags => (\r\n            <span>\r\n              {tags.map((tag,i) => {\r\n                let color ='geekblue';\r\n                return (\r\n                  <Tag color={color} key={tag._id}>\r\n                    {tag.topic.toUpperCase()}\r\n                  </Tag>\r\n                );\r\n              })}\r\n            </span>\r\n          )\r\n        },\r\n        {\r\n          title: 'Created on',\r\n          dataIndex: 'createdAt',\r\n          key: 'createdAt',\r\n          ...this.getColumnSearchProps('createdAt'),\r\n          render: tags => (\r\n            <span>\r\n              {moment(tags).format(\"DD/ MM/YYYY\")}\r\n            </span>\r\n          )\r\n        },\r\n        {\r\n          title: 'Action',\r\n          key: '_id',\r\n          dataIndex: '_id',\r\n          render: (key) => (\r\n            <span>\r\n              <Button type=\"primary\" shape=\"circle\" icon=\"info-circle\" onClick={()=>this.openModal(key)}/>\r\n            </span>\r\n          ),\r\n        },\r\n      ];\r\n        return (\r\n            <div className=\"admin-table-container\">\r\n\r\n              <div className=\"register-trainer-form-header\">\r\n                <Title level={4} style={{color:'#fff',textAlign:'center'}}>List of Assessments</Title>\r\n              </div>\r\n\r\n              <Table \r\n                bordered={true} \r\n                columns={columns} \r\n                dataSource={this.props.trainer.TestTableData} \r\n                size=\"medium\" \r\n                pagination={{ pageSize: 5 }}\r\n                loading={this.props.trainer.TestTableLoading}\r\n                rowKey=\"_id\" \r\n              />\r\n\r\n              <Modal\r\n                visible={this.props.trainer.TestDetailsmodalOpened}\r\n                title=\"Assessment details\"\r\n                onOk={this.handleOk}\r\n                onCancel={this.closeModal}\r\n                afterClose={this.closeModal}\r\n                style={{top :'20px',padding:'0px',backgroundColor:'rgb(155,175,190)'}}\r\n                width=\"90%\"\r\n                destroyOnClose={true}\r\n                footer={[\r\n                  \r\n                ]}\r\n              >\r\n                <TestDetails />\r\n              </Modal>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  trainer : state.trainer\r\n});\r\n\r\nexport default connect(mapStateToProps,{\r\n    ChangeTestSearchText,\r\n    ChangeTestTableData,\r\n    ChangeTestDetailsModalState\r\n})(AllTests);","import { SecurePost } from '../services/axiosCall';\r\nimport apis from '../services/Apis';\r\nimport Alert from '../components/common/alert';\r\nexport const changeConducttestId = (d)=> dispatch =>{\r\n    dispatch({\r\n       type : 'SET_CONDUCT_TEST_ID',\r\n       payload : d\r\n    })\r\n}\r\n\r\nexport const changeTestRegisterLink = (d)=> dispatch =>{\r\n    dispatch({\r\n       type : 'SET_TEST_REGISTER_LINK',\r\n       payload : d\r\n    })\r\n}\r\n\r\nexport const changeTestRegisterStatus = (d)=> dispatch =>{\r\n    dispatch({\r\n       type : 'CHANGE_TEST_ISREGISTRATION_AVAILABLE',\r\n       payload : d\r\n    })\r\n}\r\n\r\nexport const changeTestStatus = (d) => dispatch => {\r\n    dispatch({\r\n        type: 'CHANGE_BEGIN_TEST_STATUS',\r\n        payload: d\r\n    });\r\n};\r\n\r\n\r\nexport const updateCurrentTestBasicDetails = (d) => dispatch => {\r\n    SecurePost({\r\n        url: `${apis.GET_SINGLE_TEST_DETAILS_BASIC}`,\r\n        data: {\r\n            id: d\r\n        }\r\n    }).then((response) => {\r\n        if (response.data.success) {\r\n            // console.log(response.data.data);\r\n            dispatch({\r\n                type: 'UPDATE_TEST_BASIC_DETAILS',\r\n                payload: response.data.data\r\n            });\r\n        }\r\n        else {\r\n            return Alert('error', 'Error!', response.data.message);\r\n        }\r\n    })\r\n    .catch((error) => {\r\n        // console.log(error);\r\n        return Alert('error', 'Error!', 'Unable to refresh test status');\r\n    });\r\n};\r\n\r\n\r\n\r\nexport const updateCandidatesTest = (d) => dispatch => {\r\n    dispatch({\r\n        type: 'CHANGE_CANDIDATES_OF_TEST',\r\n        payload: d\r\n    });\r\n};\r\n\r\n\r\nexport const updateQuestiosnTest = (d) => {\r\n    return {\r\n        type: 'CHANGE_QUESTIONS_OF_TEST',\r\n        payload: d\r\n    };\r\n};","import apis from '../services/Apis';\r\nimport Alert from '../components/common/alert';\r\nimport { SecurePost } from '../services/axiosCall';\r\n\r\nexport const changeStep = (d)=> dispatch =>{\r\n    dispatch({\r\n       type : 'CHANGE_ACTIVE_STEP',\r\n       payload : d\r\n    });\r\n};\r\n\r\nexport const changeBasicNewTestDetails = (d) => dispatch => {\r\n    dispatch({\r\n        type: 'CHANGE_BASIC_NEW_TEST_DETAILS',\r\n        payload: d\r\n    });\r\n};\r\n\r\nexport const pushQuestionToQueue = (d) => dispatch => {\r\n    dispatch({\r\n        type: 'ADD_QUESTION_TO_QUESTION_QUEUSE',\r\n        payload: d\r\n    });\r\n};\r\n\r\nexport const removeQuestionFromMainQueue = (d)=> dispatch =>{\r\n    dispatch({\r\n        type: 'REMOVE_QUESTION_FROM_MAIN_QUEUE',\r\n        payload:d\r\n    })\r\n}\r\n\r\nexport const changeMode = (d)=> dispatch =>{\r\n    dispatch({\r\n        type : 'CHANGE_MODE_QUESTION_SELECT',\r\n        payload:d\r\n    })\r\n};\r\n\r\nexport const fetchSubjectWiseQuestion = (d) => dispatch =>{\r\n    SecurePost({\r\n        url : `${apis.GET_ALL_QUESTIONS}`,\r\n        data:{\r\n            subject : d\r\n        }\r\n    })\r\n    .then((response) => {\r\n        // console.log(response);\r\n        if(response.data.success){\r\n            dispatch({\r\n                type: 'FETCH_QUESTIONS_BASED_ON_SUBJECT',\r\n                payload: response.data.data\r\n            });\r\n        }\r\n        else{\r\n            Alert('error','Error!',response.data.message);\r\n            dispatch({\r\n                type: 'FETCH_QUESTIONS_BASED_ON_SUBJECT',\r\n                payload: []\r\n            });\r\n        }\r\n    })\r\n    .catch((error) => {\r\n        Alert('error','Error!','Server Error');\r\n        dispatch({\r\n            type: 'FETCH_QUESTIONS_BASED_ON_SUBJECT',\r\n            payload: []\r\n        });\r\n    });\r\n}\r\n\r\n// Add Job Data\r\nexport const addJobData = (check, data)=> dispatch =>{\r\n    dispatch({\r\n        type : 'ADD_JOB_DATA',\r\n        payload1: check,\r\n        payload2: data\r\n    });\r\n};\r\n\r\n// Add Coding Question Validator\r\nexport const checkcode = (data)=> dispatch =>{\r\n    dispatch({\r\n        type : 'ADD_CODING_QUESTION_CHECKER',\r\n        payload: data\r\n    });\r\n};\r\n\r\n// Add Coding Question Duration\r\nexport const codingDuration = (data)=> dispatch =>{\r\n    // console.log('Action'+data);\r\n\r\n    dispatch({\r\n        type : 'ADD_CODING_QUESTION_DURATION',\r\n        payload: data\r\n    });\r\n};\r\n\r\n// Add Coding Question From Queue\r\nexport const pushCodingQuestionToQueue = (data) => dispatch => {\r\n    dispatch({\r\n        type: 'ADD_CODING_QUESTION_TO_QUESTION_QUEUE',\r\n        payload: data\r\n    });\r\n};\r\n\r\n// Remove Coding Question From Queue\r\nexport const removeCodingQuestionFromMainQueue = (data)=> dispatch =>{\r\n    dispatch({\r\n        type: 'REMOVE_CODING_QUESTION_FROM_MAIN_QUEUE',\r\n        payload:data\r\n    });\r\n};","import React from 'react';\r\nimport {CopyToClipboard} from 'react-copy-to-clipboard';\r\nimport { Input, Button, Descriptions, Icon, message, Typography } from 'antd';\r\nimport { connect } from 'react-redux';\r\nimport moment from 'moment';\r\n\r\nimport {\r\n    changeTestRegisterLink,\r\n    updateCurrentTestBasicDetails,\r\n    changeTestRegisterStatus,\r\n    changeTestStatus,\r\n    updateCandidatesTest\r\n} from '../../../actions/conductTest';\r\nimport { SecurePost } from '../../../services/axiosCall';\r\nimport apis from '../../../services/Apis';\r\nimport Alert from '../../common/alert';\r\n\r\nconst { Title } = Typography;\r\n\r\nclass TestDetails extends React.Component {\r\n\r\n    componentDidMount(){\r\n        var link = window.location.href.split('/').splice(0,3);\r\n        var mainlink=\"\";\r\n        link.forEach((d, i) => {\r\n            mainlink = mainlink + d + \"/\"\r\n        });\r\n        \r\n        mainlink=mainlink+`candidate/register?testid=${this.props.conduct.id}`\r\n        this.props.changeTestRegisterLink(mainlink);\r\n        this.props.updateCurrentTestBasicDetails(this.props.conduct.id);\r\n        this.props.updateCandidatesTest();\r\n    };\r\n\r\n    changeRegistrationStatus = (d) => {\r\n        SecurePost({\r\n            url: `${apis.STOP_REGISTRATION}`,\r\n            data: {\r\n                id: this.props.conduct.id,\r\n                status: d\r\n            }\r\n        }).then((response) => {\r\n            if (response.data.success) {\r\n                this.props.changeTestRegisterStatus(d)\r\n                Alert('success', 'Success!', 'Registration status changed');\r\n            }\r\n            else {\r\n                Alert('error', 'Error!', response.data.message)\r\n            }\r\n        }).catch((error) => {\r\n            // console.log(error);\r\n            Alert('error', 'Error!', 'Server Error')\r\n        });\r\n    };\r\n\r\n    changeTestStatus = () => {\r\n        SecurePost({\r\n            url: `${apis.START_TEST_BY_TRAINER}`,\r\n            data: {\r\n                id: this.props.conduct.id\r\n            }\r\n        }).then((response) => {\r\n            // console.log(response);\r\n            if (response.data.success) {\r\n                this.props.changeTestStatus(response.data.data);\r\n                Alert('success', 'Success!', 'Test has begin');\r\n            }\r\n            else {\r\n                Alert('error', 'Error!', response.data.message)\r\n            }\r\n        }).catch((error) => {\r\n            // console.log(error);\r\n            Alert('error', 'Error!', 'Server Error')\r\n        });\r\n    };\r\n\r\n    endTestByTrainee = () => {\r\n        SecurePost({\r\n            url: `${apis.END_TEST_BY_TRAINER}`,\r\n            data: {\r\n                id: this.props.conduct.id\r\n            }\r\n        })\r\n        .then((response) => {\r\n            // console.log(response);\r\n            if (response.data.success) {\r\n                this.props.changeTestStatus(response.data.data);\r\n                Alert('success', 'Success!', 'Test has ended');\r\n            }\r\n            else {\r\n                Alert('error', 'Error!', response.data.message)\r\n            }\r\n        })\r\n        .catch((error) => {\r\n            // console.log(error);\r\n            Alert('error', 'Error!', 'Server Error')\r\n        });\r\n    };\r\n\r\n    getCandidates = () => {\r\n        SecurePost({\r\n            url: `${apis.GET_TEST_CANDIDATES}`,\r\n            data: {\r\n                id: this.props.conduct.id\r\n            }\r\n        }).then((response) => {\r\n            // console.log(response);\r\n        }).catch((error) => {\r\n            console.log(error)\r\n        });\r\n    };\r\n    \r\n    render(){\r\n        return (\r\n            <div>\r\n                <Descriptions \r\n                    size=\"small\" \r\n                    column={4} \r\n                    title=\"Basic Assessment Info\" \r\n                    layout=\"vertical\" \r\n                    bordered={true}\r\n                >\r\n                    <Descriptions.Item span={1} label=\"Assessment Id\">\r\n                        {this.props.conduct.id}\r\n                    </Descriptions.Item>\r\n\r\n                    <Descriptions.Item span={3} label=\"Registration Link\"><Input disabled={true} value={this.props.conduct.testRegisterLink} addonAfter={<CopyToClipboard text={this.props.conduct.testRegisterLink} onCopy={() => message.success('Link Copied to clipboard')}><Icon type=\"copy\" /></CopyToClipboard>} /></Descriptions.Item>\r\n\r\n                    {\r\n                        this.props.conduct.basictestdetails.testconducted ? \r\n                        <Descriptions.Item \r\n                         span={1} \r\n                         label=\"Registration Details\"\r\n                        >\r\n                            The Assessment has ended! Go to all Assessments to check the results\r\n                        </Descriptions.Item>\r\n                        : \r\n                        <Descriptions.Item \r\n                         span={1} \r\n                         label={this.props.conduct.basictestdetails.isRegistrationavailable ? \"Registration Open\" : \"Registration Closed\"}\r\n                        >\r\n                            <Button \r\n                                disabled={this.props.conduct.basictestdetails.testbegins} onClick={() => { this.changeRegistrationStatus(!this.props.conduct.basictestdetails.isRegistrationavailable) }} \r\n                                type={this.props.conduct.basictestdetails.isRegistrationavailable ? \"danger\" : \"primary\"}\r\n                            >{this.props.conduct.basictestdetails.isRegistrationavailable ? \"Stop Registration\" : \"Open Registration\"}\r\n                            </Button>\r\n                        </Descriptions.Item>\r\n                    }\r\n                    \r\n                    {\r\n                        this.props.conduct.basictestdetails.testconducted ? \r\n                        <Descriptions.Item \r\n                         span={1} \r\n                         label=\"Assessment Details\"\r\n                        >\r\n                            The Assessment has ended! Go to all Assessments to check the results\r\n                        </Descriptions.Item>\r\n                        : \r\n                        <Descriptions.Item \r\n                            span={3} \r\n                            label={this.props.conduct.basictestdetails.testbegins ? \"Test on Progress\" : \"Test has not started yet\"}\r\n                        >\r\n                            <Button \r\n                                disabled={this.props.conduct.basictestdetails.testbegins} \r\n                                onClick={() => { this.changeTestStatus() }} \r\n                                type={\"primary\"}\r\n                            >\r\n                                Start Test\r\n                            </Button>\r\n                            \r\n                            <Button \r\n                                disabled={!this.props.conduct.basictestdetails.testbegins} \r\n                                onClick={() => { this.endTestByTrainee() }} type={\"danger\"}\r\n                            >\r\n                                End Test\r\n                            </Button>\r\n                        </Descriptions.Item>\r\n                    }\r\n\r\n                    <Descriptions.Item \r\n                        span={1} \r\n                        label=\"Assessment Start Time\"\r\n                    >\r\n                        {moment(this.props.conduct.basictestdetails.start).format('MMMM Do YYYY, h:mm:ss a')}\r\n                    </Descriptions.Item>\r\n\r\n                    <Descriptions.Item \r\n                        span={1} \r\n                        label=\"Assessment End Time\"\r\n                    >\r\n                        {moment(this.props.conduct.basictestdetails.end).format('MMMM Do YYYY, h:mm:ss a')}\r\n                    </Descriptions.Item>\r\n                </Descriptions>\r\n            </div>\r\n        );\r\n    };\r\n};\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n    trainer: state.trainer,\r\n    conduct: state.conduct\r\n});\r\n\r\nexport default connect(mapStateToProps,{\r\n    changeTestRegisterLink,\r\n    updateCurrentTestBasicDetails,\r\n    changeTestRegisterStatus,\r\n    changeTestStatus,\r\n    updateCandidatesTest\r\n})(TestDetails);","import React, { Component } from 'react'\r\nimport { changeConducttestId, updateCandidatesTest } from '../../../actions/conductTest';\r\nimport { connect } from 'react-redux';\r\nimport apis from '../../../services/Apis';\r\nimport { SecurePost } from '../../../services/axiosCall';\r\nimport Alert from '../../common/alert';\r\nimport { Table, Input, Button, Icon, message, Typography, Modal, Progress } from 'antd';\r\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\r\nimport Highlighter from 'react-highlight-words';\r\nimport CSVReader from \"react-csv-reader\";\r\nimport './conducttes.css';\r\n\r\nconst { Title } = Typography;\r\n\r\n// csv papaparse\r\nconst papaparseOptions = {\r\n  header: true,\r\n  dynamicTyping: true,\r\n  skipEmptyLines: true,\r\n  transformHeader: header => header.toLowerCase().replace(/\\W/g, \"_\")\r\n};\r\n\r\nclass Candidates extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            loading:false,\r\n            searchText: '',\r\n            mainlink: '',\r\n            visible: false,\r\n            progress: 0,\r\n        }\r\n    }\r\n\r\n    getColumnSearchProps = dataIndex => ({\r\n        filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => (\r\n          <div style={{ padding: 8 }}>\r\n            <Input\r\n              ref={node => {\r\n                this.searchInput = node;\r\n              }}\r\n              placeholder={`Search ${dataIndex}`}\r\n              value={selectedKeys[0]}\r\n              onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\r\n              onPressEnter={() => this.handleSearch(selectedKeys, confirm)}\r\n              style={{ width: 188, marginBottom: 8, display: 'block' }}\r\n            />\r\n            <Button\r\n              type=\"primary\"\r\n              onClick={() => this.handleSearch(selectedKeys, confirm)}\r\n              icon=\"search\"\r\n              size=\"small\"\r\n              style={{ width: 90, marginRight: 8 }}\r\n            >\r\n              Search\r\n            </Button>\r\n            <Button onClick={() => this.handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>\r\n              Reset\r\n            </Button>\r\n          </div>\r\n        ),\r\n        filterIcon: filtered => (\r\n          <Icon type=\"search\" style={{ color: filtered ? '#1890ff' : undefined }} />\r\n        ),\r\n        onFilter: (value, record) =>\r\n          record[dataIndex]\r\n            .toString()\r\n            .toLowerCase()\r\n            .includes(value.toLowerCase()),\r\n        onFilterDropdownVisibleChange: visible => {\r\n          if (visible) {\r\n            setTimeout(() => this.searchInput.select());\r\n          }\r\n        },\r\n        render: text => (\r\n          <Highlighter\r\n            highlightStyle={{ backgroundColor: '#ffc069', padding: 0 }}\r\n            searchWords={[this.state.searchText]}\r\n            autoEscape\r\n            textToHighlight={text.toString()}\r\n          />\r\n        ),\r\n    });\r\n\r\n\r\n    handleSearch = (selectedKeys, confirm) => {\r\n        confirm();\r\n        this.setState({ searchText: selectedKeys[0] });\r\n    };\r\n    \r\n    handleReset = clearFilters => {\r\n        clearFilters();\r\n        this.setState({ searchText: '' });\r\n    };\r\n\r\n    componentDidMount(){\r\n      var link = window.location.href.split('/').splice(0,3);\r\n      var mainlink=\"\";\r\n      link.forEach((d,i)=>{\r\n          mainlink=mainlink+d+\"/\"\r\n      });\r\n      this.setState({mainlink});\r\n      this.refreshUserList(); \r\n  }\r\n  \r\n  // Modal\r\n  showModal = () => {\r\n      this.setState({\r\n        visible: true,\r\n      });\r\n  };\r\n\r\n  handleOk = e => {\r\n      // console.log(e);\r\n      this.setState({\r\n        visible: false,\r\n      });\r\n  };\r\n\r\n  handleCancel = e => {\r\n      // console.log(e);\r\n      this.setState({\r\n        visible: false,\r\n      });\r\n  };\r\n\r\n  // csv parser\r\n  handleForce = (data, fileInfo) => {\r\n\r\n    // console.log(data);\r\n    \r\n  SecurePost({\r\n      url: `${apis.IMPORT_CANDIDATES}`,\r\n      data: {\r\n        testid: this.props.conduct.id,\r\n        data: data,\r\n      }\r\n    })\r\n    .then((response) => {\r\n      if (response.data.success) {\r\n          this.setState({progress: 100});\r\n          this.props.updateCandidatesTest(response.data.data);\r\n      }\r\n      else {\r\n          Alert('error', 'Error!', response.data.message)\r\n      }\r\n        this.setState({\r\n          loading: false\r\n        });\r\n    })\r\n    .catch((error) => {\r\n      Alert('error', 'Error!', 'Server Error')\r\n        this.setState({loading: false});\r\n  });\r\n};\r\n\r\n\r\n  refreshUserList = () => {\r\n    this.setState({\r\n      loading: true\r\n    });\r\n        \r\n    SecurePost({\r\n      url: `${apis.GET_TEST_CANDIDATES}`,\r\n      data: {\r\n        id: this.props.conduct.id\r\n      }\r\n    })\r\n      .then((response) => {\r\n        //console.log(response);\r\n        if (response.data.success) {\r\n          this.props.updateCandidatesTest(response.data.data);\r\n        }\r\n        else {\r\n          Alert('error', 'Error!', response.data.message)\r\n        }\r\n        this.setState({\r\n          loading: false\r\n        });\r\n      }).catch((error) => {\r\n        //console.log(error);\r\n        Alert('error', 'Error!', 'Server Error')\r\n        this.setState({\r\n          loading: false\r\n        });\r\n      });\r\n  };\r\n\r\n  getResume = (file) => {\r\n    window.open(file);\r\n  };\r\n\r\n    render() {\r\n        const columns = [\r\n            {\r\n              title: 'Name',\r\n              dataIndex: 'name',\r\n              key: 'name',\r\n              ...this.getColumnSearchProps('name'),\r\n            },\r\n            {\r\n              title: 'Email Id',\r\n              dataIndex: 'emailid',\r\n              key: 'emailid',\r\n              ...this.getColumnSearchProps('emailid'),\r\n            },\r\n            {\r\n                title: 'Contact No',\r\n                dataIndex: 'contact',\r\n                key: 'contact',\r\n                ...this.getColumnSearchProps('contact'),\r\n            },\r\n            {\r\n              title: 'Resume',\r\n              dataIndex: 'resume',\r\n              key: 'resume',\r\n              render: id => (\r\n                <Button\r\n                  color=\"primary\"\r\n                  onClick={() => this.getResume(id)}\r\n                >\r\n                  Download Resume\r\n                </Button>\r\n              ),\r\n            },\r\n            {\r\n                title: 'Links',\r\n                key: '_id',\r\n                dataIndex: '_id',\r\n                render: id => (\r\n                  <Input disabled={true} value={`${this.state.mainlink}candidate/taketest?testid=${this.props.conduct.id}&traineeid=${id}`} addonAfter={<CopyToClipboard text={`${this.state.mainlink}candidate/taketest?testid=${this.props.conduct.id}&traineeid=${id}`} onCopy={()=>message.success('Link Copied to clipboard')}><Icon type=\"copy\"/></CopyToClipboard>}/>\r\n                ),\r\n            }\r\n        ];\r\n\r\n      return (\r\n        <div className=\"candidate-list-header-container\">\r\n          <Button \r\n            className=\"reload-button\" \r\n            type=\"primary\" \r\n            icon=\"reload\" \r\n            loading={this.state.loading} \r\n            onClick={this.refreshUserList}\r\n          >\r\n            Reload\r\n          </Button>\r\n\r\n          <div className=\"register-trainer-form-header\">\r\n            <Title level={4} style={{ color: '#fff', textAlign: 'center' }}>List of Registered Candidates</Title>\r\n          </div>\r\n          <Table\r\n            columns={columns}\r\n            bordered={true}\r\n            dataSource={this.props.conduct.registeredCandidates}\r\n            rowKey=\"_id\"\r\n            loading={this.state.loading}\r\n          />\r\n\r\n        <Modal\r\n          title=\"Import Candidates\"\r\n          visible={this.state.visible}\r\n          onOk={this.handleOk}\r\n          onCancel={this.handleCancel}\r\n          footer={[ ]}\r\n        >\r\n          <p><b>Note :</b> Upload csv file to import candidates data-</p>\r\n          <p>CSV file header should contain - name, emailid, contact</p>\r\n          <CSVReader\r\n            cssClass=\"react-csv-input\"\r\n            label=\"\"\r\n            onFileLoaded={this.handleForce}\r\n            parserOptions={papaparseOptions}\r\n          />\r\n          <Progress percent={this.state.progress} />\r\n        </Modal>\r\n        </div>\r\n      );\r\n  };\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    conduct : state.conduct\r\n});\r\n\r\nexport default connect(mapStateToProps,{\r\n    changeConducttestId,\r\n    updateCandidatesTest\r\n})(Candidates);","import React, { Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport { JsonToTable } from \"react-json-to-table\";\nimport exportFromJSON from 'export-from-json';\n\nconst JobApplications = (props) => {\n  const data = props.conduct.registeredCandidates; \n  const fileName = 'download';\n  const exportType = 'csv';\n\n  const ExportToExcel = () => {  \n    exportFromJSON({ data, fileName, exportType })  \n  };\n\n  return (\n        <Fragment>\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-lg-6\"></div>\n\n              <div className=\"col-lg-6\">\n                <button type=\"button\" onClick={ExportToExcel}>Export To CSV</button>  \n              </div>\n            </div>\n          </div>\n\n          <br />\n\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-lg-12\"  style={{ maxHeight: '500px', overflowY: 'scroll' }}>\n                <JsonToTable json={props.conduct.registeredCandidates} />\n              </div>\n            </div>\n          </div>\n        </Fragment>\n  );\n\n};\n\nconst mapStateToProps = state => ({\n  conduct: state.conduct\n});\n\nexport default connect(mapStateToProps, null)(JobApplications);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Input,Button, Typography,Tabs, Icon } from 'antd';\r\nimport './conducttes.css';\r\n\r\nimport { \r\n    changeConducttestId, \r\n    updateCandidatesTest, \r\n    updateQuestiosnTest \r\n} from '../../../actions/conductTest';\r\nimport { changeStep } from '../../../actions/testAction';\r\n\r\nimport TestDetails from './details';\r\nimport Candidates from './candidates';\r\nimport Questions from './questions';\r\nimport JobApplications from './JobApplications';\r\n\r\nconst { Title } = Typography;\r\nconst { TabPane } = Tabs;\r\n\r\nclass ConductTestS extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.props.changeConducttestId(this.props.testid);\r\n        this.state={\r\n            localTestId:null,\r\n            needRedirect:false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.changeStep(0);\r\n    };\r\n\r\n    ChangeLocalTestId = (d) => {\r\n        this.setState({\r\n            localTestId: d.target.value\r\n        })\r\n    };\r\n\r\n    ChangetestId = (d) => {\r\n        this.setState({\r\n            needRedirect: true\r\n        })\r\n    };\r\n\r\n    render() {\r\n        if(this.state.needRedirect){\r\n            return window.location.href=`/user/conducttest?testid=${this.state.localTestId}`\r\n        }\r\n        else{\r\n            return (\r\n                <div className=\"conduct-test-main-wrapper\">\r\n                    {!this.props.conduct.id ? \r\n                        <div>\r\n                            <Title \r\n                                style={{ width:'100%', textAlign:'center'}} \r\n                                level={4}\r\n                            >\r\n                                Enter Assessment Id\r\n                            </Title>\r\n\r\n                            <div className=\"test-conduct-testid-form\">\r\n                                <Input \r\n                                    placeholder=\"Enter Assessment Id\" \r\n                                    onChange={this.ChangeLocalTestId} \r\n                                    value={this.state.localTestId}\r\n                                />\r\n                                <Button \r\n                                    onClick={this.ChangetestId}  \r\n                                    type=\"primary\" \r\n                                    style={{marginTop:'30px'}}\r\n                                >\r\n                                    Proceed\r\n                                </Button>\r\n                            </div>\r\n                        </div>:\r\n                        <div>\r\n                            <CC key={this.props.conduct.basictestdetails.testconducted} />\r\n                        </div>\r\n                    }\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n};\r\n\r\n// ...\r\nclass C extends Component {\r\n    render() {\r\n        return (\r\n                <div>\r\n                    <TestDetails/>\r\n\r\n                    {/* Bottom Tabs */}\r\n                    <Tabs defaultActiveKey=\"1\" style={{marginTop:'20px'}}>\r\n                        \r\n                        <TabPane tab={<span><Icon type=\"user\" />Registered Trainee</span>} key=\"1\">\r\n                            <Candidates />\r\n                        </TabPane>\r\n\r\n                        <TabPane tab={<span><Icon type=\"question-circle\" />Questions</span>} key=\"2\">\r\n                            <Questions id={this.props.conduct.id} questionsOfTest={this.props.conduct.questionsOfTest} updateQuestiosnTest={this.props.updateQuestiosnTest}  />\r\n                        </TabPane>\r\n\r\n                        <TabPane tab={<span><Icon type=\"solution\" />Job Applications</span>} key=\"3\">\r\n                            <JobApplications />\r\n                        </TabPane>\r\n\r\n                    </Tabs>\r\n                </div>\r\n            )\r\n        }\r\n    };\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n    trainer : state.trainer,\r\n    conduct : state.conduct\r\n});\r\n\r\n\r\nlet CC=connect(mapStateToProps,{\r\n    changeConducttestId,\r\n    updateCandidatesTest,\r\n    updateQuestiosnTest\r\n})(C);\r\n\r\n\r\nexport default connect(mapStateToProps, {\r\n    changeStep,\r\n    changeConducttestId,\r\n    updateCandidatesTest,\r\n    updateQuestiosnTest\r\n})(ConductTestS);","export const steps = [\r\n    {\r\n      title: 'Basic details'\r\n    },\r\n    {\r\n      title: 'Add Job Post'\r\n    },\r\n    {\r\n      title: 'Select Questions'\r\n    },\r\n    {\r\n      title: 'Add Programming'\r\n    },\r\n    {\r\n      title: 'Finalize'\r\n    }\r\n];","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { Form, InputNumber, Input, Button, Select, DatePicker } from 'antd';\r\nimport moment from 'moment';\r\n\r\nimport { changeStep,changeBasicNewTestDetails } from '../../../actions/testAction';\r\nimport { SecurePost } from '../../../services/axiosCall';\r\nimport './newtest.css';\r\nimport apis from '../../../services/Apis';\r\n\r\nmoment().utcOffset(\"+05:30\");\r\n\r\nconst { Option } = Select;\r\nconst { RangePicker } = DatePicker;\r\n\r\nclass BasicTestFormO extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            checkingName: \"\"\r\n        };\r\n    };\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        this.props.form.validateFields((err, values) => {\r\n            if (!err) {\r\n                // console.log(values)\r\n                this.props.changeBasicNewTestDetails({\r\n                    testType: values.type,\r\n                    testTitle: values.title,\r\n                    testDuration: values.duration,\r\n                    OrganisationName: values.organisation,\r\n                    testSubject: values.subjects,\r\n                    startTime: values.start,\r\n                    endTime: values.end\r\n                });\r\n                this.props.changeStep(1);\r\n            }\r\n        });\r\n    };\r\n\r\n    validateTestName = (rule, value, callback) => {\r\n        if(value.length>=5){\r\n            this.setState({\r\n                checkingName:\"validating\"\r\n            })\r\n            SecurePost({\r\n                url: apis.CHECK_TEST_NAME,\r\n                data: {\r\n                    testname: value\r\n                }\r\n            }).then((data) => {\r\n                //console.log(data);\r\n                if (data.data.success) {\r\n                    if (data.data.can_use) {\r\n                        this.setState({\r\n                            checkingName: \"success\"\r\n                        });\r\n                        callback();\r\n                    }\r\n                    else {\r\n                        this.setState({\r\n                            checkingName: \"error\"\r\n                        });\r\n                        callback('Another test exist with same name.');\r\n                    }\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        checkingName: \"success\"\r\n                    })\r\n                    callback()\r\n                }\r\n            }).catch((ee) => {\r\n                //console.log(ee);\r\n                this.setState({\r\n                    checkingName: \"success\"\r\n                });\r\n                callback();\r\n            });\r\n        }\r\n        else{\r\n            callback();\r\n        }        \r\n    };\r\n\r\n    render() {\r\n        const { getFieldDecorator } = this.props.form;\r\n        return (\r\n            <div className=\"basic-test-form-outer\">\r\n                <div className=\"basic-test-form-inner\">\r\n                    <Form\r\n                        onSubmit={this.handleSubmit}\r\n                        autoComplete=\"off\"\r\n                    >\r\n                        <Form.Item label=\"Assessment Type\"  hasFeedback>\r\n                            {getFieldDecorator('type', {\r\n                                initialValue : this.props.test.newtestFormData.testType,\r\n                                rules: [{ required: true, message: 'Please select a assessment type' }],\r\n                            })(\r\n                                <Select placeholder=\"Test Type\">\r\n                                    <Option value=\"skill-test\">Skill Test</Option>\r\n                                    <Option value=\"university-hiring\">University Hiring</Option>\r\n                                    <Option value=\"organisation-hiring\">Organisation hiring</Option>\r\n                                </Select>\r\n                            )}\r\n                        </Form.Item>\r\n\r\n                        <Form.Item label=\"Assessment Title\"  hasFeedback validateStatus={this.state.checkingName}>\r\n                            {getFieldDecorator('title', {\r\n                                initialValue : this.props.test.newtestFormData.testTitle,\r\n                                rules: [\r\n                                    { required: true, message: 'Please give the assessment title' },\r\n                                    { min:5, message: 'Title should be atleast 5 character long' },\r\n                                    { validator: this.validateTestName }\r\n                                ],\r\n                                \r\n                            })(\r\n                                <Input placeholder=\"Assessment Title\" />\r\n                            )}\r\n                        </Form.Item>\r\n\r\n                        <Form.Item label=\"Subjects\"  hasFeedback>\r\n                            {getFieldDecorator('subjects', {\r\n                                initialValue : this.props.test.newtestFormData.testSubject,\r\n                                rules: [{ required: true, message: 'Please select a assessment subjects' }],\r\n                            })(\r\n                                <Select\r\n                                mode=\"multiple\"\r\n                                placeholder=\"Select one or more subjects\"\r\n                                style={{ width: '100%' }}\r\n                                allowClear={true}\r\n                                optionFilterProp=\"s\"\r\n                                >\r\n                                    {this.props.admin.subjectTableData.map(item => (\r\n                                        <Select.Option key={item._id} value={item._id} s={item.topic}>\r\n                                        {item.topic}\r\n                                        </Select.Option>\r\n                                    ))}\r\n                                </Select>\r\n                            )}\r\n                        </Form.Item>\r\n\r\n                        <Form.Item label=\"Assessment Duration ( Min. assessment duration - 60m )\" hasFeedback>\r\n                            {getFieldDecorator('duration', {\r\n                                initialValue : this.props.test.newtestFormData.testDuration,\r\n                                rules: [{ required: true, message: 'Please give assessment duration' }],\r\n                            })(\r\n                                <InputNumber style={{width:'100%'}}  placeholder=\"Test Duration\" min={10} max={180}/>\r\n                            )}\r\n                        </Form.Item>\r\n\r\n                        <Form.Item label=\"Organisation Name\"  hasFeedback>\r\n                            {getFieldDecorator('organisation', {\r\n                                initialValue : this.props.test.newtestFormData.OrganisationName\r\n                            })(\r\n                                <Input placeholder=\"Organisation Name\" />\r\n                            )}\r\n                        </Form.Item>\r\n\r\n                        <Form.Item label=\"Test Assessment Time\"  hasFeedback>\r\n                            {\r\n                                getFieldDecorator('start', {\r\n                                    rules: [{ required: true, message: 'Please give assessment start time' }],\r\n                                })(\r\n                                    <DatePicker\r\n                                        showTime\r\n                                        placeholder=\"Select Start Time\"\r\n                                        onChange={this.onChangeStart}\r\n                                        onOk={this.onOkStart}\r\n                                    />\r\n                                )\r\n                            }\r\n                        </Form.Item>\r\n\r\n                        <Form.Item label=\"Test Assessment Time\"  hasFeedback>\r\n                            {\r\n                                getFieldDecorator('end', {\r\n                                    rules: [{ required: true, message: 'Please give assessment end time' }],\r\n                                })(\r\n                                    <DatePicker\r\n                                        showTime\r\n                                        placeholder=\"Select End Time\"\r\n                                        onChange={this.onChangeEnd}\r\n                                        onOk={this.onOkEnd}\r\n                                    />\r\n                                )\r\n                            }\r\n                        </Form.Item>\r\n\r\n                        <Form.Item>\r\n                            <Button type=\"primary\" htmlType=\"submit\" block>\r\n                                Next\r\n                            </Button>\r\n                        </Form.Item>\r\n                    </Form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n};\r\n\r\nconst BasicTestForm = Form.create({ name: 'Basic Form' })(BasicTestFormO);\r\n\r\nconst mapStateToProps = state => ({\r\n    test : state.test,\r\n    admin:state.admin\r\n});\r\n\r\nexport default connect(mapStateToProps,{\r\n    changeStep,\r\n    changeBasicNewTestDetails\r\n})(BasicTestForm);","export const QuillModules = {\n    toolbar: [\n        [{ header: '1' }, { header: '2' }, { header: [3, 4, 5, 6] }, { font: [] }],\n        [{ size: [] }],\n        ['bold', 'italic', 'underline', 'strike', 'blockquote'],\n        [{ list: 'ordered' }, { list: 'bullet' }],\n        ['link', 'image', 'video'],\n        ['clean'],\n        ['code-block']\n    ]\n};\n\nexport const QuillFormats = [\n    'header',\n    'font',\n    'size',\n    'bold',\n    'italic',\n    'underline',\n    'strike',\n    'blockquote',\n    'list',\n    'bullet',\n    'link',\n    'image',\n    'video',\n    'code-block'\n];","import React, { Fragment, Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { \r\n    Form, \r\n    InputNumber, \r\n    Input, \r\n    Button, \r\n    Select, \r\n    DatePicker, \r\n    Row, Col, \r\n    Typography, \r\n    Checkbox, \r\n    Modal,\r\n    Collapse,\r\n    Divider\r\n} from 'antd';\r\nimport moment from 'moment';\r\nimport ReactQuill from 'react-quill';\r\nimport { FormBuilder, FormRenderer } from 'react-ant-form-builder';\r\nimport { \r\n    changeStep,\r\n    addJobData \r\n} from '../../../actions/testAction';\r\n\r\nimport './newtest.css';\r\nimport 'react-quill/dist/quill.snow.css';\r\nimport { QuillModules, QuillFormats } from '../../../utils/Editor';\r\n\r\n\r\nconst { Title } = Typography;\r\nconst { Option } = Select;\r\nconst { RangePicker } = DatePicker;\r\nconst { Panel } = Collapse;\r\n\r\nclass AddJobPost extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            checked: false,\r\n            editor: null,\r\n            formSchema: {},\r\n            data: {},\r\n            visible: false\r\n        }\r\n    };\r\n\r\n    onCheck = (e) => {\r\n        this.setState({ checked: e.target.checked });\r\n    };\r\n\r\n    onChangeEditor = (value) => {\r\n        console.log(value);\r\n        this.setState({ editor: value });\r\n    };\r\n\r\n    // Handle Submit\r\n    handleFinal = e => {\r\n        e.preventDefault();\r\n        this.props.form.validateFields((err, values) => {\r\n            if (!err) {\r\n                console.log(values)\r\n                this.props.addJobData(this.state.checked,{\r\n                    title: values.jobtitle,\r\n                    description: this.state.editor,\r\n                    skillsets: [],\r\n                    location: values.joblocation,\r\n                    type: values.jobtype,\r\n                    customdata: this.state.formSchema\r\n                });\r\n                \r\n                this.props.changeStep(2);\r\n            }\r\n        });\r\n    };\r\n\r\n    // Modal\r\n    showModal = () => {\r\n        this.setState({ visible: true });\r\n    };\r\n    \r\n    handleOk = e => {\r\n        this.setState({ visible: false });\r\n    };\r\n\r\n    handleCancel = e => {\r\n        this.setState({ visible: false });\r\n    };\r\n\r\n    render() {\r\n        const { getFieldDecorator } = this.props.form;\r\n\r\n        return (\r\n            <Fragment>\r\n                <div style={{ padding: '0px auto 5px auto', width: '100%', textAlign: 'center' }}>\r\n                    <Title level={3}>Add Job Post</Title>\r\n                </div>\r\n\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-lg-12\">\r\n                            <Checkbox onChange={this.onCheck}>\r\n                                Do you want to add a job post with this assessment ?\r\n                            </Checkbox>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-lg-12\">\r\n                        {this.state.checked ?  \r\n                            <div>\r\n                                <Title style={{textAlign: 'center'}} level={3}>Add Job Post Details</Title>\r\n                                <Form\r\n                                    onSubmit={this.handleFinal}\r\n                                    autoComplete=\"off\"\r\n                                >\r\n                                    <Form.Item label=\"Job Title\"  hasFeedback>\r\n                                        {getFieldDecorator('jobtitle', {\r\n                                            initialValue : this.props.test.jobPostData.title,\r\n                                            rules: [{ required: true, message: 'Please select a Job title' }],\r\n                                        })(\r\n                                            <Input placeholder=\"Job Title\" />\r\n                                        )}\r\n                                    </Form.Item>\r\n                                    \r\n                                    {/* Description Form Editor */}\r\n                                    <Form.Item label=\"Job Description\"  hasFeedback>\r\n                                        <ReactQuill\r\n                                            modules={QuillModules}\r\n                                            formats={QuillFormats}\r\n                                            value={this.state.editor}\r\n                                            placeholder=\"Write job description ...\"\r\n                                            onChange={this.onChangeEditor}\r\n                                        />\r\n                                    </Form.Item>\r\n\r\n                                    <Form.Item label=\"Job Type\"  hasFeedback>\r\n                                        {getFieldDecorator('jobtype', {\r\n                                            initialValue : this.props.test.jobPostData.jobtype,\r\n                                            rules: [{ required: true, message: 'Please select a Job type' }],\r\n                                        })(\r\n                                            <Select placeholder=\"Job Type\">\r\n                                                <Option value=\"Full Time\">Full Time</Option>\r\n                                                <Option value=\"Part Time\">Part Time</Option>\r\n                                                <Option value=\"Internship\">Internship</Option>\r\n                                                <Option value=\"Work From Home\">Work From Home</Option>\r\n                                            </Select>\r\n                                        )}\r\n                                    </Form.Item>\r\n\r\n                                    <Form.Item label=\"Job Location\"  hasFeedback>\r\n                                        {getFieldDecorator('joblocation', {\r\n                                            initialValue : this.props.test.jobPostData.location,\r\n                                            rules: [{ required: true, message: 'Please select a Job Location' }],\r\n                                        })(\r\n                                            <Input placeholder=\"Job Location\" />\r\n                                        )}\r\n                                    </Form.Item>\r\n\r\n                                    <Form.Item>\r\n                                        <Button type=\"primary\" htmlType=\"submit\" block>\r\n                                            Next\r\n                                        </Button>\r\n                                    </Form.Item>\r\n                                </Form>\r\n\r\n                                <Collapse defaultActiveKey={['1']}>\r\n                                    <Panel header=\"Add Custom Questions\" key=\"1\">\r\n                                        <FormBuilder\r\n                                            formStructure={this.state.formSchema}\r\n                                            onSave={schema => {\r\n                                                this.setState({ formSchema: schema });\r\n                                                // props.setCustomJobDetails(schema);\r\n                                                console.log(schema);\r\n                                            }}\r\n                                            onError={error => console.log(error)}    \r\n                                        />\r\n                                        \r\n                                        <Divider />\r\n                                        \r\n                                        {'      '}\r\n                                        <p>* Save the form to see the changes everytime</p>\r\n                                        \r\n                                        <Button type=\"primary\" onClick={this.showModal}>\r\n                                            Preview\r\n                                        </Button>\r\n                                    </Panel>\r\n                                </Collapse>\r\n\r\n                                {/* Custom Form Modal */}\r\n                                <Modal\r\n                                    title=\"Preview\"\r\n                                    visible={this.state.visible}\r\n                                    onOk={this.handleOk}\r\n                                    onCancel={this.handleCancel}\r\n                                >\r\n                                    <h1>Preview</h1>\r\n                                    <FormRenderer\r\n                                        allowDraft={false}\r\n                                        formStructure={this.state.formSchema}\r\n                                        data={this.state.data}\r\n                                        onSave={changedData => {\r\n                                            // onSave for data received here.\r\n                                            this.setState({ data: changedData });\r\n                                        }}\r\n                                        onError={error => console.log(error)}\r\n                                    />\r\n                                </Modal>\r\n\r\n                            </div> : \r\n                            <div>\r\n                                <br />\r\n                                <br />\r\n                                <div className=\"container\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-lg-12\">\r\n                                            <Button \r\n                                                onClick={()=>this.props.changeStep(2)} \r\n                                                type=\"primary\" \r\n                                                htmlType=\"submit\" block\r\n                                            >\r\n                                                Next\r\n                                            </Button>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Fragment>\r\n        );\r\n    }\r\n};\r\n\r\nconst JobForm = Form.create({ name: 'Basic Form' })(AddJobPost);\r\n\r\nconst mapStateToProps = state => ({\r\n    test : state.test\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n    changeStep,\r\n    addJobData\r\n})(JobForm);\r\n","import React, { Component } from 'react';\r\nimport { Button, Skeleton,Modal,Form,InputNumber,Transfer,Row,Col } from 'antd';\r\nimport { connect } from 'react-redux';\r\nimport { \r\n    changeStep,\r\n    changeMode,\r\n    removeQuestionFromMainQueue,\r\n    changeBasicNewTestDetails,\r\n    fetchSubjectWiseQuestion,\r\n    pushQuestionToQueue \r\n} from '../../../actions/testAction';\r\nimport './newtest.css';\r\nimport Alert from '../../common/alert';\r\nimport apis from '../../../services/Apis';\r\nimport { Post } from '../../../services/axiosCall';\r\n\r\nclass GeneraterandomQuestionO extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            generating:false,\r\n            autogenerate:true,\r\n            ActiveQuestionId:null,\r\n            Mvisible:false\r\n        }\r\n        this.props.changeMode(this.props.mode);\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.props.fetchSubjectWiseQuestion(this.props.test.newtestFormData.testSubject);\r\n    }\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        this.props.form.validateFields((err, values) => {\r\n            if (!err) {\r\n                // console.log(values);\r\n                if(values.no<=this.props.test.questionsAvailablebasedonSubject.length){\r\n                    var qus=[];\r\n                    var allquestions=[...this.props.test.questionsAvailablebasedonSubject];\r\n                    var l=allquestions.length-1;\r\n                    for(var i=values.no;i>0;i--){\r\n                        l=l-1;\r\n                        var r = Math.floor(Math.random() * l);\r\n                        qus.push(allquestions[r]._id);\r\n                        allquestions.splice(r,1);\r\n                    }\r\n                    this.props.pushQuestionToQueue(qus);\r\n                    this.setState({\r\n                        autogenerate : false\r\n                    })\r\n                }\r\n                else{\r\n                    Alert('error','Error!',\"You don't have enough questions to select.\" );\r\n                } \r\n            }\r\n        });\r\n    };\r\n\r\n    renderItem = item => {\r\n        const customLabel = (\r\n          <span className=\"custom-item\">\r\n                <Button shape=\"circle\" onClick={()=>{this.OpenModel(item._id)}} icon=\"info\" style={{background:'linear-gradient(to right,rgb(80,190,189),rgb(0,153,153),rgb(0,153,203))',color:'greenblue'}} size=\"small\" ></Button>\r\n                {item.body}\r\n          </span>\r\n        )\r\n        return {\r\n            label: customLabel, \r\n            value: item._id, \r\n        }\r\n    }\r\n\r\n    OpenModel=(qid)=>{\r\n        this.setState({\r\n            ActiveQuestionId:qid,\r\n            Mvisible:true\r\n        })\r\n    }\r\n    handleCancel=()=>{\r\n        this.setState({\r\n            Mvisible:false\r\n        })\r\n    }\r\n\r\n    handleChange = (targetKeys, direction, moveKeys) => {\r\n        this.props.pushQuestionToQueue(targetKeys);\r\n    };\r\n\r\n\r\n    render() {\r\n        const { getFieldDecorator } = this.props.form;\r\n        return (\r\n            <div>\r\n                <Row>\r\n                    <Col span={5} style={{padding:'20px 0px'}}>\r\n                        <div className={`random-question-generation ${this.props.mode ===\"random\"? \"notblind\" : \"blind\"}`}>\r\n                            <Form onSubmit={this.handleSubmit} >\r\n                                <Form.Item label=\"Enter No. of questions\" hasFeedback>\r\n                                    {getFieldDecorator('no', {\r\n                                        rules: [{ required: true, message: 'Please enter no. of question' }],\r\n                                    })(\r\n                                        <InputNumber style={{width:'100%'}}  placeholder=\"No of question\" min={10} max={50}/>\r\n                                    )}\r\n                                </Form.Item> \r\n                                <Form.Item>\r\n                                    <Button type=\"default\" htmlType=\"submit\" block disabled={!this.state.autogenerate}>\r\n                                        Generate Test Paper\r\n                                    </Button>\r\n                                </Form.Item>\r\n                            </Form>\r\n                        </div>\r\n                    </Col>\r\n\r\n                    <Col span={19} style={{padding:'20px'}}>\r\n                        <Transfer\r\n                            disabled={this.props.mode ===\"random\"? true : false}\r\n                            rowKey={record => record._id}\r\n                            dataSource={this.props.test.questionsAvailablebasedonSubject}\r\n                            listStyle={{\r\n                                width: '45%',\r\n                                height: 500,\r\n                            }}\r\n                            targetKeys={this.props.test.newtestFormData.testQuestions}\r\n                            render={this.renderItem}\r\n                            onChange={this.handleChange}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n                \r\n                <Modal\r\n                    destroyOnClose={true}\r\n                    width=\"70%\"\r\n                    style={{top:'30px'}}\r\n                    title=\"Question details\"\r\n                    visible={this.state.Mvisible}\r\n                    onOk={this.handleCancel}\r\n                    onCancel={this.handleCancel}\r\n                    footer={null}\r\n                    >\r\n                    <SingleQuestionDetails qid={this.state.ActiveQuestionId}/>\r\n                </Modal>  \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst GeneraterandomQuestion = Form.create({ name: 'Basic Form' })(GeneraterandomQuestionO);\r\n\r\nconst mapStateToProps = state => ({\r\n    test : state.test\r\n});\r\n\r\nexport default connect(mapStateToProps,{\r\n    changeStep,\r\n    changeBasicNewTestDetails,\r\n    fetchSubjectWiseQuestion,\r\n    pushQuestionToQueue,\r\n    removeQuestionFromMainQueue,\r\n    changeMode\r\n})(GeneraterandomQuestion);\r\n\r\n\r\n\r\nclass SingleQuestionDetails extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            fetching:false,\r\n            qdetails:null\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.setState({\r\n            fetching:true\r\n        })\r\n        Post({\r\n            url: apis.FETCH_SINGLE_QUESTION_BY_TRAINEE,\r\n            data: {\r\n                qid: this.props.qid\r\n            }\r\n        }).then((response) => {\r\n\r\n            // console.log(response);\r\n\r\n            if (response.data.success) {\r\n                this.setState({\r\n                    qdetails: response.data.data[0]\r\n                })\r\n            }\r\n            else {\r\n                Alert('error', 'Error !', response.data.message);\r\n            }\r\n            this.setState({\r\n                fetching: false\r\n            })\r\n        }).catch((error) => {\r\n            this.setState({\r\n                fetching: false\r\n            });\r\n\r\n            // console.log(error);\r\n\r\n            Alert('error', 'Error !', \"Server Error\");\r\n        });\r\n    }\r\n    \r\n    render(){\r\n        const optn =['A','B','C','D','E'];\r\n        let Optiondata=this.state.qdetails;\r\n        if(Optiondata!==null){\r\n            return (\r\n                <div>\r\n                    <div className=\"mainQuestionDetailsContaine\">\r\n                        <div className=\"questionDetailsBody\">\r\n                            {Optiondata.body}\r\n                        </div>\r\n                        {Optiondata.quesimg?\r\n                            <div className=\"questionDetailsImageContainer\">\r\n                                <img alt=\"Question\" className=\"questionDetailsImage\" src={Optiondata.quesimg} />  \r\n                            </div>\r\n                            : null\r\n                        }\r\n                        <div>\r\n                            {Optiondata.options.map((d,i)=>{\r\n                                return(\r\n                                    <div key={i}>\r\n                                        <Row type=\"flex\" justify=\"center\" className=\"QuestionDetailsOptions\">\r\n                                            <Col span={2}>\r\n                                                {\r\n                                                    d.isAnswer?<Button className=\"green\" shape=\"circle\">{optn[i]}</Button>:<Button type=\"primary\" shape=\"circle\">{optn[i]}</Button>\r\n                                                }\r\n                                                \r\n                                            </Col>\r\n                                            {d.optimg?\r\n                                                <Col span={6} style={{padding:'5px'}}>\r\n                                                    <img alt=\"options\" className=\"questionDetailsImage\" src={d.optimg} />\r\n                                                </Col>\r\n                                            :\r\n                                                null\r\n                                            }\r\n                                            {d.optimg?\r\n                                                <Col span={14}>{d.optbody}</Col>\r\n                                            :\r\n                                                <Col span={20}>{d.optbody}</Col>\r\n                                            }\r\n                                        </Row>\r\n                                    \r\n                                    </div>\r\n                                )\r\n                            })}\r\n                        </div>\r\n                    </div>\r\n    \r\n                </div>\r\n            )\r\n        }\r\n        else{\r\n            return(\r\n                <div className=\"skeletor-wrapper\">\r\n                    <Skeleton active />\r\n                    <Skeleton active />\r\n                </div>\r\n            )\r\n        }\r\n        \r\n    }\r\n}","import React from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { Tabs,Button } from 'antd';\r\nimport { changeStep,changeBasicNewTestDetails } from '../../../actions/testAction';\r\nimport GeneraterandomQuestion from'./generaterandomquestion';\r\nimport './newtest.css';\r\nconst { TabPane } = Tabs;\r\n\r\nfunction SelectQuestion(props){\r\n    const questionCount = <Button>Question Selected : {props.test.newtestFormData.testQuestions.length}</Button>;\r\n    \r\n    return (\r\n        <div>\r\n            <Tabs defaultActiveKey=\"1\" tabBarExtraContent={questionCount}>\r\n                <TabPane tab=\"Questions-Random\" key=\"1\">\r\n                    <GeneraterandomQuestion mode=\"random\" />\r\n                </TabPane>\r\n                <TabPane tab=\"Questions-Manually\" key=\"2\">\r\n                    <GeneraterandomQuestion mode=\"manual\" />\r\n                </TabPane>\r\n            </Tabs>\r\n\r\n            <div style={{ width: '100%', padding: '10px' }}>\r\n                <Button style={{ float: 'right' }} type=\"primary\" onClick={() => props.changeStep(3)}>\r\n                    Next\r\n                </Button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n    test : state.test\r\n});\r\n\r\nexport default connect(mapStateToProps,{\r\n    changeStep,\r\n    changeBasicNewTestDetails\r\n})(SelectQuestion);","// Coding Redux Action\nimport apis from '../services/Apis';\nimport Alert from '../components/common/alert';\nimport { SecurePost } from '../services/axiosCall';\n\n// 1 - \nexport const ChangeCodingQuestionModalState = (data) => dispatch => {\n    dispatch({\n        type: 'CHANGE_CODING_QUESTION_MODAL_STATE',\n        payload: data\n    });\n};\n\n// 2 - \nexport const ChangeCodingQuestionData = () => dispatch => {\n    dispatch({\n        type: 'CHANGE_CODING_QUESTION_TABLE_LOADING_STATUS',\n        payload1: true,\n        payload2: []\n    });\n\n    SecurePost({\n        url: `${apis.LIST_CODING_QUESTION}`\n    })\n    .then((response) => {\n        if (response.data.success) {\n            dispatch({\n                type: 'CHANGE_CODING_QUESTION_TABLE_LOADING_STATUS',\n                payload1: false,\n                payload2: response.data.questions\n            });\n        }\n        else {\n            Alert('error', 'Error!', response.data.message);\n            dispatch({\n                type: 'CHANGE_CODING_QUESTION_TABLE_LOADING_STATUS',\n                payload1: false,\n                payload2: []\n            });\n        }\n    })\n    .catch((error) => {\n        Alert('error', 'Error!', 'Server Error');\n        dispatch({\n            type: 'CHANGE_CODING_QUESTION_TABLE_LOADING_STATUS',\n            payload1: false,\n            payload2: []\n        });\n    });\n};","import React, { Component, Fragment } from 'react';\nimport { \n    Button, \n    Skeleton, \n    Modal, \n    Form, \n    InputNumber, \n    Transfer, \n    Row, \n    Col,\n    Input,\n    Checkbox,\n    Typography, \n} from 'antd';\nimport { connect } from 'react-redux';\n\nimport { \n    changeStep,\n    pushCodingQuestionToQueue,\n    removeCodingQuestionFromMainQueue,\n    checkcode,\n    codingDuration\n} from '../../../actions/testAction';\n\nimport {\n    ChangeCodingQuestionData\n} from '../../../actions/codingAction';\n\nimport Markdown from '../../../utils/Markdown';\n\nconst { Title } = Typography;\n\nclass AddCoding extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            checked: false,\n            generating:false,\n            autogenerate:true,\n            ActiveQuestionId:null,\n            Mvisible:false\n        }\n    };\n\n    componentDidMount(){\n        this.props.ChangeCodingQuestionData();\n    };\n\n    handleSubmit = e => {\n        e.preventDefault();\n    };\n\n    // Checked Handler\n    onCheck = (e) => {\n        this.props.checkcode(e.target.checked);\n        this.setState({ checked: e.target.checked });\n    };\n\n    // Push Questions\n    handleChange = (targetKeys, direction, moveKeys) => {\n        this.props.pushCodingQuestionToQueue(targetKeys);\n    };\n\n    // ...\n    renderItem = item => {\n        const customLabel = (\n          <span className=\"custom-item\">\n                <Button \n                    shape=\"circle\" \n                    onClick={()=>{this.OpenModel(item._id)}}\n                    style={{background:'linear-gradient(to right,rgb(80,190,189),rgb(0,153,153),rgb(0,153,203))',color:'greenblue'}}\n                    icon=\"info\"\n                    size=\"small\" \n                ></Button>\n                {item.title}\n          </span>\n        )\n\n        return {\n            label: customLabel, \n            value: item._id, \n        }\n    };\n\n    OpenModel = (qid) => {\n        this.setState({\n            ActiveQuestionId:qid,\n            Mvisible:true\n        });\n    };\n\n    handleCancel=()=>{\n        this.setState({\n            Mvisible:false\n        })\n    };\n\n    // Handle Submit\n    handleFinal = e => {\n        e.preventDefault();\n        this.props.form.validateFields((err, values) => {\n            if (!err) {\n                console.log(values);\n\n                this.props.codingDuration(values.duration);\n                \n                this.props.changeStep(4);\n            }\n        });\n    };\n\n    render() {\n        const { getFieldDecorator } = this.props.form;\n\n        return (\n            <Fragment>\n                <div style={{ padding: '0px auto 5px auto', width: '100%', textAlign: 'center' }}>\n                    <Title level={3}>Add Programming Questions</Title>\n                </div>\n\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-lg-12\">\n                            <Checkbox onChange={this.onCheck}>\n                                Do you want to add Programming Questions with this assessment ?\n                            </Checkbox>\n                        </div>\n                    </div>\n                </div>\n\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-lg-12\">\n                        {this.state.checked ?  \n                            <div>\n                                <Transfer\n                                    rowKey={record => record._id}\n                                    dataSource={this.props.coding.QuestionTableData}\n                                    listStyle={{\n                                        width: '45%',\n                                        height: 500,\n                                    }}\n                                    targetKeys={this.props.test.codingtData.testQuestions}\n                                    render={this.renderItem}\n                                    onChange={this.handleChange}  \n                                />\n\n                                <Form\n                                    onSubmit={this.handleFinal}\n                                    autoComplete=\"off\"\n                                >\n                                    <Form.Item label=\"Coding Assessment Duration (min. 10 mins)\"  hasFeedback>\n                                        {getFieldDecorator('duration', {\n                                            initialValue : this.props.test.codingtData.testDuration,\n                                            rules: [{ required: true, message: 'Please enter assessment duration' }],\n                                        })(\n                                            <InputNumber min={10} style={{width:'100%'}} placeholder=\"Assessment Duration\" />\n                                        )}\n                                    </Form.Item>\n\n                                    <Form.Item>\n                                        <div style={{ width: '100%', padding: '10px' }}>\n                                            <Button \n                                                style={{ float: 'right' }} \n                                                type=\"primary\" \n                                                htmlType=\"submit\" \n                                                block\n                                            >\n                                                Next\n                                            </Button>      \n                                        </div>\n                                    </Form.Item>\n                                </Form>\n                            </div> :\n\n                            <div>\n                            {'      '}\n                            <br />\n\n                            <div className=\"container\">\n                                <div className=\"row\">\n                                    <div className=\"col-lg-12\">\n                                        <Button \n                                            onClick={() => this.props.changeStep(4)} \n                                            type=\"primary\" \n                                            htmlType=\"submit\" block\n                                        >\n                                            Next\n                                        </Button>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        }\n                        </div>\n                    </div>\n                </div>\n\n                <Modal\n                    destroyOnClose={true}\n                    width=\"70%\"\n                    style={{top:'30px'}}\n                    title=\"Question details\"\n                    visible={this.state.Mvisible}\n                    onOk={this.handleCancel}\n                    onCancel={this.handleCancel}\n                    footer={null}\n                >\n                    \n                </Modal>\n\n            </Fragment>\n        );\n    }\n};\n\nconst CodingForm = Form.create({ name: 'Basic Form' })(AddCoding);\n\nconst mapStateToProps = state => ({\n    test: state.test,\n    coding: state.coding\n});\n\nexport default connect(mapStateToProps, {\n    changeStep,\n    checkcode,\n    ChangeCodingQuestionData,\n    pushCodingQuestionToQueue,\n    removeCodingQuestionFromMainQueue,\n    codingDuration\n})(CodingForm);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Row, Col, Button, Descriptions, Typography, Divider } from 'antd';\r\n\r\nimport {SecurePost} from '../../../services/axiosCall';\r\nimport apis from '../../../services/Apis';\r\nimport Alert from '../../common/alert';\r\n\r\nimport { Redirect } from 'react-router-dom';\r\nimport Markdown from '../../../utils/Markdown';\r\nimport renderHTML from 'react-render-html';\r\nimport { FormBuilder, FormRenderer } from 'react-ant-form-builder';\r\n\r\nconst { Title } = Typography;\r\n\r\nclass FinalQuestionView extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            testid: null\r\n        };\r\n    };\r\n\r\n    createtest = () => {\r\n        SecurePost({\r\n            url: apis.CREATE_TEST,\r\n            data: {\r\n                type: this.props.test.newtestFormData.testType,\r\n                title: this.props.test.newtestFormData.testTitle,\r\n                questions: this.props.test.newtestFormData.testQuestions,\r\n                duration: this.props.test.newtestFormData.testDuration,\r\n                subjects: this.props.test.newtestFormData.testSubject,\r\n                organisation: this.props.test.newtestFormData.OrganisationName,\r\n                startTime: this.props.test.newtestFormData.startTime,\r\n                endTime: this.props.test.newtestFormData.endTime,\r\n                \r\n                addjobpost: this.props.test.addjobpost,\r\n                jobtitle:this.props.test.jobPostData.title,\r\n                jobdescription: this.props.test.jobPostData.description,\r\n                joblocation: this.props.test.jobPostData.location,\r\n                jobtype: this.props.test.jobPostData.type,\r\n                jobcustom: this.props.test.jobPostData.customdata,\r\n\r\n                addcoding: this.props.test.addcoding,\r\n                codingquestions: this.props.test.codingtData.testQuestions,\r\n                codingduration: this.props.test.codingtData.testDuration,\r\n            }\r\n        })\r\n        .then((response) => {\r\n            // console.log(response.data);\r\n            if (response.data.success) {\r\n                Alert('success', 'Test paper Created Successfully!', 'Redirecting to Test Deatils Page.');\r\n                setTimeout(() => {\r\n                    this.setState({\r\n                        testid: response.data.testid\r\n                    })\r\n                }, 3000);\r\n            }\r\n            else {\r\n                Alert('error', 'Error!', response.data.message);\r\n            }\r\n        }).catch((err) => {\r\n            // console.log(err);\r\n            Alert('error', 'Error!', 'Server Error');\r\n        });\r\n    }\r\n\r\n    render(){\r\n        if(this.state.testid){\r\n            return <Redirect to={`/user/conducttest?testid=${this.state.testid}`} />\r\n        }\r\n        else{\r\n            return (\r\n                <div>\r\n                    {this.props.test.addjobpost ? \r\n                        <div style={{justifyContent: 'left'}} >\r\n                            <Descriptions \r\n                                size=\"small\" \r\n                                title=\"Job Post Info\"\r\n                                column={4} \r\n                                layout=\"vertical\" \r\n                                bordered={true}\r\n                            >\r\n                                <Descriptions.Item span={1} label=\"Job Title\">\r\n                                    {this.props.test.jobPostData.title}\r\n                                </Descriptions.Item>\r\n\r\n                                <Descriptions.Item \r\n                                    span={1} \r\n                                    label=\"Job Description\" \r\n                                    style={{justifyContent: 'left'}}\r\n                                >\r\n                                    {renderHTML(this.props.test.jobPostData.description)}\r\n                                </Descriptions.Item>\r\n\r\n                                <Descriptions.Item span={1} label=\"Job Location\" style={{justifyContent: 'left'}} >\r\n                                    {this.props.test.jobPostData.location}\r\n                                </Descriptions.Item>\r\n\r\n                                <Descriptions.Item span={1} label=\"Job Type\" style={{justifyContent: 'left'}} >\r\n                                    {this.props.test.jobPostData.type}\r\n                                </Descriptions.Item>\r\n\r\n                                <Descriptions.Item span={1} label=\"Custom Form\" style={{justifyContent: 'left'}} >\r\n                                    <FormRenderer\r\n                                        allowDraft={false}\r\n                                        formStructure={this.props.test.jobPostData.customdata}\r\n                                        onError={error => console.log(error)}\r\n                                    />\r\n                                </Descriptions.Item>\r\n\r\n                                <br />\r\n                            </Descriptions>\r\n                        </div> : <div></div>\r\n                    }\r\n                    \r\n                    <Divider />\r\n\r\n                    <Title level={3} style={{textAlign: 'center'}} >Assessment Question</Title>\r\n\r\n                    {this.props.test.newtestFormData.testQuestions.map((d,i)=>{\r\n                        return <Q key={i+1} _id={d} no={i+1}/>\r\n                    })}\r\n                    <div style={{width:'100%',padding:'10px'}}>\r\n                        <Button style={{float:'right'}} type=\"primary\" onClick={this.createtest}>\r\n                            Create Test\r\n                        </Button>\r\n                    </div>\r\n                    \r\n                </div>\r\n            )\r\n        }\r\n    };\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    test : state.test\r\n});\r\n\r\nexport default connect(mapStateToProps,null)(FinalQuestionView);\r\n\r\nfunction QuestionView(props) {\r\n    var _id = props._id;\r\n    var no = props.no;\r\n    var obj = props.test.questionsAvailablebasedonSubject.filter((hero) => {\r\n        return hero._id == _id;\r\n    });\r\n    \r\n    // console.log(obj[0].weightage);\r\n\r\n    var oo = ['A', 'B', 'C', 'D', 'E'];\r\n\r\n    return (\r\n        <div style={{ marginBottom: '20px' }}>\r\n            <div>\r\n                <div style={{ width: '100%' }}>\r\n                    <b style={{ float: 'left' }}>Question No. {no})</b>\r\n                    <b style={{ float: 'right' }}>Marks. {obj[0].weightage}</b>\r\n                </div>\r\n                <div style={{ padding: '5px 20px' }}>\r\n                    <br />\r\n                    <Markdown>\r\n                        {obj[0].body}\r\n                    </Markdown>\r\n                    {obj[0].quesimg ? <img alt=\"Question\" src={obj[0].quesimg} /> : null}\r\n                </div>\r\n            </div>\r\n            <Row>\r\n                {obj[0].options.map((d, i) => {\r\n                    return (\r\n                        <Col key={i} span={12} style={{ padding: '5px 20px' }}>\r\n                            <b>{oo[i]} ) </b> <Markdown>{d.optbody}</Markdown>\r\n                            {d.optimg ? <img alt=\"Option\" src={d.optimg} /> : null}\r\n                        </Col>\r\n                    )\r\n                })}\r\n            </Row>\r\n        </div>\r\n    );\r\n};\r\n\r\nvar Q = connect(mapStateToProps,null)(QuestionView);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Steps, Typography, Button } from 'antd';\r\nimport { steps } from '../../../services/steps';\r\nimport { changeStep } from '../../../actions/testAction';\r\n\r\nimport { \r\n    ChangeSubjectTableData\r\n} from '../../../actions/adminAction';\r\n\r\nimport BasicTestForm from './basicForm';\r\nimport AddJobPost from './AddJobPost';\r\nimport SelectQuestion from './selectQuestion';\r\nimport AddCodingQuestion from './AddCoding';\r\nimport FinalQuestionView from './questionview';\r\n\r\nimport './newtest.css';\r\n\r\nconst { Step } = Steps;\r\nconst { Title } = Typography;\r\n\r\nclass  NewTest extends Component {\r\n    componentDidMount(){\r\n        this.props.ChangeSubjectTableData();\r\n    }\r\n\r\n    prev() {\r\n        const current = this.props.test.currentStep - 1;\r\n        this.props.changeStep(current);\r\n    };\r\n\r\n    render(){\r\n        var torender = \"\";\r\n\r\n        if (this.props.test.currentStep === 1) {\r\n            torender=<AddJobPost />;\r\n        }\r\n        else if (this.props.test.currentStep === 2) {\r\n            torender=<SelectQuestion />;\r\n        }\r\n        else if (this.props.test.currentStep === 3) {\r\n            torender = <AddCodingQuestion />;\r\n        }\r\n        else if (this.props.test.currentStep === 4) {\r\n            torender=<FinalQuestionView />;\r\n        }\r\n        else{\r\n            torender=<BasicTestForm />;\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <div style={{padding:'0px auto 5px auto',width:'100%',textAlign:'center'}}>\r\n                    <Title level={3}>Create New Assessment</Title>\r\n                </div>\r\n                <Steps className=\"newtest-steps-holder\" current={this.props.test.currentStep}>\r\n                    {steps.map(item => (\r\n                        <Step key={item.title} title={item.title} />\r\n                    ))}\r\n                </Steps>\r\n                <div className=\"new-test-form-holder\">\r\n                    {torender}\r\n                    <br />\r\n                    {this.props.test.currentStep > 0 && (\r\n                        <div className=\"steps-action\">\r\n                            <Button onClick={() => this.prev()}>\r\n                                Previous\r\n                            </Button>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        )\r\n    }  \r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    test : state.test\r\n});\r\n\r\nexport default connect(mapStateToProps,{\r\n    changeStep,\r\n    ChangeSubjectTableData\r\n})(NewTest);","import React from \"react\";\nimport \"@github/markdown-toolbar-element\";\nimport { Button } from 'antd';\n\nfunction Toolbar(props) {\n  const btnStyle = {\n    padding: \"3px 10px\",\n    fontSize: \"12px\",\n    lineHeight: \"20px\",\n    margin: \"3px\",\n  };\n\n  return (\n    <div>\n      <markdown-toolbar for=\"textarea_input\">\n\n        <md-header level=\"1\">\n          <Button style={btnStyle} type=\"default\">\n            <i className=\"fas fa-heading\"></i>\n          </Button>\n        </md-header>\n\n        <md-bold>\n          <Button style={btnStyle} type=\"default\">\n            <i className=\"fas fa-bold\"></i>\n          </Button>\n        </md-bold>\n\n        <md-italic>\n          <Button style={btnStyle} type=\"default\">\n            <i className=\"fas fa-italic\"></i>\n          </Button>\n        </md-italic>\n\n        <md-quote>\n          <Button style={btnStyle} type=\"default\">\n            <i className=\"fas fa-quote-right\"></i>\n          </Button>\n        </md-quote>\n\n        <md-link>\n          <Button style={btnStyle} type=\"default\">\n            <i className=\"fas fa-link\"></i>\n          </Button>\n        </md-link>\n\n        <md-image>\n          <Button style={btnStyle} type=\"default\">\n            <i className=\"fas fa-image\"></i>\n          </Button>\n        </md-image>\n\n        <md-unordered-list>\n          <Button style={btnStyle} type=\"default\">\n            <i className=\"fas fa-list-ul\"></i>\n          </Button>\n        </md-unordered-list>\n\n        <md-ordered-list>\n          <Button style={btnStyle} type=\"default\">\n            <i className=\"fas fa-list-ol\"></i>\n          </Button>\n        </md-ordered-list>\n\n      </markdown-toolbar>\n    </div>\n  );\n}\n\nexport default Toolbar;\n","import React, { Fragment, Component } from \"react\";\r\nimport {\r\n    Form,\r\n    Input,\r\n    Button,\r\n    Select,\r\n    Row,\r\n    Col,\r\n    Checkbox,\r\n    Modal,\r\n    Upload,\r\n    Icon,\r\n    InputNumber \r\n} from 'antd';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { SecurePost } from '../../../services/axiosCall';\r\nimport apis from '../../../services/Apis';\r\nimport Alert from '../../../components/common/alert';\r\nimport auth from '../../../services/AuthServices';\r\nimport Markdown from \"../../../utils/Markdown\";\r\nimport Toolbar from './Toolbar';\r\n\r\nimport { \r\n    ChangeCodingQuestionModalState,\r\n    ChangeCodingQuestionData\r\n} from \"../../../actions/codingAction\";\r\n\r\nclass AddQuestion extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            submitDisabled: false,\r\n            adding: false,\r\n            description: ''\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n    \r\n    // Handle Change\r\n    handleChange(event) {\r\n        this.setState({description: event.target.value});\r\n    };\r\n\r\n    // Submit Form\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        this.props.form.validateFieldsAndScroll((err, values) => {\r\n            // console.log(values);\r\n            if (!err) {\r\n                SecurePost({\r\n                    url:apis.CREATE_CODING_QUESTION,\r\n                    data:{\r\n                        title:values.title,\r\n                        statement: values.statement,\r\n                        category:values.category,\r\n                        difficulty:values.difficulty,\r\n                        timelimit:values.timelimit,\r\n                        memorylimit: values.memorylimit\r\n                    }\r\n                })\r\n                .then((response) => {\r\n                    this.setState({\r\n                        adding:false\r\n                    });\r\n\r\n                    if(response.data.success){\r\n                        this.props.ChangeCodingQuestionModalState(false);\r\n                        Alert('success','Success', response.data.message);\r\n                        this.props.ChangeCodingQuestionData();\r\n                    }\r\n                    else{\r\n                        this.props.ChangeCodingQuestionModalState(false);\r\n                        this.props.form.resetFields();\r\n                        return Alert('warning','Warning!',response.data.message);\r\n                    }\r\n                })\r\n                .catch((error)=>{\r\n                    // console.log(error);\r\n                    this.props.form.resetFields();\r\n                    \r\n                    return Alert('error','Error!','Server Error');\r\n                });\r\n            }\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { getFieldDecorator } = this.props.form;\r\n        const { Option } = Select;\r\n        const { TextArea } = Input;\r\n        \r\n        return (\r\n            <Fragment>\r\n                <div>\r\n                    <Form onSubmit={this.handleSubmit}>\r\n                        <Row>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Problem Title\" hasFeedback>\r\n                                    {getFieldDecorator('title', {\r\n                                            rules: [{ required: true, message: 'Please type problem title!' }],\r\n                                    })(\r\n                                        <Input />\r\n                                    )}\r\n                                </Form.Item> \r\n                            </Col>  \r\n                        </Row>\r\n\r\n                        <Row>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Problem Statement\" hasFeedback>\r\n                                    {getFieldDecorator('statement', {\r\n                                        rules: [{ required: true, message: 'Please type question!' }],\r\n                                    })(\r\n                                        <div>\r\n                                            <Toolbar />\r\n                                            <TextArea\r\n                                                id=\"textarea_input\"\r\n                                                rows={5}\r\n                                                onChange={this.handleChange} \r\n                                            />\r\n                                        </div>\r\n                                    )}\r\n                                </Form.Item> \r\n                            </Col>  \r\n                        </Row>\r\n\r\n                        <Row>\r\n                            <Col span={24}>\r\n                                <Markdown>{this.state.description}</Markdown>\r\n                            </Col>  \r\n                        </Row>\r\n\r\n                        <Row>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Memory Limit\" hasFeedback>\r\n                                    {getFieldDecorator('memorylimit', {\r\n                                        rules: [{ required: true, message: 'Please input memory limit!'}],\r\n                                    })(\r\n                                        <InputNumber min={1} style={{ width: '100%' }} />\r\n                                    )}\r\n                                </Form.Item>\r\n                            </Col>\r\n                        </Row>\r\n\r\n                        <Row>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Time Limit\" hasFeedback>\r\n                                    {getFieldDecorator('timelimit', {\r\n                                        rules: [{ required: true, message: 'Please input time limit!'}],\r\n                                    })(\r\n                                        <InputNumber min={1} style={{ width: '100%' }} />\r\n                                    )}\r\n                                </Form.Item>\r\n                            </Col>\r\n                        </Row>\r\n\r\n                        <Row>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Difficulty\" hasFeedback>\r\n                                    {getFieldDecorator('difficulty', {\r\n                                        rules: [{ required: true, message: 'Please select difficulty' }],\r\n                                    })(\r\n                                        <Select\r\n                                            style={{ width:'100%'}}\r\n                                            placeholder=\"Select Difficulty\"\r\n                                        >\r\n                                            <Option value='easy'>Easy</Option>\r\n                                            <Option value='medium'>Medium</Option>\r\n                                            <Option value='hard'>Hard</Option>\r\n                                        </Select>\r\n                                    )}\r\n                                </Form.Item>\r\n                            </Col>\r\n                        </Row>\r\n\r\n                        <Row>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Category\" hasFeedback>\r\n                                    {getFieldDecorator('category', {\r\n                                            rules: [{ required: true, message: 'Enter category' }],\r\n                                    })(\r\n                                        <Input />\r\n                                    )}\r\n                                </Form.Item> \r\n                            </Col>  \r\n                        </Row>\r\n\r\n                        <Row>\r\n                            <Col span={24}>\r\n                                <Form.Item>\r\n                                    <Button \r\n                                        type=\"primary\" \r\n                                        htmlType=\"submit\" \r\n                                        disabled={this.state.submitDisabled} \r\n                                        loading={this.state.adding} \r\n                                        block\r\n                                    >\r\n                                        Create Question\r\n                                    </Button>\r\n                                </Form.Item>\r\n                            </Col>\r\n                        </Row>\r\n\r\n                    </Form>\r\n                </div>\r\n            </Fragment>\r\n        );\r\n    }\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    trainer: state.trainer,\r\n    admin: state.admin,\r\n    coding: state.coding \r\n});\r\n\r\nconst NewQuestionForm = Form.create({ name: 'newQuestion' })(AddQuestion);\r\n\r\nexport default connect(mapStateToProps, {\r\n    ChangeCodingQuestionModalState,\r\n    ChangeCodingQuestionData\r\n})(NewQuestionForm);\r\n","import React, { Fragment, useState, useEffect } from 'react';\nimport { Skeleton, \n    Row, Col, \n    Icon, Tabs, \n    Descriptions, \n    Button, \n    Typography, \n    Divider,\n    Input\n} from 'antd';\nimport Markdown from '../../../utils/Markdown';\n\nimport { SecurePost } from '../../../services/axiosCall';\nimport apis from '../../../services/Apis';\nimport Alert from '../../../components/common/alert';\n\nconst { TabPane } = Tabs;\nconst { Title, Text } = Typography;\nconst { TextArea } = Input;\n\nconst QuestionDetails = (props) => {\n    const [state, setstate] = useState({\n        id: props.id,\n        loading: true,\n        details: []\n    });\n\n    const [question, setquestion] = useState([]);\n\n    // Test Cases\n    const questionId = props.id;\n\n    const [testcase, setTestCase] = useState({\n        loading: true,\n        error: \"\",\n        question: {},\n        testcases: [],\n        input: \"\",\n        output: \"\"\n    });\n\n    const getData = () => {\n        SecurePost({\n            url:apis.GET_CODING_QUESTION_DETAILS,\n            data:{\n                questionId: state.id\n            }\n        })\n        .then((response) => {\n            if(response.data.success){\n                setquestion(response.data.question);\n                setTestCase({\n                    ...state,\n                    testcases: response.data.testcases\n                })\n\n                setTimeout(() => {\n                    setstate({\n                        ...state,\n                        loading: false\n                    });\n                }, 3000);\n                \n            }\n            else{\n                return Alert('warning','Warning!',response.data.message);\n            }\n        })\n        .catch((error) => {\n            return Alert('error','Error!','Server Error');\n        });\n    };\n\n    useEffect(() => {\n        getData();\n    }, []);\n\n    const tabChange = (key) => {\n        // console.log(key)\n    }\n\n    // Tab 2\n\n    const TestCaseListComp = () => {\n        if (testcase.testcases.length) {\n            let i = 1;\n            return testcase.testcases.map((testcase) => {\n\n                return <li \n                        className=\"container\" \n                        style={{marginLeft: '25px', float: 'right', listStyle: 'none'}} \n                        key={testcase.id}\n                    >\n                    <div className=\"row\">\n\n                        <div className=\"col-md-3\">\n                            <span className=\"input-label\">Testcase #{i++}</span>\n                        </div>\n\n                        <div className=\"col-md-3\">\n                            <p>Input</p> <br />\n                            <TextArea \n                                value={testcase.input}\n                                disabled=\"true\"\n                            />\n                        </div>\n\n                        <div className=\"col-md-3\">\n                            <p>Output</p> <br />\n                            <TextArea \n                                value={testcase.output}\n                                disabled=\"true\"\n                            />\n                        </div>\n\n                        <div className=\"col-md-3\">\n                            <p>Action</p> <br />\n                            <Button \n                                type=\"primary\" \n                                shape=\"circle\" \n                                icon=\"delete\" \n                            />\n                        </div>\n\n                    </div>\n                </li>\n            })\n        } else {\n            return <div>\n                <Title level={4} style={{ marginLeft: '15px'}}> No TestCases found !!!</Title>\n            </div>\n        }\n    };\n\n    const onSubmit = (event) => {\n        event.preventDefault();\n\n        let formData = {};\n\n        formData = {\n            \"test-input\": testcase.input,\n            \"test-output\": testcase.output\n        };\n\n        SecurePost({\n            url:`${apis.CREATE_CODING_TESTCASE}/${questionId}`,\n            data: formData\n        })\n        .then((response) => {\n            if(response.data.success){\n                Alert('success','Success', response.data.message);\n            }\n            else{\n                return Alert('warning','Warning!',response.data.message);\n            }\n        })\n        .catch((error)=>{            \n            return Alert('error','Error!','Error Adding Test Case');\n        });\n    };\n\n    const handlechangeFile = name => event => {\n        setTestCase({ ...testcase, [name]: event.target.value });\n    }\n\n    return (\n        <Fragment>\n            <Skeleton loading={state.loading} active avatar>\n                <Tabs defaultActiveKey=\"1\" onChange={(e) => tabChange(e)}>\n\n                    {/* Tab 1 */}\n\n                    <TabPane tab={<span><Icon type=\"home\" />Basic Info</span>} key=\"1\">\n                        <Descriptions \n                            bordered \n                            title=\"\" \n                            border \n                            size=\"small\" \n                            column={{ xxl: 1, xl: 1, lg: 1, md: 1, sm: 1, xs: 1 }}\n                        >\n                            <Descriptions.Item label=\"Question Id\">{state.id}</Descriptions.Item>\n\n                            <Descriptions.Item label=\"Problem Statement\">\n                                <Markdown>\n                                    {question.statement}\n                                </Markdown>\n                            </Descriptions.Item>\n\n                        </Descriptions>\n                    </TabPane>\n\n                    {/* Tab 2 */}\n\n                    <TabPane tab={<span><Icon type=\"plus\" />Test Case</span>} key=\"2\">\n                    <div className=\"row mx-0 my-4 pb-md-0 pb-sm-4 shadow-sm align-items-center\">\n                        <div className=\"col-md-4\">\n                            <div className=\"form-group\">\n                                <span className=\"input-label\">Input</span>\n                                <div className=\"input-group\">\n                                    <TextArea \n                                        rows={4}\n                                        onChange={handlechangeFile(\"input\")}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n\n                        <div className=\"col-md-4\">\n                            <div className=\"form-group\">\n                                <span className=\"input-label\">Output</span>\n                                <div className=\"input-group\">\n                                    <TextArea \n                                        rows={4}\n                                        onChange={handlechangeFile(\"output\")}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n\n                        <div className=\"col-md-4\">\n                            <Button \n                                type=\"primary\" \n                                onClick={onSubmit}\n                            >\n                                Add\n                            </Button>\n                        </div>\n                    </div>\n\n                    <Divider />\n                    <br />\n\n                    <div className=\"card mb-5\">\n                        <div className=\"card-body\">\n                            <ul className=\"list-group list-group-flush row\">\n                                {TestCaseListComp()}\n                            </ul>\n                        </div>\n                    </div>\n\n                    </TabPane>\n                </Tabs>\n            </Skeleton>\n        </Fragment>\n    );\n};\n\nexport default QuestionDetails;\n","import React, { Fragment, useState, useEffect } from 'react';\nimport { Table, Input, Button, Icon, Typography, Popconfirm, Divider, Modal, Select, Row, Col } from 'antd';\nimport Highlighter from 'react-highlight-words';\nimport { connect } from 'react-redux';\n\nimport NewQuestion from './AddQuestion';\nimport QuestionDetails from './QuestionDetails';\n\nimport { \n    ChangeCodingQuestionModalState,\n    ChangeCodingQuestionData,\n} from \"../../../actions/codingAction\";\n\nconst AllQuestions = (props) => {\n\n    const [state, setstate] = useState({\n        questiondetailsId : null,\n        questiondetailsModelVisible:false\n    });\n\n    // Action Modal\n    const OpendetailsModal = (id) => {\n        setstate((previousState,previousProps)=>{\n          return{\n            questiondetailsId:id,\n            questiondetailsModelVisible:true\n          }\n        });\n    };\n\n    const ClosedetailsModal = () => {\n        setstate((previousState,previousProps)=>{\n          return{\n            questiondetailsId:null,\n            questiondetailsModelVisible:false\n          }\n        });\n    };\n\n    useEffect(() => {\n        props.ChangeCodingQuestionData();\n    }, []);\n\n    const showModal = (mode) => {\n        props.ChangeCodingQuestionModalState(true);\n    };\n\n    const handleOk = e => {\n        props.ChangeCodingQuestionModalState(false);\n    };\n\n    const handleCancel = e => {\n        props.ChangeCodingQuestionModalState(false);\n    };\n\n\n    const columns = [\n        {\n            title: 'Problem Title',\n            dataIndex: 'title',\n            key: 'title',\n            width: '15%',\n        },\n        {\n            title: 'Category',\n            dataIndex: 'category',\n            key: 'category',\n            width: '15%',\n        },\n        {\n            title: 'Difficulty',\n            dataIndex: 'difficulty',\n            key: 'difficulty',\n            width: '15%',\n        },\n        {\n            title: 'Action',\n            key: '_id',\n            dataIndex: '_id',\n            width: '15%',\n            render: (key) => (\n                <Button \n                    type=\"primary\" \n                    shape=\"circle\" \n                    onClick={()=>OpendetailsModal(key)} \n                    icon=\"info-circle\" \n                />\n            ),\n        },\n    ];\n\n    return (\n        <Fragment>\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-lg-6\">\n                        <Button \n                            type=\"primary\" \n                            icon=\"code\" \n                            style={{marginBottom:'10px'}} \n                            onClick={showModal}\n                        >\n                            Add New Coding Question\n                        </Button>\n                    </div>\n\n                    <div className=\"col-lg-6\"></div>\n                </div>\n            </div>\n\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-lg-12\">\n                        <Table \n                            bordered={true} \n                            columns={columns} \n                            dataSource={props.coding.QuestionTableData} \n                            size=\"medium\" \n                            pagination={{ pageSize: 5 }}\n                            loading={props.coding.QuestionTableLoading}\n                            rowKey=\"_id\" \n                        />\n                    </div>\n                </div>\n            </div>\n\n            {/* New Question Form */}\n            <Modal\n                title=\"New Coding Question\"\n                style={{top :'20px',padding:'0px',backgroundColor:'rgb(155,175,190)'}}\n                width=\"70%\"\n                visible={props.coding.NewQuestionModalState}\n                onOk={() => handleOk}\n                onCancel={handleCancel}\n                footer={[]}\n                destroyOnClose={true}\n            >\n                <NewQuestion />\n            </Modal>\n\n            {/* Question Details */}\n            <Modal\n                visible={state.questiondetailsModelVisible}\n                title=\"Question Details\"\n                onCancel={ClosedetailsModal}\n                style={{top :'20px',padding:'0px',backgroundColor:'rgb(155,175,190)'}}\n                width=\"70%\"\n                destroyOnClose={true}\n                footer={[]}\n            >\n                <QuestionDetails id={state.questiondetailsId} / >\n            </Modal>\n\n        </Fragment>\n    );\n};\n\nconst mapStateToProps = state => ({\n    trainer: state.trainer,\n    admin: state.admin,\n    coding: state.coding \n});\n\nexport default connect(mapStateToProps,{\n    ChangeCodingQuestionModalState,\n    ChangeCodingQuestionData\n})(AllQuestions);","import React, { Fragment, useState, useEffect } from 'react';\nimport MaterialTable from 'material-table';\nimport { connect } from 'react-redux';\n\nimport { SecurePost } from '../../services/axiosCall';\nimport apis from '../../services/Apis';\nimport  Alert  from '../common/alert';\nimport { UpdateReferTable } from '../../actions/trainerAction';\n\nconst Refer = (props) => {\n    \n    useEffect(() => {\n        props.UpdateReferTable();\n    }, []);\n\n    return (\n        <Fragment>\n            <MaterialTable\n                title=\"Referrer List\"\n                columns={[\n                    { title: 'Referrer Code', field: '_id' },\n                    { title: 'Name', field: 'name' },\n                    { title: 'Email', field: 'email' },\n                ]}\n\n                data={props.trainer.referTable}\n\n                options={{\n                    filtering: true,\n                    exportButton: true,\n                    headerStyle: {\n                        backgroundColor: '#01579b',\n                        color: '#FFF'\n                    }\n                }}\n            />\n        </Fragment>\n    );\n};\n\nconst mapStateToProps = state => ({\n    trainer : state.trainer\n});\n\nexport default connect(mapStateToProps,{\n    UpdateReferTable\n})(Refer);","import React from 'react';\nimport { Button, Modal, Form, Input, Radio } from 'antd';\nimport { connect } from 'react-redux';\n\nimport { SecurePost } from '../../services/axiosCall';\nimport apis from '../../services/Apis';\nimport  Alert  from '../common/alert';\nimport { UpdateReferTable } from '../../actions/trainerAction';\n\nconst CollectionCreateForm = Form.create({ name: 'form_in_modal' })(\n  // eslint-disable-next-line\n  class extends React.Component {\n    render() {\n      const { visible, onCancel, onCreate, form } = this.props;\n      const { getFieldDecorator } = form;\n      return (\n        <Modal\n          visible={visible}\n          title=\"Add a new Referrer\"\n          okText=\"Add\"\n          onCancel={onCancel}\n          onOk={onCreate}\n        >\n          <Form layout=\"vertical\">\n            <Form.Item label=\"Name\" hasFeedback>\n              {getFieldDecorator('name', {\n                rules: [{ required: true, message: 'Please input the name!' }],\n              })(<Input />)}\n            </Form.Item>\n\n            <Form.Item label=\"Email\" hasFeedback>\n              {getFieldDecorator('email', {\n                rules: [\n                    { \n                        required: true, \n                        message: 'Please input the email!' \n                    },\n                    {\n                        type: 'email',\n                        message: 'The input is not valid E-mail!',\n                    },\n                ],\n              })(<Input />)}\n            </Form.Item>\n\n          </Form>\n        </Modal>\n      );\n    }\n  },\n);\n\nclass CollectionsPage extends React.Component {\n  constructor(props){\n    super(props);\n    this.state={\n      visible: false,\n    }\n  }\n\n  showModal = () => {\n    this.setState({ visible: true });\n  };\n\n  handleCancel = () => {\n    this.setState({ visible: false });\n  };\n\n  // Submit Form\n  handleCreate = () => {\n    const { form } = this.formRef.props;\n\n    form.validateFields((err, values) => {\n      if (!err) {\n        SecurePost({\n            url: apis.ADD_REFER,\n            data: {\n                name: values.name,\n                email: values.email\n            }\n        })\n        .then((response) => {\n            if(response.data.success){\n              Alert('success', 'Success', response.data.message);\n              form.resetFields();\n              this.props.UpdateReferTable();\n              this.setState({ visible: false });\n            }\n        })\n        .catch((error) => {\n            return Alert('error','Error!','Server Error');\n        });\n      }\n    });\n  };\n\n  saveFormRef = formRef => {\n    this.formRef = formRef;\n  };\n\n  render() {\n    return (\n      <div>\n        <Button type=\"primary\" onClick={this.showModal}>\n          Add New Referrer\n        </Button>\n\n        <CollectionCreateForm\n          wrappedComponentRef={this.saveFormRef}\n          visible={this.state.visible}\n          onCancel={this.handleCancel}\n          onCreate={this.handleCreate}\n        />\n        \n      </div>\n    );\n  }\n};\n\nexport default connect(null,{\n  UpdateReferTable\n})(CollectionsPage);","import React, { Fragment, useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { \r\n  Statistic, \r\n  Row, Col, \r\n  Button, Typography, \r\n  Divider, Spin,\r\n  Card, Icon, List, Avatar\r\n} from 'antd';\r\n\r\nimport { SecurePost } from '../../services/axiosCall';\r\nimport apis from '../../services/Apis';\r\nimport Alert from '../common/alert';\r\nimport Refer from './Refer';\r\nimport AddRefer from './AddRefer';\r\n\r\nimport './welcome.css';\r\n\r\nconst { Title, Text } = Typography;\r\n\r\nconst Welcome = (props) => {\r\n  const [state, setstate] = useState({\r\n    questat: [],\r\n    loading: false,\r\n  });\r\n\r\n  const [teststat, setteststat] = useState([]);\r\n  const [cantotal, setcantotal] = useState(0);\r\n\r\n  // Get Question Stat\r\n  const getQueStat = () => {\r\n    setstate({\r\n      loading: true,\r\n    });\r\n\r\n    SecurePost({\r\n      url: `${apis.GET_QUESTION_STAT}`\r\n    })\r\n    .then((response) => {\r\n        if (response.data.success) {\r\n          setstate({\r\n            questat: response.data.data,\r\n            loading: false\r\n          });\r\n        }\r\n        else {\r\n          return Alert('warning', 'Warning!', response.data.message);\r\n        }\r\n    })\r\n    .catch((error) => {\r\n        return Alert('error', 'Error!', 'Server Error');\r\n    });\r\n  };\r\n\r\n  const getTestStat = () => {\r\n    SecurePost({\r\n      url: `${apis.GET_TEST_STAT}`\r\n    })\r\n    .then((response) => {\r\n        if (response.data.success) {\r\n          setteststat(response.data.data);\r\n          setcantotal(response.data.total);\r\n        }\r\n        else {\r\n          return Alert('warning', 'Warning!', response.data.message);\r\n        }\r\n    })\r\n    .catch((error) => {\r\n      return Alert('error', 'Error!', 'Server Error');\r\n    });\r\n  };\r\n\r\n  useEffect( () => {\r\n    getQueStat();\r\n    getTestStat();\r\n  }, []);\r\n\r\n\r\n  return (\r\n    <Fragment>\r\n      \r\n      <Title level={4}>\r\n        Welcome {props.user.userDetails.name}\r\n      </Title>\r\n\r\n      <Divider />\r\n\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-4\">\r\n            <Card>\r\n              <Statistic\r\n                title=\"Total Assessments Created\"\r\n                value={teststat.length}\r\n              />\r\n            </Card>\r\n          </div>\r\n\r\n          <div className=\"col-md-4\">\r\n              <Card>\r\n                <Statistic\r\n                  title=\"Total Candidates Applied\"\r\n                  value={cantotal}\r\n                />\r\n              </Card>\r\n          </div>\r\n\r\n          <div className=\"col-md-4\">\r\n              <Card>\r\n                <Statistic\r\n                  title=\"Plan Expires in (days)\"\r\n                  value={30}\r\n                />\r\n              </Card>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <Divider />\r\n      \r\n\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-lg-12\" style={{ maxHeight: '200px', overflowY: 'scroll' }}>\r\n            <Title level={4}>Number of Candidates by Assessment</Title>\r\n            {state.loading ? <Spin />\r\n              : \r\n              <List\r\n                itemLayout=\"horizontal\"\r\n                dataSource={teststat}\r\n                renderItem={item => (\r\n                  <List.Item>\r\n                    <List.Item.Meta\r\n                      title={item.title}\r\n                      description={<div>Number of Candidates : <strong>{item.cnt}</strong></div>}\r\n                    />\r\n                  </List.Item>\r\n                )}\r\n              />\r\n            }\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <Divider />\r\n\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-lg-6\">\r\n            <AddRefer />\r\n          </div>\r\n          <div className=\"col-lg-6\">\r\n            \r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <br />\r\n\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-lg-12\">\r\n            <Refer />\r\n          </div>\r\n        </div>\r\n      </div>      \r\n\r\n      <Divider />\r\n\r\n      <Title level={4}>Question Bank Details</Title>\r\n\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-lg-12\" style={{ maxHeight: '200px', overflowY: 'scroll' }}>\r\n            <Title level={4}>Number of Questions by Category</Title>\r\n\r\n            {state.loading ? <Spin />\r\n              : \r\n              <List\r\n              itemLayout=\"horizontal\"\r\n              dataSource={state.questat}\r\n              renderItem={item => (\r\n                <List.Item>\r\n                  <List.Item.Meta\r\n                    avatar={\r\n                    <Avatar src={item._id.pic} />}\r\n                    title={item._id.topic}\r\n                    description={<div>Number of Questions : <strong>{item.cnt}</strong></div>}\r\n                  />\r\n                </List.Item>\r\n              )}\r\n            />\r\n          }\r\n\r\n            \r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      \r\n\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  user : state.user\r\n});\r\n\r\nexport default connect(mapStateToProps, null)(Welcome);","import React, { Fragment } from 'react';\r\nimport { Result } from 'antd';\r\n\r\nexport default function ErrorPage() {\r\n    return (\r\n        <Fragment>\r\n            <Result\r\n                status=\"404\"\r\n                title=\"404\"\r\n                subTitle=\"Sorry, the page you visited does not exist.\"\r\n            />\r\n        </Fragment>\r\n    )\r\n};","import React, { Component, Fragment } from 'react'\nimport {\n    Form,\n    Input,\n    Button,\n    Select,\n    Row,\n    Col,\n    Checkbox,\n    Typography,\n    Modal,\n    Upload,\n    Icon,\n    InputNumber,\n    Divider\n} from 'antd';\nimport { connect } from 'react-redux';\n\nimport { SecurePost } from '../../services/axiosCall';\nimport apis from '../../services/Apis';\nimport Alert from '../common/alert';\nimport auth from '../../services/AuthServices';\n\nconst { Title, Text } = Typography;\n\nclass Profile extends Component {\n    constructor(props){\n        super(props);\n        this.state={\n            logo: this.props.user.userDetails.avatar,\n            adding:false,\n            submitDisabled:false,\n        }        \n    }\n\n    handleSubmit = e => {\n        e.preventDefault();\n\n        this.props.form.validateFieldsAndScroll((err, values) => {\n            if (!err) {\n                SecurePost({\n                    url: `${apis.UPDATE_USER}`,\n                    data: {\n                        _id: this.props.user.userDetails._id,\n                        organisation: values.organisation,\n                        avatar: this.state.logo,\n                        bio: values.about\n                    }\n                })\n                .then((response) => {\n                    if (response.data.success) {\n                        Alert('success', 'Success', response.data.message);\n                    }\n                    else {\n                        return Alert('warning', 'Warning!', response.data.message);\n                    }\n                })\n                .catch((error) => {\n                    return Alert('error', 'Error!', 'Server Error');\n                });\n            }\n        });\n    };\n\n    // Upload Image Prop\n    changeqImage = (f)=>{\n        this.setState((ps,pp)=>{\n            return({\n                logo: (f.link ?`${f.link}`:null),\n                submitDisabled:false\n            });\n        });\n    };\n\n    upl = () =>{\n        this.setState({\n            submitDisabled:true\n        })\n    };\n\n    render() {\n        const { getFieldDecorator } = this.props.form;\n\n        const { Option } = Select;\n        const { TextArea } = Input;\n\n        var QuestionImageprops = {\n            name: 'file',\n            action: `${apis.BASE}${apis.FILE_UPLOAD}?Token=${auth.retriveToken()}`,\n            listType: 'picture',\n        };\n        \n        return (\n            <Fragment>\n                <Text>Profile Settings</Text>\n                <Divider />\n\n                <img src={this.props.user.userDetails.avatar} alt=\"logo\" />\n\n                <Divider />\n                    <Form  onSubmit={this.handleSubmit}>\n                        <div>\n                            <Row>\n                                <Col span={24}>\n                                    <Form.Item label=\"Organisation Name\"  hasFeedback>\n                                        {getFieldDecorator('organisation', {\n                                            initialValue : this.props.user.userDetails.organisation,\n                                            rules: [{ whitespace: true }],\n                                        })(<Input />)}\n                                    </Form.Item>\n                                </Col>\n                            </Row>\n\n                            <Row>\n                                <Col span={24}>\n                                    <Form.Item label=\"Write About Your Organisation\" hasFeedback>\n                                        {getFieldDecorator('about', {\n                                            initialValue : this.props.user.userDetails.bio,\n                                        })(\n                                            <TextArea rows={5} />\n                                        )}\n                                    </Form.Item>\n                                </Col>\n                            </Row>\n\n                            <Row>\n                                <Col span={24} style={{padding : '0px 20px'}}>\n                                    <Form.Item label=\"Organisation Logo\">\n                                    {getFieldDecorator('resume')(\n                                        <Upload \n                                            {...QuestionImageprops} \n                                            beforeUpload={this.upl} \n                                            onRemove={this.changeqImage} \n                                            onSuccess={this.changeqImage}\n                                        >\n                                            <Button>\n                                                <Icon type=\"upload\" /> Upload\n                                            </Button>\n                                        </Upload>,\n                                    )}\n                                    </Form.Item>\n                                </Col>\n                            </Row>\n                            \n                            <Row>\n                                <Col span={24}>\n                                    <Form.Item>\n                                        <Button \n                                            type=\"primary\" \n                                            htmlType=\"submit\" \n                                            disabled={this.state.submitDisabled} \n                                            loading={this.state.adding} \n                                            block\n                                        >\n                                            Update\n                                        </Button>\n                                    </Form.Item>\n                                </Col>\n                            </Row>\n                        </div>\n                    </Form>\n\n                    <Divider />\n\n            </Fragment>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    admin : state.admin,\n    user: state.user\n});\n\nconst NewForm = Form.create({ name: 'newQuestion' })(Profile);\n\nexport default connect(mapStateToProps, null)(NewForm);","import React, { Fragment } from 'react';\nimport {\n    Form,\n    Input,\n    Divider,\n    Button,\n    Typography,\n    Row,\n    Col\n} from 'antd';\n\nimport { SecurePost } from '../../services/axiosCall';\nimport apis from '../../services/Apis';\nimport Alert from '../common/alert';\nimport auth from '../../services/AuthServices';\n  \n  \nclass ResetPassword extends React.Component {\n    state = {\n      confirmDirty: false\n    };\n  \n    handleSubmit = e => {\n      e.preventDefault();\n      this.props.form.validateFieldsAndScroll((err, values) => {\n        if (!err) {\n          SecurePost({\n            url: `${apis.RESET_PASSWORD}`,\n            data: {\n              currentPassword: values.current,\n              newPassword: values.password\n            }\n          })\n          .then((response) => {\n              if (response.data.success) {\n                  this.props.form.resetFields();\n                  Alert('success', 'Success', response.data.message);\n              }\n              else {\n                  return Alert('warning', 'Warning!', response.data.message);\n              }\n          })\n          .catch((error) => {\n              return Alert('error', 'Error!', 'Server Error');\n          });\n        }\n      });\n    };\n  \n    handleConfirmBlur = e => {\n      const { value } = e.target;\n      this.setState({ confirmDirty: this.state.confirmDirty || !!value });\n    };\n  \n    compareToFirstPassword = (rule, value, callback) => {\n      const { form } = this.props;\n      if (value && value !== form.getFieldValue('password')) {\n        callback('Two passwords that you enter is inconsistent!');\n      } else {\n        callback();\n      }\n    };\n  \n    validateToNextPassword = (rule, value, callback) => {\n      const { form } = this.props;\n      if (value && this.state.confirmDirty) {\n        form.validateFields(['confirm'], { force: true });\n      }\n      callback();\n    };\n  \n    render() {\n      const { getFieldDecorator } = this.props.form;\n      const { Title } = Typography;\n\n      return (\n        <Fragment>\n            <Title level={4}> Reset Password </Title>\n            <Form onSubmit={this.handleSubmit}>\n                <Row>\n                    <Col span={24}>\n                        <Form.Item label=\"Enter Current Password\" hasFeedback>\n                            {getFieldDecorator('current', {\n                            rules: [\n                                {\n                                required: true,\n                                message: 'Please input your current password!',\n                                },\n                                {\n                                validator: this.validateToNextPassword,\n                                },\n                            ],\n                            })(<Input.Password />)}\n                        </Form.Item>\n                    </Col>\n                </Row>\n\n                <Row>\n                    <Col span={24}>\n                        <Form.Item label=\"Enter New Password\" hasFeedback>\n                            {getFieldDecorator('password', {\n                            rules: [\n                                {\n                                required: true,\n                                message: 'Please input your password!',\n                                },\n                                {\n                                validator: this.validateToNextPassword,\n                                },\n                            ],\n                            })(<Input.Password />)}\n                        </Form.Item>\n                    </Col>\n                </Row>\n\n                <Row>\n                    <Col span={24}>\n                        <Form.Item label=\"Confirm Password\" hasFeedback>\n                            {getFieldDecorator('confirm', {\n                            rules: [\n                                {\n                                required: true,\n                                message: 'Please confirm your password!',\n                                },\n                                {\n                                validator: this.compareToFirstPassword,\n                                },\n                            ],\n                            })(<Input.Password onBlur={this.handleConfirmBlur} />)}\n                        </Form.Item>\n                    </Col>\n                </Row>\n\n                <Row>\n                    <Col span={24}>\n                        <Form.Item>\n                            <Button type=\"primary\" htmlType=\"submit\" block>\n                                Update Password\n                            </Button>\n                        </Form.Item>\n                    </Col>\n                </Row> \n                \n            </Form>\n\n            <Divider />\n        </Fragment>\n      );\n    }\n  }\n  \n  const ResetPasswordForm = Form.create({ name: 'register' })(ResetPassword);\n  \n  export default ResetPasswordForm;","import React, { Fragment } from 'react';\n\nimport Profile from './Profile';\nimport ResetPassword from './ResetPassword';\n\nconst Settings = () => {\n    return (\n        <Fragment>\n            <Profile />\n            <ResetPassword />\n        </Fragment>\n    );\n};\n\nexport default Settings;\n","import React from 'react';\r\nimport './backbone.css';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport queryString from 'query-string';\r\n\r\nimport AllTrainer from '../admin/allTrainer/alltrainer';\r\nimport AllTopics from '../admin/allTopics/alltopics.js';\r\nimport AllQuestions from '../trainer/allquestions/allquestion';\r\nimport AllTests from '../trainer/alltests/alltest';\r\nimport ConductTest from '../trainer/conducttest/conducttest';\r\nimport NewTest from '../trainer/newtest/newtest';\r\nimport AllCoding from '../coding/Question/AllQuestions';\r\n\r\nimport auth from '../../services/AuthServices';\r\nimport Welcome from './welcome';\r\nimport ErrorPage from './errorPage';\r\nimport Settings from './settings';\r\n\r\nimport { login, logout } from '../../actions/loginAction';\r\nimport { changeActiveRoute } from '../../actions/useraction';\r\nimport Alert from '../common/alert';\r\n\r\nimport { Layout, Menu,Button, Avatar, Icon, Tooltip } from 'antd';\r\nimport NoticeIcon from 'ant-design-pro/lib/NoticeIcon';\r\nimport main from './logo.png';\r\n\r\nconst { Header, Sider, Content, Footer } = Layout;\r\n\r\nclass Dashboard extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            LocalIsLoggedIn: this.props.user.isLoggedIn,\r\n            collapsed: true\r\n        }\r\n    }\r\n\r\n    toggle = () => {\r\n        this.setState({\r\n          collapsed: !this.state.collapsed,\r\n        });\r\n    };\r\n\r\n    logOut = () => {\r\n        auth.deleteToken();\r\n        window.location.href = '/';\r\n    };\r\n\r\n    componentWillMount(){\r\n        // console.log(this.state.LocalIsLoggedIn);\r\n        var t = auth.retriveToken();\r\n        if(this.state.LocalIsLoggedIn){\r\n            \r\n        }\r\n        else if(t && t!=='undefined'){\r\n            auth.FetchAuth(t).then((response) => {\r\n                //console.log(response.data);\r\n                this.props.login(response.data.user);\r\n                this.setState({\r\n                    LocalIsLoggedIn: true\r\n                });\r\n\r\n                var subUrl = this.props.match.params.options;\r\n                // console.log(subUrl);\r\n                var obj = this.props.user.userOptions.find((o, i) => {\r\n                    if (o.link === `/user/${subUrl}`) {\r\n                        return o\r\n                    }\r\n                });\r\n\r\n                var tt = this.props.user.userOptions.indexOf(obj);\r\n                \r\n                if (tt === -1) {\r\n                    window.location.href = `${this.props.user.userOptions[0].link}`;\r\n                }\r\n                else {\r\n                    this.props.changeActiveRoute(String(tt));\r\n                }\r\n            }).catch((error) => {\r\n                Alert('warning', 'Warning!', 'Server Error.');\r\n                auth.deleteToken();\r\n                window.location.href = '/';\r\n            });\r\n        }\r\n        else{\r\n            window.location='/';\r\n        }   \r\n    };\r\n\r\n\r\n    render(){\r\n        let torender = null;\r\n        if(this.props.match.params.options==='listtrainers'){\r\n            torender = <AllTrainer/>;\r\n        }\r\n        else if(this.props.match.params.options==='listsubjects'){\r\n            torender = <AllTopics/>\r\n        }\r\n        else if(this.props.match.params.options==='listquestions'){\r\n            torender = <AllQuestions/>\r\n        }\r\n        else if(this.props.match.params.options==='listtests'){\r\n            torender = <AllTests/>\r\n        }\r\n        else if(this.props.match.params.options==='home'){\r\n            torender=<Welcome />\r\n        }\r\n        else if(this.props.match.params.options==='newtest'){\r\n            torender=<NewTest />\r\n        }\r\n        else if(this.props.match.params.options==='listcode'){\r\n            torender=<AllCoding />\r\n        }\r\n        else if(this.props.match.params.options==='conducttest'){\r\n            let params = queryString.parse(this.props.location.search)\r\n            // console.log(params)\r\n            torender=<ConductTest {...params}/>\r\n        }\r\n        else if(this.props.match.params.options==='settings'){\r\n            torender=<Settings />\r\n        }\r\n        else{\r\n            torender=<ErrorPage />\r\n        }\r\n\r\n        return (\r\n            <Layout>\r\n                <Sider\r\n                    trigger={null}\r\n                    collapsible\r\n                    collapsed={this.state.collapsed}\r\n                >\r\n                    \r\n                    <div className=\"logo11\">\r\n                        <img src={main} alt=\"company logo\" className=\"d-logo\" />\r\n                    </div>\r\n\r\n                    <Menu \r\n                        defaultSelectedKeys={[this.props.user.activeRoute]}\r\n                        mode=\"inline\"\r\n                        theme=\"dark\"\r\n                        >\r\n                        {\r\n                            this.props.user.userOptions.map((d,i)=>{\r\n                                return(\r\n                                    <Menu.Item key={i}>\r\n                                        <Icon type={d.icon} />\r\n                                        <span>{d.display}</span>\r\n                                        <Link to={d.link}></Link>\r\n                                    </Menu.Item>\r\n                                )\r\n                            })\r\n                        }\r\n                    </Menu>\r\n                </Sider>\r\n                <Layout>\r\n                    <Header\r\n                        style={{ position: 'fixed', width: '100vw', paddingLeft: '10px', zIndex: '1000', background: '#fff' }}\r\n                    >\r\n                        <Icon\r\n                            className=\"trigger\"\r\n                            type={this.state.collapsed ? 'double-right' : 'double-left'}\r\n                            onClick={this.toggle}\r\n                            style={{color:'#000',fontSize:'20px'}}\r\n                            />\r\n                        <ul className=\"user-options-list\">\r\n                            <li>\r\n                                <NoticeIcon count={0} />\r\n                            </li>\r\n                            \r\n                            <li>\r\n                                <Avatar \r\n                                    src={this.props.user.userDetails.avatar}\r\n                                    alt={this.props.user.userDetails.organisation} \r\n                                />\r\n                            </li>\r\n\r\n                            <li>\r\n                                <Tooltip placement=\"bottom\" title=\"Log Out\">\r\n                                    <Button \r\n                                        type=\"primary\" \r\n                                        shape=\"circle\" \r\n                                        onClick={this.logOut} \r\n                                        className=\"logout-button\"\r\n                                    >\r\n                                        <Icon type=\"logout\" />\r\n                                    </Button>\r\n                                </Tooltip>\r\n                            </li>\r\n                        </ul>\r\n                            \r\n                    </Header>\r\n                    <Content\r\n                        style={{\r\n                        margin: '24px 16px',\r\n                        padding: 24,\r\n                        marginTop:'80px',\r\n                        background: '#fff',\r\n                        minHeight: '100vh'\r\n                        }}\r\n                    >\r\n                        <div style={{ width:'100%', }}>\r\n                            {torender}\r\n                        </div>\r\n                    </Content>\r\n                    <Footer style={{ textAlign: 'center', background: '#fff' }}>\r\n                        gnius Talent Solution © {new Date().getFullYear()}\r\n                    </Footer>\r\n                </Layout>\r\n            </Layout>\r\n        );\r\n    };\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    user : state.user\r\n});\r\n\r\nexport default connect(mapStateToProps,{\r\n    changeActiveRoute,\r\n    login, \r\n    logout\r\n})(Dashboard);\r\n","export const changeActiveRoute = (d)=> dispatch =>{\r\n    dispatch({\r\n       type : 'CHANGE_ACTIVE_ROUTE',\r\n       payload : d\r\n    })\r\n}\r\n\r\nexport const changeActiveUrl = (d)=> dispatch =>{\r\n    dispatch({\r\n       type : 'CHANGE_ACTIVE_URL',\r\n       payload : d\r\n    })\r\n}","import React, { Component, Fragment } from 'react';\r\nimport {\r\n    Row, \r\n    Col, \r\n    Form, \r\n    Icon, \r\n    Input, \r\n    Button, \r\n    Select, Divider,\r\n    Typography, Layout, Upload, message \r\n} from 'antd';\r\nimport queryString from 'query-string';\r\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\r\nimport moment from 'moment';\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nimport {\r\n    FacebookShareButton,\r\n    TelegramShareButton,\r\n    TwitterShareButton,\r\n    FacebookIcon,\r\n    TwitterIcon,\r\n    LinkedinIcon,\r\n    TelegramIcon,\r\n    WhatsappIcon,\r\n    FacebookShareCount,\r\n    WhatsappShareButton,\r\n    LinkedinShareButton\r\n} from \"react-share\";\r\n\r\nimport renderHTML from 'react-render-html';\r\nimport { FormBuilder, FormRenderer } from 'react-ant-form-builder';\r\n\r\nimport apis from '../../../services/Apis';\r\nimport { Post } from '../../../services/axiosCall';\r\nimport Alert from '../../common/alert';\r\n\r\nimport '../../../Layout.css';\r\nimport './trainerRegister.css';\r\nimport logo from '../../basic/header/logo.png';\r\nimport FileUploadInput from '../../../utils/FileUpload';\r\n\r\nconst { Option } = Select;\r\nconst { Title } = Typography;\r\nconst { Header, Footer, Sider, Content } = Layout;\r\n\r\nclass TraineeRegisterForm extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            inform:true,\r\n            testid:null,\r\n            user:null,\r\n            jobstatus: false,\r\n            jobData: {},\r\n            resume: null,\r\n            customdata: {},\r\n            custombtn: true,\r\n            refid: null\r\n        };\r\n    };\r\n    \r\n    getJobDetails = () => {\r\n        let params = queryString.parse(this.props.location.search);\r\n\r\n        Post({\r\n            url : apis.GET_JOB_DETAILS,\r\n            data: {\r\n                testid: params.testid\r\n            }\r\n        })\r\n        .then((data) => {\r\n            if (data.data.success) {\r\n                this.setState({\r\n                    jobstatus: true,\r\n                    jobData: data.data.job\r\n                });\r\n\r\n                if (data.data.job.jobcustom) {\r\n                    this.setState({\r\n                        custombtn: true\r\n                    });\r\n                }\r\n            }\r\n            else{\r\n                this.setState({\r\n                    jobstatus: false\r\n                });\r\n            }\r\n        })\r\n        .catch((error) => {\r\n            console.log(error);\r\n        });\r\n    };\r\n\r\n    componentDidMount(){\r\n        let params = queryString.parse(this.props.location.search)\r\n        \r\n        console.log(params);\r\n\r\n        this.setState({\r\n            testid:params.testid,\r\n            refid: params.ref\r\n        });\r\n\r\n        this.getJobDetails();\r\n\r\n        // console.log(this.state.jobData);\r\n    };\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        this.props.form.validateFields((err, values) => {\r\n            if (!err) {\r\n                Post({\r\n                    url: apis.REGISTER_TRAINEE_FOR_TEST,\r\n                    data: {\r\n                        name: values.name,\r\n                        emailid: values.email,\r\n                        contact: `${values.prefix}${values.contact}`,\r\n                        organisation: values.organisation,\r\n                        testid: this.state.testid,\r\n                        location: values.location,\r\n                        resume: this.state.resume,\r\n                        custom: this.state.customdata,\r\n                        refer: this.state.refid\r\n                    }\r\n                })\r\n                .then((data) => {\r\n                    if (data.data.success) {\r\n                        this.setState({\r\n                            inform: false,\r\n                            user: data.data.user\r\n                        });\r\n                    }\r\n                    else {\r\n                        this.props.form.resetFields();\r\n                        Alert('error', 'Error!', data.data.message);\r\n                    }\r\n                }).catch((error) => {\r\n                    // console.log(error);\r\n                    this.props.form.resetFields();\r\n                    Alert('error', 'Error!', \"Server Error\");\r\n                });\r\n            }\r\n        });\r\n    };\r\n\r\n    resendMail = () => {\r\n        Post({\r\n            url: apis.RESEND_TRAINER_REGISTRATION_LINK,\r\n            data: {\r\n                id: this.state.user._id\r\n            }\r\n        })\r\n        .then((response) => {\r\n            if (response.data.success) {\r\n                Alert('success', 'Success!', \"Email has been sent to your email\");\r\n            }\r\n            else {\r\n                Alert('error', 'Error!', response.data.message);\r\n            }\r\n        })\r\n        .catch((error) => {\r\n            // console.log(error);\r\n            Alert('error', 'Error!', \"Server Error\");\r\n        });\r\n    };\r\n\r\n\r\n    renderJob = () => (\r\n        <Fragment>\r\n            <Helmet>\r\n                <meta charSet=\"utf-8\" />\r\n                <title>{this.state.jobData.postedBy.organisation} - {this.state.jobData.jobtitle} - gnius Assessment - where talent meets opportunities</title>\r\n            </Helmet>\r\n\r\n            <div className=\"container-fluid\" style={{padding: '0', overflow: 'hidden'}}>\r\n                <div className=\"row\">\r\n                    <div className=\"col-lg-12\">\r\n                        <Layout>\r\n                            <Header style={{ height: '100px' }}>\r\n                                <Title style={{ \r\n                                    color: '#fff', \r\n                                    marginTop: '20px',\r\n                                    }} \r\n                                    level={4}\r\n                                >\r\n                                    {this.state.jobData.postedBy.organisation} - {this.state.jobData.jobtitle}\r\n                                </Title>\r\n                            </Header>\r\n                        </Layout>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"container-fluid\" style={{padding: '0', overflow: 'hidden'}}>\r\n                <div className=\"row\">\r\n                    <div className=\"col-lg-12\">\r\n                        <div style={{ marginTop: '10px'}}></div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            \r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              {/* Left */}\r\n              <div className=\"col-lg-6\">\r\n                <div\r\n                    style={{\r\n                      margin: '5px',\r\n                      textAlign: 'justify',\r\n                      padding: '5px',\r\n                      justifyContent: 'center',\r\n                      alignItems: 'start',\r\n                      fontFamily: 'Raleway, Ubuntu, sans-serif'\r\n                    }}\r\n                >\r\n                    {renderHTML(this.state.jobData.jobdescription)}\r\n                </div>\r\n                  \r\n              </div>\r\n\r\n\r\n              {/* Right */}\r\n              <div className=\"col-lg-6\">\r\n                  <div\r\n                    style={{\r\n                      margin: '5px',\r\n                      justifyContent: 'center',\r\n                      alignItems: 'start',\r\n                      outline: 'none',\r\n                      fontFamily: 'Raleway, Ubuntu, sans-serif'\r\n                    }}\r\n                  >\r\n                    <ul style={{ listStyle: 'none' }}>\r\n                        <li style={{ padding: '5px' }}>\r\n                            <strong>About Company</strong>\r\n                            <br /> {this.state.jobData.postedBy.bio}\r\n                        </li>\r\n\r\n                        <li style={{ padding: '5px' }}>\r\n                            <img\r\n                                width={200}\r\n                                src={this.state.jobData.postedBy.avatar}\r\n                            />\r\n                        </li>\r\n\r\n                        <li style={{ padding: '5px' }}>\r\n                            <b>Posted on:</b> {moment(this.state.jobData.dateOfPosting).format('MMMM Do YYYY')} - {moment(this.state.jobData.dateOfPosting).fromNow()} \r\n                        </li>\r\n\r\n                        <li style={{ padding: '5px' }}>\r\n                            <Icon type=\"environment\" /> {this.state.jobData.joblocation}\r\n                        </li>\r\n\r\n                        <li style={{ padding: '5px' }}>\r\n                            <Button href=\"#apply\" type=\"primary\" shape=\"round\" size='large'>\r\n                                Apply\r\n                            </Button>\r\n                        </li>\r\n\r\n\r\n                    </ul>\r\n\r\n                  </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n        </Fragment>\r\n    );\r\n\r\n    // Resume Upload                \r\n    changeResume = (f) => {\r\n        if (f.success === true) {\r\n            message.success(`Resume file uploaded successfully`);\r\n        }\r\n\r\n        this.setState((ps, pp)=>{\r\n            return({\r\n                resume:(f.link ?`${f.link}`:null),\r\n                custombtn: false\r\n            });\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { getFieldDecorator } = this.props.form;\r\n\r\n        const prefixSelector = getFieldDecorator('prefix', {\r\n            initialValue :'+91',\r\n            rules: [{ required: true, message: 'Please enter contact no prefix' }],\r\n        })(\r\n            <Select style={{ width: 70 }}>\r\n              <Option value=\"+91\">+91</Option>\r\n            </Select>,\r\n        );\r\n\r\n        const uploadProps = {\r\n            name: 'file',\r\n            action: `${apis.BASE}${apis.UPLOAD_RESUME}`,\r\n            listType: 'picture'\r\n        };\r\n\r\n        return (\r\n            <Fragment>\r\n                <div className=\"header-container\"></div>\r\n\r\n                {\r\n                    this.state.jobstatus ? this.renderJob() : null\r\n                }\r\n\r\n                <div id=\"apply\"></div>\r\n\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12\">\r\n                            <Title level={2} style={{ textAlign: 'center'}}>Application</Title>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"registration-form-container\">    \r\n                {this.state.inform ?\r\n                    <div className=\"registration-form-inner\">\r\n                        <div className=\"container\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-12\">\r\n                                    <Form \r\n                                        onSubmit={this.handleSubmit}\r\n                                        autoComplete=\"off\"\r\n                                        className=\"login-form\"\r\n                                    >\r\n                                        <Row>\r\n                                            <Col span={12} style={{ padding: '5px' }}>\r\n                                                <Form.Item label=\"Name\" hasFeedback>\r\n                                                    {getFieldDecorator('name', {\r\n                                                        rules: [{ required: true, message: 'Please input your name' }],\r\n                                                    })(\r\n                                                        <Input\r\n                                                            prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                                                            placeholder=\"Name\"\r\n                                                        />,\r\n                                                    )}\r\n                                                </Form.Item>\r\n                                            </Col>\r\n\r\n                                            <Col span={12} style={{ padding: '5px' }}>\r\n                                                <Form.Item label=\"Email\" hasFeedback>\r\n                                                    {getFieldDecorator('email', {\r\n                                                        rules: [{\r\n                                                            type: 'email',\r\n                                                            message: 'The input is not valid E-mail!',\r\n                                                        },\r\n                                                        {\r\n                                                            required: true,\r\n                                                            message: 'Please input your E-mail!',\r\n                                                        }],\r\n                                                    })(\r\n                                                        <Input\r\n                                                            prefix={<Icon type=\"mail\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                                                            placeholder=\"Email Id\"\r\n                                                        />,\r\n                                                    )}\r\n                                                </Form.Item>\r\n                                            </Col>\r\n                                \r\n                                            <Col span={24} style={{ padding: '5px' }}>\r\n                                                <Form.Item label=\"Phone Number\" hasFeedback>\r\n                                                    {getFieldDecorator('contact', {\r\n                                                        rules: [{\r\n                                                            required: true,\r\n                                                            message: 'Please input your phone number!'\r\n                                                        },\r\n                                                        {\r\n                                                            len: 10,\r\n                                                            message: 'Contact number must be 10 digit long'\r\n                                                        }],\r\n                                                    })(<Input addonBefore={prefixSelector} min={10} max={10} />)}\r\n                                                </Form.Item>\r\n                                                \r\n                                                <Form.Item label=\"Organisation (University/Company Name)\" hasFeedback>\r\n                                                    {getFieldDecorator('organisation', {\r\n                                                        rules: [{\r\n                                                            required: true,\r\n                                                            message: 'Please input your organisation name',\r\n                                                        }],\r\n                                                    })(\r\n                                                        <Input\r\n                                                            prefix={<Icon type=\"idcard\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                                                            placeholder=\"Organisation\"\r\n                                                        />,\r\n                                                    )}\r\n                                                </Form.Item>\r\n                                            </Col>\r\n\r\n                                            <Col span={24} style={{ padding: '5px' }}>\r\n                                                <Form.Item label=\"Address\" hasFeedback>\r\n                                                    {getFieldDecorator('location', {\r\n                                                        rules: [{ required: true, message: 'Please input your location' }],\r\n                                                    })(\r\n                                                        <Input\r\n                                                            prefix={<Icon type=\"home\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                                                            placeholder=\"Address\"\r\n                                                        />,\r\n                                                    )}\r\n                                                </Form.Item>\r\n                                            </Col>\r\n\r\n                                            {/* Resume */}\r\n                                            <Col span={24}>\r\n                                                <Form.Item label=\"Upload Resume\">\r\n                                                    {getFieldDecorator('resume', {\r\n                                                        rules: [{ required: true, message: 'Please upload your resume' }],\r\n                                                    })(\r\n                                                        <Upload \r\n                                                            {...uploadProps}\r\n                                                            onRemove={this.changeResume} \r\n                                                            onSuccess={this.changeResume}\r\n                                                        >\r\n                                                            <Button>\r\n                                                                <Icon type=\"upload\" /> Upload\r\n                                                            </Button>\r\n                                                        </Upload>,\r\n                                                    )}\r\n                                                </Form.Item>\r\n                                            </Col>\r\n\r\n                                            <Col span={24} style={{ paddingTop: '33px' }}>\r\n                                                <Form.Item>\r\n                                                    <Button \r\n                                                        style={{ width: '100%' }} \r\n                                                        type=\"primary\" \r\n                                                        htmlType=\"submit\" \r\n                                                        className=\"btn\"\r\n                                                        disabled={this.state.custombtn}\r\n                                                    >\r\n                                                        Register\r\n                                                    </Button>\r\n                                                </Form.Item>\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </Form>\r\n\r\n                                    <Divider />\r\n\r\n                                    {\r\n                                        this.state.jobData.jobcustom ? <div>\r\n                                            <FormRenderer\r\n                                                allowDraft={false}\r\n                                                formStructure={this.state.jobData.jobcustom}\r\n                                                data={this.state.customdata}\r\n                                                onSave={changedData => {\r\n                                                    // onSave for data received here.\r\n                                                    this.setState({ \r\n                                                        customdata: changedData,\r\n                                                        custombtn: false\r\n                                                    });\r\n                                                }}\r\n                                                onError={error => console.log(error)}\r\n                                            />\r\n\r\n                                            <span> * Click Submit to Enable Register Button</span>\r\n\r\n                                        </div> : null\r\n                                    }\r\n\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        \r\n                    </div> :\r\n                    <div className=\"reasendmail-container-register\">\r\n                        <Title style={{ color: '#fff' }} level={4}>\r\n                            Thank You, You have successfully registered !!!\r\n                            An email containing your assessment link will be sent to {this.state.user.emailid}, one day before the assessment date.\r\n\r\n                            All the Best !!!\r\n                        </Title>\r\n                    </div>\r\n                }\r\n            </div>\r\n\r\n            <div \r\n                className=\"container-fluid\" \r\n                style={{padding: '0', overflow: 'hidden', marginTop: '50px',}}\r\n            >\r\n                <div className=\"row\">\r\n                    <div className=\"col-lg-12\">\r\n                        <Layout>\r\n                            <Footer style={{ textAlign: 'center'}}>\r\n                                Powered by<img src={logo} alt=\"gnius\" className=\"logo\" />\r\n                                <br />\r\n                                gnius Talent Solution ©{new Date().getFullYear()}\r\n                            </Footer>\r\n                        </Layout>     \r\n                    </div>\r\n                </div>\r\n            </div>\r\n            </Fragment>\r\n        );\r\n    };\r\n};\r\n\r\nconst TraineeRegister = Form.create({ name: 'Trainee Registration' })(TraineeRegisterForm);\r\nexport default TraineeRegister;","import React, { Fragment, useState } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { Button, Checkbox } from 'antd';\r\nimport { ProceedtoTest, fetchTestdata } from '../../../actions/traineeAction';\r\nimport './portal.css';\r\nimport logo from '../../basic/header/logo.png';\r\n\r\nfunction Instruction(props) {\r\n    const [state, setstate] = useState(false);\r\n\r\n    function onChange(e) {\r\n        // console.log(e.target.checked);\r\n        setstate(e.target.checked);\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className=\"header-container\">\r\n                <img src={logo} alt=\"company logo\" className=\"logo\" />\r\n            </div>\r\n\r\n            <div className=\"instaruction-page-wrapper\">\r\n                <div className=\"instruction-page-inner\">\r\n                    <h1>Instructions:</h1>\r\n                    <p>Please read the instructions carefully</p>\r\n                    <h4>1. All questions are compulsory.</h4>\r\n                    <h4>\r\n                        2. Please save the question before you proceed to the next question.\r\n                        <b>NOTE :</b>To save answers, click on the 'Save & Next' button.\r\n                    </h4>\r\n                    <h4>3. Please don't leave the window before you submit.</h4>\r\n                    <h4>4. Click on 'Submit' button to submit the assessment. </h4>\r\n                    <h4>5. The test will be automatically submitted when the time ends.</h4>\r\n                    <h4>\r\n                        <Checkbox onChange={onChange}>I have read and understood all the instructions</Checkbox>\r\n                    </h4>\r\n                    <div className=\"proceed-to-test-button\">\r\n                        {state ? \r\n                            <Button\r\n                            style={{ float: 'right' }}\r\n                            type=\"primary\" icon=\"caret-right\"\r\n                            onClick={() => { props.ProceedtoTest(props.trainee.testid, props.trainee.traineeid, () => { props.fetchTestdata(props.trainee.testid, props.trainee.traineeid) }) }} loading={props.trainee.proceedingToTest}\r\n                        >\r\n                            Proceed\r\n                        </Button> : null\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    trainee : state.trainee\r\n});\r\n\r\nexport default connect(mapStateToProps,{\r\n    ProceedtoTest,\r\n    fetchTestdata\r\n})(Instruction);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport './portal.css';\r\n\r\nconst user_icon = 'https://res.cloudinary.com/gniusedu/image/upload/v1616994666/gnius-jpg_aspibu.jpg';\r\n\r\nfunction Trainee(props) {\r\n    return (\r\n        <div className=\"loggedin-trainee-container\">\r\n            <div className=\"loggedin-trainee-inner\">\r\n                <img alt=\"User Icon\" src={user_icon} className=\"loggedin-trainee-logo\"/>\r\n                <div className=\"loggedin-trainee-details-container\">\r\n                    <p>{props.trainee.traineeDetails.name}</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    trainee : state.trainee\r\n});\r\n\r\n\r\n\r\n\r\nexport default connect(mapStateToProps,null)(Trainee);","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { Badge, Icon,Button,Row,Col  } from 'antd';\r\nimport './portal.css';\r\nimport {switchQuestion} from '../../../actions/traineeAction';\r\n\r\nclass Operations extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"question-list-wrapper\">\r\n                <div className=\"question-list-inner\">\r\n                    <Row style={{ padding: '5px' }}>\r\n                        {this.props.trainee.answers.map((d, i) => {\r\n                            return (\r\n                                <Col key={i} span={6} style={{ padding: '10px' }}>\r\n                                    <Mark qid={d.questionid} ans={d.isAnswered} mark={d.isMarked} no={i} />\r\n                                </Col>\r\n                            )\r\n                        })}\r\n                    </Row>\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n};\r\n\r\n\r\nfunction mark(props){\r\n    if(props.mark){\r\n        if(props.ans){\r\n            return(\r\n                <Badge className=\"qb\" count={<Icon type=\"flag\"  theme=\"filled\" style={{ color: '#f5222d' }} />}>\r\n                    <Button\r\n                        onClick={() => props.switchQuestion(props.no)}\r\n                        style={{ background: '#0B6623', color: '#fff' }}\r\n                    >\r\n                        {props.no + 1}\r\n                    </Button>\r\n                </Badge>  \r\n            )\r\n        }\r\n        else{\r\n            return (\r\n                <Badge className=\"qb\" count={<Icon type=\"flag\" theme=\"filled\" style={{ color: '#f5222d' }} />}>\r\n                    <Button\r\n                        onClick={() => props.switchQuestion(props.no)}\r\n                        style={{ background: '#999999', color: '#fff' }}\r\n                    >\r\n                        {props.no + 1}\r\n                    </Button>\r\n                </Badge>\r\n            );\r\n        };\r\n    }\r\n    else{\r\n        if(props.ans){\r\n            return(\r\n                <Button\r\n                    onClick={() => props.switchQuestion(props.no)}\r\n                    className=\"qb\"\r\n                    style={{ background: '#0EFF00', color: '#000' }}\r\n                >\r\n                    {props.no + 1}\r\n                </Button>\r\n            )\r\n        }\r\n        else{\r\n            return (\r\n                <Button\r\n                    onClick={() => props.switchQuestion(props.no)}\r\n                    className=\"qb\"\r\n                    style={{ background: '#CC0000', color: '#fff' }}\r\n                >\r\n                    {props.no + 1}\r\n                </Button>\r\n            );\r\n        };\r\n    };\r\n};\r\n\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n    trainee : state.trainee\r\n});\r\n\r\nlet Mark = connect(mapStateToProps, {\r\n    switchQuestion\r\n})(mark);\r\n\r\nexport default connect(mapStateToProps,null)(Operations);","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport {LocaltestDone,fetchTestdata} from '../../../actions/traineeAction';\r\nimport './portal.css';\r\nimport apis from '../../../services/Apis';\r\nimport { Post } from '../../../services/axiosCall';\r\nimport Alert from '../../common/alert';\r\n\r\nclass Clock extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            localMinutes:this.props.trainee.m_left,\r\n            localSeconds:this.props.trainee.s_left\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        this.clockF(); \r\n    }\r\n\r\n    endTest =()=>{\r\n        Post({\r\n            url:`${apis.END_TEST}`,\r\n            data:{\r\n                testid: this.props.trainee.testid,\r\n                userid:this.props.trainee.traineeid\r\n            }\r\n        })\r\n        .then((response)=>{\r\n            if(response.data.success){\r\n                this.props.fetchTestdata(this.props.trainee.testid,this.props.trainee.traineeid)\r\n            }\r\n            else{\r\n                return Alert('error','Error!',response.data.message);\r\n            }\r\n        }).catch((error)=>{\r\n            return Alert('error','Error!','Error');\r\n        })\r\n    }\r\n\r\n\r\n    clockF = () => {\r\n        let c = setInterval(() => {\r\n            // console.log('i am done')\r\n            let l = this.state.localMinutes;\r\n            let s = this.state.localSeconds;\r\n\r\n            if (l == 0 && s == 1) {\r\n                clearInterval(c);\r\n                this.endTest();\r\n            }\r\n            else {\r\n                if (s == 0) {\r\n                    s = 59;\r\n                    l = l - 1;\r\n                }\r\n                else {\r\n                    s = s - 1;\r\n                }\r\n                this.setState({\r\n                    localMinutes: l,\r\n                    localSeconds: s\r\n                })\r\n            }\r\n        }, 1000)\r\n    };\r\n\r\n    componentWillUnmount(){}\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"clock-wrapper\">\r\n                <div className=\"clock-container\">\r\n                    {this.state.localMinutes} : {this.state.localSeconds}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    trainee : state.trainee\r\n});\r\n\r\nexport default connect(mapStateToProps,{\r\n    LocaltestDone,fetchTestdata\r\n})(Clock);","import React from 'react'\r\nimport { connect } from 'react-redux';\r\nimport './portal.css';\r\nimport Trainee from './user';\r\nimport {Button,Popconfirm} from 'antd';\r\nimport Operations from './operations';\r\nimport Clock from './clock';\r\nimport Alert from '../../common/alert';\r\nimport apis from '../../../services/Apis';\r\nimport { Post } from '../../../services/axiosCall';\r\nimport { fetchTestdata } from '../../../actions/traineeAction';\r\nimport $ from 'jquery';\r\n\r\nclass Sidepanel extends React.Component {\r\n\r\n    endTest =()=>{\r\n        Post({\r\n            url:`${apis.END_TEST}`,\r\n            data:{\r\n                testid: this.props.trainee.testid,\r\n                userid:this.props.trainee.traineeid\r\n            }\r\n        }).then((response)=>{\r\n            if(response.data.success){\r\n                \r\n                this.props.fetchTestdata(this.props.trainee.testid,this.props.trainee.traineeid)\r\n            }\r\n            else{\r\n                return Alert('error','Error!',response.data.message);\r\n            }\r\n        }).catch((error)=>{\r\n            return Alert('error','Error!','Error');\r\n        })\r\n    }\r\n    \r\n    render(){\r\n        return (\r\n            <div className={\"side-panel-in-exam-dashboard \"+(this.props.mode==='desktop'?'w-20':'w-100')}>\r\n                <Trainee />\r\n                <Clock/>\r\n                <Operations />\r\n                <div className=\"End-test-container\">\r\n                    <Popconfirm\r\n                        title=\"Are you sure to end the test\"\r\n                        onConfirm={this.endTest}\r\n                        okText=\"Yes\"\r\n                        cancelText=\"No\"\r\n                    >\r\n                        <Button type=\"default\">Submit</Button>\r\n                    </Popconfirm>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n    trainee : state.trainee\r\n});\r\n\r\nexport default connect(mapStateToProps,{\r\n    fetchTestdata\r\n})(Sidepanel);\r\n\r\n","import React from 'react'\r\nimport { connect } from 'react-redux';\r\nimport $ from 'jquery';\r\nimport SweetAlert from 'sweetalert-react';\r\nimport 'sweetalert/dist/sweetalert.css';\r\n\r\n\r\nimport Alert from '../../common/alert';\r\nimport apis from '../../../services/Apis';\r\nimport { Post } from '../../../services/axiosCall';\r\n\r\nimport { Icon,Button,Row,Col,Radio,Checkbox  } from 'antd';\r\nimport { switchQuestion, updateIsMarked, fetchTestdata } from '../../../actions/traineeAction';\r\nimport Markdown from '../../../utils/Markdown';\r\n\r\nimport './portal.css';\r\n\r\nclass SingleQuestion extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        \r\n        if(this.props.trainee.answers[this.props.trainee.activeQuestionIndex].chosenOption.length===this.props.trainee.questions[this.props.trainee.activeQuestionIndex].anscount){\r\n            this.state={\r\n                AnswerSelected:true,\r\n                options:this.props.trainee.questions[this.props.trainee.activeQuestionIndex].options,\r\n                answers:this.props.trainee.answers[this.props.trainee.activeQuestionIndex].chosenOption,\r\n                ticked:0,\r\n                leavecounter: 0,\r\n                show: false\r\n            }\r\n        }\r\n        else{\r\n            this.state={\r\n                AnswerSelected:false,\r\n                options:this.props.trainee.questions[this.props.trainee.activeQuestionIndex].options,\r\n                answers:this.props.trainee.answers[this.props.trainee.activeQuestionIndex].chosenOption,\r\n                ticked:0,\r\n                leavecounter: 0,\r\n                show: false\r\n            }\r\n        }\r\n    }\r\n\r\n    \r\n\r\n    componentWillMount(){\r\n        var counter = 0; // mouse leave counter\r\n\r\n        // Mouse Leave Window Tracker\r\n        $(document).mouseleave(e => {\r\n            counter++;\r\n            this.setState({\r\n                leavecounter: counter,\r\n                show: true\r\n            });\r\n            \r\n            if (counter > 3) console.log('Submit');\r\n        });\r\n\r\n        \r\n\r\n        $(document).ready(function () {\r\n            var ambit = $(document);\r\n        \r\n            // Disable Cut + Copy + Paste (input)\r\n            ambit.on('copy paste cut', function (e) {\r\n                e.preventDefault(); //disable cut,copy,paste\r\n                return false;\r\n            });\r\n        });\r\n          \r\n        // Disable Right Click\r\n        $(function() {\r\n            $(this).bind(\"contextmenu\", function(e) {\r\n                e.preventDefault();\r\n            });\r\n        }); \r\n\r\n        this.setState((PState,Pprops)=>{\r\n            let t=0;\r\n\r\n            var s = PState.options.map((d,i) => {\r\n                for(var ii=0;ii<PState.answers.length;ii++){\r\n                    if(PState.answers[ii]===d._id){\r\n\r\n                        t+=1;\r\n                        return({\r\n                            ...d,\r\n                            checked:true\r\n                        })\r\n                    }\r\n                }\r\n                return({\r\n                    ...d,\r\n                    checked:false\r\n                })\r\n            })\r\n            return({\r\n                ticked:t,\r\n                options :s\r\n            })\r\n        })\r\n    }\r\n\r\n    SaveTocloud = () => {\r\n        Post({\r\n            url: `${apis.UPDATE_ANSWERS}`,\r\n            data: {\r\n                testid: this.props.trainee.testid,\r\n                userid: this.props.trainee.traineeid,\r\n                qid: this.props.trainee.questions[this.props.trainee.activeQuestionIndex]._id,\r\n                newAnswer: this.state.answers\r\n            }\r\n        }).then((response) => {\r\n            if (response.data.success) {\r\n                // console.log(response.data);\r\n                var t = [...this.props.trainee.answers];\r\n                t[this.props.trainee.activeQuestionIndex] = {\r\n                    ...t[this.props.trainee.activeQuestionIndex],\r\n                    chosenOption: this.state.answers,\r\n                    isAnswered: true\r\n                }\r\n                this.props.updateIsMarked(t);\r\n            }\r\n            else {\r\n                this.props.fetchTestdata(this.props.trainee.testid, this.props.trainee.traineeid);\r\n                return Alert('error', 'Error!', response.data.message);\r\n                \r\n            }\r\n        }).catch((err) => {\r\n            return Alert('error', 'Error!', 'Server Error');\r\n        });\r\n\r\n        //save to cloud then\r\n    };\r\n\r\n    previous = () => {\r\n        if (this.props.trainee.activeQuestionIndex > 0) {\r\n            this.props.switchQuestion(this.props.trainee.activeQuestionIndex - 1)\r\n        }\r\n    };\r\n\r\n    next = () => {\r\n        if (this.state.AnswerSelected) {\r\n            this.SaveTocloud();\r\n            if (this.props.trainee.activeQuestionIndex < this.props.trainee.questions.length - 1) {\r\n                this.props.switchQuestion(this.props.trainee.activeQuestionIndex + 1)\r\n            }\r\n        }\r\n        else {\r\n            if (this.props.trainee.activeQuestionIndex < this.props.trainee.questions.length - 1) {\r\n                this.props.switchQuestion(this.props.trainee.activeQuestionIndex + 1)\r\n            }\r\n        }\r\n    };\r\n\r\n    mark = () => {\r\n        let aa = [...this.props.trainee.answers];\r\n        let c = aa[this.props.trainee.activeQuestionIndex];\r\n        c.isMarked = !this.props.trainee.answers[this.props.trainee.activeQuestionIndex].isMarked;\r\n        aa[this.props.trainee.activeQuestionIndex] = c\r\n        this.props.updateIsMarked(aa);\r\n    };\r\n\r\n    onAnswerChange=(d1,d2,d3)=>{\r\n        var ansCount=this.props.trainee.questions[this.props.trainee.activeQuestionIndex].anscount;\r\n        if(d2){\r\n            if(this.state.ticked===ansCount){\r\n                return Alert('error','Error!','Clear selected options to select other option')\r\n            }\r\n            else{\r\n                var op1 = [...this.state.options];\r\n                op1[d1]={\r\n                    ...op1[d1],\r\n                    checked:true\r\n                }\r\n                var op2 = [...this.state.answers]\r\n                op2.push(d3);\r\n                \r\n                if(this.state.ticked===ansCount-1){\r\n                    this.setState((PState, Pprops) => {\r\n                        return ({\r\n                            AnswerSelected: true,\r\n                            ticked: PState.ticked + 1,\r\n                            options: op1,\r\n                            answers: op2\r\n                        });\r\n                    });\r\n                }\r\n                else{\r\n                    this.setState((PState, Pprops) => {\r\n                        return ({\r\n                            ticked: PState.ticked + 1,\r\n                            options: op1,\r\n                            answers: op2\r\n                        });\r\n                    });\r\n                }\r\n                \r\n            }\r\n        }\r\n        else{\r\n            op1 = [...this.state.options];\r\n\r\n            op1[d1]={\r\n                ...op1[d1],\r\n                checked:false\r\n            }\r\n\r\n            op2 = [...this.state.answers]\r\n            var index=op2.indexOf(d3);\r\n            op2.splice(index, 1)\r\n            this.setState((PState, Pprops) => {\r\n                return ({\r\n                    AnswerSelected: false,\r\n                    ticked: PState.ticked - 1,\r\n                    options: op1,\r\n                    answers: op2\r\n                });\r\n            });\r\n        }\r\n    }\r\n\r\n    render(){\r\n        // console.log(this.state)\r\n        let opts = ['A', 'B', 'C', 'D', 'E'];\r\n        return (\r\n            <div>\r\n                <SweetAlert\r\n                    show={this.state.show}\r\n                    title=\" \"\r\n                    text=\"Please Don't leave this tab, Untill you submit the assessment\"\r\n                    onConfirm={() => this.setState({ show: false })}\r\n                />\r\n\r\n                <div className=\"Question-single-container\">\r\n                    <Row>\r\n                        <Col span={2}>\r\n                            <Button style={{ background: '#93329e', color: '#fff' }} shape=\"circle\">\r\n                                {this.props.trainee.activeQuestionIndex + 1}\r\n                            </Button>\r\n                        </Col>\r\n\r\n                        <Col span={22}>\r\n                            <Radio.Group style={{float:'right'}}>\r\n                                <Radio.Button\r\n                                    style={{ background: '#93329e', color: '#fff' }}\r\n                                >\r\n                                    {this.props.trainee.questions[this.props.trainee.activeQuestionIndex].anscount === 1 ? \"Single answer type\" : \"Multiple answer type\"}\r\n                                </Radio.Button>\r\n\r\n                                <Radio.Button\r\n                                    style={{ background: '#93329e', color: '#fff' }}\r\n                                >\r\n                                    Marks : {this.props.trainee.questions[this.props.trainee.activeQuestionIndex].weightage}\r\n                                </Radio.Button>\r\n                            </Radio.Group>\r\n                        </Col>\r\n\r\n                    </Row>\r\n                    {\r\n                        this.props.mode==='mobile'?\r\n                            <Button onClick={this.props.triggerSidebar} style={{ background: '#93329e', color: '#fff', float: 'right' }}>\r\n                                Menu\r\n                            </Button>\r\n                        :null\r\n                    }\r\n                    <div className=\"Question-single-body-holder\">\r\n                        <div>\r\n                            <h3 style={{ fontFamily: \"'Montserrat', sans-serif\" }}>\r\n                                <Markdown>\r\n                                    {this.props.trainee.questions[this.props.trainee.activeQuestionIndex].body}\r\n                                </Markdown>\r\n                            </h3>\r\n                        </div>\r\n                        \r\n                        {this.props.trainee.questions[this.props.trainee.activeQuestionIndex].quesimg?\r\n                            <div className=\"Single-question-body-image-container\">\r\n                                <img alt=\"Unable to load\" src={this.props.trainee.questions[this.props.trainee.activeQuestionIndex].quesimg} className=\"Single-question-body-image\"/>\r\n                            </div>:null\r\n                        }\r\n                    </div>\r\n\r\n                    <div className=\"Question-single-option-panel\">\r\n                        <Row>\r\n                            {this.state.options.map((d,i)=>{\r\n                                return (\r\n                                    <Col span={24} key={i} className=\"Single-option\">\r\n                                        <Col span={24} style={{ textAlign: 'left' }}>\r\n                                            <ul\r\n                                                style={{\r\n                                                    listStyle: 'none',\r\n                                                    padding: 0,\r\n                                                }}\r\n                                            >\r\n                                                <li>\r\n                                                    <Col span={1}>\r\n                                                        {opts[i]}{'  '}\r\n                                                    </Col>\r\n                                                    <Col span={19} style={{ background: '#eee', color: '#000' }}>\r\n                                                        <Checkbox\r\n                                                            checked={d.checked}\r\n                                                            onChange={(e) => { this.onAnswerChange(i, e.target.checked, d._id) }}\r\n                                                        >\r\n                                                            <h3 style={{ fontFamily: \"'Montserrat', sans-serif\" }}>\r\n                                                                {d.optbody}\r\n                                                            </h3>\r\n                                                        </Checkbox>\r\n                                                    </Col>\r\n\r\n                                                    <Col span={4}>\r\n                                                        <div className=\"option-image-in-exam-panel-holder\">\r\n                                                            {d.optimg ? <img alt=\"Unable to load\" className=\"option-image-in-exam-panel\" src={d.optimg} /> : null}\r\n                                                        </div>\r\n                                                    </Col>\r\n                                                </li>\r\n                                            </ul>\r\n                                        </Col>\r\n                                    </Col>\r\n                                );\r\n                            })}\r\n                        </Row>\r\n                    </div>\r\n                </div>\r\n                \r\n                <div className=\"control-button-in-exam-portal\">\r\n                    <Button.Group>\r\n                        {this.props.trainee.activeQuestionIndex===0?\r\n                            null\r\n                            :\r\n                            <Button style={{background:'#93329e',color:'#fff'}} onClick={this.previous}>\r\n                                <Icon type=\"left\" />\r\n                                Previous\r\n                            </Button>\r\n                        }\r\n                        <Button type=\"default\" onClick={this.mark}>\r\n                                <Icon type=\"flag\" />\r\n                                {!this.props.trainee.answers[this.props.trainee.activeQuestionIndex].isMarked?\"Mark Question\":\"Unmark Question\"}\r\n                        </Button>\r\n                        {this.props.trainee.activeQuestionIndex===this.props.trainee.questions.length-1?\r\n                            null\r\n                            :\r\n                            <Button style={{background:'#93329e',color:'#fff'}} onClick={this.next}>\r\n                                {this.state.AnswerSelected?\"Save & Next\": \"Next\"}\r\n                                <Icon type=\"right\" />\r\n                            </Button>\r\n                        }\r\n                        {this.props.trainee.activeQuestionIndex===this.props.trainee.questions.length-1 && this.state.AnswerSelected?\r\n                            <Button style={{background:'#93329e',color:'#fff'}} onClick={()=>{this.SaveTocloud()}}>\r\n                                Save\r\n                                <Icon type=\"right\" />\r\n                            </Button>:null\r\n                        }\r\n                    </Button.Group>\r\n                </div>\r\n            </div>\r\n        )\r\n    }   \r\n}\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n    trainee : state.trainee\r\n});\r\n\r\nexport default connect(mapStateToProps,{\r\n    switchQuestion,\r\n    updateIsMarked,\r\n    fetchTestdata\r\n})(SingleQuestion);","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport './portal.css';\r\nimport SingleQuestion from './singleQuestion';\r\nimport { fetchTraineeTestQuestions,fetchTraineeTestAnswerSheet } from '../../../actions/traineeAction'\r\n\r\nclass Question extends Component {\r\n\r\n    componentWillMount(){\r\n        this.props.fetchTraineeTestQuestions(this.props.trainee.testid);\r\n        this.props.fetchTraineeTestAnswerSheet(this.props.trainee.testid,this.props.trainee.traineeid);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"question-holder\">\r\n                <div className=\"single-question-container\">\r\n                    {this.props.trainee.answers.length>0 && this.props.trainee.questions.length>0 ?\r\n                        <SingleQuestion \r\n                            mode={this.props.mode} \r\n                            triggerSidebar={this.props.triggerSidebar}  \r\n                            key={this.props.trainee.activeQuestionIndex} \r\n                        /> : null\r\n                    }\r\n                </div>\r\n            </div>\r\n        )\r\n    };\r\n};\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n    trainee : state.trainee\r\n});\r\n\r\nexport default connect(mapStateToProps,{\r\n    fetchTraineeTestQuestions,\r\n    fetchTraineeTestAnswerSheet\r\n})(Question);","import React,{ useState, useEffect } from 'react'\r\nimport './portal.css';\r\nimport Sidepanel from './sidepanel'\r\nimport Question from './question';\r\nimport { Drawer } from \"antd\";\r\n\r\n\r\nfunction getWindowDimensions() {\r\n    const { innerWidth: width, innerHeight: height } = window;\r\n    return {\r\n        width,\r\n        height\r\n    };\r\n}\r\n\r\nfunction useWindowDimensions() {\r\n    const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\r\n  \r\n    useEffect(() => {\r\n        function handleResize() {\r\n            setWindowDimensions(getWindowDimensions());\r\n        }\r\n        window.addEventListener('resize', handleResize);\r\n        return () => window.removeEventListener('resize', handleResize);\r\n    }, []);\r\n  \r\n    return windowDimensions;\r\n};\r\n\r\nexport default function TestBoard(props) {\r\n    const { height, width } = useWindowDimensions();\r\n    const [visible,setVisible]=useState(false);\r\n\r\n    let onClose=()=>setVisible(false);\r\n    let onOpen=()=>setVisible(true);\r\n\r\n    if(width>768){\r\n        return (\r\n            <div className=\"exam-dashboard-wrapper\">\r\n                <Question mode={width>768?\"desktop\":\"mobile\"} triggerSidebar={onOpen}/>\r\n                <Sidepanel mode={width>768?\"desktop\":\"mobile\"} />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    else{\r\n        return (\r\n            <div className=\"exam-dashboard-wrapper\">\r\n                <Question mode={width>768?\"desktop\":\"mobile\"} triggerSidebar={onOpen} />\r\n                \r\n                <Drawer\r\n                    title=\"Menu\"\r\n                    placement=\"right\"\r\n                    closable={true}\r\n                    onClose={onClose}\r\n                    visible={visible}\r\n                    width=\"100%\"\r\n                >\r\n                    <Sidepanel mode={width>768?\"desktop\":\"mobile\"}/>    \r\n                </Drawer>\r\n            </div>\r\n        )\r\n    }  \r\n};","import React, { Component, Fragment } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Typography,Skeleton  } from 'antd'\r\nimport './portal.css';\r\n\r\nimport Instruction from './instruction';\r\nimport TestBoard from './testBoard';\r\nimport Answer from '../answersheet/answer';\r\n\r\nimport { \r\n    fetchTraineedata, \r\n    setTestDetsils, \r\n    fetchTestdata, \r\n    FeedbackStatus \r\n} from '../../../actions/traineeAction';\r\nimport queryString from 'query-string';\r\nimport logo from '../../basic/header/logo.png';\r\n\r\n\r\nconst { Title } = Typography;\r\n\r\nclass MainPortal extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        let params = queryString.parse(this.props.location.search);\r\n\r\n        this.state = {\r\n            testDetails:params\r\n        };\r\n        this.props.setTestDetsils(params.testid,params.traineeid);\r\n    }\r\n\r\n    componentDidMount(){\r\n        // console.log(this.props.trainee.traineeid)\r\n        this.props.fetchTraineedata(this.state.testDetails.traineeid)\r\n        this.props.fetchTestdata(this.state.testDetails.testid,this.state.testDetails.traineeid)\r\n    }\r\n\r\n\r\n    render() {\r\n        if(this.props.trainee.initialloading2 || this.props.trainee.initialloading1){\r\n            return(\r\n                <div className=\"skeletor-wrapper\">\r\n                    <Skeleton active />\r\n                    <Skeleton active />\r\n                </div>  \r\n            )\r\n        }\r\n        else{\r\n\r\n            if(this.props.trainee.invalidUrl){\r\n                return window.location.href=``;\r\n            }\r\n\r\n            else{\r\n                \r\n                if(this.props.trainee.LocaltestDone){\r\n                    return(\r\n                        <div>\r\n                            <Answer/>\r\n                        </div>\r\n                    )\r\n                }\r\n\r\n                else{\r\n                    if(this.props.trainee.testconducted){\r\n                        return (\r\n                            <Fragment>\r\n                                <div className=\"header-container\">\r\n                                    <img src={logo} alt=\"company logo\" className=\"logo\" />\r\n                                </div>\r\n\r\n                                <div className=\"Test-portal-not-started-yet-wrapper\">\r\n                                    <div className=\"Test-portal-not-started-yet-inner\">\r\n                                        <Title className=\"Test-portal-not-started-yet-inner-message\" style={{ color: '#fff' }} level={4}>\r\n                                            The Assessment is Over!<br />\r\n                                        </Title>\r\n                                    </div>\r\n                                </div>\r\n                            </Fragment>\r\n                        )\r\n                    }\r\n                    else{\r\n                        if(!this.props.trainee.testbegins){\r\n                            return (\r\n                                <Fragment>\r\n                                     <div className=\"header-container\">\r\n                                        <img src={logo} alt=\"company logo\" className=\"logo\" />\r\n                                    </div>\r\n\r\n                                    <div className=\"Test-portal-not-started-yet-wrapper\">\r\n                                        <div className=\"Test-portal-not-started-yet-inner\">\r\n                                            <Title className=\"Test-portal-not-started-yet-inner-message\" style={{color:'#fff'}} level={4}>The assessment will begin shortly. Please wait for the instruction, then refresh the page.</Title>\r\n                                        </div>\r\n                                    </div>\r\n                                </Fragment>\r\n                            )\r\n                        }\r\n                        else{\r\n                            if(this.props.trainee.startedWriting){\r\n                                return (\r\n                                    <div>\r\n                                        <TestBoard />\r\n                                    </div>\r\n                                );\r\n                            }\r\n                            else{\r\n                                return(\r\n                                    <div>\r\n                                        <Instruction/>                             \r\n                                    </div>\r\n                                )\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n    trainee : state.trainee\r\n});\r\n\r\nexport default connect(mapStateToProps,{\r\n    fetchTraineedata,\r\n    setTestDetsils,\r\n    fetchTestdata,\r\n    FeedbackStatus\r\n})(MainPortal);","import React from 'react';\r\nimport {BrowserRouter,Route} from \"react-router-dom\";\r\nimport './App.css';\r\nimport { Provider } from 'react-redux';\r\nimport store  from './store';\r\n\r\nimport 'ant-design-pro/dist/ant-design-pro.css'; // Ant Design Pro\r\n\r\nimport Home from './components/basic/homepage/Home';\r\nimport Homepage from './components/basic/homepage/homepage';\r\nimport Dashboard from './components/dashboard/backbone';\r\nimport TraineeRegister from './components/trainee/register/traineeregister';\r\nimport MainPortal from './components/trainee/examPortal/portal';\r\nimport Test from './Test';\r\n\r\nfunction App() {\r\n  return (\r\n    <Provider store={store}>\r\n      <BrowserRouter>\r\n        <nav>\r\n          <Route exact path=\"/\" component={Home} />\r\n          <Route exact path=\"/auth/login\" component={Homepage} />\r\n          <Route exact path=\"/home\" component={Homepage} />\r\n          <Route exact path=\"/user\" component={Dashboard}/>\r\n          <Route path=\"/user/:options\" component={Dashboard}/>\r\n          <Route exact path=\"/candidate/register\" component={TraineeRegister}/>\r\n          <Route exact path=\"/candidate/taketest\" component={MainPortal}/>\r\n          {/* <Route exact path=\"/test\" component={Test}/> */}\r\n\r\n        </nav>\r\n      </BrowserRouter>\r\n    </Provider> \r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport moment from 'moment';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nmoment().utcOffset(\"+05:30\");\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\nserviceWorker.unregister();\r\n","const bgcolor=[\r\n                'rgba(255, 99, 132, 0.2)',\r\n                'rgba(54, 162, 235, 0.2)',\r\n                'rgba(255, 206, 86, 0.2)',\r\n                'rgba(75, 192, 192, 0.2)',\r\n                'rgba(153, 102, 255, 0.2)',\r\n                'rgba(255, 159, 64, 0.2)',\r\n                'rgba(255, 99, 132, 0.2)',\r\n                'rgba(54, 162, 235, 0.2)',\r\n                'rgba(255, 206, 86, 0.2)',\r\n                'rgba(75, 192, 192, 0.2)',\r\n                'rgba(153, 102, 255, 0.2)',\r\n                'rgba(255, 159, 64, 0.2)',\r\n                'rgba(255, 99, 132, 0.2)',\r\n                'rgba(54, 162, 235, 0.2)',\r\n                'rgba(255, 206, 86, 0.2)',\r\n                'rgba(75, 192, 192, 0.2)',\r\n                'rgba(153, 102, 255, 0.2)',\r\n                'rgba(255, 159, 64, 0.2)',\r\n                'rgba(255, 99, 132, 0.2)',\r\n                'rgba(54, 162, 235, 0.2)',\r\n                'rgba(255, 206, 86, 0.2)',\r\n                'rgba(75, 192, 192, 0.2)',\r\n                'rgba(153, 102, 255, 0.2)',\r\n                'rgba(255, 159, 64, 0.2)',\r\n                'rgba(255, 99, 132, 0.2)',\r\n                'rgba(54, 162, 235, 0.2)',\r\n                'rgba(255, 206, 86, 0.2)',\r\n                'rgba(75, 192, 192, 0.2)',\r\n                'rgba(153, 102, 255, 0.2)',\r\n                'rgba(255, 159, 64, 0.2)',\r\n                'rgba(255, 99, 132, 0.2)',\r\n                'rgba(54, 162, 235, 0.2)',\r\n                'rgba(255, 206, 86, 0.2)',\r\n                'rgba(75, 192, 192, 0.2)',\r\n                'rgba(153, 102, 255, 0.2)',\r\n                'rgba(255, 159, 64, 0.2)',\r\n                'rgba(255, 99, 132, 0.2)',\r\n                'rgba(54, 162, 235, 0.2)',\r\n                'rgba(255, 206, 86, 0.2)',\r\n                'rgba(75, 192, 192, 0.2)',\r\n                'rgba(153, 102, 255, 0.2)',\r\n                'rgba(255, 159, 64, 0.2)',\r\n                'rgba(255, 99, 132, 0.2)',\r\n                'rgba(54, 162, 235, 0.2)',\r\n                'rgba(255, 206, 86, 0.2)',\r\n                'rgba(75, 192, 192, 0.2)',\r\n                'rgba(153, 102, 255, 0.2)',\r\n                'rgba(255, 159, 64, 0.2)',\r\n                'rgba(255, 99, 132, 0.2)',\r\n                'rgba(54, 162, 235, 0.2)',\r\n                'rgba(255, 206, 86, 0.2)',\r\n                'rgba(75, 192, 192, 0.2)',\r\n                'rgba(153, 102, 255, 0.2)',\r\n                'rgba(255, 159, 64, 0.2)',\r\n                'rgba(255, 99, 132, 0.2)',\r\n                'rgba(54, 162, 235, 0.2)',\r\n                'rgba(255, 206, 86, 0.2)',\r\n                'rgba(75, 192, 192, 0.2)',\r\n                'rgba(153, 102, 255, 0.2)',\r\n                'rgba(255, 159, 64, 0.2)'\r\n]\r\n\r\nconst bordercolor =[\r\n                'rgba(255, 99, 132, 1)',\r\n                'rgba(54, 162, 235, 1)',\r\n                'rgba(255, 206, 86, 1)',\r\n                'rgba(75, 192, 192, 1)',\r\n                'rgba(153, 102, 255, 1)',\r\n                'rgba(255, 159, 64, 1)',\r\n                'rgba(255, 99, 132, 1)',\r\n                'rgba(54, 162, 235, 1)',\r\n                'rgba(255, 206, 86, 1)',\r\n                'rgba(75, 192, 192, 1)',\r\n                'rgba(153, 102, 255, 1)',\r\n                'rgba(255, 159, 64, 1)',\r\n                'rgba(255, 99, 132, 1)',\r\n                'rgba(54, 162, 235, 1)',\r\n                'rgba(255, 206, 86, 1)',\r\n                'rgba(75, 192, 192, 1)',\r\n                'rgba(153, 102, 255, 1)',\r\n                'rgba(255, 159, 64, 1)',\r\n                'rgba(255, 99, 132, 1)',\r\n                'rgba(54, 162, 235, 1)',\r\n                'rgba(255, 206, 86, 1)',\r\n                'rgba(75, 192, 192, 1)',\r\n                'rgba(153, 102, 255, 1)',\r\n                'rgba(255, 159, 64, 1)',\r\n                'rgba(255, 99, 132, 1)',\r\n                'rgba(54, 162, 235, 1)',\r\n                'rgba(255, 206, 86, 1)',\r\n                'rgba(75, 192, 192, 1)',\r\n                'rgba(153, 102, 255, 1)',\r\n                'rgba(255, 159, 64, 1)',\r\n                'rgba(255, 99, 132, 1)',\r\n                'rgba(54, 162, 235, 1)',\r\n                'rgba(255, 206, 86, 1)',\r\n                'rgba(75, 192, 192, 1)',\r\n                'rgba(153, 102, 255, 1)',\r\n                'rgba(255, 159, 64, 1)',\r\n                'rgba(255, 99, 132, 1)',\r\n                'rgba(54, 162, 235, 1)',\r\n                'rgba(255, 206, 86, 1)',\r\n                'rgba(75, 192, 192, 1)',\r\n                'rgba(153, 102, 255, 1)',\r\n                'rgba(255, 159, 64, 1)',\r\n                'rgba(255, 99, 132, 1)',\r\n                'rgba(54, 162, 235, 1)',\r\n                'rgba(255, 206, 86, 1)',\r\n                'rgba(75, 192, 192, 1)',\r\n                'rgba(153, 102, 255, 1)',\r\n                'rgba(255, 159, 64, 1)',\r\n                'rgba(255, 99, 132, 1)',\r\n                'rgba(54, 162, 235, 1)',\r\n                'rgba(255, 206, 86, 1)',\r\n                'rgba(75, 192, 192, 1)',\r\n                'rgba(153, 102, 255, 1)',\r\n                'rgba(255, 159, 64, 1)',\r\n                'rgba(255, 99, 132, 1)',\r\n                'rgba(54, 162, 235, 1)',\r\n                'rgba(255, 206, 86, 1)',\r\n                'rgba(75, 192, 192, 1)',\r\n                'rgba(153, 102, 255, 1)',\r\n                'rgba(255, 159, 64, 1)' \r\n]\r\n\r\nmodule.exports={bgcolor,bordercolor}","module.exports = __webpack_public_path__ + \"static/media/gnius.18d25fd2.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.9992ff04.png\";"],"sourceRoot":""}